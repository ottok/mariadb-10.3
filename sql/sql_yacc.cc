/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs

/* First part of user prologue.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy"

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                         \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif


/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int LEX::case_stmt_action_expr(Item* expr)
{
  int case_expr_id= spcont->register_case_expr();
  sp_instr_set_case_expr *i;

  if (spcont->push_case_expr_id(case_expr_id))
    return 1;

  i= new (thd->mem_root)
    sp_instr_set_case_expr(sphead->instructions(), spcont, case_expr_id, expr,
                           this);

  sphead->add_cont_backpatch(i);
  return sphead->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int LEX::case_stmt_action_when(Item *when, bool simple)
{
  uint ip= sphead->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new (thd->mem_root)
         Item_case_expr(thd, spcont->get_current_case_expr_id());

#ifdef DBUG_ASSERT_EXISTS
    if (var)
    {
      var->m_sp= sphead;
    }
#endif

    expr= new (thd->mem_root) Item_func_eq(thd, var, when);
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, expr, this);
  }
  else
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, when, this);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return
    !MY_TEST(i) ||
    sphead->push_backpatch(thd, i, spcont->push_label(thd, &empty_clex_str, 0)) ||
    sphead->add_cont_backpatch(i) ||
    sphead->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int LEX::case_stmt_action_then()
{
  uint ip= sphead->instructions();
  sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, spcont);
  if (!MY_TEST(i) || sphead->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sphead->backpatch(spcont->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to after END CASE
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sphead->push_backpatch(thd, i, spcont->last_label());
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

bool
LEX::set_system_variable(enum enum_var_type var_type,
                         sys_var *sysvar, const LEX_CSTRING *base_name,
                         Item *val)
{
  set_var *setvar;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (spcont && sysvar == Sys_autocommit_ptr)
    sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), sysvar->name.str);
    return TRUE;
  }

  if (!(setvar= new (thd->mem_root) set_var(thd, var_type, sysvar,
                                            base_name, val)))
    return TRUE;

  return var_list.push_back(setvar, thd->mem_root);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

bool LEX::set_trigger_new_row(const LEX_CSTRING *name, Item *val)
{
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new (thd->mem_root) Item_null(thd);

  DBUG_ASSERT(trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (trg_chistics.event == TRG_EVENT_INSERT ||
               trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(thd, current_context(),
                               Item_trigger_field::NEW_ROW,
                               name, UPDATE_ACL, FALSE);

  if (unlikely(trg_fld == NULL))
    return TRUE;

  sp_fld= new (thd->mem_root)
        sp_instr_set_trigger_field(sphead->instructions(),
                                   spcont, trg_fld, val, this);

  if (unlikely(sp_fld == NULL))
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sphead->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
Item_splocal*
LEX::create_item_for_sp_var(const Lex_ident_cli_st *cname, sp_variable *spvar)
{
  const Sp_rcontext_handler *rh;
  Item_splocal *item;
  const char *start_in_q= cname->pos();
  const char *end_in_q= cname->end();
  uint pos_in_q, len_in_q;
  Lex_ident_sys name(thd, cname);

  if (name.is_null())
    return NULL;  // EOM

  /* If necessary, look for the variable. */
  if (spcont && !spvar)
    spvar= find_variable(&name, &rh);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(spcont && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= (uint)(start_in_q - sphead->m_tmp_query);
  len_in_q= (uint)(end_in_q - start_in_q);

  item= new (thd->mem_root)
    Item_splocal(thd, rh, &name, spvar->offset, spvar->type_handler(),
                 pos_in_q, len_in_q);

#ifdef DBUG_ASSERT_EXISTS
  if (item)
    item->m_sp= sphead;
#endif

  return item;
}

/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(thd, left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(thd, left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(thd, left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select
          statement uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
                       is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool LEX::add_select_to_union_list(bool is_union_distinct,
                                   enum sub_select_type type,
                                   bool is_top_level)
{
  const char *type_name= (type == INTERSECT_TYPE ? "INTERSECT" :
                     (type == EXCEPT_TYPE ? "EXCEPT" : "UNION"));
  /*
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "INTO");
    return TRUE;
  }
  if (current_select->order_list.first && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ORDER BY");
    return TRUE;
  }

  if (current_select->explicit_limit && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "LIMIT");
    return TRUE;
  }
  if (current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    thd->parse_error();
    return TRUE;
  }
  if (!is_union_distinct && (type == INTERSECT_TYPE || type == EXCEPT_TYPE))
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ALL");
    return TRUE;
  }
  /*
    Priority implementation, but also trying to keep things as flat
    as possible */
  if (type == INTERSECT_TYPE &&
      (current_select->linkage != INTERSECT_TYPE &&
       current_select != current_select->master_unit()->first_select())
     && !(thd->variables.sql_mode & MODE_ORACLE))
  {
    /*
      This and previous SELECTs should go one level down because of
      priority
    */
    SELECT_LEX *prev= exclude_last_select();
    if (add_unit_in_brackets(prev))
      return TRUE;
    return add_select_to_union_list(is_union_distinct, type, 0);
  }
  else
  {
    check_automatic_up(type);
  }
  /* This counter shouldn't be incremented for UNION parts */
  nest_level--;
  if (mysql_new_select(this, 0, NULL))
    return TRUE;
  mysql_init_select(this);
  current_select->linkage= type;
  current_select->with_all_modifier= !is_union_distinct;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    current_select->master_unit()->union_distinct= current_select;
  else
    DBUG_ASSERT(type == UNION_TYPE);
  return FALSE;
}


/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  QQ: May be we should simply prohibit group assignments in SP?

  @see sp_create_assignment_instr

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead
*/

void sp_create_assignment_lex(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    LEX *old_lex= lex;
    lex->sphead->reset_lex(thd);
    lex= thd->lex;

    /* Set new LEX as if we at start of set rule. */
    lex->sql_command= SQLCOM_SET_OPTION;
    mysql_init_select(lex);
    lex->var_list.empty();
    lex->autocommit= 0;
    /* get_ptr() is only correct with no lookahead. */
    if (no_lookahead)
        lex->sphead->m_tmp_query= lip->get_ptr();
    else
        lex->sphead->m_tmp_query= lip->get_tok_end();
    /* Inherit from outer lex. */
    lex->option_type= old_lex->option_type;
  }
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead

  @return false if success, true otherwise.
*/

bool sp_create_assignment_instr(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    sp_head *sp= lex->sphead;

    if (!lex->var_list.is_empty())
    {
      /*
        We have assignment to user or system variable or
        option setting, so we should construct sp_instr_stmt
        for it.
      */
      LEX_STRING qbuff;
      sp_instr_stmt *i;
      Lex_input_stream *lip= &thd->m_parser_state->m_lip;

      if (!(i= new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex->spcont, lex)))
        return true;

      /*
        Extract the query statement from the tokenizer.  The
        end is either lip->ptr, if there was no lookahead,
        lip->tok_end otherwise.
      */
      if (no_lookahead)
        qbuff.length= lip->get_ptr() - sp->m_tmp_query;
      else
        qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

      if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                          qbuff.length + 5)))
        return true;

      strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
              qbuff.length);
      qbuff.length+= 4;
      i->m_query= qbuff;
      if (sp->add_instr(i))
        return true;
    }
    enum_var_type inner_option_type= lex->option_type;
    if (lex->sphead->restore_lex(thd))
      return true;
    /* Copy option_type to outer lex in case it has changed. */
    thd->lex->option_type= inner_option_type;
  }
  return false;
}

void LEX::add_key_to_list(LEX_CSTRING *field_name,
                          enum Key::Keytype type, bool check_exists)
{
  Key *key;
  MEM_ROOT *mem_root= thd->mem_root;
  key= new (mem_root)
        Key(type, &null_clex_str, HA_KEY_ALG_UNDEF, false,
             DDL_options(check_exists ?
                         DDL_options::OPT_IF_NOT_EXISTS :
                         DDL_options::OPT_NONE));
  key->columns.push_back(new (mem_root) Key_part_spec(field_name, 0),
                         mem_root);
  alter_info.key_list.push_back(key, mem_root);
}

bool LEX::add_alter_list(const char *name, Virtual_column_info *expr,
                         bool exists)
{
  MEM_ROOT *mem_root= thd->mem_root;
  Alter_column *ac= new (mem_root) Alter_column(name, expr, exists);
  if (unlikely(ac == NULL))
    return true;
  alter_info.alter_list.push_back(ac, mem_root);
  alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
  return false;
}

void LEX::init_last_field(Column_definition *field,
                          const LEX_CSTRING *field_name,
                          const CHARSET_INFO *cs)
{
  last_field= field;

  field->field_name= *field_name;

  /* reset LEX fields that are used in Create_field::set_and_check() */
  charset= cs;
}


bool LEX::set_bincmp(CHARSET_INFO *cs, bool bin)
{
  /*
     if charset is NULL - we're parsing a field declaration.
     we cannot call find_bin_collation for a field here, because actual
     field charset is determined in get_sql_field_charset() much later.
     so we only set a flag.
  */
  if (!charset)
  {
    charset= cs;
    last_field->flags|= bin ? BINCMP_FLAG : 0;
    return false;
  }

  charset= bin ? find_bin_collation(cs ? cs : charset)
               :                    cs ? cs : charset;
  return charset == NULL;
}

#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


Virtual_column_info *add_virtual_expression(THD *thd, Item *expr)
{
  Virtual_column_info *v= new (thd->mem_root) Virtual_column_info();
  if (unlikely(!v))
     return 0;
   v->expr= expr;
   v->utf8= 0;  /* connection charset */
   return v;
}


#line 835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "sql_yacc.hh"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_ABORT_SYM = 3,                  /* ABORT_SYM  */
  YYSYMBOL_ACCESSIBLE_SYM = 4,             /* ACCESSIBLE_SYM  */
  YYSYMBOL_ADD = 5,                        /* ADD  */
  YYSYMBOL_ALL = 6,                        /* ALL  */
  YYSYMBOL_ALTER = 7,                      /* ALTER  */
  YYSYMBOL_ANALYZE_SYM = 8,                /* ANALYZE_SYM  */
  YYSYMBOL_AND_AND_SYM = 9,                /* AND_AND_SYM  */
  YYSYMBOL_AND_SYM = 10,                   /* AND_SYM  */
  YYSYMBOL_AS = 11,                        /* AS  */
  YYSYMBOL_ASC = 12,                       /* ASC  */
  YYSYMBOL_ASENSITIVE_SYM = 13,            /* ASENSITIVE_SYM  */
  YYSYMBOL_BEFORE_SYM = 14,                /* BEFORE_SYM  */
  YYSYMBOL_BETWEEN_SYM = 15,               /* BETWEEN_SYM  */
  YYSYMBOL_BIGINT = 16,                    /* BIGINT  */
  YYSYMBOL_BINARY = 17,                    /* BINARY  */
  YYSYMBOL_BIN_NUM = 18,                   /* BIN_NUM  */
  YYSYMBOL_BIT_AND = 19,                   /* BIT_AND  */
  YYSYMBOL_BIT_OR = 20,                    /* BIT_OR  */
  YYSYMBOL_BIT_XOR = 21,                   /* BIT_XOR  */
  YYSYMBOL_BLOB_MARIADB_SYM = 22,          /* BLOB_MARIADB_SYM  */
  YYSYMBOL_BLOB_ORACLE_SYM = 23,           /* BLOB_ORACLE_SYM  */
  YYSYMBOL_BODY_ORACLE_SYM = 24,           /* BODY_ORACLE_SYM  */
  YYSYMBOL_BOTH = 25,                      /* BOTH  */
  YYSYMBOL_BY = 26,                        /* BY  */
  YYSYMBOL_CALL_SYM = 27,                  /* CALL_SYM  */
  YYSYMBOL_CASCADE = 28,                   /* CASCADE  */
  YYSYMBOL_CASE_SYM = 29,                  /* CASE_SYM  */
  YYSYMBOL_CAST_SYM = 30,                  /* CAST_SYM  */
  YYSYMBOL_CHANGE = 31,                    /* CHANGE  */
  YYSYMBOL_CHAR_SYM = 32,                  /* CHAR_SYM  */
  YYSYMBOL_CHECK_SYM = 33,                 /* CHECK_SYM  */
  YYSYMBOL_COLLATE_SYM = 34,               /* COLLATE_SYM  */
  YYSYMBOL_CONDITION_SYM = 35,             /* CONDITION_SYM  */
  YYSYMBOL_CONSTRAINT = 36,                /* CONSTRAINT  */
  YYSYMBOL_CONTINUE_MARIADB_SYM = 37,      /* CONTINUE_MARIADB_SYM  */
  YYSYMBOL_CONTINUE_ORACLE_SYM = 38,       /* CONTINUE_ORACLE_SYM  */
  YYSYMBOL_CONVERT_SYM = 39,               /* CONVERT_SYM  */
  YYSYMBOL_COUNT_SYM = 40,                 /* COUNT_SYM  */
  YYSYMBOL_CREATE = 41,                    /* CREATE  */
  YYSYMBOL_CROSS = 42,                     /* CROSS  */
  YYSYMBOL_CUME_DIST_SYM = 43,             /* CUME_DIST_SYM  */
  YYSYMBOL_CURDATE = 44,                   /* CURDATE  */
  YYSYMBOL_CURRENT_USER = 45,              /* CURRENT_USER  */
  YYSYMBOL_CURRENT_ROLE = 46,              /* CURRENT_ROLE  */
  YYSYMBOL_CURSOR_SYM = 47,                /* CURSOR_SYM  */
  YYSYMBOL_CURTIME = 48,                   /* CURTIME  */
  YYSYMBOL_DATABASE = 49,                  /* DATABASE  */
  YYSYMBOL_DATABASES = 50,                 /* DATABASES  */
  YYSYMBOL_DATE_ADD_INTERVAL = 51,         /* DATE_ADD_INTERVAL  */
  YYSYMBOL_DATE_SUB_INTERVAL = 52,         /* DATE_SUB_INTERVAL  */
  YYSYMBOL_DAY_HOUR_SYM = 53,              /* DAY_HOUR_SYM  */
  YYSYMBOL_DAY_MICROSECOND_SYM = 54,       /* DAY_MICROSECOND_SYM  */
  YYSYMBOL_DAY_MINUTE_SYM = 55,            /* DAY_MINUTE_SYM  */
  YYSYMBOL_DAY_SECOND_SYM = 56,            /* DAY_SECOND_SYM  */
  YYSYMBOL_DECIMAL_NUM = 57,               /* DECIMAL_NUM  */
  YYSYMBOL_DECIMAL_SYM = 58,               /* DECIMAL_SYM  */
  YYSYMBOL_DECLARE_MARIADB_SYM = 59,       /* DECLARE_MARIADB_SYM  */
  YYSYMBOL_DECLARE_ORACLE_SYM = 60,        /* DECLARE_ORACLE_SYM  */
  YYSYMBOL_DEFAULT = 61,                   /* DEFAULT  */
  YYSYMBOL_DELETE_DOMAIN_ID_SYM = 62,      /* DELETE_DOMAIN_ID_SYM  */
  YYSYMBOL_DELETE_SYM = 63,                /* DELETE_SYM  */
  YYSYMBOL_DENSE_RANK_SYM = 64,            /* DENSE_RANK_SYM  */
  YYSYMBOL_DESC = 65,                      /* DESC  */
  YYSYMBOL_DESCRIBE = 66,                  /* DESCRIBE  */
  YYSYMBOL_DETERMINISTIC_SYM = 67,         /* DETERMINISTIC_SYM  */
  YYSYMBOL_DISTINCT = 68,                  /* DISTINCT  */
  YYSYMBOL_DIV_SYM = 69,                   /* DIV_SYM  */
  YYSYMBOL_DOUBLE_SYM = 70,                /* DOUBLE_SYM  */
  YYSYMBOL_DO_DOMAIN_IDS_SYM = 71,         /* DO_DOMAIN_IDS_SYM  */
  YYSYMBOL_DOT_DOT_SYM = 72,               /* DOT_DOT_SYM  */
  YYSYMBOL_DROP = 73,                      /* DROP  */
  YYSYMBOL_DUAL_SYM = 74,                  /* DUAL_SYM  */
  YYSYMBOL_EACH_SYM = 75,                  /* EACH_SYM  */
  YYSYMBOL_ELSE = 76,                      /* ELSE  */
  YYSYMBOL_ELSEIF_MARIADB_SYM = 77,        /* ELSEIF_MARIADB_SYM  */
  YYSYMBOL_ELSIF_ORACLE_SYM = 78,          /* ELSIF_ORACLE_SYM  */
  YYSYMBOL_ENCLOSED = 79,                  /* ENCLOSED  */
  YYSYMBOL_END_OF_INPUT = 80,              /* END_OF_INPUT  */
  YYSYMBOL_EQUAL_SYM = 81,                 /* EQUAL_SYM  */
  YYSYMBOL_ESCAPED = 82,                   /* ESCAPED  */
  YYSYMBOL_EXCEPT_SYM = 83,                /* EXCEPT_SYM  */
  YYSYMBOL_EXISTS = 84,                    /* EXISTS  */
  YYSYMBOL_EXTRACT_SYM = 85,               /* EXTRACT_SYM  */
  YYSYMBOL_FALSE_SYM = 86,                 /* FALSE_SYM  */
  YYSYMBOL_FETCH_SYM = 87,                 /* FETCH_SYM  */
  YYSYMBOL_FIRST_VALUE_SYM = 88,           /* FIRST_VALUE_SYM  */
  YYSYMBOL_FLOAT_NUM = 89,                 /* FLOAT_NUM  */
  YYSYMBOL_FLOAT_SYM = 90,                 /* FLOAT_SYM  */
  YYSYMBOL_FORCE_LOOKAHEAD = 91,           /* FORCE_LOOKAHEAD  */
  YYSYMBOL_FOREIGN = 92,                   /* FOREIGN  */
  YYSYMBOL_FOR_SYM = 93,                   /* FOR_SYM  */
  YYSYMBOL_FOR_SYSTEM_TIME_SYM = 94,       /* FOR_SYSTEM_TIME_SYM  */
  YYSYMBOL_FROM = 95,                      /* FROM  */
  YYSYMBOL_FULLTEXT_SYM = 96,              /* FULLTEXT_SYM  */
  YYSYMBOL_GE = 97,                        /* GE  */
  YYSYMBOL_GOTO_ORACLE_SYM = 98,           /* GOTO_ORACLE_SYM  */
  YYSYMBOL_GRANT = 99,                     /* GRANT  */
  YYSYMBOL_GROUP_SYM = 100,                /* GROUP_SYM  */
  YYSYMBOL_GROUP_CONCAT_SYM = 101,         /* GROUP_CONCAT_SYM  */
  YYSYMBOL_LAG_SYM = 102,                  /* LAG_SYM  */
  YYSYMBOL_LEAD_SYM = 103,                 /* LEAD_SYM  */
  YYSYMBOL_HAVING = 104,                   /* HAVING  */
  YYSYMBOL_HEX_NUM = 105,                  /* HEX_NUM  */
  YYSYMBOL_HEX_STRING = 106,               /* HEX_STRING  */
  YYSYMBOL_HOUR_MICROSECOND_SYM = 107,     /* HOUR_MICROSECOND_SYM  */
  YYSYMBOL_HOUR_MINUTE_SYM = 108,          /* HOUR_MINUTE_SYM  */
  YYSYMBOL_HOUR_SECOND_SYM = 109,          /* HOUR_SECOND_SYM  */
  YYSYMBOL_IDENT = 110,                    /* IDENT  */
  YYSYMBOL_IDENT_QUOTED = 111,             /* IDENT_QUOTED  */
  YYSYMBOL_IF_SYM = 112,                   /* IF_SYM  */
  YYSYMBOL_IGNORE_DOMAIN_IDS_SYM = 113,    /* IGNORE_DOMAIN_IDS_SYM  */
  YYSYMBOL_IGNORE_SYM = 114,               /* IGNORE_SYM  */
  YYSYMBOL_INDEX_SYM = 115,                /* INDEX_SYM  */
  YYSYMBOL_INFILE = 116,                   /* INFILE  */
  YYSYMBOL_INNER_SYM = 117,                /* INNER_SYM  */
  YYSYMBOL_INOUT_SYM = 118,                /* INOUT_SYM  */
  YYSYMBOL_INSENSITIVE_SYM = 119,          /* INSENSITIVE_SYM  */
  YYSYMBOL_INSERT = 120,                   /* INSERT  */
  YYSYMBOL_INTERSECT_SYM = 121,            /* INTERSECT_SYM  */
  YYSYMBOL_INTERVAL_SYM = 122,             /* INTERVAL_SYM  */
  YYSYMBOL_INTO = 123,                     /* INTO  */
  YYSYMBOL_INT_SYM = 124,                  /* INT_SYM  */
  YYSYMBOL_IN_SYM = 125,                   /* IN_SYM  */
  YYSYMBOL_IS = 126,                       /* IS  */
  YYSYMBOL_ITERATE_SYM = 127,              /* ITERATE_SYM  */
  YYSYMBOL_JOIN_SYM = 128,                 /* JOIN_SYM  */
  YYSYMBOL_KEYS = 129,                     /* KEYS  */
  YYSYMBOL_KEY_SYM = 130,                  /* KEY_SYM  */
  YYSYMBOL_KILL_SYM = 131,                 /* KILL_SYM  */
  YYSYMBOL_LE = 132,                       /* LE  */
  YYSYMBOL_LEADING = 133,                  /* LEADING  */
  YYSYMBOL_LEAVE_SYM = 134,                /* LEAVE_SYM  */
  YYSYMBOL_LEFT = 135,                     /* LEFT  */
  YYSYMBOL_LEX_HOSTNAME = 136,             /* LEX_HOSTNAME  */
  YYSYMBOL_LIKE = 137,                     /* LIKE  */
  YYSYMBOL_LIMIT = 138,                    /* LIMIT  */
  YYSYMBOL_LINEAR_SYM = 139,               /* LINEAR_SYM  */
  YYSYMBOL_LINES = 140,                    /* LINES  */
  YYSYMBOL_LOAD = 141,                     /* LOAD  */
  YYSYMBOL_LOCATOR_SYM = 142,              /* LOCATOR_SYM  */
  YYSYMBOL_LOCK_SYM = 143,                 /* LOCK_SYM  */
  YYSYMBOL_LONGBLOB = 144,                 /* LONGBLOB  */
  YYSYMBOL_LONGTEXT = 145,                 /* LONGTEXT  */
  YYSYMBOL_LONG_NUM = 146,                 /* LONG_NUM  */
  YYSYMBOL_LONG_SYM = 147,                 /* LONG_SYM  */
  YYSYMBOL_LOOP_SYM = 148,                 /* LOOP_SYM  */
  YYSYMBOL_LOW_PRIORITY = 149,             /* LOW_PRIORITY  */
  YYSYMBOL_MASTER_SSL_VERIFY_SERVER_CERT_SYM = 150, /* MASTER_SSL_VERIFY_SERVER_CERT_SYM  */
  YYSYMBOL_MATCH = 151,                    /* MATCH  */
  YYSYMBOL_MAX_SYM = 152,                  /* MAX_SYM  */
  YYSYMBOL_MAXVALUE_SYM = 153,             /* MAXVALUE_SYM  */
  YYSYMBOL_MEDIAN_SYM = 154,               /* MEDIAN_SYM  */
  YYSYMBOL_MEDIUMBLOB = 155,               /* MEDIUMBLOB  */
  YYSYMBOL_MEDIUMINT = 156,                /* MEDIUMINT  */
  YYSYMBOL_MEDIUMTEXT = 157,               /* MEDIUMTEXT  */
  YYSYMBOL_MINUTE_MICROSECOND_SYM = 158,   /* MINUTE_MICROSECOND_SYM  */
  YYSYMBOL_MINUTE_SECOND_SYM = 159,        /* MINUTE_SECOND_SYM  */
  YYSYMBOL_MIN_SYM = 160,                  /* MIN_SYM  */
  YYSYMBOL_MODIFIES_SYM = 161,             /* MODIFIES_SYM  */
  YYSYMBOL_MOD_SYM = 162,                  /* MOD_SYM  */
  YYSYMBOL_MYSQL_CONCAT_SYM = 163,         /* MYSQL_CONCAT_SYM  */
  YYSYMBOL_NATURAL = 164,                  /* NATURAL  */
  YYSYMBOL_NCHAR_STRING = 165,             /* NCHAR_STRING  */
  YYSYMBOL_NE = 166,                       /* NE  */
  YYSYMBOL_NEG = 167,                      /* NEG  */
  YYSYMBOL_NOT2_SYM = 168,                 /* NOT2_SYM  */
  YYSYMBOL_NOT_SYM = 169,                  /* NOT_SYM  */
  YYSYMBOL_NOW_SYM = 170,                  /* NOW_SYM  */
  YYSYMBOL_NO_WRITE_TO_BINLOG = 171,       /* NO_WRITE_TO_BINLOG  */
  YYSYMBOL_NTILE_SYM = 172,                /* NTILE_SYM  */
  YYSYMBOL_NULL_SYM = 173,                 /* NULL_SYM  */
  YYSYMBOL_NUM = 174,                      /* NUM  */
  YYSYMBOL_NUMERIC_SYM = 175,              /* NUMERIC_SYM  */
  YYSYMBOL_NTH_VALUE_SYM = 176,            /* NTH_VALUE_SYM  */
  YYSYMBOL_ON = 177,                       /* ON  */
  YYSYMBOL_OPTIMIZE = 178,                 /* OPTIMIZE  */
  YYSYMBOL_OPTIONALLY = 179,               /* OPTIONALLY  */
  YYSYMBOL_ORACLE_CONCAT_SYM = 180,        /* ORACLE_CONCAT_SYM  */
  YYSYMBOL_OR2_SYM = 181,                  /* OR2_SYM  */
  YYSYMBOL_ORDER_SYM = 182,                /* ORDER_SYM  */
  YYSYMBOL_OR_SYM = 183,                   /* OR_SYM  */
  YYSYMBOL_OTHERS_ORACLE_SYM = 184,        /* OTHERS_ORACLE_SYM  */
  YYSYMBOL_OUTER = 185,                    /* OUTER  */
  YYSYMBOL_OUTFILE = 186,                  /* OUTFILE  */
  YYSYMBOL_OUT_SYM = 187,                  /* OUT_SYM  */
  YYSYMBOL_OVER_SYM = 188,                 /* OVER_SYM  */
  YYSYMBOL_PACKAGE_ORACLE_SYM = 189,       /* PACKAGE_ORACLE_SYM  */
  YYSYMBOL_PAGE_CHECKSUM_SYM = 190,        /* PAGE_CHECKSUM_SYM  */
  YYSYMBOL_PARAM_MARKER = 191,             /* PARAM_MARKER  */
  YYSYMBOL_PARSE_VCOL_EXPR_SYM = 192,      /* PARSE_VCOL_EXPR_SYM  */
  YYSYMBOL_PARTITION_SYM = 193,            /* PARTITION_SYM  */
  YYSYMBOL_PERCENT_ORACLE_SYM = 194,       /* PERCENT_ORACLE_SYM  */
  YYSYMBOL_PERCENT_RANK_SYM = 195,         /* PERCENT_RANK_SYM  */
  YYSYMBOL_PERCENTILE_CONT_SYM = 196,      /* PERCENTILE_CONT_SYM  */
  YYSYMBOL_PERCENTILE_DISC_SYM = 197,      /* PERCENTILE_DISC_SYM  */
  YYSYMBOL_POSITION_SYM = 198,             /* POSITION_SYM  */
  YYSYMBOL_PRECISION = 199,                /* PRECISION  */
  YYSYMBOL_PRIMARY_SYM = 200,              /* PRIMARY_SYM  */
  YYSYMBOL_PROCEDURE_SYM = 201,            /* PROCEDURE_SYM  */
  YYSYMBOL_PURGE = 202,                    /* PURGE  */
  YYSYMBOL_RAISE_ORACLE_SYM = 203,         /* RAISE_ORACLE_SYM  */
  YYSYMBOL_RANGE_SYM = 204,                /* RANGE_SYM  */
  YYSYMBOL_RANK_SYM = 205,                 /* RANK_SYM  */
  YYSYMBOL_READS_SYM = 206,                /* READS_SYM  */
  YYSYMBOL_READ_SYM = 207,                 /* READ_SYM  */
  YYSYMBOL_READ_WRITE_SYM = 208,           /* READ_WRITE_SYM  */
  YYSYMBOL_REAL = 209,                     /* REAL  */
  YYSYMBOL_RECURSIVE_SYM = 210,            /* RECURSIVE_SYM  */
  YYSYMBOL_REF_SYSTEM_ID_SYM = 211,        /* REF_SYSTEM_ID_SYM  */
  YYSYMBOL_REFERENCES = 212,               /* REFERENCES  */
  YYSYMBOL_REGEXP = 213,                   /* REGEXP  */
  YYSYMBOL_RELEASE_SYM = 214,              /* RELEASE_SYM  */
  YYSYMBOL_RENAME = 215,                   /* RENAME  */
  YYSYMBOL_REPEAT_SYM = 216,               /* REPEAT_SYM  */
  YYSYMBOL_REPLACE = 217,                  /* REPLACE  */
  YYSYMBOL_REQUIRE_SYM = 218,              /* REQUIRE_SYM  */
  YYSYMBOL_RESIGNAL_SYM = 219,             /* RESIGNAL_SYM  */
  YYSYMBOL_RESTRICT = 220,                 /* RESTRICT  */
  YYSYMBOL_RETURNING_SYM = 221,            /* RETURNING_SYM  */
  YYSYMBOL_RETURN_MARIADB_SYM = 222,       /* RETURN_MARIADB_SYM  */
  YYSYMBOL_RETURN_ORACLE_SYM = 223,        /* RETURN_ORACLE_SYM  */
  YYSYMBOL_REVOKE = 224,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 225,                    /* RIGHT  */
  YYSYMBOL_ROWS_SYM = 226,                 /* ROWS_SYM  */
  YYSYMBOL_ROWTYPE_ORACLE_SYM = 227,       /* ROWTYPE_ORACLE_SYM  */
  YYSYMBOL_ROW_NUMBER_SYM = 228,           /* ROW_NUMBER_SYM  */
  YYSYMBOL_SECOND_MICROSECOND_SYM = 229,   /* SECOND_MICROSECOND_SYM  */
  YYSYMBOL_SELECT_SYM = 230,               /* SELECT_SYM  */
  YYSYMBOL_SENSITIVE_SYM = 231,            /* SENSITIVE_SYM  */
  YYSYMBOL_SEPARATOR_SYM = 232,            /* SEPARATOR_SYM  */
  YYSYMBOL_SERVER_OPTIONS = 233,           /* SERVER_OPTIONS  */
  YYSYMBOL_SET = 234,                      /* SET  */
  YYSYMBOL_SET_VAR = 235,                  /* SET_VAR  */
  YYSYMBOL_SHIFT_LEFT = 236,               /* SHIFT_LEFT  */
  YYSYMBOL_SHIFT_RIGHT = 237,              /* SHIFT_RIGHT  */
  YYSYMBOL_SHOW = 238,                     /* SHOW  */
  YYSYMBOL_SIGNAL_SYM = 239,               /* SIGNAL_SYM  */
  YYSYMBOL_SMALLINT = 240,                 /* SMALLINT  */
  YYSYMBOL_SPATIAL_SYM = 241,              /* SPATIAL_SYM  */
  YYSYMBOL_SPECIFIC_SYM = 242,             /* SPECIFIC_SYM  */
  YYSYMBOL_SQLEXCEPTION_SYM = 243,         /* SQLEXCEPTION_SYM  */
  YYSYMBOL_SQLSTATE_SYM = 244,             /* SQLSTATE_SYM  */
  YYSYMBOL_SQLWARNING_SYM = 245,           /* SQLWARNING_SYM  */
  YYSYMBOL_SQL_BIG_RESULT = 246,           /* SQL_BIG_RESULT  */
  YYSYMBOL_SQL_SMALL_RESULT = 247,         /* SQL_SMALL_RESULT  */
  YYSYMBOL_SQL_SYM = 248,                  /* SQL_SYM  */
  YYSYMBOL_SSL_SYM = 249,                  /* SSL_SYM  */
  YYSYMBOL_STARTING = 250,                 /* STARTING  */
  YYSYMBOL_STATS_AUTO_RECALC_SYM = 251,    /* STATS_AUTO_RECALC_SYM  */
  YYSYMBOL_STATS_PERSISTENT_SYM = 252,     /* STATS_PERSISTENT_SYM  */
  YYSYMBOL_STATS_SAMPLE_PAGES_SYM = 253,   /* STATS_SAMPLE_PAGES_SYM  */
  YYSYMBOL_STDDEV_SAMP_SYM = 254,          /* STDDEV_SAMP_SYM  */
  YYSYMBOL_STD_SYM = 255,                  /* STD_SYM  */
  YYSYMBOL_STRAIGHT_JOIN = 256,            /* STRAIGHT_JOIN  */
  YYSYMBOL_SUBSTRING = 257,                /* SUBSTRING  */
  YYSYMBOL_SUM_SYM = 258,                  /* SUM_SYM  */
  YYSYMBOL_SYSDATE = 259,                  /* SYSDATE  */
  YYSYMBOL_TABLE_REF_PRIORITY = 260,       /* TABLE_REF_PRIORITY  */
  YYSYMBOL_TABLE_SYM = 261,                /* TABLE_SYM  */
  YYSYMBOL_TERMINATED = 262,               /* TERMINATED  */
  YYSYMBOL_TEXT_STRING = 263,              /* TEXT_STRING  */
  YYSYMBOL_THEN_SYM = 264,                 /* THEN_SYM  */
  YYSYMBOL_TINYBLOB = 265,                 /* TINYBLOB  */
  YYSYMBOL_TINYINT = 266,                  /* TINYINT  */
  YYSYMBOL_TINYTEXT = 267,                 /* TINYTEXT  */
  YYSYMBOL_TO_SYM = 268,                   /* TO_SYM  */
  YYSYMBOL_TRAILING = 269,                 /* TRAILING  */
  YYSYMBOL_TRIGGER_SYM = 270,              /* TRIGGER_SYM  */
  YYSYMBOL_TRIM = 271,                     /* TRIM  */
  YYSYMBOL_TRUE_SYM = 272,                 /* TRUE_SYM  */
  YYSYMBOL_ULONGLONG_NUM = 273,            /* ULONGLONG_NUM  */
  YYSYMBOL_UNDERSCORE_CHARSET = 274,       /* UNDERSCORE_CHARSET  */
  YYSYMBOL_UNDO_SYM = 275,                 /* UNDO_SYM  */
  YYSYMBOL_UNION_SYM = 276,                /* UNION_SYM  */
  YYSYMBOL_UNIQUE_SYM = 277,               /* UNIQUE_SYM  */
  YYSYMBOL_UNLOCK_SYM = 278,               /* UNLOCK_SYM  */
  YYSYMBOL_UNSIGNED = 279,                 /* UNSIGNED  */
  YYSYMBOL_UPDATE_SYM = 280,               /* UPDATE_SYM  */
  YYSYMBOL_USAGE = 281,                    /* USAGE  */
  YYSYMBOL_USE_SYM = 282,                  /* USE_SYM  */
  YYSYMBOL_USING = 283,                    /* USING  */
  YYSYMBOL_UTC_DATE_SYM = 284,             /* UTC_DATE_SYM  */
  YYSYMBOL_UTC_TIMESTAMP_SYM = 285,        /* UTC_TIMESTAMP_SYM  */
  YYSYMBOL_UTC_TIME_SYM = 286,             /* UTC_TIME_SYM  */
  YYSYMBOL_VALUES = 287,                   /* VALUES  */
  YYSYMBOL_VALUES_IN_SYM = 288,            /* VALUES_IN_SYM  */
  YYSYMBOL_VALUES_LESS_SYM = 289,          /* VALUES_LESS_SYM  */
  YYSYMBOL_VARBINARY = 290,                /* VARBINARY  */
  YYSYMBOL_VARCHAR = 291,                  /* VARCHAR  */
  YYSYMBOL_VARIANCE_SYM = 292,             /* VARIANCE_SYM  */
  YYSYMBOL_VARYING = 293,                  /* VARYING  */
  YYSYMBOL_VAR_SAMP_SYM = 294,             /* VAR_SAMP_SYM  */
  YYSYMBOL_WHEN_SYM = 295,                 /* WHEN_SYM  */
  YYSYMBOL_WHERE = 296,                    /* WHERE  */
  YYSYMBOL_WHILE_SYM = 297,                /* WHILE_SYM  */
  YYSYMBOL_WITH = 298,                     /* WITH  */
  YYSYMBOL_WITH_CUBE_SYM = 299,            /* WITH_CUBE_SYM  */
  YYSYMBOL_WITH_ROLLUP_SYM = 300,          /* WITH_ROLLUP_SYM  */
  YYSYMBOL_WITH_SYSTEM_SYM = 301,          /* WITH_SYSTEM_SYM  */
  YYSYMBOL_XOR = 302,                      /* XOR  */
  YYSYMBOL_YEAR_MONTH_SYM = 303,           /* YEAR_MONTH_SYM  */
  YYSYMBOL_ZEROFILL = 304,                 /* ZEROFILL  */
  YYSYMBOL_IMPOSSIBLE_ACTION = 305,        /* IMPOSSIBLE_ACTION  */
  YYSYMBOL_BODY_MARIADB_SYM = 306,         /* BODY_MARIADB_SYM  */
  YYSYMBOL_ELSEIF_ORACLE_SYM = 307,        /* ELSEIF_ORACLE_SYM  */
  YYSYMBOL_ELSIF_MARIADB_SYM = 308,        /* ELSIF_MARIADB_SYM  */
  YYSYMBOL_EXCEPTION_ORACLE_SYM = 309,     /* EXCEPTION_ORACLE_SYM  */
  YYSYMBOL_GOTO_MARIADB_SYM = 310,         /* GOTO_MARIADB_SYM  */
  YYSYMBOL_OTHERS_MARIADB_SYM = 311,       /* OTHERS_MARIADB_SYM  */
  YYSYMBOL_PACKAGE_MARIADB_SYM = 312,      /* PACKAGE_MARIADB_SYM  */
  YYSYMBOL_RAISE_MARIADB_SYM = 313,        /* RAISE_MARIADB_SYM  */
  YYSYMBOL_ROWTYPE_MARIADB_SYM = 314,      /* ROWTYPE_MARIADB_SYM  */
  YYSYMBOL_ACTION = 315,                   /* ACTION  */
  YYSYMBOL_ADMIN_SYM = 316,                /* ADMIN_SYM  */
  YYSYMBOL_ADDDATE_SYM = 317,              /* ADDDATE_SYM  */
  YYSYMBOL_AFTER_SYM = 318,                /* AFTER_SYM  */
  YYSYMBOL_AGAINST = 319,                  /* AGAINST  */
  YYSYMBOL_AGGREGATE_SYM = 320,            /* AGGREGATE_SYM  */
  YYSYMBOL_ALGORITHM_SYM = 321,            /* ALGORITHM_SYM  */
  YYSYMBOL_ALWAYS_SYM = 322,               /* ALWAYS_SYM  */
  YYSYMBOL_ANY_SYM = 323,                  /* ANY_SYM  */
  YYSYMBOL_ASCII_SYM = 324,                /* ASCII_SYM  */
  YYSYMBOL_AT_SYM = 325,                   /* AT_SYM  */
  YYSYMBOL_ATOMIC_SYM = 326,               /* ATOMIC_SYM  */
  YYSYMBOL_AUTHORS_SYM = 327,              /* AUTHORS_SYM  */
  YYSYMBOL_AUTOEXTEND_SIZE_SYM = 328,      /* AUTOEXTEND_SIZE_SYM  */
  YYSYMBOL_AUTO_INC = 329,                 /* AUTO_INC  */
  YYSYMBOL_AUTO_SYM = 330,                 /* AUTO_SYM  */
  YYSYMBOL_AVG_ROW_LENGTH = 331,           /* AVG_ROW_LENGTH  */
  YYSYMBOL_AVG_SYM = 332,                  /* AVG_SYM  */
  YYSYMBOL_BACKUP_SYM = 333,               /* BACKUP_SYM  */
  YYSYMBOL_BEGIN_MARIADB_SYM = 334,        /* BEGIN_MARIADB_SYM  */
  YYSYMBOL_BEGIN_ORACLE_SYM = 335,         /* BEGIN_ORACLE_SYM  */
  YYSYMBOL_BINLOG_SYM = 336,               /* BINLOG_SYM  */
  YYSYMBOL_BIT_SYM = 337,                  /* BIT_SYM  */
  YYSYMBOL_BLOCK_SYM = 338,                /* BLOCK_SYM  */
  YYSYMBOL_BOOL_SYM = 339,                 /* BOOL_SYM  */
  YYSYMBOL_BOOLEAN_SYM = 340,              /* BOOLEAN_SYM  */
  YYSYMBOL_BTREE_SYM = 341,                /* BTREE_SYM  */
  YYSYMBOL_BYTE_SYM = 342,                 /* BYTE_SYM  */
  YYSYMBOL_CACHE_SYM = 343,                /* CACHE_SYM  */
  YYSYMBOL_CASCADED = 344,                 /* CASCADED  */
  YYSYMBOL_CATALOG_NAME_SYM = 345,         /* CATALOG_NAME_SYM  */
  YYSYMBOL_CHAIN_SYM = 346,                /* CHAIN_SYM  */
  YYSYMBOL_CHANGED = 347,                  /* CHANGED  */
  YYSYMBOL_CHARSET = 348,                  /* CHARSET  */
  YYSYMBOL_CHECKPOINT_SYM = 349,           /* CHECKPOINT_SYM  */
  YYSYMBOL_CHECKSUM_SYM = 350,             /* CHECKSUM_SYM  */
  YYSYMBOL_CIPHER_SYM = 351,               /* CIPHER_SYM  */
  YYSYMBOL_CLASS_ORIGIN_SYM = 352,         /* CLASS_ORIGIN_SYM  */
  YYSYMBOL_CLIENT_SYM = 353,               /* CLIENT_SYM  */
  YYSYMBOL_CLOB_MARIADB_SYM = 354,         /* CLOB_MARIADB_SYM  */
  YYSYMBOL_CLOB_ORACLE_SYM = 355,          /* CLOB_ORACLE_SYM  */
  YYSYMBOL_CLOSE_SYM = 356,                /* CLOSE_SYM  */
  YYSYMBOL_COALESCE = 357,                 /* COALESCE  */
  YYSYMBOL_CODE_SYM = 358,                 /* CODE_SYM  */
  YYSYMBOL_COLLATION_SYM = 359,            /* COLLATION_SYM  */
  YYSYMBOL_COLON_ORACLE_SYM = 360,         /* COLON_ORACLE_SYM  */
  YYSYMBOL_COLUMNS = 361,                  /* COLUMNS  */
  YYSYMBOL_COLUMN_ADD_SYM = 362,           /* COLUMN_ADD_SYM  */
  YYSYMBOL_COLUMN_CHECK_SYM = 363,         /* COLUMN_CHECK_SYM  */
  YYSYMBOL_COLUMN_CREATE_SYM = 364,        /* COLUMN_CREATE_SYM  */
  YYSYMBOL_COLUMN_DELETE_SYM = 365,        /* COLUMN_DELETE_SYM  */
  YYSYMBOL_COLUMN_GET_SYM = 366,           /* COLUMN_GET_SYM  */
  YYSYMBOL_COLUMN_SYM = 367,               /* COLUMN_SYM  */
  YYSYMBOL_COLUMN_NAME_SYM = 368,          /* COLUMN_NAME_SYM  */
  YYSYMBOL_COMMENT_SYM = 369,              /* COMMENT_SYM  */
  YYSYMBOL_COMMITTED_SYM = 370,            /* COMMITTED_SYM  */
  YYSYMBOL_COMMIT_SYM = 371,               /* COMMIT_SYM  */
  YYSYMBOL_COMPACT_SYM = 372,              /* COMPACT_SYM  */
  YYSYMBOL_COMPLETION_SYM = 373,           /* COMPLETION_SYM  */
  YYSYMBOL_COMPRESSED_SYM = 374,           /* COMPRESSED_SYM  */
  YYSYMBOL_CONCURRENT = 375,               /* CONCURRENT  */
  YYSYMBOL_CONNECTION_SYM = 376,           /* CONNECTION_SYM  */
  YYSYMBOL_CONSISTENT_SYM = 377,           /* CONSISTENT_SYM  */
  YYSYMBOL_CONSTRAINT_CATALOG_SYM = 378,   /* CONSTRAINT_CATALOG_SYM  */
  YYSYMBOL_CONSTRAINT_NAME_SYM = 379,      /* CONSTRAINT_NAME_SYM  */
  YYSYMBOL_CONSTRAINT_SCHEMA_SYM = 380,    /* CONSTRAINT_SCHEMA_SYM  */
  YYSYMBOL_CONTAINS_SYM = 381,             /* CONTAINS_SYM  */
  YYSYMBOL_CONTEXT_SYM = 382,              /* CONTEXT_SYM  */
  YYSYMBOL_CONTRIBUTORS_SYM = 383,         /* CONTRIBUTORS_SYM  */
  YYSYMBOL_CPU_SYM = 384,                  /* CPU_SYM  */
  YYSYMBOL_CUBE_SYM = 385,                 /* CUBE_SYM  */
  YYSYMBOL_CURRENT_SYM = 386,              /* CURRENT_SYM  */
  YYSYMBOL_CURRENT_POS_SYM = 387,          /* CURRENT_POS_SYM  */
  YYSYMBOL_CURSOR_NAME_SYM = 388,          /* CURSOR_NAME_SYM  */
  YYSYMBOL_CYCLE_SYM = 389,                /* CYCLE_SYM  */
  YYSYMBOL_DATAFILE_SYM = 390,             /* DATAFILE_SYM  */
  YYSYMBOL_DATA_SYM = 391,                 /* DATA_SYM  */
  YYSYMBOL_DATETIME = 392,                 /* DATETIME  */
  YYSYMBOL_DATE_FORMAT_SYM = 393,          /* DATE_FORMAT_SYM  */
  YYSYMBOL_DATE_SYM = 394,                 /* DATE_SYM  */
  YYSYMBOL_DAY_SYM = 395,                  /* DAY_SYM  */
  YYSYMBOL_DEALLOCATE_SYM = 396,           /* DEALLOCATE_SYM  */
  YYSYMBOL_DECODE_MARIADB_SYM = 397,       /* DECODE_MARIADB_SYM  */
  YYSYMBOL_DECODE_ORACLE_SYM = 398,        /* DECODE_ORACLE_SYM  */
  YYSYMBOL_DEFINER_SYM = 399,              /* DEFINER_SYM  */
  YYSYMBOL_DELAYED_SYM = 400,              /* DELAYED_SYM  */
  YYSYMBOL_DELAY_KEY_WRITE_SYM = 401,      /* DELAY_KEY_WRITE_SYM  */
  YYSYMBOL_DES_KEY_FILE = 402,             /* DES_KEY_FILE  */
  YYSYMBOL_DIAGNOSTICS_SYM = 403,          /* DIAGNOSTICS_SYM  */
  YYSYMBOL_DIRECTORY_SYM = 404,            /* DIRECTORY_SYM  */
  YYSYMBOL_DISABLE_SYM = 405,              /* DISABLE_SYM  */
  YYSYMBOL_DISCARD = 406,                  /* DISCARD  */
  YYSYMBOL_DISK_SYM = 407,                 /* DISK_SYM  */
  YYSYMBOL_DO_SYM = 408,                   /* DO_SYM  */
  YYSYMBOL_DUMPFILE = 409,                 /* DUMPFILE  */
  YYSYMBOL_DUPLICATE_SYM = 410,            /* DUPLICATE_SYM  */
  YYSYMBOL_DYNAMIC_SYM = 411,              /* DYNAMIC_SYM  */
  YYSYMBOL_ENABLE_SYM = 412,               /* ENABLE_SYM  */
  YYSYMBOL_END = 413,                      /* END  */
  YYSYMBOL_ENDS_SYM = 414,                 /* ENDS_SYM  */
  YYSYMBOL_ENGINES_SYM = 415,              /* ENGINES_SYM  */
  YYSYMBOL_ENGINE_SYM = 416,               /* ENGINE_SYM  */
  YYSYMBOL_ENUM = 417,                     /* ENUM  */
  YYSYMBOL_ERROR_SYM = 418,                /* ERROR_SYM  */
  YYSYMBOL_ERRORS = 419,                   /* ERRORS  */
  YYSYMBOL_ESCAPE_SYM = 420,               /* ESCAPE_SYM  */
  YYSYMBOL_EVENTS_SYM = 421,               /* EVENTS_SYM  */
  YYSYMBOL_EVENT_SYM = 422,                /* EVENT_SYM  */
  YYSYMBOL_EVERY_SYM = 423,                /* EVERY_SYM  */
  YYSYMBOL_EXCHANGE_SYM = 424,             /* EXCHANGE_SYM  */
  YYSYMBOL_EXAMINED_SYM = 425,             /* EXAMINED_SYM  */
  YYSYMBOL_EXCLUDE_SYM = 426,              /* EXCLUDE_SYM  */
  YYSYMBOL_EXECUTE_SYM = 427,              /* EXECUTE_SYM  */
  YYSYMBOL_EXCEPTION_MARIADB_SYM = 428,    /* EXCEPTION_MARIADB_SYM  */
  YYSYMBOL_EXIT_MARIADB_SYM = 429,         /* EXIT_MARIADB_SYM  */
  YYSYMBOL_EXIT_ORACLE_SYM = 430,          /* EXIT_ORACLE_SYM  */
  YYSYMBOL_EXPANSION_SYM = 431,            /* EXPANSION_SYM  */
  YYSYMBOL_EXPORT_SYM = 432,               /* EXPORT_SYM  */
  YYSYMBOL_EXTENDED_SYM = 433,             /* EXTENDED_SYM  */
  YYSYMBOL_EXTENT_SIZE_SYM = 434,          /* EXTENT_SIZE_SYM  */
  YYSYMBOL_FAST_SYM = 435,                 /* FAST_SYM  */
  YYSYMBOL_FAULTS_SYM = 436,               /* FAULTS_SYM  */
  YYSYMBOL_FILE_SYM = 437,                 /* FILE_SYM  */
  YYSYMBOL_FIRST_SYM = 438,                /* FIRST_SYM  */
  YYSYMBOL_FIXED_SYM = 439,                /* FIXED_SYM  */
  YYSYMBOL_FLUSH_SYM = 440,                /* FLUSH_SYM  */
  YYSYMBOL_FOLLOWS_SYM = 441,              /* FOLLOWS_SYM  */
  YYSYMBOL_FOLLOWING_SYM = 442,            /* FOLLOWING_SYM  */
  YYSYMBOL_FORCE_SYM = 443,                /* FORCE_SYM  */
  YYSYMBOL_FORMAT_SYM = 444,               /* FORMAT_SYM  */
  YYSYMBOL_FOUND_SYM = 445,                /* FOUND_SYM  */
  YYSYMBOL_FULL = 446,                     /* FULL  */
  YYSYMBOL_FUNCTION_SYM = 447,             /* FUNCTION_SYM  */
  YYSYMBOL_GENERAL = 448,                  /* GENERAL  */
  YYSYMBOL_GENERATED_SYM = 449,            /* GENERATED_SYM  */
  YYSYMBOL_GEOMETRYCOLLECTION = 450,       /* GEOMETRYCOLLECTION  */
  YYSYMBOL_GEOMETRY_SYM = 451,             /* GEOMETRY_SYM  */
  YYSYMBOL_GET_FORMAT = 452,               /* GET_FORMAT  */
  YYSYMBOL_GET_SYM = 453,                  /* GET_SYM  */
  YYSYMBOL_GLOBAL_SYM = 454,               /* GLOBAL_SYM  */
  YYSYMBOL_GRANTS = 455,                   /* GRANTS  */
  YYSYMBOL_HANDLER_SYM = 456,              /* HANDLER_SYM  */
  YYSYMBOL_HARD_SYM = 457,                 /* HARD_SYM  */
  YYSYMBOL_HASH_SYM = 458,                 /* HASH_SYM  */
  YYSYMBOL_HELP_SYM = 459,                 /* HELP_SYM  */
  YYSYMBOL_HIGH_PRIORITY = 460,            /* HIGH_PRIORITY  */
  YYSYMBOL_HISTORY_SYM = 461,              /* HISTORY_SYM  */
  YYSYMBOL_HOST_SYM = 462,                 /* HOST_SYM  */
  YYSYMBOL_HOSTS_SYM = 463,                /* HOSTS_SYM  */
  YYSYMBOL_HOUR_SYM = 464,                 /* HOUR_SYM  */
  YYSYMBOL_ID_SYM = 465,                   /* ID_SYM  */
  YYSYMBOL_IDENTIFIED_SYM = 466,           /* IDENTIFIED_SYM  */
  YYSYMBOL_IGNORE_SERVER_IDS_SYM = 467,    /* IGNORE_SERVER_IDS_SYM  */
  YYSYMBOL_IMMEDIATE_SYM = 468,            /* IMMEDIATE_SYM  */
  YYSYMBOL_IMPORT = 469,                   /* IMPORT  */
  YYSYMBOL_INCREMENT_SYM = 470,            /* INCREMENT_SYM  */
  YYSYMBOL_INDEXES = 471,                  /* INDEXES  */
  YYSYMBOL_INITIAL_SIZE_SYM = 472,         /* INITIAL_SIZE_SYM  */
  YYSYMBOL_INSERT_METHOD = 473,            /* INSERT_METHOD  */
  YYSYMBOL_INSTALL_SYM = 474,              /* INSTALL_SYM  */
  YYSYMBOL_INVOKER_SYM = 475,              /* INVOKER_SYM  */
  YYSYMBOL_IO_SYM = 476,                   /* IO_SYM  */
  YYSYMBOL_IPC_SYM = 477,                  /* IPC_SYM  */
  YYSYMBOL_ISOLATION = 478,                /* ISOLATION  */
  YYSYMBOL_ISOPEN_SYM = 479,               /* ISOPEN_SYM  */
  YYSYMBOL_ISSUER_SYM = 480,               /* ISSUER_SYM  */
  YYSYMBOL_INVISIBLE_SYM = 481,            /* INVISIBLE_SYM  */
  YYSYMBOL_JSON_SYM = 482,                 /* JSON_SYM  */
  YYSYMBOL_KEY_BLOCK_SIZE = 483,           /* KEY_BLOCK_SIZE  */
  YYSYMBOL_LANGUAGE_SYM = 484,             /* LANGUAGE_SYM  */
  YYSYMBOL_LAST_SYM = 485,                 /* LAST_SYM  */
  YYSYMBOL_LAST_VALUE = 486,               /* LAST_VALUE  */
  YYSYMBOL_LASTVAL_SYM = 487,              /* LASTVAL_SYM  */
  YYSYMBOL_LEAVES = 488,                   /* LEAVES  */
  YYSYMBOL_LESS_SYM = 489,                 /* LESS_SYM  */
  YYSYMBOL_LEVEL_SYM = 490,                /* LEVEL_SYM  */
  YYSYMBOL_LINESTRING = 491,               /* LINESTRING  */
  YYSYMBOL_LIST_SYM = 492,                 /* LIST_SYM  */
  YYSYMBOL_LOCAL_SYM = 493,                /* LOCAL_SYM  */
  YYSYMBOL_LOCKS_SYM = 494,                /* LOCKS_SYM  */
  YYSYMBOL_LOGFILE_SYM = 495,              /* LOGFILE_SYM  */
  YYSYMBOL_LOGS_SYM = 496,                 /* LOGS_SYM  */
  YYSYMBOL_MASTER_CONNECT_RETRY_SYM = 497, /* MASTER_CONNECT_RETRY_SYM  */
  YYSYMBOL_MASTER_DELAY_SYM = 498,         /* MASTER_DELAY_SYM  */
  YYSYMBOL_MASTER_GTID_POS_SYM = 499,      /* MASTER_GTID_POS_SYM  */
  YYSYMBOL_MASTER_HOST_SYM = 500,          /* MASTER_HOST_SYM  */
  YYSYMBOL_MASTER_LOG_FILE_SYM = 501,      /* MASTER_LOG_FILE_SYM  */
  YYSYMBOL_MASTER_LOG_POS_SYM = 502,       /* MASTER_LOG_POS_SYM  */
  YYSYMBOL_MASTER_PASSWORD_SYM = 503,      /* MASTER_PASSWORD_SYM  */
  YYSYMBOL_MASTER_PORT_SYM = 504,          /* MASTER_PORT_SYM  */
  YYSYMBOL_MASTER_SERVER_ID_SYM = 505,     /* MASTER_SERVER_ID_SYM  */
  YYSYMBOL_MASTER_SSL_CAPATH_SYM = 506,    /* MASTER_SSL_CAPATH_SYM  */
  YYSYMBOL_MASTER_SSL_CA_SYM = 507,        /* MASTER_SSL_CA_SYM  */
  YYSYMBOL_MASTER_SSL_CERT_SYM = 508,      /* MASTER_SSL_CERT_SYM  */
  YYSYMBOL_MASTER_SSL_CIPHER_SYM = 509,    /* MASTER_SSL_CIPHER_SYM  */
  YYSYMBOL_MASTER_SSL_CRL_SYM = 510,       /* MASTER_SSL_CRL_SYM  */
  YYSYMBOL_MASTER_SSL_CRLPATH_SYM = 511,   /* MASTER_SSL_CRLPATH_SYM  */
  YYSYMBOL_MASTER_SSL_KEY_SYM = 512,       /* MASTER_SSL_KEY_SYM  */
  YYSYMBOL_MASTER_SSL_SYM = 513,           /* MASTER_SSL_SYM  */
  YYSYMBOL_MASTER_SYM = 514,               /* MASTER_SYM  */
  YYSYMBOL_MASTER_USER_SYM = 515,          /* MASTER_USER_SYM  */
  YYSYMBOL_MASTER_USE_GTID_SYM = 516,      /* MASTER_USE_GTID_SYM  */
  YYSYMBOL_MASTER_HEARTBEAT_PERIOD_SYM = 517, /* MASTER_HEARTBEAT_PERIOD_SYM  */
  YYSYMBOL_MAX_CONNECTIONS_PER_HOUR = 518, /* MAX_CONNECTIONS_PER_HOUR  */
  YYSYMBOL_MAX_QUERIES_PER_HOUR = 519,     /* MAX_QUERIES_PER_HOUR  */
  YYSYMBOL_MAX_ROWS = 520,                 /* MAX_ROWS  */
  YYSYMBOL_MAX_SIZE_SYM = 521,             /* MAX_SIZE_SYM  */
  YYSYMBOL_MAX_UPDATES_PER_HOUR = 522,     /* MAX_UPDATES_PER_HOUR  */
  YYSYMBOL_MAX_STATEMENT_TIME_SYM = 523,   /* MAX_STATEMENT_TIME_SYM  */
  YYSYMBOL_MAX_USER_CONNECTIONS_SYM = 524, /* MAX_USER_CONNECTIONS_SYM  */
  YYSYMBOL_MEDIUM_SYM = 525,               /* MEDIUM_SYM  */
  YYSYMBOL_MEMORY_SYM = 526,               /* MEMORY_SYM  */
  YYSYMBOL_MERGE_SYM = 527,                /* MERGE_SYM  */
  YYSYMBOL_MESSAGE_TEXT_SYM = 528,         /* MESSAGE_TEXT_SYM  */
  YYSYMBOL_MICROSECOND_SYM = 529,          /* MICROSECOND_SYM  */
  YYSYMBOL_MIGRATE_SYM = 530,              /* MIGRATE_SYM  */
  YYSYMBOL_MINUTE_SYM = 531,               /* MINUTE_SYM  */
  YYSYMBOL_MINVALUE_SYM = 532,             /* MINVALUE_SYM  */
  YYSYMBOL_MIN_ROWS = 533,                 /* MIN_ROWS  */
  YYSYMBOL_MODE_SYM = 534,                 /* MODE_SYM  */
  YYSYMBOL_MODIFY_SYM = 535,               /* MODIFY_SYM  */
  YYSYMBOL_MONTH_SYM = 536,                /* MONTH_SYM  */
  YYSYMBOL_MULTILINESTRING = 537,          /* MULTILINESTRING  */
  YYSYMBOL_MULTIPOINT = 538,               /* MULTIPOINT  */
  YYSYMBOL_MULTIPOLYGON = 539,             /* MULTIPOLYGON  */
  YYSYMBOL_MUTEX_SYM = 540,                /* MUTEX_SYM  */
  YYSYMBOL_MYSQL_SYM = 541,                /* MYSQL_SYM  */
  YYSYMBOL_MYSQL_ERRNO_SYM = 542,          /* MYSQL_ERRNO_SYM  */
  YYSYMBOL_NAMES_SYM = 543,                /* NAMES_SYM  */
  YYSYMBOL_NAME_SYM = 544,                 /* NAME_SYM  */
  YYSYMBOL_NATIONAL_SYM = 545,             /* NATIONAL_SYM  */
  YYSYMBOL_NCHAR_SYM = 546,                /* NCHAR_SYM  */
  YYSYMBOL_NEW_SYM = 547,                  /* NEW_SYM  */
  YYSYMBOL_NEXT_SYM = 548,                 /* NEXT_SYM  */
  YYSYMBOL_NEXTVAL_SYM = 549,              /* NEXTVAL_SYM  */
  YYSYMBOL_NOCACHE_SYM = 550,              /* NOCACHE_SYM  */
  YYSYMBOL_NOCYCLE_SYM = 551,              /* NOCYCLE_SYM  */
  YYSYMBOL_NODEGROUP_SYM = 552,            /* NODEGROUP_SYM  */
  YYSYMBOL_NONE_SYM = 553,                 /* NONE_SYM  */
  YYSYMBOL_NOTFOUND_SYM = 554,             /* NOTFOUND_SYM  */
  YYSYMBOL_NO_SYM = 555,                   /* NO_SYM  */
  YYSYMBOL_NOMAXVALUE_SYM = 556,           /* NOMAXVALUE_SYM  */
  YYSYMBOL_NOMINVALUE_SYM = 557,           /* NOMINVALUE_SYM  */
  YYSYMBOL_NO_WAIT_SYM = 558,              /* NO_WAIT_SYM  */
  YYSYMBOL_NOWAIT_SYM = 559,               /* NOWAIT_SYM  */
  YYSYMBOL_NUMBER_MARIADB_SYM = 560,       /* NUMBER_MARIADB_SYM  */
  YYSYMBOL_NUMBER_ORACLE_SYM = 561,        /* NUMBER_ORACLE_SYM  */
  YYSYMBOL_NVARCHAR_SYM = 562,             /* NVARCHAR_SYM  */
  YYSYMBOL_OF_SYM = 563,                   /* OF_SYM  */
  YYSYMBOL_OFFSET_SYM = 564,               /* OFFSET_SYM  */
  YYSYMBOL_OLD_PASSWORD_SYM = 565,         /* OLD_PASSWORD_SYM  */
  YYSYMBOL_ONE_SYM = 566,                  /* ONE_SYM  */
  YYSYMBOL_ONLY_SYM = 567,                 /* ONLY_SYM  */
  YYSYMBOL_ONLINE_SYM = 568,               /* ONLINE_SYM  */
  YYSYMBOL_OPEN_SYM = 569,                 /* OPEN_SYM  */
  YYSYMBOL_OPTIONS_SYM = 570,              /* OPTIONS_SYM  */
  YYSYMBOL_OPTION = 571,                   /* OPTION  */
  YYSYMBOL_OWNER_SYM = 572,                /* OWNER_SYM  */
  YYSYMBOL_PACK_KEYS_SYM = 573,            /* PACK_KEYS_SYM  */
  YYSYMBOL_PAGE_SYM = 574,                 /* PAGE_SYM  */
  YYSYMBOL_PARSER_SYM = 575,               /* PARSER_SYM  */
  YYSYMBOL_PARTIAL = 576,                  /* PARTIAL  */
  YYSYMBOL_PARTITIONS_SYM = 577,           /* PARTITIONS_SYM  */
  YYSYMBOL_PARTITIONING_SYM = 578,         /* PARTITIONING_SYM  */
  YYSYMBOL_PASSWORD_SYM = 579,             /* PASSWORD_SYM  */
  YYSYMBOL_PERIOD_SYM = 580,               /* PERIOD_SYM  */
  YYSYMBOL_PERSISTENT_SYM = 581,           /* PERSISTENT_SYM  */
  YYSYMBOL_PHASE_SYM = 582,                /* PHASE_SYM  */
  YYSYMBOL_PLUGINS_SYM = 583,              /* PLUGINS_SYM  */
  YYSYMBOL_PLUGIN_SYM = 584,               /* PLUGIN_SYM  */
  YYSYMBOL_POINT_SYM = 585,                /* POINT_SYM  */
  YYSYMBOL_POLYGON = 586,                  /* POLYGON  */
  YYSYMBOL_PORT_SYM = 587,                 /* PORT_SYM  */
  YYSYMBOL_PRECEDES_SYM = 588,             /* PRECEDES_SYM  */
  YYSYMBOL_PRECEDING_SYM = 589,            /* PRECEDING_SYM  */
  YYSYMBOL_PREPARE_SYM = 590,              /* PREPARE_SYM  */
  YYSYMBOL_PRESERVE_SYM = 591,             /* PRESERVE_SYM  */
  YYSYMBOL_PREV_SYM = 592,                 /* PREV_SYM  */
  YYSYMBOL_PREVIOUS_SYM = 593,             /* PREVIOUS_SYM  */
  YYSYMBOL_PRIVILEGES = 594,               /* PRIVILEGES  */
  YYSYMBOL_PROCESS = 595,                  /* PROCESS  */
  YYSYMBOL_PROCESSLIST_SYM = 596,          /* PROCESSLIST_SYM  */
  YYSYMBOL_PROFILE_SYM = 597,              /* PROFILE_SYM  */
  YYSYMBOL_PROFILES_SYM = 598,             /* PROFILES_SYM  */
  YYSYMBOL_PROXY_SYM = 599,                /* PROXY_SYM  */
  YYSYMBOL_QUARTER_SYM = 600,              /* QUARTER_SYM  */
  YYSYMBOL_QUERY_SYM = 601,                /* QUERY_SYM  */
  YYSYMBOL_QUICK = 602,                    /* QUICK  */
  YYSYMBOL_RAW_MARIADB_SYM = 603,          /* RAW_MARIADB_SYM  */
  YYSYMBOL_RAW_ORACLE_SYM = 604,           /* RAW_ORACLE_SYM  */
  YYSYMBOL_READ_ONLY_SYM = 605,            /* READ_ONLY_SYM  */
  YYSYMBOL_REBUILD_SYM = 606,              /* REBUILD_SYM  */
  YYSYMBOL_RECOVER_SYM = 607,              /* RECOVER_SYM  */
  YYSYMBOL_REDOFILE_SYM = 608,             /* REDOFILE_SYM  */
  YYSYMBOL_REDO_BUFFER_SIZE_SYM = 609,     /* REDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_REDUNDANT_SYM = 610,            /* REDUNDANT_SYM  */
  YYSYMBOL_RELAY = 611,                    /* RELAY  */
  YYSYMBOL_RELAYLOG_SYM = 612,             /* RELAYLOG_SYM  */
  YYSYMBOL_RELAY_LOG_FILE_SYM = 613,       /* RELAY_LOG_FILE_SYM  */
  YYSYMBOL_RELAY_LOG_POS_SYM = 614,        /* RELAY_LOG_POS_SYM  */
  YYSYMBOL_RELAY_THREAD = 615,             /* RELAY_THREAD  */
  YYSYMBOL_RELOAD = 616,                   /* RELOAD  */
  YYSYMBOL_REMOVE_SYM = 617,               /* REMOVE_SYM  */
  YYSYMBOL_REORGANIZE_SYM = 618,           /* REORGANIZE_SYM  */
  YYSYMBOL_REPAIR = 619,                   /* REPAIR  */
  YYSYMBOL_REPEATABLE_SYM = 620,           /* REPEATABLE_SYM  */
  YYSYMBOL_REPLICATION = 621,              /* REPLICATION  */
  YYSYMBOL_RESET_SYM = 622,                /* RESET_SYM  */
  YYSYMBOL_RESTART_SYM = 623,              /* RESTART_SYM  */
  YYSYMBOL_RESOURCES = 624,                /* RESOURCES  */
  YYSYMBOL_RESTORE_SYM = 625,              /* RESTORE_SYM  */
  YYSYMBOL_RESUME_SYM = 626,               /* RESUME_SYM  */
  YYSYMBOL_RETURNED_SQLSTATE_SYM = 627,    /* RETURNED_SQLSTATE_SYM  */
  YYSYMBOL_RETURNS_SYM = 628,              /* RETURNS_SYM  */
  YYSYMBOL_REUSE_SYM = 629,                /* REUSE_SYM  */
  YYSYMBOL_REVERSE_SYM = 630,              /* REVERSE_SYM  */
  YYSYMBOL_ROLE_SYM = 631,                 /* ROLE_SYM  */
  YYSYMBOL_ROLLBACK_SYM = 632,             /* ROLLBACK_SYM  */
  YYSYMBOL_ROLLUP_SYM = 633,               /* ROLLUP_SYM  */
  YYSYMBOL_ROUTINE_SYM = 634,              /* ROUTINE_SYM  */
  YYSYMBOL_ROWCOUNT_SYM = 635,             /* ROWCOUNT_SYM  */
  YYSYMBOL_ROW_SYM = 636,                  /* ROW_SYM  */
  YYSYMBOL_ROW_COUNT_SYM = 637,            /* ROW_COUNT_SYM  */
  YYSYMBOL_ROW_FORMAT_SYM = 638,           /* ROW_FORMAT_SYM  */
  YYSYMBOL_RTREE_SYM = 639,                /* RTREE_SYM  */
  YYSYMBOL_SAVEPOINT_SYM = 640,            /* SAVEPOINT_SYM  */
  YYSYMBOL_SCHEDULE_SYM = 641,             /* SCHEDULE_SYM  */
  YYSYMBOL_SCHEMA_NAME_SYM = 642,          /* SCHEMA_NAME_SYM  */
  YYSYMBOL_SECOND_SYM = 643,               /* SECOND_SYM  */
  YYSYMBOL_SECURITY_SYM = 644,             /* SECURITY_SYM  */
  YYSYMBOL_SEQUENCE_SYM = 645,             /* SEQUENCE_SYM  */
  YYSYMBOL_SERIALIZABLE_SYM = 646,         /* SERIALIZABLE_SYM  */
  YYSYMBOL_SERIAL_SYM = 647,               /* SERIAL_SYM  */
  YYSYMBOL_SESSION_SYM = 648,              /* SESSION_SYM  */
  YYSYMBOL_SERVER_SYM = 649,               /* SERVER_SYM  */
  YYSYMBOL_SETVAL_SYM = 650,               /* SETVAL_SYM  */
  YYSYMBOL_SHARE_SYM = 651,                /* SHARE_SYM  */
  YYSYMBOL_SHUTDOWN = 652,                 /* SHUTDOWN  */
  YYSYMBOL_SIGNED_SYM = 653,               /* SIGNED_SYM  */
  YYSYMBOL_SIMPLE_SYM = 654,               /* SIMPLE_SYM  */
  YYSYMBOL_SLAVE = 655,                    /* SLAVE  */
  YYSYMBOL_SLAVES = 656,                   /* SLAVES  */
  YYSYMBOL_SLAVE_POS_SYM = 657,            /* SLAVE_POS_SYM  */
  YYSYMBOL_SLOW = 658,                     /* SLOW  */
  YYSYMBOL_SNAPSHOT_SYM = 659,             /* SNAPSHOT_SYM  */
  YYSYMBOL_SOCKET_SYM = 660,               /* SOCKET_SYM  */
  YYSYMBOL_SOFT_SYM = 661,                 /* SOFT_SYM  */
  YYSYMBOL_SONAME_SYM = 662,               /* SONAME_SYM  */
  YYSYMBOL_SOUNDS_SYM = 663,               /* SOUNDS_SYM  */
  YYSYMBOL_SOURCE_SYM = 664,               /* SOURCE_SYM  */
  YYSYMBOL_SQL_BUFFER_RESULT = 665,        /* SQL_BUFFER_RESULT  */
  YYSYMBOL_SQL_CACHE_SYM = 666,            /* SQL_CACHE_SYM  */
  YYSYMBOL_SQL_CALC_FOUND_ROWS = 667,      /* SQL_CALC_FOUND_ROWS  */
  YYSYMBOL_SQL_NO_CACHE_SYM = 668,         /* SQL_NO_CACHE_SYM  */
  YYSYMBOL_SQL_THREAD = 669,               /* SQL_THREAD  */
  YYSYMBOL_STARTS_SYM = 670,               /* STARTS_SYM  */
  YYSYMBOL_START_SYM = 671,                /* START_SYM  */
  YYSYMBOL_STATEMENT_SYM = 672,            /* STATEMENT_SYM  */
  YYSYMBOL_STATUS_SYM = 673,               /* STATUS_SYM  */
  YYSYMBOL_STOP_SYM = 674,                 /* STOP_SYM  */
  YYSYMBOL_STORAGE_SYM = 675,              /* STORAGE_SYM  */
  YYSYMBOL_STORED_SYM = 676,               /* STORED_SYM  */
  YYSYMBOL_STRING_SYM = 677,               /* STRING_SYM  */
  YYSYMBOL_SUBCLASS_ORIGIN_SYM = 678,      /* SUBCLASS_ORIGIN_SYM  */
  YYSYMBOL_SUBDATE_SYM = 679,              /* SUBDATE_SYM  */
  YYSYMBOL_SUBJECT_SYM = 680,              /* SUBJECT_SYM  */
  YYSYMBOL_SUBPARTITIONS_SYM = 681,        /* SUBPARTITIONS_SYM  */
  YYSYMBOL_SUBPARTITION_SYM = 682,         /* SUBPARTITION_SYM  */
  YYSYMBOL_SUPER_SYM = 683,                /* SUPER_SYM  */
  YYSYMBOL_SUSPEND_SYM = 684,              /* SUSPEND_SYM  */
  YYSYMBOL_SWAPS_SYM = 685,                /* SWAPS_SYM  */
  YYSYMBOL_SWITCHES_SYM = 686,             /* SWITCHES_SYM  */
  YYSYMBOL_SYSTEM = 687,                   /* SYSTEM  */
  YYSYMBOL_SYSTEM_TIME_SYM = 688,          /* SYSTEM_TIME_SYM  */
  YYSYMBOL_TABLES = 689,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 690,               /* TABLESPACE  */
  YYSYMBOL_TABLE_CHECKSUM_SYM = 691,       /* TABLE_CHECKSUM_SYM  */
  YYSYMBOL_TABLE_NAME_SYM = 692,           /* TABLE_NAME_SYM  */
  YYSYMBOL_TEMPORARY = 693,                /* TEMPORARY  */
  YYSYMBOL_TEMPTABLE_SYM = 694,            /* TEMPTABLE_SYM  */
  YYSYMBOL_TEXT_SYM = 695,                 /* TEXT_SYM  */
  YYSYMBOL_THAN_SYM = 696,                 /* THAN_SYM  */
  YYSYMBOL_TIES_SYM = 697,                 /* TIES_SYM  */
  YYSYMBOL_TIMESTAMP = 698,                /* TIMESTAMP  */
  YYSYMBOL_TIMESTAMP_ADD = 699,            /* TIMESTAMP_ADD  */
  YYSYMBOL_TIMESTAMP_DIFF = 700,           /* TIMESTAMP_DIFF  */
  YYSYMBOL_TIME_SYM = 701,                 /* TIME_SYM  */
  YYSYMBOL_TRANSACTION_SYM = 702,          /* TRANSACTION_SYM  */
  YYSYMBOL_TRANSACTIONAL_SYM = 703,        /* TRANSACTIONAL_SYM  */
  YYSYMBOL_TRIGGERS_SYM = 704,             /* TRIGGERS_SYM  */
  YYSYMBOL_TRIM_ORACLE = 705,              /* TRIM_ORACLE  */
  YYSYMBOL_TRUNCATE_SYM = 706,             /* TRUNCATE_SYM  */
  YYSYMBOL_TYPES_SYM = 707,                /* TYPES_SYM  */
  YYSYMBOL_TYPE_SYM = 708,                 /* TYPE_SYM  */
  YYSYMBOL_UDF_RETURNS_SYM = 709,          /* UDF_RETURNS_SYM  */
  YYSYMBOL_UNBOUNDED_SYM = 710,            /* UNBOUNDED_SYM  */
  YYSYMBOL_UNCOMMITTED_SYM = 711,          /* UNCOMMITTED_SYM  */
  YYSYMBOL_UNDEFINED_SYM = 712,            /* UNDEFINED_SYM  */
  YYSYMBOL_UNDOFILE_SYM = 713,             /* UNDOFILE_SYM  */
  YYSYMBOL_UNDO_BUFFER_SIZE_SYM = 714,     /* UNDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_UNICODE_SYM = 715,              /* UNICODE_SYM  */
  YYSYMBOL_UNINSTALL_SYM = 716,            /* UNINSTALL_SYM  */
  YYSYMBOL_UNKNOWN_SYM = 717,              /* UNKNOWN_SYM  */
  YYSYMBOL_UNTIL_SYM = 718,                /* UNTIL_SYM  */
  YYSYMBOL_UPGRADE_SYM = 719,              /* UPGRADE_SYM  */
  YYSYMBOL_USER_SYM = 720,                 /* USER_SYM  */
  YYSYMBOL_USE_FRM = 721,                  /* USE_FRM  */
  YYSYMBOL_VALUE_SYM = 722,                /* VALUE_SYM  */
  YYSYMBOL_VARCHAR2_MARIADB_SYM = 723,     /* VARCHAR2_MARIADB_SYM  */
  YYSYMBOL_VARCHAR2_ORACLE_SYM = 724,      /* VARCHAR2_ORACLE_SYM  */
  YYSYMBOL_VARIABLES = 725,                /* VARIABLES  */
  YYSYMBOL_VERSIONING_SYM = 726,           /* VERSIONING_SYM  */
  YYSYMBOL_VIA_SYM = 727,                  /* VIA_SYM  */
  YYSYMBOL_VIEW_SYM = 728,                 /* VIEW_SYM  */
  YYSYMBOL_VIRTUAL_SYM = 729,              /* VIRTUAL_SYM  */
  YYSYMBOL_WAIT_SYM = 730,                 /* WAIT_SYM  */
  YYSYMBOL_WARNINGS = 731,                 /* WARNINGS  */
  YYSYMBOL_WEEK_SYM = 732,                 /* WEEK_SYM  */
  YYSYMBOL_WEIGHT_STRING_SYM = 733,        /* WEIGHT_STRING_SYM  */
  YYSYMBOL_WINDOW_SYM = 734,               /* WINDOW_SYM  */
  YYSYMBOL_WITHIN = 735,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 736,                  /* WITHOUT  */
  YYSYMBOL_WORK_SYM = 737,                 /* WORK_SYM  */
  YYSYMBOL_WRAPPER_SYM = 738,              /* WRAPPER_SYM  */
  YYSYMBOL_WRITE_SYM = 739,                /* WRITE_SYM  */
  YYSYMBOL_X509_SYM = 740,                 /* X509_SYM  */
  YYSYMBOL_XA_SYM = 741,                   /* XA_SYM  */
  YYSYMBOL_XML_SYM = 742,                  /* XML_SYM  */
  YYSYMBOL_YEAR_SYM = 743,                 /* YEAR_SYM  */
  YYSYMBOL_CONDITIONLESS_JOIN = 744,       /* CONDITIONLESS_JOIN  */
  YYSYMBOL_ON_SYM = 745,                   /* ON_SYM  */
  YYSYMBOL_PREC_BELOW_NOT = 746,           /* PREC_BELOW_NOT  */
  YYSYMBOL_747_ = 747,                     /* '='  */
  YYSYMBOL_748_ = 748,                     /* '>'  */
  YYSYMBOL_749_ = 749,                     /* '<'  */
  YYSYMBOL_750_ = 750,                     /* '|'  */
  YYSYMBOL_751_ = 751,                     /* '&'  */
  YYSYMBOL_752_ = 752,                     /* '-'  */
  YYSYMBOL_753_ = 753,                     /* '+'  */
  YYSYMBOL_754_ = 754,                     /* '*'  */
  YYSYMBOL_755_ = 755,                     /* '/'  */
  YYSYMBOL_756_ = 756,                     /* '%'  */
  YYSYMBOL_757_ = 757,                     /* '^'  */
  YYSYMBOL_758_ = 758,                     /* '~'  */
  YYSYMBOL_PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 759, /* PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE  */
  YYSYMBOL_USER = 760,                     /* USER  */
  YYSYMBOL_PREC_BELOW_CONTRACTION_TOKEN2 = 761, /* PREC_BELOW_CONTRACTION_TOKEN2  */
  YYSYMBOL_762_ = 762,                     /* '('  */
  YYSYMBOL_763_ = 763,                     /* ')'  */
  YYSYMBOL_764_ = 764,                     /* ','  */
  YYSYMBOL_765_ = 765,                     /* '!'  */
  YYSYMBOL_766_ = 766,                     /* '{'  */
  YYSYMBOL_767_ = 767,                     /* '}'  */
  YYSYMBOL_768_ = 768,                     /* ';'  */
  YYSYMBOL_769_ = 769,                     /* '.'  */
  YYSYMBOL_770_ = 770,                     /* '@'  */
  YYSYMBOL_771_ = 771,                     /* ':'  */
  YYSYMBOL_YYACCEPT = 772,                 /* $accept  */
  YYSYMBOL_query = 773,                    /* query  */
  YYSYMBOL_774_1 = 774,                    /* $@1  */
  YYSYMBOL_opt_end_of_input = 775,         /* opt_end_of_input  */
  YYSYMBOL_verb_clause = 776,              /* verb_clause  */
  YYSYMBOL_statement = 777,                /* statement  */
  YYSYMBOL_deallocate = 778,               /* deallocate  */
  YYSYMBOL_deallocate_or_drop = 779,       /* deallocate_or_drop  */
  YYSYMBOL_prepare = 780,                  /* prepare  */
  YYSYMBOL_prepare_src = 781,              /* prepare_src  */
  YYSYMBOL_782_2 = 782,                    /* $@2  */
  YYSYMBOL_execute = 783,                  /* execute  */
  YYSYMBOL_784_3 = 784,                    /* $@3  */
  YYSYMBOL_785_4 = 785,                    /* $@4  */
  YYSYMBOL_execute_using = 786,            /* execute_using  */
  YYSYMBOL_787_5 = 787,                    /* $@5  */
  YYSYMBOL_execute_var_list = 788,         /* execute_var_list  */
  YYSYMBOL_execute_var_ident = 789,        /* execute_var_ident  */
  YYSYMBOL_help = 790,                     /* help  */
  YYSYMBOL_791_6 = 791,                    /* $@6  */
  YYSYMBOL_change = 792,                   /* change  */
  YYSYMBOL_793_7 = 793,                    /* $@7  */
  YYSYMBOL_master_defs = 794,              /* master_defs  */
  YYSYMBOL_master_def = 795,               /* master_def  */
  YYSYMBOL_ignore_server_id_list = 796,    /* ignore_server_id_list  */
  YYSYMBOL_ignore_server_id = 797,         /* ignore_server_id  */
  YYSYMBOL_do_domain_id_list = 798,        /* do_domain_id_list  */
  YYSYMBOL_do_domain_id = 799,             /* do_domain_id  */
  YYSYMBOL_ignore_domain_id_list = 800,    /* ignore_domain_id_list  */
  YYSYMBOL_ignore_domain_id = 801,         /* ignore_domain_id  */
  YYSYMBOL_master_file_def = 802,          /* master_file_def  */
  YYSYMBOL_optional_connection_name = 803, /* optional_connection_name  */
  YYSYMBOL_connection_name = 804,          /* connection_name  */
  YYSYMBOL_create = 805,                   /* create  */
  YYSYMBOL_806_8 = 806,                    /* $@8  */
  YYSYMBOL_807_9 = 807,                    /* $@9  */
  YYSYMBOL_808_10 = 808,                   /* $@10  */
  YYSYMBOL_809_11 = 809,                   /* $@11  */
  YYSYMBOL_810_12 = 810,                   /* $@12  */
  YYSYMBOL_811_13 = 811,                   /* $@13  */
  YYSYMBOL_812_14 = 812,                   /* $@14  */
  YYSYMBOL_813_15 = 813,                   /* $@15  */
  YYSYMBOL_814_16 = 814,                   /* $@16  */
  YYSYMBOL_815_17 = 815,                   /* $@17  */
  YYSYMBOL_816_18 = 816,                   /* $@18  */
  YYSYMBOL_817_19 = 817,                   /* $@19  */
  YYSYMBOL_818_20 = 818,                   /* $@20  */
  YYSYMBOL_819_21 = 819,                   /* $@21  */
  YYSYMBOL_820_22 = 820,                   /* $@22  */
  YYSYMBOL_821_23 = 821,                   /* $@23  */
  YYSYMBOL_sf_tail_not_aggregate = 822,    /* sf_tail_not_aggregate  */
  YYSYMBOL_sf_tail_aggregate = 823,        /* sf_tail_aggregate  */
  YYSYMBOL_create_function_tail = 824,     /* create_function_tail  */
  YYSYMBOL_create_aggregate_function_tail = 825, /* create_aggregate_function_tail  */
  YYSYMBOL_opt_sequence = 826,             /* opt_sequence  */
  YYSYMBOL_sequence_defs = 827,            /* sequence_defs  */
  YYSYMBOL_sequence_def = 828,             /* sequence_def  */
  YYSYMBOL_force_lookahead = 829,          /* force_lookahead  */
  YYSYMBOL_server_def = 830,               /* server_def  */
  YYSYMBOL_831_24 = 831,                   /* $@24  */
  YYSYMBOL_server_options_list = 832,      /* server_options_list  */
  YYSYMBOL_server_option = 833,            /* server_option  */
  YYSYMBOL_event_tail = 834,               /* event_tail  */
  YYSYMBOL_835_25 = 835,                   /* $@25  */
  YYSYMBOL_ev_schedule_time = 836,         /* ev_schedule_time  */
  YYSYMBOL_837_26 = 837,                   /* $@26  */
  YYSYMBOL_opt_ev_status = 838,            /* opt_ev_status  */
  YYSYMBOL_ev_starts = 839,                /* ev_starts  */
  YYSYMBOL_ev_ends = 840,                  /* ev_ends  */
  YYSYMBOL_opt_ev_on_completion = 841,     /* opt_ev_on_completion  */
  YYSYMBOL_ev_on_completion = 842,         /* ev_on_completion  */
  YYSYMBOL_opt_ev_comment = 843,           /* opt_ev_comment  */
  YYSYMBOL_ev_sql_stmt = 844,              /* ev_sql_stmt  */
  YYSYMBOL_845_27 = 845,                   /* $@27  */
  YYSYMBOL_clear_privileges = 846,         /* clear_privileges  */
  YYSYMBOL_sp_name = 847,                  /* sp_name  */
  YYSYMBOL_sp_a_chistics = 848,            /* sp_a_chistics  */
  YYSYMBOL_sp_c_chistics = 849,            /* sp_c_chistics  */
  YYSYMBOL_sp_chistic = 850,               /* sp_chistic  */
  YYSYMBOL_sp_c_chistic = 851,             /* sp_c_chistic  */
  YYSYMBOL_sp_suid = 852,                  /* sp_suid  */
  YYSYMBOL_call = 853,                     /* call  */
  YYSYMBOL_854_28 = 854,                   /* $@28  */
  YYSYMBOL_855_29 = 855,                   /* $@29  */
  YYSYMBOL_856_30 = 856,                   /* $@30  */
  YYSYMBOL_opt_sp_cparam_list = 857,       /* opt_sp_cparam_list  */
  YYSYMBOL_opt_sp_cparams = 858,           /* opt_sp_cparams  */
  YYSYMBOL_sp_cparams = 859,               /* sp_cparams  */
  YYSYMBOL_sp_fdparam_list = 860,          /* sp_fdparam_list  */
  YYSYMBOL_sp_fdparams = 861,              /* sp_fdparams  */
  YYSYMBOL_sp_param_name = 862,            /* sp_param_name  */
  YYSYMBOL_sp_param_name_and_type = 863,   /* sp_param_name_and_type  */
  YYSYMBOL_sp_pdparam_list = 864,          /* sp_pdparam_list  */
  YYSYMBOL_sp_pdparams = 865,              /* sp_pdparams  */
  YYSYMBOL_sp_pdparam = 866,               /* sp_pdparam  */
  YYSYMBOL_sp_opt_inout = 867,             /* sp_opt_inout  */
  YYSYMBOL_sp_parenthesized_fdparam_list = 868, /* sp_parenthesized_fdparam_list  */
  YYSYMBOL_869_31 = 869,                   /* $@31  */
  YYSYMBOL_sp_parenthesized_pdparam_list = 870, /* sp_parenthesized_pdparam_list  */
  YYSYMBOL_871_32 = 871,                   /* $@32  */
  YYSYMBOL_sp_proc_stmts = 872,            /* sp_proc_stmts  */
  YYSYMBOL_sp_proc_stmts1 = 873,           /* sp_proc_stmts1  */
  YYSYMBOL_sp_decls = 874,                 /* sp_decls  */
  YYSYMBOL_sp_decl = 875,                  /* sp_decl  */
  YYSYMBOL_optionally_qualified_column_ident = 876, /* optionally_qualified_column_ident  */
  YYSYMBOL_row_field_name = 877,           /* row_field_name  */
  YYSYMBOL_row_field_definition = 878,     /* row_field_definition  */
  YYSYMBOL_row_field_definition_list = 879, /* row_field_definition_list  */
  YYSYMBOL_row_type_body = 880,            /* row_type_body  */
  YYSYMBOL_sp_decl_idents_init_vars = 881, /* sp_decl_idents_init_vars  */
  YYSYMBOL_sp_decl_variable_list = 882,    /* sp_decl_variable_list  */
  YYSYMBOL_sp_decl_body = 883,             /* sp_decl_body  */
  YYSYMBOL_884_33 = 884,                   /* $@33  */
  YYSYMBOL_sp_decl_handler = 885,          /* sp_decl_handler  */
  YYSYMBOL_886_34 = 886,                   /* $@34  */
  YYSYMBOL_opt_parenthesized_cursor_formal_parameters = 887, /* opt_parenthesized_cursor_formal_parameters  */
  YYSYMBOL_sp_cursor_stmt_lex = 888,       /* sp_cursor_stmt_lex  */
  YYSYMBOL_sp_cursor_stmt = 889,           /* sp_cursor_stmt  */
  YYSYMBOL_890_35 = 890,                   /* $@35  */
  YYSYMBOL_sp_handler_type = 891,          /* sp_handler_type  */
  YYSYMBOL_sp_hcond_list = 892,            /* sp_hcond_list  */
  YYSYMBOL_sp_hcond_element = 893,         /* sp_hcond_element  */
  YYSYMBOL_sp_cond = 894,                  /* sp_cond  */
  YYSYMBOL_sqlstate = 895,                 /* sqlstate  */
  YYSYMBOL_opt_value = 896,                /* opt_value  */
  YYSYMBOL_sp_hcond = 897,                 /* sp_hcond  */
  YYSYMBOL_raise_stmt_oracle = 898,        /* raise_stmt_oracle  */
  YYSYMBOL_signal_stmt = 899,              /* signal_stmt  */
  YYSYMBOL_signal_value = 900,             /* signal_value  */
  YYSYMBOL_opt_signal_value = 901,         /* opt_signal_value  */
  YYSYMBOL_opt_set_signal_information = 902, /* opt_set_signal_information  */
  YYSYMBOL_signal_information_item_list = 903, /* signal_information_item_list  */
  YYSYMBOL_signal_allowed_expr = 904,      /* signal_allowed_expr  */
  YYSYMBOL_signal_condition_information_item_name = 905, /* signal_condition_information_item_name  */
  YYSYMBOL_resignal_stmt = 906,            /* resignal_stmt  */
  YYSYMBOL_get_diagnostics = 907,          /* get_diagnostics  */
  YYSYMBOL_which_area = 908,               /* which_area  */
  YYSYMBOL_diagnostics_information = 909,  /* diagnostics_information  */
  YYSYMBOL_statement_information = 910,    /* statement_information  */
  YYSYMBOL_statement_information_item = 911, /* statement_information_item  */
  YYSYMBOL_simple_target_specification = 912, /* simple_target_specification  */
  YYSYMBOL_statement_information_item_name = 913, /* statement_information_item_name  */
  YYSYMBOL_condition_number = 914,         /* condition_number  */
  YYSYMBOL_condition_information = 915,    /* condition_information  */
  YYSYMBOL_condition_information_item = 916, /* condition_information_item  */
  YYSYMBOL_condition_information_item_name = 917, /* condition_information_item_name  */
  YYSYMBOL_sp_decl_ident = 918,            /* sp_decl_ident  */
  YYSYMBOL_sp_decl_idents = 919,           /* sp_decl_idents  */
  YYSYMBOL_sp_opt_default = 920,           /* sp_opt_default  */
  YYSYMBOL_sp_proc_stmt_in_returns_clause = 921, /* sp_proc_stmt_in_returns_clause  */
  YYSYMBOL_sp_proc_stmt = 922,             /* sp_proc_stmt  */
  YYSYMBOL_sp_proc_stmt_compound_ok = 923, /* sp_proc_stmt_compound_ok  */
  YYSYMBOL_sp_proc_stmt_if = 924,          /* sp_proc_stmt_if  */
  YYSYMBOL_925_36 = 925,                   /* $@36  */
  YYSYMBOL_sp_proc_stmt_statement = 926,   /* sp_proc_stmt_statement  */
  YYSYMBOL_927_37 = 927,                   /* $@37  */
  YYSYMBOL_RETURN_ALLMODES_SYM = 928,      /* RETURN_ALLMODES_SYM  */
  YYSYMBOL_sp_proc_stmt_return = 929,      /* sp_proc_stmt_return  */
  YYSYMBOL_930_38 = 930,                   /* $@38  */
  YYSYMBOL_reset_lex_expr = 931,           /* reset_lex_expr  */
  YYSYMBOL_932_39 = 932,                   /* $@39  */
  YYSYMBOL_sp_proc_stmt_exit_oracle = 933, /* sp_proc_stmt_exit_oracle  */
  YYSYMBOL_sp_proc_stmt_continue_oracle = 934, /* sp_proc_stmt_continue_oracle  */
  YYSYMBOL_sp_proc_stmt_leave = 935,       /* sp_proc_stmt_leave  */
  YYSYMBOL_sp_proc_stmt_iterate = 936,     /* sp_proc_stmt_iterate  */
  YYSYMBOL_sp_proc_stmt_goto_oracle = 937, /* sp_proc_stmt_goto_oracle  */
  YYSYMBOL_assignment_source_lex = 938,    /* assignment_source_lex  */
  YYSYMBOL_assignment_source_expr = 939,   /* assignment_source_expr  */
  YYSYMBOL_940_40 = 940,                   /* $@40  */
  YYSYMBOL_for_loop_bound_expr = 941,      /* for_loop_bound_expr  */
  YYSYMBOL_942_41 = 942,                   /* $@41  */
  YYSYMBOL_cursor_actual_parameters = 943, /* cursor_actual_parameters  */
  YYSYMBOL_opt_parenthesized_cursor_actual_parameters = 944, /* opt_parenthesized_cursor_actual_parameters  */
  YYSYMBOL_sp_proc_stmt_open = 945,        /* sp_proc_stmt_open  */
  YYSYMBOL_sp_proc_stmt_fetch_head = 946,  /* sp_proc_stmt_fetch_head  */
  YYSYMBOL_sp_proc_stmt_fetch = 947,       /* sp_proc_stmt_fetch  */
  YYSYMBOL_sp_proc_stmt_close = 948,       /* sp_proc_stmt_close  */
  YYSYMBOL_sp_fetch_list = 949,            /* sp_fetch_list  */
  YYSYMBOL_sp_if = 950,                    /* sp_if  */
  YYSYMBOL_951_42 = 951,                   /* $@42  */
  YYSYMBOL_952_43 = 952,                   /* $@43  */
  YYSYMBOL_953_44 = 953,                   /* $@44  */
  YYSYMBOL_sp_elseifs = 954,               /* sp_elseifs  */
  YYSYMBOL_case_stmt_specification = 955,  /* case_stmt_specification  */
  YYSYMBOL_956_45 = 956,                   /* $@45  */
  YYSYMBOL_case_stmt_body = 957,           /* case_stmt_body  */
  YYSYMBOL_958_46 = 958,                   /* $@46  */
  YYSYMBOL_959_47 = 959,                   /* $@47  */
  YYSYMBOL_simple_when_clause_list = 960,  /* simple_when_clause_list  */
  YYSYMBOL_searched_when_clause_list = 961, /* searched_when_clause_list  */
  YYSYMBOL_simple_when_clause = 962,       /* simple_when_clause  */
  YYSYMBOL_963_48 = 963,                   /* $@48  */
  YYSYMBOL_964_49 = 964,                   /* $@49  */
  YYSYMBOL_searched_when_clause = 965,     /* searched_when_clause  */
  YYSYMBOL_966_50 = 966,                   /* $@50  */
  YYSYMBOL_967_51 = 967,                   /* $@51  */
  YYSYMBOL_else_clause_opt = 968,          /* else_clause_opt  */
  YYSYMBOL_sp_label = 969,                 /* sp_label  */
  YYSYMBOL_sp_opt_label = 970,             /* sp_opt_label  */
  YYSYMBOL_sp_block_label = 971,           /* sp_block_label  */
  YYSYMBOL_sp_labeled_block = 972,         /* sp_labeled_block  */
  YYSYMBOL_973_52 = 973,                   /* $@52  */
  YYSYMBOL_sp_unlabeled_block = 974,       /* sp_unlabeled_block  */
  YYSYMBOL_975_53 = 975,                   /* $@53  */
  YYSYMBOL_sp_unlabeled_block_not_atomic = 976, /* sp_unlabeled_block_not_atomic  */
  YYSYMBOL_977_54 = 977,                   /* $@54  */
  YYSYMBOL_opt_sp_for_loop_direction = 978, /* opt_sp_for_loop_direction  */
  YYSYMBOL_sp_for_loop_index_and_bounds = 979, /* sp_for_loop_index_and_bounds  */
  YYSYMBOL_sp_for_loop_bounds = 980,       /* sp_for_loop_bounds  */
  YYSYMBOL_loop_body = 981,                /* loop_body  */
  YYSYMBOL_while_body = 982,               /* while_body  */
  YYSYMBOL_983_55 = 983,                   /* $@55  */
  YYSYMBOL_repeat_body = 984,              /* repeat_body  */
  YYSYMBOL_985_56 = 985,                   /* $@56  */
  YYSYMBOL_pop_sp_loop_label = 986,        /* pop_sp_loop_label  */
  YYSYMBOL_sp_labeled_control = 987,       /* sp_labeled_control  */
  YYSYMBOL_988_57 = 988,                   /* $@57  */
  YYSYMBOL_989_58 = 989,                   /* $@58  */
  YYSYMBOL_990_59 = 990,                   /* $@59  */
  YYSYMBOL_991_60 = 991,                   /* $@60  */
  YYSYMBOL_992_61 = 992,                   /* $@61  */
  YYSYMBOL_993_62 = 993,                   /* $@62  */
  YYSYMBOL_sp_unlabeled_control = 994,     /* sp_unlabeled_control  */
  YYSYMBOL_995_63 = 995,                   /* $@63  */
  YYSYMBOL_996_64 = 996,                   /* $@64  */
  YYSYMBOL_997_65 = 997,                   /* $@65  */
  YYSYMBOL_998_66 = 998,                   /* $@66  */
  YYSYMBOL_999_67 = 999,                   /* $@67  */
  YYSYMBOL_trg_action_time = 1000,         /* trg_action_time  */
  YYSYMBOL_trg_event = 1001,               /* trg_event  */
  YYSYMBOL_change_tablespace_access = 1002, /* change_tablespace_access  */
  YYSYMBOL_change_tablespace_info = 1003,  /* change_tablespace_info  */
  YYSYMBOL_tablespace_info = 1004,         /* tablespace_info  */
  YYSYMBOL_opt_logfile_group_name = 1005,  /* opt_logfile_group_name  */
  YYSYMBOL_alter_tablespace_info = 1006,   /* alter_tablespace_info  */
  YYSYMBOL_logfile_group_info = 1007,      /* logfile_group_info  */
  YYSYMBOL_alter_logfile_group_info = 1008, /* alter_logfile_group_info  */
  YYSYMBOL_add_log_file = 1009,            /* add_log_file  */
  YYSYMBOL_change_ts_option_list = 1010,   /* change_ts_option_list  */
  YYSYMBOL_1011_68 = 1011,                 /* $@68  */
  YYSYMBOL_change_ts_options = 1012,       /* change_ts_options  */
  YYSYMBOL_change_ts_option = 1013,        /* change_ts_option  */
  YYSYMBOL_tablespace_option_list = 1014,  /* tablespace_option_list  */
  YYSYMBOL_tablespace_options = 1015,      /* tablespace_options  */
  YYSYMBOL_tablespace_option = 1016,       /* tablespace_option  */
  YYSYMBOL_alter_tablespace_option_list = 1017, /* alter_tablespace_option_list  */
  YYSYMBOL_alter_tablespace_options = 1018, /* alter_tablespace_options  */
  YYSYMBOL_alter_tablespace_option = 1019, /* alter_tablespace_option  */
  YYSYMBOL_logfile_group_option_list = 1020, /* logfile_group_option_list  */
  YYSYMBOL_logfile_group_options = 1021,   /* logfile_group_options  */
  YYSYMBOL_logfile_group_option = 1022,    /* logfile_group_option  */
  YYSYMBOL_alter_logfile_group_option_list = 1023, /* alter_logfile_group_option_list  */
  YYSYMBOL_alter_logfile_group_options = 1024, /* alter_logfile_group_options  */
  YYSYMBOL_alter_logfile_group_option = 1025, /* alter_logfile_group_option  */
  YYSYMBOL_ts_datafile = 1026,             /* ts_datafile  */
  YYSYMBOL_lg_undofile = 1027,             /* lg_undofile  */
  YYSYMBOL_lg_redofile = 1028,             /* lg_redofile  */
  YYSYMBOL_tablespace_name = 1029,         /* tablespace_name  */
  YYSYMBOL_logfile_group_name = 1030,      /* logfile_group_name  */
  YYSYMBOL_ts_access_mode = 1031,          /* ts_access_mode  */
  YYSYMBOL_opt_ts_initial_size = 1032,     /* opt_ts_initial_size  */
  YYSYMBOL_opt_ts_autoextend_size = 1033,  /* opt_ts_autoextend_size  */
  YYSYMBOL_opt_ts_max_size = 1034,         /* opt_ts_max_size  */
  YYSYMBOL_opt_ts_extent_size = 1035,      /* opt_ts_extent_size  */
  YYSYMBOL_opt_ts_undo_buffer_size = 1036, /* opt_ts_undo_buffer_size  */
  YYSYMBOL_opt_ts_redo_buffer_size = 1037, /* opt_ts_redo_buffer_size  */
  YYSYMBOL_opt_ts_nodegroup = 1038,        /* opt_ts_nodegroup  */
  YYSYMBOL_opt_ts_comment = 1039,          /* opt_ts_comment  */
  YYSYMBOL_opt_ts_engine = 1040,           /* opt_ts_engine  */
  YYSYMBOL_opt_ts_wait = 1041,             /* opt_ts_wait  */
  YYSYMBOL_ts_wait = 1042,                 /* ts_wait  */
  YYSYMBOL_size_number = 1043,             /* size_number  */
  YYSYMBOL_create_body = 1044,             /* create_body  */
  YYSYMBOL_1045_69 = 1045,                 /* $@69  */
  YYSYMBOL_1046_70 = 1046,                 /* $@70  */
  YYSYMBOL_1047_71 = 1047,                 /* $@71  */
  YYSYMBOL_create_like = 1048,             /* create_like  */
  YYSYMBOL_opt_create_select = 1049,       /* opt_create_select  */
  YYSYMBOL_create_select_query_expression = 1050, /* create_select_query_expression  */
  YYSYMBOL_1051_72 = 1051,                 /* $@72  */
  YYSYMBOL_1052_73 = 1052,                 /* $@73  */
  YYSYMBOL_1053_74 = 1053,                 /* $@74  */
  YYSYMBOL_opt_create_partitioning = 1054, /* opt_create_partitioning  */
  YYSYMBOL_opt_partitioning = 1055,        /* opt_partitioning  */
  YYSYMBOL_partitioning = 1056,            /* partitioning  */
  YYSYMBOL_1057_75 = 1057,                 /* $@75  */
  YYSYMBOL_have_partitioning = 1058,       /* have_partitioning  */
  YYSYMBOL_partition_entry = 1059,         /* partition_entry  */
  YYSYMBOL_1060_76 = 1060,                 /* $@76  */
  YYSYMBOL_partition = 1061,               /* partition  */
  YYSYMBOL_1062_77 = 1062,                 /* $@77  */
  YYSYMBOL_part_type_def = 1063,           /* part_type_def  */
  YYSYMBOL_1064_78 = 1064,                 /* $@78  */
  YYSYMBOL_1065_79 = 1065,                 /* $@79  */
  YYSYMBOL_1066_80 = 1066,                 /* $@80  */
  YYSYMBOL_opt_linear = 1067,              /* opt_linear  */
  YYSYMBOL_opt_key_algo = 1068,            /* opt_key_algo  */
  YYSYMBOL_part_field_list = 1069,         /* part_field_list  */
  YYSYMBOL_part_field_item_list = 1070,    /* part_field_item_list  */
  YYSYMBOL_part_field_item = 1071,         /* part_field_item  */
  YYSYMBOL_part_column_list = 1072,        /* part_column_list  */
  YYSYMBOL_part_func = 1073,               /* part_func  */
  YYSYMBOL_sub_part_func = 1074,           /* sub_part_func  */
  YYSYMBOL_opt_num_parts = 1075,           /* opt_num_parts  */
  YYSYMBOL_opt_sub_part = 1076,            /* opt_sub_part  */
  YYSYMBOL_1077_81 = 1077,                 /* $@81  */
  YYSYMBOL_1078_82 = 1078,                 /* $@82  */
  YYSYMBOL_sub_part_field_list = 1079,     /* sub_part_field_list  */
  YYSYMBOL_sub_part_field_item = 1080,     /* sub_part_field_item  */
  YYSYMBOL_part_func_expr = 1081,          /* part_func_expr  */
  YYSYMBOL_opt_num_subparts = 1082,        /* opt_num_subparts  */
  YYSYMBOL_part_defs = 1083,               /* part_defs  */
  YYSYMBOL_part_def_list = 1084,           /* part_def_list  */
  YYSYMBOL_part_definition = 1085,         /* part_definition  */
  YYSYMBOL_1086_83 = 1086,                 /* $@83  */
  YYSYMBOL_part_name = 1087,               /* part_name  */
  YYSYMBOL_opt_part_values = 1088,         /* opt_part_values  */
  YYSYMBOL_1089_84 = 1089,                 /* $@84  */
  YYSYMBOL_1090_85 = 1090,                 /* $@85  */
  YYSYMBOL_part_func_max = 1091,           /* part_func_max  */
  YYSYMBOL_part_values_in = 1092,          /* part_values_in  */
  YYSYMBOL_part_value_list = 1093,         /* part_value_list  */
  YYSYMBOL_part_value_item = 1094,         /* part_value_item  */
  YYSYMBOL_1095_86 = 1095,                 /* $@86  */
  YYSYMBOL_1096_87 = 1096,                 /* $@87  */
  YYSYMBOL_part_value_item_list = 1097,    /* part_value_item_list  */
  YYSYMBOL_part_value_expr_item = 1098,    /* part_value_expr_item  */
  YYSYMBOL_opt_sub_partition = 1099,       /* opt_sub_partition  */
  YYSYMBOL_sub_part_list = 1100,           /* sub_part_list  */
  YYSYMBOL_sub_part_definition = 1101,     /* sub_part_definition  */
  YYSYMBOL_1102_88 = 1102,                 /* $@88  */
  YYSYMBOL_sub_name = 1103,                /* sub_name  */
  YYSYMBOL_opt_part_options = 1104,        /* opt_part_options  */
  YYSYMBOL_opt_part_option_list = 1105,    /* opt_part_option_list  */
  YYSYMBOL_opt_part_option = 1106,         /* opt_part_option  */
  YYSYMBOL_opt_versioning_rotation = 1107, /* opt_versioning_rotation  */
  YYSYMBOL_1108_89 = 1108,                 /* $@89  */
  YYSYMBOL_opt_versioning_interval_start = 1109, /* opt_versioning_interval_start  */
  YYSYMBOL_create_select_query_specification = 1110, /* create_select_query_specification  */
  YYSYMBOL_create_select_part2 = 1111,     /* create_select_part2  */
  YYSYMBOL_1112_90 = 1112,                 /* $@90  */
  YYSYMBOL_create_select_part3 = 1113,     /* create_select_part3  */
  YYSYMBOL_create_select_part3_union_not_ready = 1114, /* create_select_part3_union_not_ready  */
  YYSYMBOL_create_select_part4 = 1115,     /* create_select_part4  */
  YYSYMBOL_opt_as = 1116,                  /* opt_as  */
  YYSYMBOL_opt_create_database_options = 1117, /* opt_create_database_options  */
  YYSYMBOL_create_database_options = 1118, /* create_database_options  */
  YYSYMBOL_create_database_option = 1119,  /* create_database_option  */
  YYSYMBOL_opt_if_not_exists_table_element = 1120, /* opt_if_not_exists_table_element  */
  YYSYMBOL_opt_if_not_exists = 1121,       /* opt_if_not_exists  */
  YYSYMBOL_create_or_replace = 1122,       /* create_or_replace  */
  YYSYMBOL_opt_create_table_options = 1123, /* opt_create_table_options  */
  YYSYMBOL_create_table_options_space_separated = 1124, /* create_table_options_space_separated  */
  YYSYMBOL_create_table_options = 1125,    /* create_table_options  */
  YYSYMBOL_create_table_option = 1126,     /* create_table_option  */
  YYSYMBOL_1127_91 = 1127,                 /* $@91  */
  YYSYMBOL_opt_versioning_option = 1128,   /* opt_versioning_option  */
  YYSYMBOL_versioning_option = 1129,       /* versioning_option  */
  YYSYMBOL_default_charset = 1130,         /* default_charset  */
  YYSYMBOL_default_collation = 1131,       /* default_collation  */
  YYSYMBOL_storage_engines = 1132,         /* storage_engines  */
  YYSYMBOL_known_storage_engines = 1133,   /* known_storage_engines  */
  YYSYMBOL_row_types = 1134,               /* row_types  */
  YYSYMBOL_merge_insert_types = 1135,      /* merge_insert_types  */
  YYSYMBOL_udf_type = 1136,                /* udf_type  */
  YYSYMBOL_create_field_list = 1137,       /* create_field_list  */
  YYSYMBOL_field_list = 1138,              /* field_list  */
  YYSYMBOL_field_list_item = 1139,         /* field_list_item  */
  YYSYMBOL_column_def = 1140,              /* column_def  */
  YYSYMBOL_key_def = 1141,                 /* key_def  */
  YYSYMBOL_1142_92 = 1142,                 /* $@92  */
  YYSYMBOL_1143_93 = 1143,                 /* $@93  */
  YYSYMBOL_1144_94 = 1144,                 /* $@94  */
  YYSYMBOL_1145_95 = 1145,                 /* $@95  */
  YYSYMBOL_1146_96 = 1146,                 /* $@96  */
  YYSYMBOL_1147_97 = 1147,                 /* $@97  */
  YYSYMBOL_1148_98 = 1148,                 /* $@98  */
  YYSYMBOL_constraint_def = 1149,          /* constraint_def  */
  YYSYMBOL_period_for_system_time = 1150,  /* period_for_system_time  */
  YYSYMBOL_opt_check_constraint = 1151,    /* opt_check_constraint  */
  YYSYMBOL_check_constraint = 1152,        /* check_constraint  */
  YYSYMBOL_opt_constraint_no_id = 1153,    /* opt_constraint_no_id  */
  YYSYMBOL_opt_constraint = 1154,          /* opt_constraint  */
  YYSYMBOL_constraint = 1155,              /* constraint  */
  YYSYMBOL_field_spec = 1156,              /* field_spec  */
  YYSYMBOL_1157_99 = 1157,                 /* @99  */
  YYSYMBOL_field_type_or_serial = 1158,    /* field_type_or_serial  */
  YYSYMBOL_1159_100 = 1159,                /* $@100  */
  YYSYMBOL_1160_101 = 1160,                /* $@101  */
  YYSYMBOL_opt_serial_attribute = 1161,    /* opt_serial_attribute  */
  YYSYMBOL_opt_serial_attribute_list = 1162, /* opt_serial_attribute_list  */
  YYSYMBOL_opt_asrow_attribute = 1163,     /* opt_asrow_attribute  */
  YYSYMBOL_opt_asrow_attribute_list = 1164, /* opt_asrow_attribute_list  */
  YYSYMBOL_field_def = 1165,               /* field_def  */
  YYSYMBOL_1166_102 = 1166,                /* $@102  */
  YYSYMBOL_opt_generated_always = 1167,    /* opt_generated_always  */
  YYSYMBOL_vcol_opt_specifier = 1168,      /* vcol_opt_specifier  */
  YYSYMBOL_vcol_opt_attribute = 1169,      /* vcol_opt_attribute  */
  YYSYMBOL_vcol_opt_attribute_list = 1170, /* vcol_opt_attribute_list  */
  YYSYMBOL_vcol_attribute = 1171,          /* vcol_attribute  */
  YYSYMBOL_parse_vcol_expr = 1172,         /* parse_vcol_expr  */
  YYSYMBOL_1173_103 = 1173,                /* $@103  */
  YYSYMBOL_parenthesized_expr = 1174,      /* parenthesized_expr  */
  YYSYMBOL_virtual_column_func = 1175,     /* virtual_column_func  */
  YYSYMBOL_expr_or_literal = 1176,         /* expr_or_literal  */
  YYSYMBOL_column_default_expr = 1177,     /* column_default_expr  */
  YYSYMBOL_field_type = 1178,              /* field_type  */
  YYSYMBOL_qualified_field_type = 1179,    /* qualified_field_type  */
  YYSYMBOL_field_type_all = 1180,          /* field_type_all  */
  YYSYMBOL_field_type_numeric = 1181,      /* field_type_numeric  */
  YYSYMBOL_opt_binary_and_compression = 1182, /* opt_binary_and_compression  */
  YYSYMBOL_field_type_string = 1183,       /* field_type_string  */
  YYSYMBOL_field_type_temporal = 1184,     /* field_type_temporal  */
  YYSYMBOL_field_type_lob = 1185,          /* field_type_lob  */
  YYSYMBOL_field_type_misc = 1186,         /* field_type_misc  */
  YYSYMBOL_spatial_type = 1187,            /* spatial_type  */
  YYSYMBOL_char = 1188,                    /* char  */
  YYSYMBOL_nchar = 1189,                   /* nchar  */
  YYSYMBOL_varchar = 1190,                 /* varchar  */
  YYSYMBOL_nvarchar = 1191,                /* nvarchar  */
  YYSYMBOL_int_type = 1192,                /* int_type  */
  YYSYMBOL_real_type = 1193,               /* real_type  */
  YYSYMBOL_srid_option = 1194,             /* srid_option  */
  YYSYMBOL_float_options = 1195,           /* float_options  */
  YYSYMBOL_precision = 1196,               /* precision  */
  YYSYMBOL_field_options = 1197,           /* field_options  */
  YYSYMBOL_field_length = 1198,            /* field_length  */
  YYSYMBOL_opt_field_length = 1199,        /* opt_field_length  */
  YYSYMBOL_opt_field_length_default_1 = 1200, /* opt_field_length_default_1  */
  YYSYMBOL_opt_precision = 1201,           /* opt_precision  */
  YYSYMBOL_attribute_list = 1202,          /* attribute_list  */
  YYSYMBOL_attribute = 1203,               /* attribute  */
  YYSYMBOL_opt_compression_method = 1204,  /* opt_compression_method  */
  YYSYMBOL_opt_compressed = 1205,          /* opt_compressed  */
  YYSYMBOL_compressed = 1206,              /* compressed  */
  YYSYMBOL_compressed_deprecated_data_type_attribute = 1207, /* compressed_deprecated_data_type_attribute  */
  YYSYMBOL_compressed_deprecated_column_attribute = 1208, /* compressed_deprecated_column_attribute  */
  YYSYMBOL_asrow_attribute = 1209,         /* asrow_attribute  */
  YYSYMBOL_serial_attribute = 1210,        /* serial_attribute  */
  YYSYMBOL_with_or_without_system = 1211,  /* with_or_without_system  */
  YYSYMBOL_charset = 1212,                 /* charset  */
  YYSYMBOL_charset_name = 1213,            /* charset_name  */
  YYSYMBOL_charset_name_or_default = 1214, /* charset_name_or_default  */
  YYSYMBOL_opt_load_data_charset = 1215,   /* opt_load_data_charset  */
  YYSYMBOL_old_or_new_charset_name = 1216, /* old_or_new_charset_name  */
  YYSYMBOL_old_or_new_charset_name_or_default = 1217, /* old_or_new_charset_name_or_default  */
  YYSYMBOL_collation_name = 1218,          /* collation_name  */
  YYSYMBOL_opt_collate = 1219,             /* opt_collate  */
  YYSYMBOL_collation_name_or_default = 1220, /* collation_name_or_default  */
  YYSYMBOL_opt_default = 1221,             /* opt_default  */
  YYSYMBOL_charset_or_alias = 1222,        /* charset_or_alias  */
  YYSYMBOL_collate = 1223,                 /* collate  */
  YYSYMBOL_opt_binary = 1224,              /* opt_binary  */
  YYSYMBOL_binary = 1225,                  /* binary  */
  YYSYMBOL_opt_bin_mod = 1226,             /* opt_bin_mod  */
  YYSYMBOL_ws_nweights = 1227,             /* ws_nweights  */
  YYSYMBOL_1228_104 = 1228,                /* $@104  */
  YYSYMBOL_ws_level_flag_desc = 1229,      /* ws_level_flag_desc  */
  YYSYMBOL_ws_level_flag_reverse = 1230,   /* ws_level_flag_reverse  */
  YYSYMBOL_ws_level_flags = 1231,          /* ws_level_flags  */
  YYSYMBOL_ws_level_number = 1232,         /* ws_level_number  */
  YYSYMBOL_ws_level_list_item = 1233,      /* ws_level_list_item  */
  YYSYMBOL_ws_level_list = 1234,           /* ws_level_list  */
  YYSYMBOL_ws_level_range = 1235,          /* ws_level_range  */
  YYSYMBOL_ws_level_list_or_range = 1236,  /* ws_level_list_or_range  */
  YYSYMBOL_opt_ws_levels = 1237,           /* opt_ws_levels  */
  YYSYMBOL_opt_primary = 1238,             /* opt_primary  */
  YYSYMBOL_references = 1239,              /* references  */
  YYSYMBOL_opt_ref_list = 1240,            /* opt_ref_list  */
  YYSYMBOL_ref_list = 1241,                /* ref_list  */
  YYSYMBOL_opt_match_clause = 1242,        /* opt_match_clause  */
  YYSYMBOL_opt_on_update_delete = 1243,    /* opt_on_update_delete  */
  YYSYMBOL_delete_option = 1244,           /* delete_option  */
  YYSYMBOL_constraint_key_type = 1245,     /* constraint_key_type  */
  YYSYMBOL_key_or_index = 1246,            /* key_or_index  */
  YYSYMBOL_opt_key_or_index = 1247,        /* opt_key_or_index  */
  YYSYMBOL_keys_or_index = 1248,           /* keys_or_index  */
  YYSYMBOL_opt_unique = 1249,              /* opt_unique  */
  YYSYMBOL_fulltext = 1250,                /* fulltext  */
  YYSYMBOL_spatial = 1251,                 /* spatial  */
  YYSYMBOL_normal_key_options = 1252,      /* normal_key_options  */
  YYSYMBOL_fulltext_key_options = 1253,    /* fulltext_key_options  */
  YYSYMBOL_spatial_key_options = 1254,     /* spatial_key_options  */
  YYSYMBOL_normal_key_opts = 1255,         /* normal_key_opts  */
  YYSYMBOL_spatial_key_opts = 1256,        /* spatial_key_opts  */
  YYSYMBOL_fulltext_key_opts = 1257,       /* fulltext_key_opts  */
  YYSYMBOL_opt_USING_key_algorithm = 1258, /* opt_USING_key_algorithm  */
  YYSYMBOL_opt_key_algorithm_clause = 1259, /* opt_key_algorithm_clause  */
  YYSYMBOL_key_using_alg = 1260,           /* key_using_alg  */
  YYSYMBOL_all_key_opt = 1261,             /* all_key_opt  */
  YYSYMBOL_normal_key_opt = 1262,          /* normal_key_opt  */
  YYSYMBOL_spatial_key_opt = 1263,         /* spatial_key_opt  */
  YYSYMBOL_fulltext_key_opt = 1264,        /* fulltext_key_opt  */
  YYSYMBOL_btree_or_rtree = 1265,          /* btree_or_rtree  */
  YYSYMBOL_key_list = 1266,                /* key_list  */
  YYSYMBOL_key_part = 1267,                /* key_part  */
  YYSYMBOL_opt_ident = 1268,               /* opt_ident  */
  YYSYMBOL_string_list = 1269,             /* string_list  */
  YYSYMBOL_alter = 1270,                   /* alter  */
  YYSYMBOL_1271_105 = 1271,                /* $@105  */
  YYSYMBOL_1272_106 = 1272,                /* $@106  */
  YYSYMBOL_1273_107 = 1273,                /* $@107  */
  YYSYMBOL_1274_108 = 1274,                /* $@108  */
  YYSYMBOL_1275_109 = 1275,                /* $@109  */
  YYSYMBOL_1276_110 = 1276,                /* $@110  */
  YYSYMBOL_1277_111 = 1277,                /* $@111  */
  YYSYMBOL_1278_112 = 1278,                /* $@112  */
  YYSYMBOL_1279_113 = 1279,                /* $@113  */
  YYSYMBOL_1280_114 = 1280,                /* $@114  */
  YYSYMBOL_1281_115 = 1281,                /* $@115  */
  YYSYMBOL_ev_alter_on_schedule_completion = 1282, /* ev_alter_on_schedule_completion  */
  YYSYMBOL_opt_ev_rename_to = 1283,        /* opt_ev_rename_to  */
  YYSYMBOL_opt_ev_sql_stmt = 1284,         /* opt_ev_sql_stmt  */
  YYSYMBOL_ident_or_empty = 1285,          /* ident_or_empty  */
  YYSYMBOL_alter_commands = 1286,          /* alter_commands  */
  YYSYMBOL_1287_116 = 1287,                /* $@116  */
  YYSYMBOL_1288_117 = 1288,                /* $@117  */
  YYSYMBOL_1289_118 = 1289,                /* $@118  */
  YYSYMBOL_remove_partitioning = 1290,     /* remove_partitioning  */
  YYSYMBOL_all_or_alt_part_name_list = 1291, /* all_or_alt_part_name_list  */
  YYSYMBOL_add_partition_rule = 1292,      /* add_partition_rule  */
  YYSYMBOL_1293_119 = 1293,                /* $@119  */
  YYSYMBOL_add_part_extra = 1294,          /* add_part_extra  */
  YYSYMBOL_reorg_partition_rule = 1295,    /* reorg_partition_rule  */
  YYSYMBOL_1296_120 = 1296,                /* $@120  */
  YYSYMBOL_reorg_parts_rule = 1297,        /* reorg_parts_rule  */
  YYSYMBOL_1298_121 = 1298,                /* $@121  */
  YYSYMBOL_alt_part_name_list = 1299,      /* alt_part_name_list  */
  YYSYMBOL_alt_part_name_item = 1300,      /* alt_part_name_item  */
  YYSYMBOL_alter_list = 1301,              /* alter_list  */
  YYSYMBOL_add_column = 1302,              /* add_column  */
  YYSYMBOL_alter_list_item = 1303,         /* alter_list_item  */
  YYSYMBOL_opt_index_lock_algorithm = 1304, /* opt_index_lock_algorithm  */
  YYSYMBOL_alter_algorithm_option = 1305,  /* alter_algorithm_option  */
  YYSYMBOL_alter_lock_option = 1306,       /* alter_lock_option  */
  YYSYMBOL_opt_column = 1307,              /* opt_column  */
  YYSYMBOL_opt_ignore = 1308,              /* opt_ignore  */
  YYSYMBOL_alter_options = 1309,           /* alter_options  */
  YYSYMBOL_1310_122 = 1310,                /* $@122  */
  YYSYMBOL_alter_options_part2 = 1311,     /* alter_options_part2  */
  YYSYMBOL_alter_option_list = 1312,       /* alter_option_list  */
  YYSYMBOL_alter_option = 1313,            /* alter_option  */
  YYSYMBOL_opt_restrict = 1314,            /* opt_restrict  */
  YYSYMBOL_opt_place = 1315,               /* opt_place  */
  YYSYMBOL_opt_to = 1316,                  /* opt_to  */
  YYSYMBOL_slave = 1317,                   /* slave  */
  YYSYMBOL_1318_123 = 1318,                /* $@123  */
  YYSYMBOL_1319_124 = 1319,                /* $@124  */
  YYSYMBOL_start = 1320,                   /* start  */
  YYSYMBOL_opt_start_transaction_option_list = 1321, /* opt_start_transaction_option_list  */
  YYSYMBOL_start_transaction_option_list = 1322, /* start_transaction_option_list  */
  YYSYMBOL_start_transaction_option = 1323, /* start_transaction_option  */
  YYSYMBOL_slave_thread_opts = 1324,       /* slave_thread_opts  */
  YYSYMBOL_1325_125 = 1325,                /* $@125  */
  YYSYMBOL_slave_thread_opt_list = 1326,   /* slave_thread_opt_list  */
  YYSYMBOL_slave_thread_opt = 1327,        /* slave_thread_opt  */
  YYSYMBOL_slave_until = 1328,             /* slave_until  */
  YYSYMBOL_slave_until_opts = 1329,        /* slave_until_opts  */
  YYSYMBOL_checksum = 1330,                /* checksum  */
  YYSYMBOL_1331_126 = 1331,                /* $@126  */
  YYSYMBOL_opt_checksum_type = 1332,       /* opt_checksum_type  */
  YYSYMBOL_repair_table_or_view = 1333,    /* repair_table_or_view  */
  YYSYMBOL_1334_127 = 1334,                /* $@127  */
  YYSYMBOL_repair = 1335,                  /* repair  */
  YYSYMBOL_1336_128 = 1336,                /* $@128  */
  YYSYMBOL_opt_mi_repair_type = 1337,      /* opt_mi_repair_type  */
  YYSYMBOL_mi_repair_types = 1338,         /* mi_repair_types  */
  YYSYMBOL_mi_repair_type = 1339,          /* mi_repair_type  */
  YYSYMBOL_opt_view_repair_type = 1340,    /* opt_view_repair_type  */
  YYSYMBOL_analyze = 1341,                 /* analyze  */
  YYSYMBOL_1342_129 = 1342,                /* $@129  */
  YYSYMBOL_analyze_table_list = 1343,      /* analyze_table_list  */
  YYSYMBOL_analyze_table_elem_spec = 1344, /* analyze_table_elem_spec  */
  YYSYMBOL_opt_persistent_stat_clause = 1345, /* opt_persistent_stat_clause  */
  YYSYMBOL_persistent_stat_spec = 1346,    /* persistent_stat_spec  */
  YYSYMBOL_persistent_column_stat_spec = 1347, /* persistent_column_stat_spec  */
  YYSYMBOL_1348_130 = 1348,                /* $@130  */
  YYSYMBOL_persistent_index_stat_spec = 1349, /* persistent_index_stat_spec  */
  YYSYMBOL_1350_131 = 1350,                /* $@131  */
  YYSYMBOL_table_column_list = 1351,       /* table_column_list  */
  YYSYMBOL_table_index_list = 1352,        /* table_index_list  */
  YYSYMBOL_table_index_name = 1353,        /* table_index_name  */
  YYSYMBOL_binlog_base64_event = 1354,     /* binlog_base64_event  */
  YYSYMBOL_check_view_or_table = 1355,     /* check_view_or_table  */
  YYSYMBOL_1356_132 = 1356,                /* $@132  */
  YYSYMBOL_check = 1357,                   /* check  */
  YYSYMBOL_1358_133 = 1358,                /* $@133  */
  YYSYMBOL_opt_mi_check_type = 1359,       /* opt_mi_check_type  */
  YYSYMBOL_mi_check_types = 1360,          /* mi_check_types  */
  YYSYMBOL_mi_check_type = 1361,           /* mi_check_type  */
  YYSYMBOL_opt_view_check_type = 1362,     /* opt_view_check_type  */
  YYSYMBOL_optimize = 1363,                /* optimize  */
  YYSYMBOL_1364_134 = 1364,                /* $@134  */
  YYSYMBOL_opt_no_write_to_binlog = 1365,  /* opt_no_write_to_binlog  */
  YYSYMBOL_rename = 1366,                  /* rename  */
  YYSYMBOL_1367_135 = 1367,                /* $@135  */
  YYSYMBOL_rename_list = 1368,             /* rename_list  */
  YYSYMBOL_table_to_table_list = 1369,     /* table_to_table_list  */
  YYSYMBOL_table_to_table = 1370,          /* table_to_table  */
  YYSYMBOL_keycache = 1371,                /* keycache  */
  YYSYMBOL_1372_136 = 1372,                /* $@136  */
  YYSYMBOL_keycache_list_or_parts = 1373,  /* keycache_list_or_parts  */
  YYSYMBOL_keycache_list = 1374,           /* keycache_list  */
  YYSYMBOL_assign_to_keycache = 1375,      /* assign_to_keycache  */
  YYSYMBOL_assign_to_keycache_parts = 1376, /* assign_to_keycache_parts  */
  YYSYMBOL_key_cache_name = 1377,          /* key_cache_name  */
  YYSYMBOL_preload = 1378,                 /* preload  */
  YYSYMBOL_1379_137 = 1379,                /* $@137  */
  YYSYMBOL_preload_list_or_parts = 1380,   /* preload_list_or_parts  */
  YYSYMBOL_preload_list = 1381,            /* preload_list  */
  YYSYMBOL_preload_keys = 1382,            /* preload_keys  */
  YYSYMBOL_preload_keys_parts = 1383,      /* preload_keys_parts  */
  YYSYMBOL_adm_partition = 1384,           /* adm_partition  */
  YYSYMBOL_1385_138 = 1385,                /* $@138  */
  YYSYMBOL_cache_keys_spec = 1386,         /* cache_keys_spec  */
  YYSYMBOL_1387_139 = 1387,                /* $@139  */
  YYSYMBOL_cache_key_list_or_empty = 1388, /* cache_key_list_or_empty  */
  YYSYMBOL_opt_ignore_leaves = 1389,       /* opt_ignore_leaves  */
  YYSYMBOL_select = 1390,                  /* select  */
  YYSYMBOL_select_init = 1391,             /* select_init  */
  YYSYMBOL_union_list_part2 = 1392,        /* union_list_part2  */
  YYSYMBOL_select_paren = 1393,            /* select_paren  */
  YYSYMBOL_1394_140 = 1394,                /* $@140  */
  YYSYMBOL_1395_141 = 1395,                /* $@141  */
  YYSYMBOL_select_parent_union_query_term_proper = 1396, /* select_parent_union_query_term_proper  */
  YYSYMBOL_select_paren_union_query_term = 1397, /* select_paren_union_query_term  */
  YYSYMBOL_1398_142 = 1398,                /* $@142  */
  YYSYMBOL_select_parent_view_proper = 1399, /* select_parent_view_proper  */
  YYSYMBOL_select_paren_view = 1400,       /* select_paren_view  */
  YYSYMBOL_1401_143 = 1401,                /* $@143  */
  YYSYMBOL_select_paren_derived = 1402,    /* select_paren_derived  */
  YYSYMBOL_1403_144 = 1403,                /* $@144  */
  YYSYMBOL_1404_145 = 1404,                /* $@145  */
  YYSYMBOL_select_init3 = 1405,            /* select_init3  */
  YYSYMBOL_1406_146 = 1406,                /* $@146  */
  YYSYMBOL_select_init3_union_query_term = 1407, /* select_init3_union_query_term  */
  YYSYMBOL_1408_147 = 1408,                /* $@147  */
  YYSYMBOL_select_init3_view = 1409,       /* select_init3_view  */
  YYSYMBOL_1410_148 = 1410,                /* $@148  */
  YYSYMBOL_select_part3 = 1411,            /* select_part3  */
  YYSYMBOL_select_part3_union_query_term = 1412, /* select_part3_union_query_term  */
  YYSYMBOL_select_part3_view = 1413,       /* select_part3_view  */
  YYSYMBOL_select_part3_union_not_ready = 1414, /* select_part3_union_not_ready  */
  YYSYMBOL_select_part3_union_not_ready_noproc = 1415, /* select_part3_union_not_ready_noproc  */
  YYSYMBOL_select_options_and_item_list = 1416, /* select_options_and_item_list  */
  YYSYMBOL_1417_149 = 1417,                /* $@149  */
  YYSYMBOL_table_expression = 1418,        /* table_expression  */
  YYSYMBOL_opt_table_expression = 1419,    /* opt_table_expression  */
  YYSYMBOL_from_clause = 1420,             /* from_clause  */
  YYSYMBOL_table_reference_list = 1421,    /* table_reference_list  */
  YYSYMBOL_select_options = 1422,          /* select_options  */
  YYSYMBOL_opt_history_unit = 1423,        /* opt_history_unit  */
  YYSYMBOL_history_point = 1424,           /* history_point  */
  YYSYMBOL_opt_for_system_time_clause = 1425, /* opt_for_system_time_clause  */
  YYSYMBOL_system_time_expr = 1426,        /* system_time_expr  */
  YYSYMBOL_select_option_list = 1427,      /* select_option_list  */
  YYSYMBOL_select_option = 1428,           /* select_option  */
  YYSYMBOL_opt_select_lock_type = 1429,    /* opt_select_lock_type  */
  YYSYMBOL_select_item_list = 1430,        /* select_item_list  */
  YYSYMBOL_select_item = 1431,             /* select_item  */
  YYSYMBOL_remember_tok_start = 1432,      /* remember_tok_start  */
  YYSYMBOL_remember_tok_end = 1433,        /* remember_tok_end  */
  YYSYMBOL_remember_name = 1434,           /* remember_name  */
  YYSYMBOL_remember_end = 1435,            /* remember_end  */
  YYSYMBOL_select_alias = 1436,            /* select_alias  */
  YYSYMBOL_opt_default_time_precision = 1437, /* opt_default_time_precision  */
  YYSYMBOL_opt_time_precision = 1438,      /* opt_time_precision  */
  YYSYMBOL_optional_braces = 1439,         /* optional_braces  */
  YYSYMBOL_expr = 1440,                    /* expr  */
  YYSYMBOL_boolean_test = 1441,            /* boolean_test  */
  YYSYMBOL_predicate = 1442,               /* predicate  */
  YYSYMBOL_bit_expr = 1443,                /* bit_expr  */
  YYSYMBOL_or = 1444,                      /* or  */
  YYSYMBOL_and = 1445,                     /* and  */
  YYSYMBOL_not = 1446,                     /* not  */
  YYSYMBOL_not2 = 1447,                    /* not2  */
  YYSYMBOL_comp_op = 1448,                 /* comp_op  */
  YYSYMBOL_all_or_any = 1449,              /* all_or_any  */
  YYSYMBOL_opt_dyncol_type = 1450,         /* opt_dyncol_type  */
  YYSYMBOL_dyncol_type = 1451,             /* dyncol_type  */
  YYSYMBOL_numeric_dyncol_type = 1452,     /* numeric_dyncol_type  */
  YYSYMBOL_temporal_dyncol_type = 1453,    /* temporal_dyncol_type  */
  YYSYMBOL_string_dyncol_type = 1454,      /* string_dyncol_type  */
  YYSYMBOL_1455_150 = 1455,                /* $@150  */
  YYSYMBOL_dyncall_create_element = 1456,  /* dyncall_create_element  */
  YYSYMBOL_dyncall_create_list = 1457,     /* dyncall_create_list  */
  YYSYMBOL_plsql_cursor_attr = 1458,       /* plsql_cursor_attr  */
  YYSYMBOL_explicit_cursor_attr = 1459,    /* explicit_cursor_attr  */
  YYSYMBOL_trim_operands = 1460,           /* trim_operands  */
  YYSYMBOL_column_default_non_parenthesized_expr = 1461, /* column_default_non_parenthesized_expr  */
  YYSYMBOL_primary_expr = 1462,            /* primary_expr  */
  YYSYMBOL_string_factor_expr = 1463,      /* string_factor_expr  */
  YYSYMBOL_simple_expr = 1464,             /* simple_expr  */
  YYSYMBOL_mysql_concatenation_expr = 1465, /* mysql_concatenation_expr  */
  YYSYMBOL_function_call_keyword_timestamp = 1466, /* function_call_keyword_timestamp  */
  YYSYMBOL_function_call_keyword = 1467,   /* function_call_keyword  */
  YYSYMBOL_function_call_nonkeyword = 1468, /* function_call_nonkeyword  */
  YYSYMBOL_function_call_conflict = 1469,  /* function_call_conflict  */
  YYSYMBOL_geometry_function = 1470,       /* geometry_function  */
  YYSYMBOL_function_call_generic = 1471,   /* function_call_generic  */
  YYSYMBOL_1472_151 = 1472,                /* @151  */
  YYSYMBOL_fulltext_options = 1473,        /* fulltext_options  */
  YYSYMBOL_opt_natural_language_mode = 1474, /* opt_natural_language_mode  */
  YYSYMBOL_opt_query_expansion = 1475,     /* opt_query_expansion  */
  YYSYMBOL_opt_udf_expr_list = 1476,       /* opt_udf_expr_list  */
  YYSYMBOL_udf_expr_list = 1477,           /* udf_expr_list  */
  YYSYMBOL_udf_expr = 1478,                /* udf_expr  */
  YYSYMBOL_sum_expr = 1479,                /* sum_expr  */
  YYSYMBOL_1480_152 = 1480,                /* $@152  */
  YYSYMBOL_1481_153 = 1481,                /* $@153  */
  YYSYMBOL_1482_154 = 1482,                /* $@154  */
  YYSYMBOL_window_func_expr = 1483,        /* window_func_expr  */
  YYSYMBOL_window_func = 1484,             /* window_func  */
  YYSYMBOL_simple_window_func = 1485,      /* simple_window_func  */
  YYSYMBOL_inverse_distribution_function = 1486, /* inverse_distribution_function  */
  YYSYMBOL_percentile_function = 1487,     /* percentile_function  */
  YYSYMBOL_1488_155 = 1488,                /* $@155  */
  YYSYMBOL_inverse_distribution_function_def = 1489, /* inverse_distribution_function_def  */
  YYSYMBOL_order_by_single_element_list = 1490, /* order_by_single_element_list  */
  YYSYMBOL_window_name = 1491,             /* window_name  */
  YYSYMBOL_variable = 1492,                /* variable  */
  YYSYMBOL_1493_156 = 1493,                /* $@156  */
  YYSYMBOL_variable_aux = 1494,            /* variable_aux  */
  YYSYMBOL_opt_distinct = 1495,            /* opt_distinct  */
  YYSYMBOL_opt_gconcat_separator = 1496,   /* opt_gconcat_separator  */
  YYSYMBOL_opt_gorder_clause = 1497,       /* opt_gorder_clause  */
  YYSYMBOL_gorder_list = 1498,             /* gorder_list  */
  YYSYMBOL_opt_glimit_clause = 1499,       /* opt_glimit_clause  */
  YYSYMBOL_glimit_clause_init = 1500,      /* glimit_clause_init  */
  YYSYMBOL_glimit_clause = 1501,           /* glimit_clause  */
  YYSYMBOL_glimit_options = 1502,          /* glimit_options  */
  YYSYMBOL_in_sum_expr = 1503,             /* in_sum_expr  */
  YYSYMBOL_1504_157 = 1504,                /* $@157  */
  YYSYMBOL_cast_type = 1505,               /* cast_type  */
  YYSYMBOL_1506_158 = 1506,                /* $@158  */
  YYSYMBOL_1507_159 = 1507,                /* $@159  */
  YYSYMBOL_1508_160 = 1508,                /* $@160  */
  YYSYMBOL_cast_type_numeric = 1509,       /* cast_type_numeric  */
  YYSYMBOL_cast_type_temporal = 1510,      /* cast_type_temporal  */
  YYSYMBOL_opt_expr_list = 1511,           /* opt_expr_list  */
  YYSYMBOL_expr_list = 1512,               /* expr_list  */
  YYSYMBOL_ident_list_arg = 1513,          /* ident_list_arg  */
  YYSYMBOL_ident_list = 1514,              /* ident_list  */
  YYSYMBOL_when_list = 1515,               /* when_list  */
  YYSYMBOL_when_list_opt_else = 1516,      /* when_list_opt_else  */
  YYSYMBOL_decode_when_list_oracle = 1517, /* decode_when_list_oracle  */
  YYSYMBOL_table_ref = 1518,               /* table_ref  */
  YYSYMBOL_join_table_list = 1519,         /* join_table_list  */
  YYSYMBOL_esc_table_ref = 1520,           /* esc_table_ref  */
  YYSYMBOL_derived_table_list = 1521,      /* derived_table_list  */
  YYSYMBOL_join_table = 1522,              /* join_table  */
  YYSYMBOL_1523_161 = 1523,                /* $@161  */
  YYSYMBOL_1524_162 = 1524,                /* $@162  */
  YYSYMBOL_1525_163 = 1525,                /* $@163  */
  YYSYMBOL_1526_164 = 1526,                /* $@164  */
  YYSYMBOL_1527_165 = 1527,                /* $@165  */
  YYSYMBOL_1528_166 = 1528,                /* $@166  */
  YYSYMBOL_inner_join = 1529,              /* inner_join  */
  YYSYMBOL_normal_join = 1530,             /* normal_join  */
  YYSYMBOL_opt_use_partition = 1531,       /* opt_use_partition  */
  YYSYMBOL_use_partition = 1532,           /* use_partition  */
  YYSYMBOL_table_factor = 1533,            /* table_factor  */
  YYSYMBOL_table_primary_ident = 1534,     /* table_primary_ident  */
  YYSYMBOL_1535_167 = 1535,                /* $@167  */
  YYSYMBOL_table_primary_derived = 1536,   /* table_primary_derived  */
  YYSYMBOL_select_derived_union = 1537,    /* select_derived_union  */
  YYSYMBOL_1538_168 = 1538,                /* $@168  */
  YYSYMBOL_union_list_derived_part2 = 1539, /* union_list_derived_part2  */
  YYSYMBOL_1540_169 = 1540,                /* $@169  */
  YYSYMBOL_union_list_derived = 1541,      /* union_list_derived  */
  YYSYMBOL_select_init2_derived = 1542,    /* select_init2_derived  */
  YYSYMBOL_select_part2_derived = 1543,    /* select_part2_derived  */
  YYSYMBOL_1544_170 = 1544,                /* $@170  */
  YYSYMBOL_select_derived = 1545,          /* select_derived  */
  YYSYMBOL_derived_simple_table = 1546,    /* derived_simple_table  */
  YYSYMBOL_derived_query_specification = 1547, /* derived_query_specification  */
  YYSYMBOL_derived_table_value_constructor = 1548, /* derived_table_value_constructor  */
  YYSYMBOL_1549_171 = 1549,                /* $@171  */
  YYSYMBOL_select_derived2 = 1550,         /* select_derived2  */
  YYSYMBOL_1551_172 = 1551,                /* $@172  */
  YYSYMBOL_1552_173 = 1552,                /* $@173  */
  YYSYMBOL_get_select_lex = 1553,          /* get_select_lex  */
  YYSYMBOL_get_select_lex_derived = 1554,  /* get_select_lex_derived  */
  YYSYMBOL_select_derived_init = 1555,     /* select_derived_init  */
  YYSYMBOL_opt_outer = 1556,               /* opt_outer  */
  YYSYMBOL_index_hint_clause = 1557,       /* index_hint_clause  */
  YYSYMBOL_index_hint_type = 1558,         /* index_hint_type  */
  YYSYMBOL_index_hint_definition = 1559,   /* index_hint_definition  */
  YYSYMBOL_1560_174 = 1560,                /* $@174  */
  YYSYMBOL_1561_175 = 1561,                /* $@175  */
  YYSYMBOL_index_hints_list = 1562,        /* index_hints_list  */
  YYSYMBOL_opt_index_hints_list = 1563,    /* opt_index_hints_list  */
  YYSYMBOL_1564_176 = 1564,                /* $@176  */
  YYSYMBOL_opt_key_definition = 1565,      /* opt_key_definition  */
  YYSYMBOL_1566_177 = 1566,                /* $@177  */
  YYSYMBOL_opt_key_usage_list = 1567,      /* opt_key_usage_list  */
  YYSYMBOL_key_usage_element = 1568,       /* key_usage_element  */
  YYSYMBOL_key_usage_list = 1569,          /* key_usage_list  */
  YYSYMBOL_using_list = 1570,              /* using_list  */
  YYSYMBOL_interval = 1571,                /* interval  */
  YYSYMBOL_interval_time_stamp = 1572,     /* interval_time_stamp  */
  YYSYMBOL_date_time_type = 1573,          /* date_time_type  */
  YYSYMBOL_table_alias = 1574,             /* table_alias  */
  YYSYMBOL_opt_table_alias = 1575,         /* opt_table_alias  */
  YYSYMBOL_opt_all = 1576,                 /* opt_all  */
  YYSYMBOL_opt_where_clause = 1577,        /* opt_where_clause  */
  YYSYMBOL_1578_178 = 1578,                /* $@178  */
  YYSYMBOL_opt_having_clause = 1579,       /* opt_having_clause  */
  YYSYMBOL_1580_179 = 1580,                /* $@179  */
  YYSYMBOL_opt_group_clause = 1581,        /* opt_group_clause  */
  YYSYMBOL_group_list = 1582,              /* group_list  */
  YYSYMBOL_olap_opt = 1583,                /* olap_opt  */
  YYSYMBOL_opt_window_clause = 1584,       /* opt_window_clause  */
  YYSYMBOL_window_def_list = 1585,         /* window_def_list  */
  YYSYMBOL_window_def = 1586,              /* window_def  */
  YYSYMBOL_window_spec = 1587,             /* window_spec  */
  YYSYMBOL_1588_180 = 1588,                /* $@180  */
  YYSYMBOL_opt_window_ref = 1589,          /* opt_window_ref  */
  YYSYMBOL_opt_window_partition_clause = 1590, /* opt_window_partition_clause  */
  YYSYMBOL_opt_window_order_clause = 1591, /* opt_window_order_clause  */
  YYSYMBOL_opt_window_frame_clause = 1592, /* opt_window_frame_clause  */
  YYSYMBOL_window_frame_units = 1593,      /* window_frame_units  */
  YYSYMBOL_window_frame_extent = 1594,     /* window_frame_extent  */
  YYSYMBOL_window_frame_start = 1595,      /* window_frame_start  */
  YYSYMBOL_window_frame_bound = 1596,      /* window_frame_bound  */
  YYSYMBOL_opt_window_frame_exclusion = 1597, /* opt_window_frame_exclusion  */
  YYSYMBOL_alter_order_clause = 1598,      /* alter_order_clause  */
  YYSYMBOL_alter_order_list = 1599,        /* alter_order_list  */
  YYSYMBOL_alter_order_item = 1600,        /* alter_order_item  */
  YYSYMBOL_opt_order_clause = 1601,        /* opt_order_clause  */
  YYSYMBOL_order_clause = 1602,            /* order_clause  */
  YYSYMBOL_1603_181 = 1603,                /* $@181  */
  YYSYMBOL_order_list = 1604,              /* order_list  */
  YYSYMBOL_order_dir = 1605,               /* order_dir  */
  YYSYMBOL_opt_limit_clause = 1606,        /* opt_limit_clause  */
  YYSYMBOL_limit_clause_init = 1607,       /* limit_clause_init  */
  YYSYMBOL_limit_clause = 1608,            /* limit_clause  */
  YYSYMBOL_limit_options = 1609,           /* limit_options  */
  YYSYMBOL_limit_option = 1610,            /* limit_option  */
  YYSYMBOL_limit_rows_option = 1611,       /* limit_rows_option  */
  YYSYMBOL_delete_limit_clause = 1612,     /* delete_limit_clause  */
  YYSYMBOL_opt_plus = 1613,                /* opt_plus  */
  YYSYMBOL_int_num = 1614,                 /* int_num  */
  YYSYMBOL_ulong_num = 1615,               /* ulong_num  */
  YYSYMBOL_real_ulong_num = 1616,          /* real_ulong_num  */
  YYSYMBOL_longlong_num = 1617,            /* longlong_num  */
  YYSYMBOL_ulonglong_num = 1618,           /* ulonglong_num  */
  YYSYMBOL_real_ulonglong_num = 1619,      /* real_ulonglong_num  */
  YYSYMBOL_dec_num_error = 1620,           /* dec_num_error  */
  YYSYMBOL_dec_num = 1621,                 /* dec_num  */
  YYSYMBOL_choice = 1622,                  /* choice  */
  YYSYMBOL_bool = 1623,                    /* bool  */
  YYSYMBOL_procedure_clause = 1624,        /* procedure_clause  */
  YYSYMBOL_1625_182 = 1625,                /* $@182  */
  YYSYMBOL_procedure_list = 1626,          /* procedure_list  */
  YYSYMBOL_procedure_list2 = 1627,         /* procedure_list2  */
  YYSYMBOL_procedure_item = 1628,          /* procedure_item  */
  YYSYMBOL_select_var_list_init = 1629,    /* select_var_list_init  */
  YYSYMBOL_1630_183 = 1630,                /* $@183  */
  YYSYMBOL_select_var_list = 1631,         /* select_var_list  */
  YYSYMBOL_select_var_ident = 1632,        /* select_var_ident  */
  YYSYMBOL_select_outvar = 1633,           /* select_outvar  */
  YYSYMBOL_into = 1634,                    /* into  */
  YYSYMBOL_into_destination = 1635,        /* into_destination  */
  YYSYMBOL_1636_184 = 1636,                /* $@184  */
  YYSYMBOL_1637_185 = 1637,                /* $@185  */
  YYSYMBOL_do = 1638,                      /* do  */
  YYSYMBOL_1639_186 = 1639,                /* $@186  */
  YYSYMBOL_drop = 1640,                    /* drop  */
  YYSYMBOL_1641_187 = 1641,                /* $@187  */
  YYSYMBOL_1642_188 = 1642,                /* $@188  */
  YYSYMBOL_1643_189 = 1643,                /* $@189  */
  YYSYMBOL_table_list = 1644,              /* table_list  */
  YYSYMBOL_table_name = 1645,              /* table_name  */
  YYSYMBOL_table_name_with_opt_use_partition = 1646, /* table_name_with_opt_use_partition  */
  YYSYMBOL_table_alias_ref_list = 1647,    /* table_alias_ref_list  */
  YYSYMBOL_table_alias_ref = 1648,         /* table_alias_ref  */
  YYSYMBOL_opt_if_exists_table_element = 1649, /* opt_if_exists_table_element  */
  YYSYMBOL_opt_if_exists = 1650,           /* opt_if_exists  */
  YYSYMBOL_opt_temporary = 1651,           /* opt_temporary  */
  YYSYMBOL_insert = 1652,                  /* insert  */
  YYSYMBOL_1653_190 = 1653,                /* $@190  */
  YYSYMBOL_1654_191 = 1654,                /* $@191  */
  YYSYMBOL_replace = 1655,                 /* replace  */
  YYSYMBOL_1656_192 = 1656,                /* $@192  */
  YYSYMBOL_1657_193 = 1657,                /* $@193  */
  YYSYMBOL_insert_lock_option = 1658,      /* insert_lock_option  */
  YYSYMBOL_replace_lock_option = 1659,     /* replace_lock_option  */
  YYSYMBOL_insert2 = 1660,                 /* insert2  */
  YYSYMBOL_insert_table = 1661,            /* insert_table  */
  YYSYMBOL_insert_field_spec = 1662,       /* insert_field_spec  */
  YYSYMBOL_1663_194 = 1663,                /* $@194  */
  YYSYMBOL_fields = 1664,                  /* fields  */
  YYSYMBOL_insert_values = 1665,           /* insert_values  */
  YYSYMBOL_values_list = 1666,             /* values_list  */
  YYSYMBOL_ident_eq_list = 1667,           /* ident_eq_list  */
  YYSYMBOL_ident_eq_value = 1668,          /* ident_eq_value  */
  YYSYMBOL_equal = 1669,                   /* equal  */
  YYSYMBOL_opt_equal = 1670,               /* opt_equal  */
  YYSYMBOL_opt_with = 1671,                /* opt_with  */
  YYSYMBOL_opt_by = 1672,                  /* opt_by  */
  YYSYMBOL_no_braces = 1673,               /* no_braces  */
  YYSYMBOL_1674_195 = 1674,                /* $@195  */
  YYSYMBOL_no_braces_with_names = 1675,    /* no_braces_with_names  */
  YYSYMBOL_1676_196 = 1676,                /* $@196  */
  YYSYMBOL_opt_values = 1677,              /* opt_values  */
  YYSYMBOL_opt_values_with_names = 1678,   /* opt_values_with_names  */
  YYSYMBOL_values = 1679,                  /* values  */
  YYSYMBOL_values_with_names = 1680,       /* values_with_names  */
  YYSYMBOL_expr_or_ignore = 1681,          /* expr_or_ignore  */
  YYSYMBOL_expr_or_ignore_or_default = 1682, /* expr_or_ignore_or_default  */
  YYSYMBOL_opt_insert_update = 1683,       /* opt_insert_update  */
  YYSYMBOL_1684_197 = 1684,                /* $@197  */
  YYSYMBOL_1685_198 = 1685,                /* $@198  */
  YYSYMBOL_update = 1686,                  /* update  */
  YYSYMBOL_1687_199 = 1687,                /* $@199  */
  YYSYMBOL_1688_200 = 1688,                /* $@200  */
  YYSYMBOL_update_list = 1689,             /* update_list  */
  YYSYMBOL_update_elem = 1690,             /* update_elem  */
  YYSYMBOL_insert_update_list = 1691,      /* insert_update_list  */
  YYSYMBOL_insert_update_elem = 1692,      /* insert_update_elem  */
  YYSYMBOL_opt_low_priority = 1693,        /* opt_low_priority  */
  YYSYMBOL_delete = 1694,                  /* delete  */
  YYSYMBOL_1695_201 = 1695,                /* $@201  */
  YYSYMBOL_opt_delete_system_time = 1696,  /* opt_delete_system_time  */
  YYSYMBOL_delete_part2 = 1697,            /* delete_part2  */
  YYSYMBOL_delete_single_table = 1698,     /* delete_single_table  */
  YYSYMBOL_single_multi = 1699,            /* single_multi  */
  YYSYMBOL_1700_202 = 1700,                /* $@202  */
  YYSYMBOL_1701_203 = 1701,                /* $@203  */
  YYSYMBOL_opt_select_expressions = 1702,  /* opt_select_expressions  */
  YYSYMBOL_table_wild_list = 1703,         /* table_wild_list  */
  YYSYMBOL_table_wild_one = 1704,          /* table_wild_one  */
  YYSYMBOL_opt_wild = 1705,                /* opt_wild  */
  YYSYMBOL_opt_delete_options = 1706,      /* opt_delete_options  */
  YYSYMBOL_opt_delete_option = 1707,       /* opt_delete_option  */
  YYSYMBOL_truncate = 1708,                /* truncate  */
  YYSYMBOL_1709_204 = 1709,                /* $@204  */
  YYSYMBOL_opt_table_sym = 1710,           /* opt_table_sym  */
  YYSYMBOL_opt_profile_defs = 1711,        /* opt_profile_defs  */
  YYSYMBOL_profile_defs = 1712,            /* profile_defs  */
  YYSYMBOL_profile_def = 1713,             /* profile_def  */
  YYSYMBOL_opt_profile_args = 1714,        /* opt_profile_args  */
  YYSYMBOL_show = 1715,                    /* show  */
  YYSYMBOL_1716_205 = 1716,                /* $@205  */
  YYSYMBOL_show_param = 1717,              /* show_param  */
  YYSYMBOL_1718_206 = 1718,                /* $@206  */
  YYSYMBOL_1719_207 = 1719,                /* $@207  */
  YYSYMBOL_show_engine_param = 1720,       /* show_engine_param  */
  YYSYMBOL_master_or_binary = 1721,        /* master_or_binary  */
  YYSYMBOL_opt_storage = 1722,             /* opt_storage  */
  YYSYMBOL_opt_db = 1723,                  /* opt_db  */
  YYSYMBOL_opt_full = 1724,                /* opt_full  */
  YYSYMBOL_from_or_in = 1725,              /* from_or_in  */
  YYSYMBOL_binlog_in = 1726,               /* binlog_in  */
  YYSYMBOL_binlog_from = 1727,             /* binlog_from  */
  YYSYMBOL_wild_and_where = 1728,          /* wild_and_where  */
  YYSYMBOL_describe = 1729,                /* describe  */
  YYSYMBOL_1730_208 = 1730,                /* $@208  */
  YYSYMBOL_1731_209 = 1731,                /* $@209  */
  YYSYMBOL_explainable_command = 1732,     /* explainable_command  */
  YYSYMBOL_describe_command = 1733,        /* describe_command  */
  YYSYMBOL_analyze_stmt_command = 1734,    /* analyze_stmt_command  */
  YYSYMBOL_opt_extended_describe = 1735,   /* opt_extended_describe  */
  YYSYMBOL_opt_format_json = 1736,         /* opt_format_json  */
  YYSYMBOL_opt_describe_column = 1737,     /* opt_describe_column  */
  YYSYMBOL_flush = 1738,                   /* flush  */
  YYSYMBOL_1739_210 = 1739,                /* $@210  */
  YYSYMBOL_flush_options = 1740,           /* flush_options  */
  YYSYMBOL_1741_211 = 1741,                /* $@211  */
  YYSYMBOL_opt_flush_lock = 1742,          /* opt_flush_lock  */
  YYSYMBOL_flush_lock = 1743,              /* flush_lock  */
  YYSYMBOL_1744_212 = 1744,                /* $@212  */
  YYSYMBOL_flush_options_list = 1745,      /* flush_options_list  */
  YYSYMBOL_flush_option = 1746,            /* flush_option  */
  YYSYMBOL_opt_table_list = 1747,          /* opt_table_list  */
  YYSYMBOL_opt_delete_gtid_domain = 1748,  /* opt_delete_gtid_domain  */
  YYSYMBOL_delete_domain_id_list = 1749,   /* delete_domain_id_list  */
  YYSYMBOL_delete_domain_id = 1750,        /* delete_domain_id  */
  YYSYMBOL_optional_flush_tables_arguments = 1751, /* optional_flush_tables_arguments  */
  YYSYMBOL_reset = 1752,                   /* reset  */
  YYSYMBOL_1753_213 = 1753,                /* $@213  */
  YYSYMBOL_reset_options = 1754,           /* reset_options  */
  YYSYMBOL_reset_option = 1755,            /* reset_option  */
  YYSYMBOL_1756_214 = 1756,                /* $@214  */
  YYSYMBOL_1757_215 = 1757,                /* $@215  */
  YYSYMBOL_slave_reset_options = 1758,     /* slave_reset_options  */
  YYSYMBOL_master_reset_options = 1759,    /* master_reset_options  */
  YYSYMBOL_purge = 1760,                   /* purge  */
  YYSYMBOL_1761_216 = 1761,                /* $@216  */
  YYSYMBOL_purge_options = 1762,           /* purge_options  */
  YYSYMBOL_purge_option = 1763,            /* purge_option  */
  YYSYMBOL_kill = 1764,                    /* kill  */
  YYSYMBOL_1765_217 = 1765,                /* $@217  */
  YYSYMBOL_kill_type = 1766,               /* kill_type  */
  YYSYMBOL_kill_option = 1767,             /* kill_option  */
  YYSYMBOL_opt_connection = 1768,          /* opt_connection  */
  YYSYMBOL_kill_expr = 1769,               /* kill_expr  */
  YYSYMBOL_shutdown = 1770,                /* shutdown  */
  YYSYMBOL_use = 1771,                     /* use  */
  YYSYMBOL_load = 1772,                    /* load  */
  YYSYMBOL_1773_218 = 1773,                /* $@218  */
  YYSYMBOL_1774_219 = 1774,                /* $@219  */
  YYSYMBOL_1775_220 = 1775,                /* $@220  */
  YYSYMBOL_1776_221 = 1776,                /* $@221  */
  YYSYMBOL_data_or_xml = 1777,             /* data_or_xml  */
  YYSYMBOL_opt_local = 1778,               /* opt_local  */
  YYSYMBOL_load_data_lock = 1779,          /* load_data_lock  */
  YYSYMBOL_opt_duplicate = 1780,           /* opt_duplicate  */
  YYSYMBOL_opt_field_term = 1781,          /* opt_field_term  */
  YYSYMBOL_field_term_list = 1782,         /* field_term_list  */
  YYSYMBOL_field_term = 1783,              /* field_term  */
  YYSYMBOL_opt_line_term = 1784,           /* opt_line_term  */
  YYSYMBOL_line_term_list = 1785,          /* line_term_list  */
  YYSYMBOL_line_term = 1786,               /* line_term  */
  YYSYMBOL_opt_xml_rows_identified_by = 1787, /* opt_xml_rows_identified_by  */
  YYSYMBOL_opt_ignore_lines = 1788,        /* opt_ignore_lines  */
  YYSYMBOL_lines_or_rows = 1789,           /* lines_or_rows  */
  YYSYMBOL_opt_field_or_var_spec = 1790,   /* opt_field_or_var_spec  */
  YYSYMBOL_fields_or_vars = 1791,          /* fields_or_vars  */
  YYSYMBOL_field_or_var = 1792,            /* field_or_var  */
  YYSYMBOL_opt_load_data_set_spec = 1793,  /* opt_load_data_set_spec  */
  YYSYMBOL_load_data_set_list = 1794,      /* load_data_set_list  */
  YYSYMBOL_load_data_set_elem = 1795,      /* load_data_set_elem  */
  YYSYMBOL_text_literal = 1796,            /* text_literal  */
  YYSYMBOL_text_string = 1797,             /* text_string  */
  YYSYMBOL_hex_or_bin_String = 1798,       /* hex_or_bin_String  */
  YYSYMBOL_param_marker = 1799,            /* param_marker  */
  YYSYMBOL_signed_literal = 1800,          /* signed_literal  */
  YYSYMBOL_literal = 1801,                 /* literal  */
  YYSYMBOL_NUM_literal = 1802,             /* NUM_literal  */
  YYSYMBOL_temporal_literal = 1803,        /* temporal_literal  */
  YYSYMBOL_opt_with_clause = 1804,         /* opt_with_clause  */
  YYSYMBOL_with_clause = 1805,             /* with_clause  */
  YYSYMBOL_1806_222 = 1806,                /* $@222  */
  YYSYMBOL_opt_recursive = 1807,           /* opt_recursive  */
  YYSYMBOL_with_list = 1808,               /* with_list  */
  YYSYMBOL_with_list_element = 1809,       /* with_list_element  */
  YYSYMBOL_1810_223 = 1810,                /* $@223  */
  YYSYMBOL_opt_with_column_list = 1811,    /* opt_with_column_list  */
  YYSYMBOL_with_column_list = 1812,        /* with_column_list  */
  YYSYMBOL_with_element_head = 1813,       /* with_element_head  */
  YYSYMBOL_insert_ident = 1814,            /* insert_ident  */
  YYSYMBOL_table_wild = 1815,              /* table_wild  */
  YYSYMBOL_select_sublist_qualified_asterisk = 1816, /* select_sublist_qualified_asterisk  */
  YYSYMBOL_order_ident = 1817,             /* order_ident  */
  YYSYMBOL_simple_ident = 1818,            /* simple_ident  */
  YYSYMBOL_simple_ident_nospvar = 1819,    /* simple_ident_nospvar  */
  YYSYMBOL_field_ident = 1820,             /* field_ident  */
  YYSYMBOL_table_ident = 1821,             /* table_ident  */
  YYSYMBOL_table_ident_opt_wild = 1822,    /* table_ident_opt_wild  */
  YYSYMBOL_table_ident_nodb = 1823,        /* table_ident_nodb  */
  YYSYMBOL_IDENT_cli = 1824,               /* IDENT_cli  */
  YYSYMBOL_ident_cli = 1825,               /* ident_cli  */
  YYSYMBOL_IDENT_sys = 1826,               /* IDENT_sys  */
  YYSYMBOL_TEXT_STRING_sys = 1827,         /* TEXT_STRING_sys  */
  YYSYMBOL_TEXT_STRING_literal = 1828,     /* TEXT_STRING_literal  */
  YYSYMBOL_TEXT_STRING_filesystem = 1829,  /* TEXT_STRING_filesystem  */
  YYSYMBOL_ident_table_alias = 1830,       /* ident_table_alias  */
  YYSYMBOL_ident_set_usual_case = 1831,    /* ident_set_usual_case  */
  YYSYMBOL_ident_sysvar_name = 1832,       /* ident_sysvar_name  */
  YYSYMBOL_ident = 1833,                   /* ident  */
  YYSYMBOL_label_ident = 1834,             /* label_ident  */
  YYSYMBOL_ident_or_text = 1835,           /* ident_or_text  */
  YYSYMBOL_user_maybe_role = 1836,         /* user_maybe_role  */
  YYSYMBOL_user_or_role = 1837,            /* user_or_role  */
  YYSYMBOL_user = 1838,                    /* user  */
  YYSYMBOL_keyword_table_alias = 1839,     /* keyword_table_alias  */
  YYSYMBOL_keyword_ident = 1840,           /* keyword_ident  */
  YYSYMBOL_keyword_label = 1841,           /* keyword_label  */
  YYSYMBOL_keyword_sysvar_name = 1842,     /* keyword_sysvar_name  */
  YYSYMBOL_keyword_sp_decl = 1843,         /* keyword_sp_decl  */
  YYSYMBOL_keyword_set_usual_case = 1844,  /* keyword_set_usual_case  */
  YYSYMBOL_keyword_sp_var_not_label = 1845, /* keyword_sp_var_not_label  */
  YYSYMBOL_keyword_sp_head = 1846,         /* keyword_sp_head  */
  YYSYMBOL_keyword_verb_clause = 1847,     /* keyword_verb_clause  */
  YYSYMBOL_keyword_set_special_case = 1848, /* keyword_set_special_case  */
  YYSYMBOL_keyword_sp_block_section = 1849, /* keyword_sp_block_section  */
  YYSYMBOL_keyword_sysvar_type = 1850,     /* keyword_sysvar_type  */
  YYSYMBOL_keyword_data_type = 1851,       /* keyword_data_type  */
  YYSYMBOL_keyword_sp_var_and_label = 1852, /* keyword_sp_var_and_label  */
  YYSYMBOL_set = 1853,                     /* set  */
  YYSYMBOL_1854_224 = 1854,                /* $@224  */
  YYSYMBOL_1855_225 = 1855,                /* $@225  */
  YYSYMBOL_1856_226 = 1856,                /* $@226  */
  YYSYMBOL_set_stmt_option_value_following_option_type_list = 1857, /* set_stmt_option_value_following_option_type_list  */
  YYSYMBOL_start_option_value_list = 1858, /* start_option_value_list  */
  YYSYMBOL_1859_227 = 1859,                /* $@227  */
  YYSYMBOL_1860_228 = 1860,                /* $@228  */
  YYSYMBOL_1861_229 = 1861,                /* $@229  */
  YYSYMBOL_start_option_value_list_following_option_type = 1862, /* start_option_value_list_following_option_type  */
  YYSYMBOL_1863_230 = 1863,                /* $@230  */
  YYSYMBOL_option_value_list_continued = 1864, /* option_value_list_continued  */
  YYSYMBOL_option_value_list = 1865,       /* option_value_list  */
  YYSYMBOL_1866_231 = 1866,                /* $@231  */
  YYSYMBOL_1867_232 = 1867,                /* $@232  */
  YYSYMBOL_option_value = 1868,            /* option_value  */
  YYSYMBOL_1869_233 = 1869,                /* $@233  */
  YYSYMBOL_option_type = 1870,             /* option_type  */
  YYSYMBOL_opt_var_type = 1871,            /* opt_var_type  */
  YYSYMBOL_opt_var_ident_type = 1872,      /* opt_var_ident_type  */
  YYSYMBOL_option_value_following_option_type = 1873, /* option_value_following_option_type  */
  YYSYMBOL_option_value_no_option_type = 1874, /* option_value_no_option_type  */
  YYSYMBOL_transaction_characteristics = 1875, /* transaction_characteristics  */
  YYSYMBOL_transaction_access_mode = 1876, /* transaction_access_mode  */
  YYSYMBOL_isolation_level = 1877,         /* isolation_level  */
  YYSYMBOL_transaction_access_mode_types = 1878, /* transaction_access_mode_types  */
  YYSYMBOL_isolation_types = 1879,         /* isolation_types  */
  YYSYMBOL_opt_for_user = 1880,            /* opt_for_user  */
  YYSYMBOL_text_or_password = 1881,        /* text_or_password  */
  YYSYMBOL_set_expr_or_default = 1882,     /* set_expr_or_default  */
  YYSYMBOL_lock = 1883,                    /* lock  */
  YYSYMBOL_1884_234 = 1884,                /* $@234  */
  YYSYMBOL_opt_lock_wait_timeout = 1885,   /* opt_lock_wait_timeout  */
  YYSYMBOL_table_or_tables = 1886,         /* table_or_tables  */
  YYSYMBOL_table_lock_list = 1887,         /* table_lock_list  */
  YYSYMBOL_table_lock = 1888,              /* table_lock  */
  YYSYMBOL_lock_option = 1889,             /* lock_option  */
  YYSYMBOL_unlock = 1890,                  /* unlock  */
  YYSYMBOL_1891_235 = 1891,                /* $@235  */
  YYSYMBOL_handler = 1892,                 /* handler  */
  YYSYMBOL_1893_236 = 1893,                /* $@236  */
  YYSYMBOL_handler_read_or_scan = 1894,    /* handler_read_or_scan  */
  YYSYMBOL_handler_scan_function = 1895,   /* handler_scan_function  */
  YYSYMBOL_handler_rkey_function = 1896,   /* handler_rkey_function  */
  YYSYMBOL_1897_237 = 1897,                /* $@237  */
  YYSYMBOL_handler_rkey_mode = 1898,       /* handler_rkey_mode  */
  YYSYMBOL_revoke = 1899,                  /* revoke  */
  YYSYMBOL_revoke_command = 1900,          /* revoke_command  */
  YYSYMBOL_admin_option_for_role = 1901,   /* admin_option_for_role  */
  YYSYMBOL_grant = 1902,                   /* grant  */
  YYSYMBOL_grant_command = 1903,           /* grant_command  */
  YYSYMBOL_opt_with_admin = 1904,          /* opt_with_admin  */
  YYSYMBOL_opt_with_admin_option = 1905,   /* opt_with_admin_option  */
  YYSYMBOL_role_list = 1906,               /* role_list  */
  YYSYMBOL_current_role = 1907,            /* current_role  */
  YYSYMBOL_grant_role = 1908,              /* grant_role  */
  YYSYMBOL_opt_table = 1909,               /* opt_table  */
  YYSYMBOL_grant_privileges = 1910,        /* grant_privileges  */
  YYSYMBOL_opt_privileges = 1911,          /* opt_privileges  */
  YYSYMBOL_object_privilege_list = 1912,   /* object_privilege_list  */
  YYSYMBOL_object_privilege = 1913,        /* object_privilege  */
  YYSYMBOL_1914_238 = 1914,                /* $@238  */
  YYSYMBOL_1915_239 = 1915,                /* $@239  */
  YYSYMBOL_1916_240 = 1916,                /* $@240  */
  YYSYMBOL_1917_241 = 1917,                /* $@241  */
  YYSYMBOL_opt_and = 1918,                 /* opt_and  */
  YYSYMBOL_require_list = 1919,            /* require_list  */
  YYSYMBOL_require_list_element = 1920,    /* require_list_element  */
  YYSYMBOL_grant_ident = 1921,             /* grant_ident  */
  YYSYMBOL_user_list = 1922,               /* user_list  */
  YYSYMBOL_grant_list = 1923,              /* grant_list  */
  YYSYMBOL_user_and_role_list = 1924,      /* user_and_role_list  */
  YYSYMBOL_via_or_with = 1925,             /* via_or_with  */
  YYSYMBOL_using_or_as = 1926,             /* using_or_as  */
  YYSYMBOL_grant_user = 1927,              /* grant_user  */
  YYSYMBOL_opt_column_list = 1928,         /* opt_column_list  */
  YYSYMBOL_column_list = 1929,             /* column_list  */
  YYSYMBOL_column_list_id = 1930,          /* column_list_id  */
  YYSYMBOL_opt_require_clause = 1931,      /* opt_require_clause  */
  YYSYMBOL_resource_option = 1932,         /* resource_option  */
  YYSYMBOL_resource_option_list = 1933,    /* resource_option_list  */
  YYSYMBOL_opt_resource_options = 1934,    /* opt_resource_options  */
  YYSYMBOL_opt_grant_options = 1935,       /* opt_grant_options  */
  YYSYMBOL_opt_grant_option = 1936,        /* opt_grant_option  */
  YYSYMBOL_grant_option_list = 1937,       /* grant_option_list  */
  YYSYMBOL_grant_option = 1938,            /* grant_option  */
  YYSYMBOL_begin_stmt_mariadb = 1939,      /* begin_stmt_mariadb  */
  YYSYMBOL_1940_242 = 1940,                /* $@242  */
  YYSYMBOL_compound_statement = 1941,      /* compound_statement  */
  YYSYMBOL_opt_not = 1942,                 /* opt_not  */
  YYSYMBOL_opt_work = 1943,                /* opt_work  */
  YYSYMBOL_opt_chain = 1944,               /* opt_chain  */
  YYSYMBOL_opt_release = 1945,             /* opt_release  */
  YYSYMBOL_commit = 1946,                  /* commit  */
  YYSYMBOL_rollback = 1947,                /* rollback  */
  YYSYMBOL_savepoint = 1948,               /* savepoint  */
  YYSYMBOL_release = 1949,                 /* release  */
  YYSYMBOL_unit_type_decl = 1950,          /* unit_type_decl  */
  YYSYMBOL_union_clause = 1951,            /* union_clause  */
  YYSYMBOL_union_list = 1952,              /* union_list  */
  YYSYMBOL_1953_243 = 1953,                /* $@243  */
  YYSYMBOL_union_list_view = 1954,         /* union_list_view  */
  YYSYMBOL_1955_244 = 1955,                /* $@244  */
  YYSYMBOL_union_order_or_limit = 1956,    /* union_order_or_limit  */
  YYSYMBOL_1957_245 = 1957,                /* $@245  */
  YYSYMBOL_order_or_limit = 1958,          /* order_or_limit  */
  YYSYMBOL_union_head_non_top = 1959,      /* union_head_non_top  */
  YYSYMBOL_union_option = 1960,            /* union_option  */
  YYSYMBOL_simple_table = 1961,            /* simple_table  */
  YYSYMBOL_table_value_constructor = 1962, /* table_value_constructor  */
  YYSYMBOL_1963_246 = 1963,                /* $@246  */
  YYSYMBOL_query_specification = 1964,     /* query_specification  */
  YYSYMBOL_query_term_union_not_ready = 1965, /* query_term_union_not_ready  */
  YYSYMBOL_query_term_union_ready = 1966,  /* query_term_union_ready  */
  YYSYMBOL_query_expression_body = 1967,   /* query_expression_body  */
  YYSYMBOL_subselect = 1968,               /* subselect  */
  YYSYMBOL_subselect_start = 1969,         /* subselect_start  */
  YYSYMBOL_subselect_end = 1970,           /* subselect_end  */
  YYSYMBOL_opt_query_expression_options = 1971, /* opt_query_expression_options  */
  YYSYMBOL_query_expression_option_list = 1972, /* query_expression_option_list  */
  YYSYMBOL_query_expression_option = 1973, /* query_expression_option  */
  YYSYMBOL_definer_opt = 1974,             /* definer_opt  */
  YYSYMBOL_no_definer = 1975,              /* no_definer  */
  YYSYMBOL_definer = 1976,                 /* definer  */
  YYSYMBOL_view_algorithm = 1977,          /* view_algorithm  */
  YYSYMBOL_opt_view_suid = 1978,           /* opt_view_suid  */
  YYSYMBOL_view_suid = 1979,               /* view_suid  */
  YYSYMBOL_view_list_opt = 1980,           /* view_list_opt  */
  YYSYMBOL_view_list = 1981,               /* view_list  */
  YYSYMBOL_view_select = 1982,             /* view_select  */
  YYSYMBOL_1983_247 = 1983,                /* $@247  */
  YYSYMBOL_query_expression_body_view = 1984, /* query_expression_body_view  */
  YYSYMBOL_view_check_option = 1985,       /* view_check_option  */
  YYSYMBOL_trigger_action_order = 1986,    /* trigger_action_order  */
  YYSYMBOL_trigger_follows_precedes_clause = 1987, /* trigger_follows_precedes_clause  */
  YYSYMBOL_trigger_tail = 1988,            /* trigger_tail  */
  YYSYMBOL_1989_248 = 1989,                /* $@248  */
  YYSYMBOL_1990_249 = 1990,                /* $@249  */
  YYSYMBOL_1991_250 = 1991,                /* $@250  */
  YYSYMBOL_1992_251 = 1992,                /* $@251  */
  YYSYMBOL_1993_252 = 1993,                /* $@252  */
  YYSYMBOL_udf_tail = 1994,                /* udf_tail  */
  YYSYMBOL_sf_return_type = 1995,          /* sf_return_type  */
  YYSYMBOL_1996_253 = 1996,                /* $@253  */
  YYSYMBOL_sf_tail = 1997,                 /* sf_tail  */
  YYSYMBOL_1998_254 = 1998,                /* $@254  */
  YYSYMBOL_1999_255 = 1999,                /* $@255  */
  YYSYMBOL_sp_tail = 2000,                 /* sp_tail  */
  YYSYMBOL_2001_256 = 2001,                /* $@256  */
  YYSYMBOL_2002_257 = 2002,                /* $@257  */
  YYSYMBOL_xa = 2003,                      /* xa  */
  YYSYMBOL_opt_format_xid = 2004,          /* opt_format_xid  */
  YYSYMBOL_xid = 2005,                     /* xid  */
  YYSYMBOL_begin_or_start = 2006,          /* begin_or_start  */
  YYSYMBOL_opt_join_or_resume = 2007,      /* opt_join_or_resume  */
  YYSYMBOL_opt_one_phase = 2008,           /* opt_one_phase  */
  YYSYMBOL_opt_suspend = 2009,             /* opt_suspend  */
  YYSYMBOL_2010_258 = 2010,                /* $@258  */
  YYSYMBOL_opt_migrate = 2011,             /* opt_migrate  */
  YYSYMBOL_install = 2012,                 /* install  */
  YYSYMBOL_uninstall = 2013,               /* uninstall  */
  YYSYMBOL_keep_gcc_happy = 2014           /* keep_gcc_happy  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Second part of user prologue.  */
#line 892 "/home/buildbot/git/sql/sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 2887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"


#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  707
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   98475

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  772
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1243
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3447
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5974

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   1004


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   765,     2,     2,     2,   756,   751,     2,
     762,   763,   754,   753,   764,   752,   769,   755,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   771,   768,
     749,   747,   748,     2,   770,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   757,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   766,   750,   767,   758,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   759,   760,   761
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  2269,  2269,  2279,  2278,  2303,  2310,  2312,  2316,  2317,
    2318,  2323,  2324,  2325,  2326,  2327,  2328,  2329,  2330,  2331,
    2332,  2333,  2334,  2335,  2336,  2337,  2338,  2339,  2340,  2341,
    2342,  2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,
    2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,  2360,  2361,
    2362,  2363,  2364,  2365,  2366,  2367,  2368,  2369,  2370,  2371,
    2372,  2373,  2374,  2375,  2376,  2377,  2378,  2379,  2383,  2392,
    2393,  2397,  2409,  2409,  2419,  2418,  2427,  2426,  2437,  2439,
    2439,  2450,  2451,  2455,  2467,  2466,  2483,  2482,  2491,  2492,
    2496,  2500,  2504,  2508,  2512,  2516,  2526,  2531,  2535,  2539,
    2543,  2547,  2551,  2556,  2560,  2565,  2593,  2597,  2601,  2606,
    2609,  2611,  2612,  2616,  2622,  2624,  2625,  2629,  2635,  2637,
    2638,  2642,  2649,  2653,  2668,  2672,  2678,  2684,  2690,  2700,
    2704,  2708,  2722,  2721,  2752,  2751,  2807,  2804,  2817,  2815,
    2828,  2826,  2838,  2837,  2852,  2850,  2862,  2860,  2869,  2868,
    2873,  2872,  2877,  2876,  2881,  2880,  2887,  2886,  2893,  2892,
    2897,  2896,  2902,  2909,  2916,  2920,  2924,  2924,  2930,  2941,
    2952,  2953,  2957,  2959,  2962,  2963,  2967,  2968,  2972,  2977,
    2983,  2989,  2997,  3003,  3009,  3017,  3025,  3033,  3041,  3049,
    3057,  3069,  3085,  3085,  3089,  3088,  3100,  3101,  3105,  3110,
    3115,  3120,  3125,  3130,  3135,  3143,  3142,  3175,  3174,  3181,
    3188,  3189,  3195,  3201,  3211,  3217,  3223,  3225,  3232,  3233,
    3237,  3247,  3248,  3256,  3256,  3301,  3315,  3320,  3328,  3329,
    3333,  3334,  3339,  3341,  3343,  3345,  3347,  3349,  3351,  3357,
    3358,  3362,  3366,  3374,  3373,  3384,  3383,  3394,  3393,  3406,
    3408,  3411,  3413,  3417,  3421,  3428,  3430,  3434,  3435,  3439,
    3447,  3452,  3459,  3465,  3470,  3475,  3483,  3485,  3489,  3490,
    3494,  3498,  3499,  3500,  3501,  3506,  3505,  3518,  3517,  3529,
    3530,  3534,  3535,  3540,  3543,  3555,  3560,  3566,  3572,  3581,
    3593,  3597,  3603,  3615,  3619,  3626,  3636,  3644,  3652,  3663,
    3664,  3671,  3673,  3672,  3691,  3690,  3704,  3706,  3711,  3721,
    3720,  3736,  3737,  3738,  3739,  3744,  3746,  3751,  3766,  3774,
    3778,  3798,  3799,  3803,  3807,  3813,  3819,  3825,  3831,  3841,
    3846,  3854,  3862,  3877,  3883,  3884,  3890,  3893,  3897,  3905,
    3922,  3924,  3942,  3948,  3950,  3952,  3954,  3956,  3958,  3960,
    3962,  3964,  3966,  3968,  3970,  3975,  3983,  3999,  4000,  4005,
    4011,  4020,  4027,  4036,  4045,  4050,  4059,  4061,  4063,  4072,
    4077,  4084,  4093,  4102,  4104,  4106,  4108,  4110,  4112,  4114,
    4116,  4118,  4120,  4122,  4124,  4126,  4131,  4132,  4140,  4152,
    4167,  4168,  4181,  4182,  4183,  4184,  4185,  4189,  4190,  4191,
    4192,  4193,  4194,  4195,  4196,  4197,  4198,  4202,  4203,  4204,
    4205,  4210,  4209,  4220,  4220,  4273,  4274,  4279,  4278,  4291,
    4304,  4304,  4308,  4313,  4318,  4324,  4333,  4338,  4343,  4349,
    4359,  4367,  4375,  4383,  4393,  4392,  4411,  4410,  4426,  4432,
    4440,  4441,  4445,  4453,  4458,  4463,  4471,  4472,  4487,  4505,
    4521,  4540,  4542,  4558,  4540,  4577,  4579,  4580,  4585,  4584,
    4654,  4656,  4654,  4664,  4669,  4670,  4674,  4675,  4680,  4684,
    4679,  4704,  4708,  4703,  4726,  4736,  4740,  4744,  4745,  4749,
    4760,  4758,  4775,  4774,  4789,  4788,  4805,  4806,  4810,  4818,
    4823,  4830,  4839,  4854,  4853,  4870,  4869,  4889,  4898,  4897,
    4905,  4904,  4913,  4918,  4927,  4912,  4937,  4936,  4947,  4946,
    4956,  4955,  4966,  4973,  4965,  4990,  4989,  5001,  5003,  5008,
    5010,  5012,  5029,  5034,  5040,  5047,  5048,  5056,  5062,  5071,
    5077,  5083,  5084,  5088,  5088,  5093,  5094,  5095,  5099,  5100,
    5101,  5105,  5109,  5110,  5111,  5115,  5116,  5117,  5118,  5119,
    5120,  5121,  5122,  5126,  5130,  5131,  5132,  5136,  5137,  5138,
    5139,  5140,  5144,  5148,  5149,  5150,  5154,  5155,  5156,  5157,
    5158,  5159,  5160,  5164,  5168,  5169,  5170,  5174,  5175,  5176,
    5181,  5189,  5197,  5205,  5218,  5231,  5236,  5241,  5249,  5257,
    5265,  5273,  5281,  5289,  5297,  5307,  5317,  5327,  5329,  5333,
    5338,  5348,  5349,  5362,  5361,  5364,  5370,  5372,  5371,  5374,
    5373,  5375,  5389,  5390,  5394,  5395,  5406,  5404,  5411,  5416,
    5418,  5417,  5420,  5419,  5424,  5461,  5462,  5467,  5466,  5482,
    5497,  5496,  5514,  5513,  5519,  5527,  5526,  5529,  5531,  5534,
    5533,  5542,  5545,  5544,  5553,  5554,  5560,  5561,  5578,  5579,
    5583,  5584,  5588,  5602,  5612,  5623,  5632,  5633,  5646,  5648,
    5647,  5652,  5650,  5661,  5662,  5666,  5680,  5692,  5693,  5706,
    5715,  5737,  5738,  5743,  5742,  5766,  5778,  5794,  5793,  5808,
    5807,  5821,  5826,  5831,  5851,  5869,  5873,  5900,  5912,  5913,
    5918,  5927,  5917,  5952,  5953,  5957,  5968,  5987,  6000,  6026,
    6027,  6032,  6031,  6068,  6077,  6078,  6082,  6083,  6087,  6089,
    6095,  6101,  6103,  6105,  6107,  6109,  6111,  6116,  6117,  6117,
    6124,  6140,  6143,  6160,  6170,  6170,  6191,  6192,  6196,  6197,
    6201,  6212,  6213,  6217,  6218,  6222,  6223,  6227,  6228,  6233,
    6236,  6244,  6247,  6254,  6258,  6264,  6266,  6270,  6271,  6275,
    6276,  6277,  6281,  6296,  6301,  6306,  6311,  6316,  6321,  6326,
    6341,  6347,  6362,  6367,  6382,  6388,  6406,  6411,  6416,  6421,
    6426,  6431,  6437,  6436,  6462,  6463,  6464,  6469,  6474,  6479,
    6481,  6483,  6485,  6491,  6496,  6501,  6510,  6519,  6525,  6531,
    6536,  6539,  6541,  6545,  6564,  6572,  6587,  6597,  6608,  6609,
    6610,  6611,  6612,  6613,  6614,  6618,  6619,  6620,  6624,  6625,
    6626,  6627,  6632,  6639,  6640,  6644,  6645,  6646,  6647,  6651,
    6653,  6659,  6658,  6666,  6665,  6673,  6672,  6680,  6679,  6689,
    6686,  6697,  6695,  6704,  6703,  6742,  6750,  6758,  6759,  6763,
    6773,  6774,  6778,  6779,  6783,  6788,  6787,  6825,  6825,  6828,
    6827,  6838,  6839,  6843,  6844,  6848,  6849,  6853,  6854,  6858,
    6859,  6860,  6861,  6863,  6862,  6868,  6873,  6881,  6882,  6887,
    6890,  6894,  6898,  6905,  6906,  6910,  6911,  6915,  6921,  6927,
    6928,  6936,  6935,  6954,  6960,  6961,  6971,  6981,  6981,  6984,
    6985,  6992,  7000,  7004,  7012,  7013,  7014,  7015,  7016,  7020,
    7021,  7022,  7038,  7042,  7046,  7050,  7052,  7059,  7061,  7066,
    7068,  7069,  7070,  7074,  7078,  7083,  7088,  7092,  7096,  7101,
    7106,  7114,  7132,  7133,  7140,  7147,  7155,  7160,  7165,  7170,
    7175,  7186,  7191,  7196,  7201,  7203,  7205,  7207,  7209,  7211,
    7213,  7215,  7223,  7225,  7230,  7231,  7232,  7233,  7234,  7235,
    7236,  7237,  7241,  7245,  7246,  7250,  7251,  7255,  7256,  7257,
    7258,  7259,  7263,  7264,  7265,  7266,  7267,  7271,  7277,  7278,
    7283,  7285,  7292,  7293,  7294,  7298,  7302,  7303,  7304,  7305,
    7306,  7307,  7311,  7312,  7313,  7314,  7318,  7319,  7323,  7324,
    7328,  7329,  7334,  7335,  7339,  7340,  7341,  7348,  7349,  7355,
    7362,  7366,  7367,  7371,  7372,  7376,  7384,  7392,  7401,  7405,
    7411,  7415,  7416,  7425,  7434,  7440,  7446,  7459,  7465,  7475,
    7476,  7480,  7485,  7489,  7490,  7494,  7495,  7499,  7506,  7510,
    7511,  7515,  7523,  7524,  7528,  7529,  7533,  7534,  7538,  7539,
    7540,  7547,  7551,  7552,  7556,  7557,  7558,  7559,  7560,  7572,
    7576,  7577,  7582,  7581,  7594,  7595,  7599,  7602,  7603,  7604,
    7605,  7609,  7617,  7624,  7625,  7629,  7639,  7640,  7644,  7645,
    7648,  7650,  7654,  7666,  7667,  7671,  7678,  7691,  7692,  7694,
    7696,  7702,  7707,  7713,  7719,  7726,  7736,  7737,  7738,  7739,
    7740,  7744,  7745,  7749,  7750,  7754,  7755,  7759,  7760,  7761,
    7765,  7766,  7770,  7774,  7786,  7787,  7791,  7792,  7796,  7797,
    7801,  7802,  7806,  7807,  7811,  7812,  7816,  7817,  7822,  7823,
    7824,  7828,  7830,  7835,  7840,  7842,  7850,  7858,  7864,  7873,
    7874,  7878,  7882,  7883,  7893,  7894,  7895,  7899,  7903,  7910,
    7916,  7928,  7929,  7933,  7935,  7945,  7959,  7944,  7980,  7979,
    7993,  8002,  8001,  8017,  8016,  8032,  8031,  8044,  8038,  8051,
    8050,  8085,  8090,  8095,  8100,  8106,  8105,  8112,  8119,  8129,
    8118,  8149,  8150,  8151,  8152,  8156,  8157,  8169,  8170,  8174,
    8175,  8178,  8180,  8188,  8196,  8198,  8200,  8201,  8209,  8210,
    8216,  8225,  8223,  8236,  8249,  8248,  8261,  8259,  8272,  8279,
    8289,  8290,  8314,  8321,  8325,  8331,  8329,  8346,  8348,  8353,
    8361,  8360,  8374,  8378,  8377,  8389,  8390,  8394,  8407,  8408,
    8412,  8416,  8423,  8428,  8432,  8439,  8443,  8448,  8456,  8464,
    8474,  8485,  8495,  8506,  8516,  8522,  8528,  8535,  8541,  8555,
    8569,  8574,  8578,  8583,  8584,  8585,  8590,  8595,  8601,  8603,
    8604,  8605,  8606,  8610,  8615,  8623,  8628,  8636,  8637,  8641,
    8642,  8646,  8646,  8649,  8651,  8655,  8656,  8660,  8661,  8670,
    8671,  8672,  8676,  8677,  8682,  8691,  8692,  8693,  8694,  8699,
    8698,  8708,  8707,  8715,  8722,  8732,  8749,  8752,  8759,  8763,
    8770,  8774,  8778,  8785,  8785,  8791,  8792,  8796,  8797,  8798,
    8802,  8803,  8812,  8819,  8820,  8825,  8824,  8836,  8837,  8838,
    8842,  8844,  8843,  8850,  8849,  8870,  8871,  8875,  8876,  8880,
    8881,  8882,  8886,  8887,  8892,  8891,  8912,  8913,  8917,  8922,
    8923,  8930,  8932,  8937,  8939,  8938,  8950,  8952,  8951,  8964,
    8965,  8970,  8979,  8980,  8981,  8985,  8992,  9002,  9010,  9019,
    9021,  9020,  9026,  9025,  9048,  9049,  9053,  9054,  9058,  9059,
    9060,  9061,  9062,  9063,  9067,  9068,  9073,  9072,  9093,  9094,
    9095,  9100,  9099,  9105,  9112,  9118,  9127,  9128,  9132,  9148,
    9147,  9160,  9161,  9165,  9166,  9170,  9181,  9192,  9193,  9198,
    9197,  9208,  9209,  9213,  9214,  9218,  9229,  9241,  9240,  9248,
    9248,  9257,  9258,  9263,  9264,  9273,  9284,  9285,  9286,  9287,
    9288,  9289,  9290,  9294,  9295,  9296,  9297,  9298,  9299,  9300,
    9304,  9304,  9312,  9312,  9324,  9328,  9330,  9334,  9334,  9345,
    9349,  9351,  9355,  9355,  9366,  9371,  9371,  9380,  9380,  9392,
    9398,  9396,  9403,  9415,  9413,  9420,  9430,  9435,  9434,  9439,
    9443,  9454,  9455,  9459,  9460,  9464,  9465,  9466,  9470,  9471,
    9472,  9476,  9477,  9478,  9479,  9480,  9484,  9484,  9502,  9509,
    9511,  9515,  9519,  9525,  9532,  9534,  9543,  9547,  9551,  9558,
    9566,  9570,  9578,  9581,  9588,  9592,  9596,  9600,  9607,  9608,
    9612,  9613,  9630,  9649,  9651,  9658,  9669,  9670,  9671,  9685,
    9690,  9712,  9718,  9724,  9730,  9736,  9737,  9738,  9739,  9740,
    9744,  9745,  9746,  9750,  9751,  9752,  9756,  9757,  9762,  9813,
    9820,  9863,  9869,  9873,  9879,  9885,  9891,  9897,  9903,  9909,
    9915,  9921,  9927,  9933,  9939,  9943,  9949,  9958,  9964,  9972,
    9978,  9987,  9993, 10001, 10011, 10017, 10024, 10031, 10039, 10045,
   10054, 10058, 10064, 10070, 10076, 10082, 10089, 10095, 10101, 10107,
   10113, 10120, 10126, 10132, 10138, 10144, 10150, 10156, 10162, 10168,
   10172, 10173, 10177, 10178, 10182, 10183, 10187, 10188, 10192, 10193,
   10194, 10195, 10196, 10197, 10201, 10202, 10207, 10211, 10215, 10216,
   10217, 10221, 10222, 10223, 10224, 10225, 10226, 10230, 10231, 10232,
   10237, 10236, 10242, 10250, 10273, 10280, 10289, 10290, 10291, 10292,
   10296, 10305, 10306, 10307, 10308, 10309, 10310, 10311, 10312, 10344,
   10345, 10346, 10347, 10348, 10349, 10350, 10351, 10352, 10353, 10354,
   10355, 10362, 10368, 10373, 10383, 10388, 10393, 10399, 10404, 10410,
   10421, 10428, 10433, 10438, 10443, 10448, 10453, 10458, 10466, 10467,
   10468, 10472, 10473, 10481, 10482, 10488, 10492, 10498, 10504, 10513,
   10514, 10523, 10530, 10544, 10550, 10556, 10565, 10574, 10580, 10586,
   10592, 10598, 10613, 10624, 10630, 10636, 10642, 10648, 10654, 10662,
   10669, 10673, 10678, 10686, 10707, 10714, 10720, 10727, 10734, 10740,
   10746, 10752, 10758, 10764, 10770, 10776, 10782, 10789, 10795, 10802,
   10808, 10813, 10818, 10823, 10828, 10846, 10852, 10858, 10863, 10870,
   10877, 10885, 10892, 10899, 10906, 10913, 10930, 10936, 10942, 10948,
   10954, 10961, 10967, 10973, 10982, 10993, 11000, 11006, 11012, 11019,
   11027, 11033, 11039, 11044, 11050, 11058, 11064, 11070, 11076, 11082,
   11090, 11102, 11109, 11124, 11130, 11137, 11144, 11151, 11158, 11165,
   11169, 11176, 11194, 11193, 11261, 11266, 11274, 11276, 11281, 11282,
   11286, 11287, 11291, 11292, 11296, 11303, 11311, 11338, 11344, 11350,
   11356, 11362, 11368, 11377, 11384, 11386, 11383, 11393, 11404, 11410,
   11416, 11422, 11428, 11434, 11440, 11446, 11452, 11459, 11458, 11483,
   11492, 11510, 11512, 11516, 11523, 11530, 11537, 11544, 11551, 11558,
   11565, 11572, 11579, 11590, 11597, 11608, 11619, 11639, 11638, 11644,
   11661, 11667, 11676, 11685, 11695, 11694, 11706, 11716, 11724, 11729,
   11737, 11738, 11743, 11748, 11751, 11753, 11757, 11762, 11770, 11771,
   11775, 11779, 11786, 11793, 11800, 11813, 11812, 11829, 11832, 11831,
   11836, 11835, 11840, 11839, 11843, 11848, 11849, 11853, 11854, 11855,
   11856, 11857, 11858, 11859, 11860, 11864, 11865, 11866, 11870, 11871,
   11875, 11882, 11890, 11891, 11895, 11902, 11910, 11919, 11929, 11930,
   11939, 11948, 11960, 11961, 11973, 11984, 11985, 11991, 11992, 12010,
   12019, 12017, 12035, 12033, 12044, 12054, 12052, 12070, 12069, 12079,
   12090, 12088, 12107, 12106, 12117, 12129, 12130, 12131, 12135, 12136,
   12144, 12145, 12149, 12164, 12165, 12169, 12169, 12210, 12276, 12319,
   12320, 12329, 12328, 12337, 12338, 12339, 12343, 12344, 12345, 12345,
   12349, 12355, 12363, 12363, 12378, 12395, 12396, 12404, 12414, 12413,
   12428, 12445, 12428, 12452, 12456, 12465, 12476, 12477, 12482, 12485,
   12486, 12487, 12491, 12492, 12497, 12496, 12502, 12501, 12509, 12510,
   12513, 12515, 12515, 12519, 12519, 12524, 12525, 12529, 12531, 12536,
   12537, 12541, 12552, 12566, 12567, 12568, 12569, 12570, 12571, 12572,
   12573, 12574, 12575, 12576, 12577, 12581, 12582, 12583, 12584, 12585,
   12586, 12587, 12588, 12589, 12593, 12594, 12595, 12596, 12599, 12601,
   12602, 12606, 12607, 12615, 12617, 12621, 12623, 12622, 12636, 12639,
   12638, 12656, 12658, 12662, 12667, 12675, 12676, 12693, 12716, 12717,
   12723, 12724, 12728, 12741, 12740, 12748, 12749, 12758, 12759, 12763,
   12764, 12768, 12769, 12783, 12784, 12788, 12798, 12807, 12814, 12821,
   12831, 12832, 12839, 12849, 12850, 12852, 12854, 12856, 12858, 12867,
   12871, 12872, 12876, 12888, 12890, 12895, 12894, 12952, 12957, 12965,
   12966, 12967, 12971, 12972, 12976, 12990, 12997, 13002, 13009, 13016,
   13023, 13033, 13038, 13043, 13047, 13053, 13059, 13068, 13077, 13081,
   13088, 13089, 13092, 13094, 13098, 13099, 13103, 13104, 13105, 13106,
   13107, 13108, 13112, 13113, 13114, 13115, 13116, 13120, 13121, 13122,
   13123, 13127, 13128, 13129, 13130, 13131, 13135, 13136, 13137, 13138,
   13139, 13143, 13148, 13149, 13153, 13154, 13158, 13159, 13160, 13165,
   13164, 13198, 13199, 13203, 13204, 13208, 13218, 13218, 13230, 13231,
   13234, 13254, 13258, 13263, 13271, 13276, 13287, 13275, 13289, 13304,
   13316, 13315, 13335, 13334, 13343, 13360, 13366, 13380, 13395, 13403,
   13407, 13412, 13411, 13420, 13425, 13431, 13436, 13441, 13448, 13446,
   13460, 13461, 13465, 13476, 13489, 13490, 13494, 13508, 13512, 13521,
   13524, 13531, 13532, 13540, 13548, 13539, 13562, 13569, 13561, 13583,
   13591, 13592, 13599, 13603, 13604, 13613, 13614, 13618, 13628, 13629,
   13630, 13632, 13631, 13643, 13645, 13649, 13650, 13651, 13655, 13656,
   13660, 13661, 13665, 13675, 13676, 13680, 13681, 13685, 13686, 13690,
   13691, 13696, 13695, 13711, 13710, 13725, 13726, 13730, 13731, 13735,
   13740, 13748, 13756, 13767, 13768, 13777, 13778, 13786, 13788, 13790,
   13788, 13803, 13811, 13802, 13837, 13838, 13842, 13849, 13857, 13858,
   13862, 13872, 13873, 13880, 13879, 13899, 13902, 13909, 13910, 13917,
   13932, 13938, 13937, 13949, 13948, 13963, 13965, 13969, 13970, 13974,
   13989, 14007, 14008, 14012, 14013, 14017, 14018, 14019, 14024, 14023,
   14044, 14046, 14049, 14051, 14054, 14055, 14058, 14062, 14066, 14070,
   14074, 14078, 14082, 14086, 14090, 14098, 14101, 14111, 14110, 14126,
   14133, 14141, 14149, 14157, 14165, 14173, 14180, 14187, 14193, 14195,
   14197, 14206, 14210, 14215, 14214, 14221, 14220, 14225, 14234, 14241,
   14246, 14251, 14256, 14261, 14266, 14268, 14270, 14272, 14279, 14287,
   14289, 14297, 14304, 14311, 14319, 14325, 14330, 14338, 14346, 14354,
   14358, 14363, 14370, 14375, 14382, 14389, 14395, 14401, 14407, 14415,
   14420, 14427, 14434, 14441, 14448, 14453, 14458, 14463, 14468, 14475,
   14497, 14499, 14501, 14506, 14507, 14510, 14512, 14516, 14517, 14521,
   14522, 14526, 14527, 14531, 14532, 14536, 14537, 14541, 14542, 14550,
   14562, 14561, 14577, 14576, 14586, 14587, 14588, 14589, 14590, 14594,
   14595, 14599, 14606, 14607, 14608, 14612, 14613, 14626, 14627, 14628,
   14643, 14642, 14655, 14654, 14666, 14670, 14671, 14686, 14689, 14688,
   14701, 14702, 14707, 14709, 14711, 14713, 14715, 14717, 14725, 14727,
   14729, 14731, 14736, 14738, 14746, 14748, 14750, 14752, 14769, 14770,
   14774, 14775, 14778, 14780, 14781, 14785, 14801, 14802, 14807, 14806,
   14816, 14817, 14821, 14821, 14825, 14824, 14830, 14834, 14835, 14839,
   14840, 14848, 14847, 14858, 14862, 14866, 14879, 14878, 14893, 14894,
   14895, 14899, 14900, 14901, 14910, 14911, 14915, 14919, 14927, 14933,
   14945, 14957, 14968, 14981, 14944, 14993, 14994, 14998, 14999, 15003,
   15004, 15012, 15016, 15017, 15018, 15021, 15023, 15027, 15028, 15032,
   15037, 15044, 15049, 15056, 15058, 15062, 15063, 15067, 15072, 15080,
   15081, 15085, 15087, 15095, 15096, 15100, 15101, 15102, 15106, 15108,
   15113, 15114, 15123, 15124, 15128, 15129, 15133, 15146, 15151, 15156,
   15161, 15169, 15177, 15182, 15195, 15204, 15220, 15227, 15233, 15243,
   15244, 15252, 15253, 15254, 15255, 15269, 15275, 15281, 15287, 15293,
   15299, 15318, 15328, 15338, 15344, 15351, 15361, 15369, 15377, 15389,
   15390, 15399, 15398, 15419, 15420, 15425, 15426, 15433, 15431, 15459,
   15460, 15466, 15471, 15480, 15500, 15501, 15505, 15510, 15518, 15523,
   15531, 15536, 15541, 15546, 15552, 15557, 15565, 15570, 15575, 15580,
   15586, 15594, 15595, 15606, 15614, 15618, 15624, 15630, 15640, 15646,
   15655, 15665, 15666, 15670, 15671, 15672, 15676, 15684, 15692, 15700,
   15708, 15709, 15717, 15718, 15726, 15727, 15732, 15741, 15742, 15750,
   15751, 15759, 15760, 15761, 15765, 15778, 15808, 15818, 15818, 15820,
   15830, 15831, 15832, 15833, 15834, 15835, 15836, 15837, 15842, 15843,
   15844, 15845, 15846, 15847, 15848, 15849, 15850, 15858, 15859, 15860,
   15861, 15865, 15866, 15867, 15868, 15869, 15870, 15871, 15872, 15876,
   15877, 15878, 15879, 15880, 15881, 15882, 15883, 15884, 15888, 15889,
   15890, 15891, 15892, 15893, 15894, 15895, 15908, 15909, 15910, 15911,
   15912, 15913, 15914, 15915, 15916, 15917, 15918, 15919, 15920, 15921,
   15922, 15923, 15924, 15925, 15926, 15927, 15928, 15929, 15930, 15931,
   15932, 15933, 15934, 15935, 15936, 15937, 15938, 15939, 15940, 15941,
   15942, 15943, 15944, 15945, 15946, 15947, 15948, 15949, 15950, 15951,
   15952, 15953, 15954, 15955, 15956, 15957, 15958, 15959, 15960, 15961,
   15962, 16003, 16004, 16005, 16006, 16007, 16008, 16019, 16020, 16021,
   16022, 16023, 16024, 16025, 16026, 16027, 16028, 16032, 16033, 16034,
   16041, 16042, 16043, 16047, 16048, 16049, 16058, 16059, 16060, 16061,
   16062, 16063, 16064, 16065, 16066, 16067, 16068, 16069, 16070, 16071,
   16072, 16073, 16074, 16075, 16076, 16077, 16078, 16079, 16080, 16081,
   16082, 16083, 16084, 16085, 16086, 16087, 16088, 16089, 16090, 16091,
   16099, 16100, 16101, 16102, 16103, 16104, 16105, 16106, 16107, 16108,
   16109, 16110, 16111, 16112, 16113, 16114, 16115, 16116, 16117, 16118,
   16119, 16120, 16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128,
   16129, 16130, 16131, 16132, 16133, 16134, 16135, 16136, 16137, 16138,
   16139, 16140, 16141, 16142, 16143, 16144, 16149, 16150, 16151, 16152,
   16153, 16154, 16155, 16156, 16157, 16158, 16159, 16160, 16161, 16162,
   16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171, 16172,
   16173, 16174, 16175, 16176, 16177, 16178, 16179, 16180, 16181, 16182,
   16183, 16184, 16185, 16186, 16187, 16188, 16189, 16190, 16191, 16192,
   16193, 16194, 16195, 16196, 16197, 16198, 16199, 16200, 16201, 16202,
   16203, 16204, 16205, 16206, 16207, 16208, 16209, 16210, 16211, 16212,
   16213, 16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221, 16222,
   16223, 16224, 16225, 16226, 16227, 16228, 16229, 16230, 16231, 16232,
   16233, 16234, 16235, 16236, 16237, 16238, 16239, 16240, 16241, 16242,
   16243, 16244, 16245, 16246, 16247, 16248, 16249, 16250, 16251, 16252,
   16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262,
   16263, 16264, 16265, 16266, 16267, 16268, 16269, 16270, 16271, 16272,
   16273, 16274, 16275, 16276, 16277, 16278, 16279, 16280, 16281, 16282,
   16283, 16284, 16285, 16286, 16287, 16288, 16289, 16290, 16291, 16292,
   16293, 16294, 16295, 16296, 16297, 16298, 16299, 16300, 16301, 16302,
   16303, 16304, 16305, 16306, 16307, 16308, 16309, 16310, 16311, 16312,
   16313, 16314, 16315, 16316, 16317, 16318, 16319, 16320, 16321, 16322,
   16323, 16324, 16325, 16326, 16327, 16328, 16329, 16330, 16331, 16332,
   16333, 16334, 16335, 16336, 16337, 16338, 16339, 16340, 16341, 16342,
   16343, 16344, 16345, 16346, 16347, 16348, 16349, 16350, 16351, 16352,
   16353, 16354, 16355, 16356, 16357, 16358, 16359, 16360, 16361, 16362,
   16363, 16364, 16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372,
   16373, 16374, 16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382,
   16383, 16384, 16385, 16386, 16387, 16388, 16389, 16390, 16391, 16392,
   16393, 16394, 16395, 16396, 16397, 16398, 16399, 16400, 16401, 16402,
   16403, 16404, 16405, 16406, 16407, 16408, 16409, 16410, 16411, 16412,
   16413, 16414, 16415, 16427, 16426, 16439, 16443, 16438, 16460, 16461,
   16467, 16466, 16473, 16472, 16482, 16481, 16492, 16491, 16497, 16505,
   16507, 16512, 16512, 16521, 16520, 16534, 16533, 16538, 16542, 16543,
   16544, 16548, 16549, 16550, 16551, 16555, 16556, 16557, 16558, 16563,
   16568, 16573, 16582, 16587, 16592, 16597, 16602, 16607, 16612, 16617,
   16631, 16642, 16661, 16679, 16691, 16699, 16704, 16720, 16721, 16722,
   16723, 16727, 16746, 16764, 16765, 16769, 16770, 16771, 16772, 16776,
   16791, 16795, 16796, 16797, 16807, 16808, 16809, 16815, 16821, 16833,
   16832, 16846, 16847, 16853, 16862, 16863, 16867, 16868, 16872, 16891,
   16892, 16893, 16898, 16899, 16904, 16903, 16920, 16930, 16941, 16940,
   16972, 16973, 16977, 16978, 16982, 16983, 16984, 16985, 16987, 16986,
   16999, 17000, 17001, 17002, 17003, 17009, 17014, 17020, 17026, 17032,
   17039, 17046, 17050, 17057, 17066, 17068, 17073, 17078, 17085, 17092,
   17099, 17106, 17113, 17120, 17132, 17133, 17137, 17138, 17142, 17147,
   17155, 17165, 17184, 17187, 17189, 17193, 17194, 17201, 17203, 17207,
   17208, 17213, 17212, 17216, 17215, 17219, 17218, 17222, 17221, 17224,
   17225, 17226, 17227, 17228, 17229, 17230, 17231, 17232, 17233, 17234,
   17235, 17236, 17237, 17238, 17239, 17240, 17241, 17242, 17243, 17244,
   17245, 17246, 17247, 17248, 17249, 17250, 17254, 17255, 17259, 17260,
   17264, 17271, 17278, 17288, 17298, 17307, 17316, 17329, 17334, 17342,
   17347, 17355, 17360, 17367, 17367, 17368, 17368, 17371, 17378, 17383,
   17389, 17395, 17401, 17405, 17409, 17410, 17414, 17442, 17444, 17448,
   17452, 17456, 17463, 17469, 17475, 17481, 17487, 17496, 17497, 17501,
   17502, 17507, 17508, 17512, 17513, 17517, 17518, 17522, 17523, 17528,
   17527, 17537, 17546, 17547, 17551, 17552, 17557, 17558, 17559, 17564,
   17565, 17566, 17570, 17582, 17591, 17597, 17606, 17615, 17628, 17630,
   17632, 17637, 17638, 17643, 17642, 17659, 17658, 17670, 17670, 17691,
   17692, 17699, 17707, 17708, 17709, 17713, 17714, 17719, 17718, 17740,
   17747, 17748, 17752, 17753, 17757, 17758, 17759, 17764, 17772, 17793,
   17820, 17822, 17826, 17827, 17831, 17832, 17840, 17841, 17842, 17843,
   17849, 17855, 17865, 17866, 17871, 17884, 17900, 17901, 17902, 17906,
   17907, 17911, 17912, 17917, 17918, 17922, 17928, 17937, 17937, 17965,
   17966, 17967, 17968, 17969, 17970, 17971, 17975, 17976, 17977, 17978,
   17988, 17990, 17996, 18002, 18012, 18021, 18027, 18032, 18036, 18010,
   18088, 18106, 18105, 18123, 18132, 18121, 18148, 18156, 18147, 18170,
   18174, 18178, 18182, 18186, 18190, 18198, 18199, 18215, 18222, 18229,
   18239, 18240, 18241, 18245, 18246, 18247, 18251, 18252, 18257, 18259,
   18258, 18264, 18265, 18269, 18276, 18286, 18292, 18303
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "ABORT_SYM",
  "ACCESSIBLE_SYM", "ADD", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM",
  "AND_SYM", "AS", "ASC", "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM",
  "BIGINT", "BINARY", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR",
  "BLOB_MARIADB_SYM", "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY",
  "CALL_SYM", "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM",
  "CHECK_SYM", "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT",
  "CONTINUE_MARIADB_SYM", "CONTINUE_ORACLE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CREATE", "CROSS", "CUME_DIST_SYM", "CURDATE",
  "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM", "CURTIME", "DATABASE",
  "DATABASES", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DAY_HOUR_SYM",
  "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FORCE_LOOKAHEAD", "FOREIGN", "FOR_SYM",
  "FOR_SYSTEM_TIME_SYM", "FROM", "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM",
  "GRANT", "GROUP_SYM", "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM",
  "HAVING", "HEX_NUM", "HEX_STRING", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "POSITION_SYM", "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE",
  "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM", "REF_SYSTEM_ID_SYM",
  "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REPLACE",
  "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT", "ROWS_SYM",
  "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM", "SECOND_MICROSECOND_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERVER_OPTIONS", "SET",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SIGNAL_SYM", "SMALLINT",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_SMALL_RESULT", "SQL_SYM",
  "SSL_SYM", "STARTING", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM",
  "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM",
  "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM",
  "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM",
  "COLON_ORACLE_SYM", "COLUMNS", "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM",
  "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPORT_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM",
  "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOTFOUND_SYM", "NO_SYM",
  "NOMAXVALUE_SYM", "NOMINVALUE_SYM", "NO_WAIT_SYM", "NOWAIT_SYM",
  "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM", "NVARCHAR_SYM", "OF_SYM",
  "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM", "ONLY_SYM", "ONLINE_SYM",
  "OPEN_SYM", "OPTIONS_SYM", "OPTION", "OWNER_SYM", "PACK_KEYS_SYM",
  "PAGE_SYM", "PARSER_SYM", "PARTIAL", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM", "PERSISTENT_SYM",
  "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM", "STOP_SYM",
  "STORAGE_SYM", "STORED_SYM", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSTEM",
  "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TEXT_SYM", "THAN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIM_ORACLE",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM", "PREC_BELOW_NOT",
  "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'.'", "'@'", "':'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_var_list", "execute_var_ident",
  "help", "$@6", "change", "$@7", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "do_domain_id_list",
  "do_domain_id", "ignore_domain_id_list", "ignore_domain_id",
  "master_file_def", "optional_connection_name", "connection_name",
  "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15",
  "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23",
  "sf_tail_not_aggregate", "sf_tail_aggregate", "create_function_tail",
  "create_aggregate_function_tail", "opt_sequence", "sequence_defs",
  "sequence_def", "force_lookahead", "server_def", "$@24",
  "server_options_list", "server_option", "event_tail", "$@25",
  "ev_schedule_time", "$@26", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@27", "clear_privileges", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@28",
  "$@29", "$@30", "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams",
  "sp_fdparam_list", "sp_fdparams", "sp_param_name",
  "sp_param_name_and_type", "sp_pdparam_list", "sp_pdparams", "sp_pdparam",
  "sp_opt_inout", "sp_parenthesized_fdparam_list", "$@31",
  "sp_parenthesized_pdparam_list", "$@32", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl",
  "optionally_qualified_column_ident", "row_field_name",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "sp_decl_body",
  "$@33", "sp_decl_handler", "$@34",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@35", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt_in_returns_clause", "sp_proc_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@36",
  "sp_proc_stmt_statement", "$@37", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@38", "reset_lex_expr", "$@39",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "assignment_source_lex", "assignment_source_expr", "$@40",
  "for_loop_bound_expr", "$@41", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@42", "$@43", "$@44", "sp_elseifs",
  "case_stmt_specification", "$@45", "case_stmt_body", "$@46", "$@47",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@48", "$@49", "searched_when_clause", "$@50",
  "$@51", "else_clause_opt", "sp_label", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@52", "sp_unlabeled_block", "$@53",
  "sp_unlabeled_block_not_atomic", "$@54", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "while_body", "$@55", "repeat_body", "$@56", "pop_sp_loop_label",
  "sp_labeled_control", "$@57", "$@58", "$@59", "$@60", "$@61", "$@62",
  "sp_unlabeled_control", "$@63", "$@64", "$@65", "$@66", "$@67",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@68", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@69", "$@70", "$@71", "create_like", "opt_create_select",
  "create_select_query_expression", "$@72", "$@73", "$@74",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@75",
  "have_partitioning", "partition_entry", "$@76", "partition", "$@77",
  "part_type_def", "$@78", "$@79", "$@80", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@81", "$@82", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@83", "part_name",
  "opt_part_values", "$@84", "$@85", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@86", "$@87",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@88", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "$@89", "opt_versioning_interval_start",
  "create_select_query_specification", "create_select_part2", "$@90",
  "create_select_part3", "create_select_part3_union_not_ready",
  "create_select_part4", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@91", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list", "field_list",
  "field_list_item", "column_def", "key_def", "$@92", "$@93", "$@94",
  "$@95", "$@96", "$@97", "$@98", "constraint_def",
  "period_for_system_time", "opt_check_constraint", "check_constraint",
  "opt_constraint_no_id", "opt_constraint", "constraint", "field_spec",
  "@99", "field_type_or_serial", "$@100", "$@101", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@102", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@103", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "qualified_field_type", "field_type_all",
  "field_type_numeric", "opt_binary_and_compression", "field_type_string",
  "field_type_temporal", "field_type_lob", "field_type_misc",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "srid_option", "float_options", "precision",
  "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1", "opt_precision", "attribute_list",
  "attribute", "opt_compression_method", "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "collate", "opt_binary", "binary",
  "opt_bin_mod", "ws_nweights", "$@104", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@105", "$@106", "$@107", "$@108", "$@109", "$@110", "$@111",
  "$@112", "$@113", "$@114", "$@115", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@116", "$@117", "$@118", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@119",
  "add_part_extra", "reorg_partition_rule", "$@120", "reorg_parts_rule",
  "$@121", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@122", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@123", "$@124", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@125",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@126", "opt_checksum_type",
  "repair_table_or_view", "$@127", "repair", "$@128", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@129", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@130", "persistent_index_stat_spec",
  "$@131", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@132", "check", "$@133",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@134", "opt_no_write_to_binlog",
  "rename", "$@135", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@136", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@137", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@138", "cache_keys_spec", "$@139", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "union_list_part2",
  "select_paren", "$@140", "$@141",
  "select_parent_union_query_term_proper", "select_paren_union_query_term",
  "$@142", "select_parent_view_proper", "select_paren_view", "$@143",
  "select_paren_derived", "$@144", "$@145", "select_init3", "$@146",
  "select_init3_union_query_term", "$@147", "select_init3_view", "$@148",
  "select_part3", "select_part3_union_query_term", "select_part3_view",
  "select_part3_union_not_ready", "select_part3_union_not_ready_noproc",
  "select_options_and_item_list", "$@149", "table_expression",
  "opt_table_expression", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "opt_select_lock_type", "select_item_list",
  "select_item", "remember_tok_start", "remember_tok_end", "remember_name",
  "remember_end", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "expr", "boolean_test",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "opt_dyncol_type", "dyncol_type", "numeric_dyncol_type",
  "temporal_dyncol_type", "string_dyncol_type", "$@150",
  "dyncall_create_element", "dyncall_create_list", "plsql_cursor_attr",
  "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@151", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@152", "$@153", "$@154",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@155",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@156", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@157", "cast_type", "$@158", "$@159",
  "$@160", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@161", "$@162", "$@163", "$@164", "$@165", "$@166", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident", "$@167", "table_primary_derived",
  "select_derived_union", "$@168", "union_list_derived_part2", "$@169",
  "union_list_derived", "select_init2_derived", "select_part2_derived",
  "$@170", "select_derived", "derived_simple_table",
  "derived_query_specification", "derived_table_value_constructor",
  "$@171", "select_derived2", "$@172", "$@173", "get_select_lex",
  "get_select_lex_derived", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@174",
  "$@175", "index_hints_list", "opt_index_hints_list", "$@176",
  "opt_key_definition", "$@177", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@178", "opt_having_clause", "$@179",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@180",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@181", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause_init", "limit_clause", "limit_options", "limit_option",
  "limit_rows_option", "delete_limit_clause", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "longlong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "choice", "bool",
  "procedure_clause", "$@182", "procedure_list", "procedure_list2",
  "procedure_item", "select_var_list_init", "$@183", "select_var_list",
  "select_var_ident", "select_outvar", "into", "into_destination", "$@184",
  "$@185", "do", "$@186", "drop", "$@187", "$@188", "$@189", "table_list",
  "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "opt_if_exists_table_element",
  "opt_if_exists", "opt_temporary", "insert", "$@190", "$@191", "replace",
  "$@192", "$@193", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "$@194", "fields", "insert_values",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "opt_with", "opt_by", "no_braces", "$@195", "no_braces_with_names",
  "$@196", "opt_values", "opt_values_with_names", "values",
  "values_with_names", "expr_or_ignore", "expr_or_ignore_or_default",
  "opt_insert_update", "$@197", "$@198", "update", "$@199", "$@200",
  "update_list", "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@201", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "single_multi", "$@202", "$@203",
  "opt_select_expressions", "table_wild_list", "table_wild_one",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate",
  "$@204", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@205", "show_param",
  "$@206", "$@207", "show_engine_param", "master_or_binary", "opt_storage",
  "opt_db", "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "wild_and_where", "describe", "$@208", "$@209", "explainable_command",
  "describe_command", "analyze_stmt_command", "opt_extended_describe",
  "opt_format_json", "opt_describe_column", "flush", "$@210",
  "flush_options", "$@211", "opt_flush_lock", "flush_lock", "$@212",
  "flush_options_list", "flush_option", "opt_table_list",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@213", "reset_options",
  "reset_option", "$@214", "$@215", "slave_reset_options",
  "master_reset_options", "purge", "$@216", "purge_options",
  "purge_option", "kill", "$@217", "kill_type", "kill_option",
  "opt_connection", "kill_expr", "shutdown", "use", "load", "$@218",
  "$@219", "$@220", "$@221", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "hex_or_bin_String", "param_marker",
  "signed_literal", "literal", "NUM_literal", "temporal_literal",
  "opt_with_clause", "with_clause", "$@222", "opt_recursive", "with_list",
  "with_list_element", "$@223", "opt_with_column_list", "with_column_list",
  "with_element_head", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "label_ident", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@224", "$@225", "$@226",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@227", "$@228", "$@229",
  "start_option_value_list_following_option_type", "$@230",
  "option_value_list_continued", "option_value_list", "$@231", "$@232",
  "option_value", "$@233", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@234",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@235", "handler", "$@236",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@237", "handler_rkey_mode", "revoke", "revoke_command",
  "admin_option_for_role", "grant", "grant_command", "opt_with_admin",
  "opt_with_admin_option", "role_list", "current_role", "grant_role",
  "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@238", "$@239", "$@240",
  "$@241", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@242", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_clause", "union_list",
  "$@243", "union_list_view", "$@244", "union_order_or_limit", "$@245",
  "order_or_limit", "union_head_non_top", "union_option", "simple_table",
  "table_value_constructor", "$@246", "query_specification",
  "query_term_union_not_ready", "query_term_union_ready",
  "query_expression_body", "subselect", "subselect_start", "subselect_end",
  "opt_query_expression_options", "query_expression_option_list",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@247", "query_expression_body_view",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@248", "$@249",
  "$@250", "$@251", "$@252", "udf_tail", "sf_return_type", "$@253",
  "sf_tail", "$@254", "$@255", "sp_tail", "$@256", "$@257", "xa",
  "opt_format_xid", "xid", "begin_or_start", "opt_join_or_resume",
  "opt_one_phase", "opt_suspend", "$@258", "opt_migrate", "install",
  "uninstall", "keep_gcc_happy", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-5093)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3380)

#define yytable_value_is_error(Yyn) \
  0

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
    7500,  3511,  1207, 91108, -5093,    61, -5093,   176, -5093, -5093,
   -5093,  3894, -5093, -5093, -5093, -5093, -5093, -5093,    85,   145,
   -5093,  1074, -5093, -5093, -5093, 86670,   -51,   767, -5093, -5093,
   87938, -5093,   -57, -5093, 87938, -5093, -5093, 91108, -5093,  1053,
   -5093,  2083,    52,   524,   145,   693, -5093, -5093, 91742,  1074,
    1108, 75872, -5093,  1340, 91108,  1074, -5093,   693, 91108, -5093,
     262,   256, -5093,  1687,  3561,  1627,  1739, -5093, -5093,  1176,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093,  4042, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   76506, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,   390,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, 91108, 91108,  1400,
    1424, 91108,  2301,  2353, 87304, 91108,  2353, -5093,    82, -5093,
   -5093,  2071, -5093,  1744, -5093,   145,  1715, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  1782,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  2298,
    2310,   453,  2439,  2568, 91108,  1262,  2353,  2575,  2353,  2353,
    2353,  2353,  2618,  2353,  2353, 91108, -5093,  2353,  2353,   749,
   91108, 36394, -5093,  1205,   830,  2615, -5093, -5093, -5093, -5093,
   -5093, -5093, 55478,   145, 22362,  2701,   321,  4283,  2045, -5093,
    2513, -5093, -5093, 91108, -5093, -5093, 55478,  1152, -5093,  2513,
   37132, -5093, 34949,  8805,  2513,   145,  2667, -5093, 22362, -5093,
   -5093, -5093, -5093,  2495,   693, -5093, 87304, -5093, -5093, -5093,
   -5093,  2824, 22362,   381, -5093, -5093, -5093,  2428, 91108,  2285,
     299,  1192, 87304, 91108,  2310,  2762, -5093,    -7,  1448, -5093,
    2222,  2310,   327,  2224,  2310,  2642, 91108,  2310, -5093, -5093,
    2441,  2441,  2441,  2451,  2441, -5093,  2441, -5093, -5093,  2206,
   91108,  2809, -5093, -5093, -5093,  2809,  2809,  2317,  2861,  2869,
    2874,   121,  1751,   227,  1109,  2071,   315,  1744,   913, -5093,
   -5093, -5093,  2227, -5093, -5093,   284, -5093,  2705, -5093,  2274,
   -5093,  2234,  1151, 58165, -5093, 91108,  2937, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,  1017, -5093, -5093,  2767,   331,
    2381,  2620,  2309, -5093,  2792, 87304, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, 91108,  2282, -5093,  2982, 22362,  2298, -5093,
    2779, -5093, -5093, -5093, -5093, 75872, -5093, 91108, -5093,  3076,
   -5093, -5093,  2997, -5093, -5093, 79696,   587, 91108,  3024, 91108,
   91108, 91108, 91108, 91108, 91108, -5093, 87304,  2419, -5093, -5093,
    2353,  2353, -5093,  2993,  2530,  2501,  2722,  2388,  2695, -5093,
    2593, -5093, -5093,  2478, -5093, -5093,   174, -5093, -5093, -5093,
     219,   233,   237,   247,  3003,   265,  1046,   306,   328, -5093,
   -5093, -5093,  2921,  3007,  2437, -5093,  2791, 22362, -5093, -5093,
   -5093,  3093, -5093, -5093,  1078,  2867,  1284, 75872, 96814, 79052,
   97732, 97732, 97732, -5093,   241,  2083, 91108, 97273, 91108, 49466,
   -5093,  2453, -5093, -5093,  6828, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, 91108, -5093, -5093,  2153,  2885, -5093, -5093,
   -5093, -5093, -5093,  2466, -5093, -5093, -5093, -5093, -5093, -5093,
   27640, -5093,  2462,  2497,  2506, 17838,  2544,  2546,  2554,  2556,
    2581,  2388,  2388,  2388,  2585,  2601,  2605,  2611, -5093,  2623,
    2625,  2631,  2646, -5093,  2648, -5093,  2651,  2656,  2659, -5093,
   -5093,    99,   105,  2664,  2672, 23116,  2681, -5093, 71434,  2683,
    2687,  2694,  2703, -5093, -5093, 22362,  2585,  2716, -5093, -5093,
    2719, -5093,  2725,  2736,  2744,  2757,  2761,  2763,  2770,  2810,
    2817,  3054,  2829,  2834,  2837,  2843,  2585, -5093,  2860, -5093,
   -5093,  2494,  2388,  2585,  2585,  2864,  2891,  2893,  2896,  2899,
    2907,  2918,  2922, 88572,  2924,  2927,  2932,  2934,  2941,  2944,
    2960,   333,  2964,  2968,  2974,  2979,  2981,  2991,  2999,  3002,
    3006,  3013,  3021,  3025,  3028,  3032,  3034,  3038,  2535,  3042,
    3045,  3057,  3060,  3079,  2572,  3085,  3087,  3091,  3102,  3104,
    3106,  3136,   353,  3150,  3160,   388,  3179,  3188,  3194,  3197,
    3199,  3208,  3210,  3219, 28394, 29148, 27640, 22362, -5093, 91108,
   92376, -5093,  3603,  2647,  3286,  2890, 27640, -5093, -5093, -5093,
    3269, -5093,  3202, -5093, -5093, -5093, -5093, -5093, -5093,  3195,
   -5093,  3259, -5093, -5093,  3272,  2768, -5093,  3248, -5093, -5093,
   -5093, -5093, -5093,  2775,  3220,  3360,  3435, -5093, -5093, -5093,
   -5093,  3205, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,  2951,  2884, -5093,  3248, -5093,
   -5093, 58859, 75872, 56146, -5093, -5093, -5093, 72068, -5093, -5093,
    2530,  3416,  3562, -5093,  3660, -5093,  3595, 62969,  3755,  1241,
     347,   422,   481, 42587,   202, 84134,   512,   209,  3222, 67628,
   44037,  3223,   337,  3226, -5093,  3229,  3230,  3234,  3235,  3242,
    3246,  3247, -5093, -5093, -5093,  3361,  3257,  3171,  1325, -5093,
   -5093,   993,  3347,    88, -5093,  3600, -5093,  1325, -5093, 37793,
    3886,  2482, -5093,  1061, -5093,  3936, -5093, -5093,  3357,  3342,
    3370, -5093,  2476, -5093,  2310, -5093,  1067, -5093,  3886,  1325,
    2482, -5093,  3537,  3630,   982,  3954, -5093,  1665, -5093, -5093,
    3093, -5093,  2953, 91108, -5093, -5093,  3285, 75872, 75872,  1316,
     961,  3603,  3290, -5093, 22362,  3772,  4961, 39158, -5093,   165,
   -5093, -5093, 91108, -5093,  3394, -5093, -5093,   927, -5093,  3716,
   -5093,  3296, -5093, 93010,   961, -5093, -5093,    32,  3692, -5093,
    3307, -5093, -5093, -5093, -5093, 75872, -5093, -5093, -5093, -5093,
   -5093, -5093,  3309, -5093, -5093,  3513,  3393, -5093,  3336, -5093,
   -5093,   339,  4004, -5093,  2083, 91108, -5093, -5093,  2809, -5093,
    2809,  2809,  2809,  2809,  2809, -5093, -5093, -5093,  3365,  3641,
   -5093,  3642, -5093,  2792,  1715, 46058,  3071,  3192,  3332,   284,
    3333,  3810,  3870, -5093, -5093, -5093,   529, -5093, -5093,  2471,
    4041,  3712, -5093, 91108, -5093, -5093, -5093,  2388,  3334, -5093,
   -5093, -5093, -5093, -5093,  4100, -5093, -5093, 75872,  3536,  3720,
    3720,  3720,  4107, -5093, -5093, -5093, 58165, 75872, -5093, -5093,
   -5093,   331, -5093,  1719, 91108, 75872,  3384, -5093, 75872,  3344,
   22362, -5093, 22362, 55478,  3701,  3603, -5093, -5093, 75872,   948,
   -5093, -5093, -5093,  4100,  3720, 75872,  4103, 75872,  3826, -5093,
    3364, -5093,  3363, -5093, -5093, -5093,  3952, -5093, -5093, -5093,
    3374,  2419, 59552, -5093,  1472,  3714, 58859, 75872, -5093, -5093,
    3726,  3509, -5093, -5093, -5093, -5093, -5093, -5093,  3455, -5093,
   -5093,  3382, -5093, -5093, -5093,  3385, -5093,  3385,  3385, -5093,
   -5093,  3385, 58859, -5093, -5093, 58165,  1542,  6326,  4037,  3233,
   -5093, 72068, -5093, 23870, -5093, 24624, -5093, -5093, -5093,  3657,
     200,  1460, -5093, -5093,  3858, 91108,  3606,  4060,  4035, -5093,
   -5093, -5093, -5093, -5093, -5093,  3867,  3412,  4030,  3411, -5093,
   -5093, 22362,  3417, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   75872,  3418, 27640, 27640, -5093,  4181,  4181,  4181, 22362,  3476,
    1604,  3776, 22362, 22362, 22362,   568,  3427, -5093, -5093, -5093,
     230, -5093,  3428, 22362, 22362, 72702,  3433, -5093,  4571, 22362,
    4129, 22362, 22362, 22362, 22362, 22362,  4611, 22362, -5093, -5093,
   92376, 72702,  3879,  3441, -5093,  3437, -5093,  2284, 22362,  2289,
   22362, -5093, -5093, 22362, 22362,  3445, 22362, 22362, 29902,  3446,
   22362, 22362, 22362,  3450,  3579,  4181,  4181, 22362,  2335, -5093,
   17084, -5093, -5093, -5093, -5093, -5093,  4181,  4181, 22362, 22362,
    2511, 22362, 22362, 22362, -5093,  3447, 22362, 22362, 22362, 22362,
   22362, 22362, 22362, -5093, 22362, 22362, 22362, 22362, 22362, 22362,
    1556, 22362, 22362, 75872, 22362, 22362, 22362, 22362, 22362, 22362,
   22362,  4122, 75872, 22362, 22362, 22362, 22362,  4126, 22362, 22362,
   22362,  3462, 22362, 75872, 22362, -5093, 22362,  4074,  4074, -5093,
   22362, 17084, 22362,  3463, 73336, 22362, 22362, 22362, 22362, 23116,
   -5093, 23116, -5093, -5093,  3466,   298, -5093,  3932, 22362,  3467,
   68263, -5093, -5093, -5093, -5093, 22362, 22362, 22362, 29902, -5093,
    1011, -5093, -5093, -5093, -5093, -5093, 16330, 29902,  3475, 29902,
   29902,  4101,  2379, 29902, 29902, 29902, 29902, 29902, 29902, 29902,
   30656, 31410, 29902, 29902, 29902, 29902, -5093, 87304, 27640, 77774,
    3483,  4149, -5093, 92376, -5093,  2056,   611,  1569,  4283, 32884,
   -5093,  3486, -5093,  3986,  3491, -5093,   746,  3485, 75872, -5093,
   -5093, -5093,  4067,  3497,  4169, 58859, 58165,  1641,  3500,   542,
    3508, -5093, -5093, 59552, 91108, -5093, -5093, -5093, -5093, -5093,
    4239, 22362, -5093, 58859, -5093,  1153, 15576, -5093,  1274,  1561,
     337, -5093, -5093, -5093, -5093, -5093, 15576, 91108, 63647,  3514,
    3613,  3539,  2809, 91108, 75872, 91108, 93644, 91108, 91108, 75872,
   58859, 75872, -5093, -5093, -5093, 91108,  1325,  2482,  1167,  1325,
    4165, -5093,  1565,  1565, -5093, -5093, -5093, 84768, -5093, -5093,
   -5093,  1325, 91108, 91108,  1325, 58165, -5093,  2482,  2198, -5093,
    3818,  3611, -5093, -5093, -5093,  3862, -5093, -5093,  4206,  3540,
   -5093,  3893, -5093, -5093,  3627, -5093, -5093, 75872, -5093, -5093,
    2482, -5093,  2482,  2482, 22362,  1325,  1325,  1325,   608, -5093,
    3551, -5093,  3556, -5093, -5093,  3550,  4198,  3560, -5093, -5093,
    4133,   864, -5093,  3982, -5093,  4117, -5093, 22362,  3772,  3603,
   -5093, -5093,  3836, -5093,  3838,  3842,  3844, -5093, -5093, -5093,
   -5093,  3999,  3848, -5093,  2310,  3850, -5093, -5093,  3584, -5093,
   -5093, -5093, 32884, 87304, -5093,  3585, -5093,  3607, -5093, -5093,
   -5093, 95546, -5093, 94278, -5093,  2310, -5093, -5093, -5093, 75872,
    4082, -5093,  2310,    -7, 91108, -5093, -5093, -5093,  1674, -5093,
   -5093, -5093,  3694,   327, -5093, -5093,   746,  2441,  3773, -5093,
   -5093, -5093, 87304, -5093, -5093, -5093, -5093, -5093,  4273, -5093,
   59552, 58165, 87304, 91108, 91108, 91108, 75872, 75872,  2809, -5093,
   -5093,  2809, -5093,  2809, -5093,  2809,  3636, -5093, -5093, -5093,
   -5093,   193,  1248,  4339, -5093,   466, -5093,  3472,   466,  3826,
    3886, -5093,  4271, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  3616,  3192, -5093, -5093, -5093,  3608,
   -5093,  3610,  2705,  3071, -5093, -5093, -5093, -5093, -5093, -5093,
     175, -5093, -5093, -5093,  1519,  3967,  1820, -5093, -5093, 87304,
    1820,   -80,  1738, -5093,  3612,  2310,  1553, -5093,  1553, -5093,
    3909, -5093,  3911,   252, -5093,   746, -5093, -5093, -5093, -5093,
   -5093, 75872,  3618, -5093,  3806, 91108,  2282,  3628,  3626,  3603,
    3603, 50134,  4366,  4104,  5682,   127,  3682, -5093, -5093, -5093,
   -5093, -5093, 75872, -5093, -5093,  2057,  2870,  4120,  4067,  3715,
   -5093,  3648, -5093, -5093,   716, -5093,  4231, 91108,  4321, 80330,
   -5093, 75872, 91108,  1472,  3665, -5093, -5093, -5093, -5093, -5093,
     337, -5093,  3678,   140, 75872, 75872, 55478, -5093,  3681, -5093,
   -5093, 91108, -5093, -5093, -5093, -5093,  4178,    26, 33527, 73970,
   -5093, 73970, 73970, -5093, -5093, -5093, -5093, -5093,  1046, -5093,
   -5093, -5093, -5093, -5093, -5093, 22362, 46752,  3603, -5093, -5093,
   75872, -5093,  4331,   369, -5093,   137, 75872, -5093, -5093, 22362,
   -5093,  4327,  3815, 91108, -5093,  4393, -5093, -5093, -5093, -5093,
   -5093, -5093,  3603, 91108, 91108, 55478, 55478, 22362, -5093,  1551,
   22362, -5093,  3691, -5093,  3700,  3702,  3625,  4053, 22362, 22362,
   -5093,  3614,   475,   234, -5093,  3704,  3717, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,  3705, -5093, -5093, -5093,   341,
     359,  3723, -5093,  3724, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  4381, -5093,   410, -5093, -5093,   242,
     255,   423,   500,   528,  3737,   546,  3447,  2245,  3729, 72702,
   92376,  4181,  3730,   503,  4181,  3732,   656,   628,   722, -5093,
    1500,  1919,  3284, -5093,   798,   842,   866, -5093, -5093,  3733,
    3735,   228,  4181,  3736, 18592, 19346, 20100,  3667,  3739,  3740,
    3742,   904,  1925,  4181,  3746,  1963,  2304,  1978, 92376,  1155,
    2037,  1221, -5093,  2327,  1267,  1387,  1408,  1415,  2048,  2062,
    1431,  1436,  1451,  2337, -5093, -5093, -5093, -5093,  3750,  2077,
    2133,  3752,  3756,  2352,  2146,  2178,  2204,  2365,  2499,  2524,
   75872,  3758,  2231,  2300,  1461,  2527, 75872,  2303,  2358,  1473,
   -5093,  2413,  3760,  1566,   263,  3763,  3764,  2420,  3766,  1591,
   -5093, 92376, 91108,  3771,  3708,   268,   248,  1598,  2464,  4611,
    4611, -5093, 22362,  1021,   218, 92376,  1561, -5093,  4300,  3067,
    1678, -5093,  3286, -5093, -5093, -5093, -5093,   183, -5093,  3774,
    3286,  3777,  1736, 22362,  1659,  2083, 29902, 29902,  3778, 29902,
   29902,  3784,  3784,   303,  2821,  2821,  3074,  2278, 23116,   303,
   23116,   303,  3784,  3784,  3784, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093,  4351,  3783,  -127,  3785, -5093, -5093, -5093,
   -5093, -5093, -5093,    44,  4188, -5093,  3973,  1068, 22362,  2310,
   -5093,  3809,  4295,  4296,  4297, -5093, -5093, -5093, -5093, 58859,
   58859, 75872,  4293, 22362, -5093,  1209,  3800, -5093, -5093,  4466,
   59552,  4473, -5093,  3805, 34242, 73970, 73970, 73970, 91108, 91108,
   15576, 62969,  4478,  4483,   337, 62291, -5093,  3603,   337, -5093,
    3816,  3820, -5093, -5093, 27640,  2623, -5093,  3603, -5093,  1644,
    4087, -5093,  3819,  3821, -5093,  3811,  3817,  3823, 66359, 22362,
   -5093,   337,  1274, -5093, -5093, -5093, -5093, -5093,  3825, 91108,
   -5093, -5093, -5093, 91108, -5093, -5093, -5093, -5093, -5093, -5093,
    2310, 22362, -5093, -5093,  1325, 91108,  1325, -5093,  2310,  4494,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,  4168, -5093, 88572,
    4364,  1022, -5093,  3827, -5093, -5093, -5093, -5093, -5093,  1325,
   -5093, -5093, -5093, -5093, -5093,  3994,  3886,  2476,  4165, -5093,
    2482, 75872,  1325,  1325,  3603, -5093, -5093, -5093, -5093, 91108,
    4854,  4367, -5093,  3834, -5093, -5093, -5093, 75872, -5093, 55478,
   91108, 91108, -5093,  4393, 87304, 64325, 75872, -5093, -5093, -5093,
    2604, -5093, -5093, -5093, -5093, -5093,  3603, -5093, 20854,  4546,
   -5093, -5093, -5093, -5093,  2310, -5093, -5093,  4687, -5093, 75872,
   -5093, 70166, -5093, 70166,  2172, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093,   245,   312,  1962,  3826,
   -5093, -5093, 75872,  1034,   137, -5093,  4600, -5093, -5093, -5093,
   -5093, -5093,  3843, -5093,  3891, -5093, -5093, -5093,  3851, -5093,
    4519, -5093, -5093,  1728,   225,   252, -5093,   411,  4439,  4440,
   -5093, -5093, 91108, -5093,  2809, -5093, -5093,  2809, 75872,  2809,
   -5093, -5093, 91108, -5093, -5093,  2809, -5093, 91108,  2809, -5093,
   -5093, -5093,  4355,  4355, -5093, 68898, -5093, -5093,  4343,  4504,
   -5093, 91108, -5093, -5093,   458, -5093,  4531, -5093, -5093,  4231,
   -5093,  3868, -5093, 22362, -5093,  3856,  3871, -5093, -5093, -5093,
   -5093, -5093, -5093,  3071,  1063, -5093,   337,   337,  4093,  4388,
    4391,  4001,  2310,  4395,  4398,  4399, -5093, -5093, -5093,  2310,
    2310, -5093, -5093,   337, -5093,  1796, -5093, -5093, -5093, -5093,
    3923,  1163, -5093,   337,   337, -5093,  2955, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  1797, -5093,   189,  1911, 58165,  4350,
   -5093,  4472,  3890, -5093, 75872,  4560, -5093, -5093, -5093, -5093,
   22362,  4390, -5093, -5093,  4104, -5093,  3908,  3910,  3921,  3925,
    3928,  3930,  3934,  3935,  3938,  3939,  3941,  3943,  3945,  3946,
    3949,  3950,  3955,  3960,  3964,  3965,  3966,  3968,  3969,  3974,
    3906, -5093, -5093,  3995, -5093, -5093, -5093, -5093,   337,   337,
     337,   337, -5093,  3528, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  4227,  3293, -5093,  1695, 91108,  4400, 80330, -5093,
   22362,  4563, -5093, -5093,   608, -5093,  3956,   746, -5093, -5093,
   59552, -5093, 87304, 58859, -5093, -5093, -5093,  3959,  1551, 50802,
   -5093, -5093,  4659, -5093,  2534, -5093, 58165,  4416, -5093, 73970,
    3970, -5093,  3971,  4465,  4468,  4469,  4470, 55478,  1209,  3603,
   -5093, -5093,  3978, -5093, -5093,  4133,  4355,  4006,  4241,  4372,
   -5093, -5093, -5093,  1975, -5093, -5093,  3603, -5093, -5093, -5093,
    4626, 57466, 51470,  3983, -5093, -5093, -5093,  2536, -5093, -5093,
   97732, 97732, 97732,  4393, -5093,  1601, -5093, 22362, -5093, -5093,
   22362, -5093,  3603,  4211,  3191, 45409, -5093, 45409,  3191, 22362,
   -5093,  3987, -5093,  4630,  4631, -5093, -5093, 22362, -5093, 22362,
   -5093, 22362, -5093, 22362, 22362, 22362, 22362, 22362, 22362, -5093,
   29902, -5093,  3988,  3992, -5093, -5093,  3997, -5093, 22362, -5093,
   22362, -5093, -5093, 22362, 22362, 22362, 22362, -5093, -5093, 22362,
   22362,  4008, -5093, 22362,  4003, 22362,  4545, 22362,  4565, 22362,
   -5093, -5093, -5093, 25378, -5093,  4009, -5093, -5093, -5093, -5093,
   -5093, 22362, -5093, 22362, -5093, 22362, 22362, 22362, 22362, 22362,
   -5093, -5093, 22362, 22362, 22362, -5093, 22362, -5093,  4570, 22362,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, 22362, -5093, -5093, -5093, -5093, 22362, -5093,   393,
   26132, -5093, 22362, 22362, 22362, -5093, -5093, 22362,  4005,  4007,
   -5093, 91108, -5093, 22362,  2720,  3710,   137,  4012, 22362, -5093,
    4011,  4013,  3290, -5093,   362,  2854, -5093, -5093, -5093,  2095,
   -5093, -5093, -5093, 96180, 22362, -5093, -5093, -5093, -5093, -5093,
   29902,   271,  4015, 29902,  2083,  3294, 22362,  1835,  2083,  4611,
    4611, 91108,  4753,  4017, -5093, 22362, 92376, 22362,  4019,  4020,
   -5093,  4026, 29902, -5093, -5093,  4028, -5093,  2532,  3710,  4109,
    4475, -5093,  3603, -5093, 32884,  4525, -5093, -5093, 75872,  3224,
   -5093,  3332,  3332, 70800, -5093, -5093, -5093,  4569, 91108,  4230,
   -5093, 58859, 58165, 73970,  4707,  4708,  4710,  4714,   337,   337,
   -5093, -5093,  7849, 58859, 15576, -5093, -5093, -5093, -5093,  4550,
    4551, -5093, -5093,   588,  4337,  4612, -5093, -5093, -5093,  4049,
   -5093, -5093, -5093,   654, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  3603, 15576, -5093,  3514,  4057, 35656,   941, -5093,
   -5093, -5093,  3603, -5093, -5093, -5093, -5093,  4070, -5093, 86036,
   -5093,  4401, 86036, 86036, 92376, -5093, -5093,  4650, -5093, -5093,
    4494,  3826,  2482, -5093, -5093,  2288,  4068,  4709,  4713, -5093,
    4651,  2947,  4651, -5093, -5093,  4068, 73336,   608,  4067, 52138,
   -5093,  2550, -5093,  4824, 52806, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,  4081, -5093,  2623, -5093,  4084,
   -5093,  3603, -5093, -5093,  4098, -5093, -5093, -5093,  3959,   380,
    4111,  4086, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  3886,
     130, -5093, -5093, -5093, -5093, -5093,  1125, -5093, -5093, -5093,
    1674,  3037, -5093,   137,  4324, -5093, -5093,  1728,  4548, -5093,
    4350,  4770,  1043,  1043,  4688, 75872, 75872,  6516,  3923, -5093,
   -5093, 91108, -5093, -5093, -5093, -5093, -5093, -5093,  1280, -5093,
   75872, -5093, -5093, -5093, 87304,  4113, -5093, -5093,  4099, -5093,
   22362,   746,  4222, -5093, -5093, -5093,  2095,  4849,  4775,  3886,
   -5093,  3603, -5093,  4115, 20854,  4119,  4121, -5093, -5093,   466,
   -5093,  4124, -5093,  2705, 62291, 44759, -5093,  4497,  4499,  1755,
   -5093, -5093, -5093, -5093, -5093, -5093,  4396,  1738, -5093,   337,
     337, -5093,   178,   337, -5093, -5093,   332, -5093, -5093,  1439,
     223,  3923, -5093,  2310,  2310,  2310,  2310,   137,  2310,  2310,
    2564, -5093,  4396,  4396,  1553, -5093,  1137, -5093, -5093, -5093,
   -5093,   158, -5093, -5093, 87304, -5093,  4628,  4629, -5093,  4632,
   -5093, -5093,   429, -5093,  2880, -5093,  6261,  1193, -5093,  4678,
   91108,  4886,  3890, -5093,  1111,  2282,  3603, 55478, 22362, -5093,
    4138,  4140,   137,  4141,   137,   137,  2310,  2310,  4070,  2310,
     137,  2310,  2310,  2310,  2310,  2310,  2310,  2310,   137,  2310,
      97,  3331,  2310,   137,  5682, -5093,  2310,  3710,  4396,  4396,
    2870, -5093,  4805,   337, -5093,  4092, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,   465, -5093, 29902, -5093, -5093,
   -5093,  4137,   608,   835,  3603, 85402,  4689,  3826,  4154, -5093,
   -5093, -5093, -5093, -5093, -5093,   449,  4822, -5093,  4153, 22362,
   -5093, -5093, 91108,   305,  4358,  4653,  4179, 80964, 58165, 58165,
   58165, 58165, 47462,  4745, 75872, -5093,  4818, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  8159, -5093, -5093, -5093,  4479,  2313,  4172, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
    4171, -5093, 22362, -5093, -5093,  4532, -5093, -5093, -5093, -5093,
   -5093, 53474, 22362,  3603,  3603, 22362,  4180,  4180,  4183,  4184,
   -5093, -5093,  4825,  4180,  4180, -5093,  4180,  4826,  4180,  4180,
    4189, -5093, -5093,  4190,  4191,  4192,  3290, -5093, 22362, 22362,
    2469,   236,  2488,  2522,  1631,  1699,   276, -5093,  2559,  3311,
   92376, -5093, -5093,  2562,  2603,  2621,  2634,  1860,  2654,   348,
     281, -5093,  3603, 22362,  3603, 22362,  3603, 22362,  3603, 23116,
    2698, -5093,  2596,  3770, -5093,  2606,  4162,  2711,   288,  2721,
    1882,  2627,   319,  2741,  2746,  2749,  2661, -5093,  2101,  4782,
    2704, 23116,  2752,  2759,  1897,  1931,  2796, 92376, 91108,  4193,
    2835,  4195,  4195,   211, -5093,  4194, -5093, -5093, -5093,  4199,
   -5093,  2846, 22362, 22362,  4271, -5093,  3077,   362,  4196,  3810,
    4734, -5093,   466, -5093,   529,  1021, -5093,  4200,  3603,  4202,
    3286, -5093, 22362, -5093,  2083, 29902,   371,  4207, 29902, -5093,
   -5093,  4351, -5093, 22362, -5093,  4790,  4214,  3290,  4212,  3603,
   -5093, -5093, 91108,  4216,  2890, -5093,  4070, -5093,  4858, -5093,
    4955,  4221,  4237,  4223,  4028, -5093, 58859, -5093,  4771, 73336,
    3608,  3608,  1116,  4225,  2708,  4760, -5093, -5093, -5093,  4224,
   -5093,  2726, -5093,  4899,  3678, -5093,  4900, 58165, 58165, 58165,
   58165, 15576, 15576, -5093, -5093, -5093,  4233,  4234,   822,  4791,
   -5093, -5093, -5093, -5093, 91108, 91108, 15576, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,  3544, -5093,  3886, -5093, -5093,
   86036, -5093, -5093, -5093, -5093, -5093, -5093,  1325, -5093, -5093,
    4238,   291,  2854, -5093, -5093, -5093,   608,  3932,  3051, -5093,
   -5093, -5093,  4874,  4651,  4651,  4068,  4875,  3621,  4240, -5093,
     337, -5093,  4911,  4712, -5093, 91108,  4248, -5093,  4249, 89206,
   20854,  4250, -5093,  4807, -5093, -5093,  3855, 70166,  4253, -5093,
    4476, -5093, -5093, -5093,  4269, -5093,  4255, -5093, -5093, 58165,
   -5093,  4634, -5093, -5093, -5093, -5093, -5093, 75872, -5093, -5093,
    4616, 75872,   337,   337,   337,   337,   337,  4301,   337,   337,
     337,   337,   337,  4617,   337,   337,   337,   337,   337,   337,
     337,   337,   337,   337,  1750, 91108,   337,   337, 40506, -5093,
   -5093,  4830, -5093,  6389, -5093, -5093, -5093,   337,  9050,  3923,
    4264, 91108, -5093,  3890,  4266,   344, -5093,   998, -5093, 68898,
   91108,  3603,  4265,   514, -5093,  4496,  4270, -5093, -5093, 22362,
   -5093,  4299, -5093, -5093, 41865, -5093, 81598, -5093, -5093, -5093,
   20854, -5093,  3071,  4124,  4268,  1826, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093,   393,   393, -5093, -5093,   393,   393, -5093,
   -5093, -5093, -5093,   393,   393, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  1163, -5093, -5093, -5093,  1797, -5093,
   -5093,  4773,   490, -5093, -5093, -5093, -5093,    71,   137,   137,
     137,  3331,  2389, -5093,  2880,  3892,  4670,  4845,  4670,  4846,
    4772,  2782,   337,  4851,  5019, -5093,   185,   337,  4860,  4918,
    4361,  4925,  4862, -5093,  4368,  4670,  4863,  4481,  4864,  4868,
    4870, -5093, -5093,  9050, -5093, -5093, -5093, -5093,   438, 74604,
   -5093, -5093, -5093, -5093,  2083,  1686,  4800,  1454, -5093,  2730,
   -5093,  5059, -5093,   160, -5093, -5093, 48130,  3603,   343,   394,
   -5093,   414, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   91108,  4396,  3293, -5093, -5093,  2890, 80330,  3826, -5093,  4648,
    4848,  3616, -5093, -5093, -5093, -5093,  3932, -5093,  3603, -5093,
   -5093,  4977, -5093, -5093, 58165, -5093, -5093,   252,   252,   252,
     252,  3119,  4667, -5093, -5093, -5093,  4818,  4592, -5093,  1708,
   -5093,  4180,  4180,   280, -5093,  4183,  4882,  4183, -5093,  4711,
    2978,  3168,  4711, -5093,  2978,  4183, -5093,  4322, -5093,  4711,
   -5093,  2978,  4180, -5093,  4180, -5093, -5093,  2978,  4180, -5093,
    4325,  4183, -5093, -5093,  4711, -5093, -5093, -5093, -5093,   442,
    2505,  4183, -5093, -5093, -5093,  4180,  1866,  4180,  4180,  4180,
    4523,  4180,  4180,  5027, -5093, -5093, -5093, -5093, -5093, -5093,
    4183,   240,  4180,  4180,  4180,  4180,  4184,  4997,  4998, -5093,
   91108, -5093,  3603, -5093, 55478, 97732,   276,  3603,  2279, -5093,
   -5093, -5093,  2452, -5093, -5093, -5093,  4919, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
    4329,  4611,  4611, -5093,  5068,  4865, -5093, -5093, 22362, 22362,
   -5093, 22362, -5093,  1503,  4332,  4798, -5093, -5093, -5093, -5093,
   -5093, 22362, -5093, 22362, -5093, -5093, 22362,  3603,  3603,  3603,
    4611, -5093, -5093,  3731, -5093, -5093,  3191, -5093, -5093, 22362,
   -5093, 22362, -5093, 22362, -5093, 22362, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,   184,  4611, -5093, -5093, 22362, 22362,
   -5093, -5093, -5093, 91108, -5093,  3710,  4335,  4609, -5093, -5093,
   -5093,  3710,  4471, -5093, -5093,  3710,   137, -5093, -5093, -5093,
   -5093,  3616,  3077, -5093,  4341,  2541, -5093, -5093, -5093, -5093,
   -5093, -5093,  4345, 91108, -5093,  2732,  3286, -5093, 22362, -5093,
    2083,  4927,  4347,   514,  5086,  4353, -5093, 22362, 41865, -5093,
    4354,  4349, -5093, -5093, -5093, -5093, 22362,  4975,  4926, -5093,
    3710, 91108, -5093, -5093, -5093,  4356, -5093,   337,  3932, -5093,
    2709,  1116, 73336, -5093, 82232,  2685,  3192, -5093, 91108, 58165,
   58165,  3805,  3805,  3805,  3805, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,   337,   337, -5093, 35656, 62969, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  3886, -5093, -5093,  3332,  4911, -5093,
   -5093,  2095,   466,  3834,  1021, -5093,  4068,  4990,  4993, -5093,
    4068, -5093, -5093, 73336,  3826, 21608,  3011,  4766, -5093, -5093,
   -5093, 38454, -5093,  4359, -5093,  4362, -5093, -5093,  2235,  4691,
    4985, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, 20854, -5093,  2310,  2306,
   -5093,  4392, -5093,  4369,  4370,   337, -5093,   170,   213,   221,
     243, -5093, -5093,  4070,   137,   137,  2310,  2310,   337,   137,
   87304,  1990,   137,  4070,  4070,   250,  2310,  2878,   170, -5093,
   -5093, -5093,   137,   170, 77140, 75872,  5035, 91108,  4371,  4376,
    4377, -5093, -5093, -5093, -5093, -5093,  1585, -5093,  4921,  2809,
    2604,  2604, -5093,  4379,   180, -5093, -5093,  9374, -5093, 60239,
   -5093, -5093, -5093,  1320,  4968,  5135, -5093,  4521, -5093, -5093,
   -5093, -5093,  4489,  3890, 44759, -5093, -5093, -5093, 22362, -5093,
   -5093, -5093,   746,  4394,    91, 22362, 91108, -5093, 89840, -5093,
   -5093, -5093, -5093,  1531, -5093, 20854,  4397,  4389, -5093, -5093,
     466,  2432,   466,  4403,  2705, -5093, -5093,  3071, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  2310,
   -5093, -5093, -5093, -5093, -5093,  4981,  4982, -5093, -5093, 75238,
    2809, -5093,  5035,  4432, -5093, -5093, -5093,  5047,  2575,  1074,
    2575, 38454,   998,  2036,  5031,  2353,  5074,  4436,  4969,  2575,
    2575, 65003,  1074, 73336, -5093, -5093, -5093, -5093, 75872, 65681,
    1074, -5093, -5093, -5093, 91108, -5093,  2575,  1074, -5093,  1074,
    1074, 38454, -5093,  8966, -5093, -5093, 41209,   207, -5093,  4579,
   22362, 22362,  4995, 91108,  5000, -5093,  4806, -5093, 91108, -5093,
    3932, -5093, -5093, -5093,  4703,  4915,  2754, -5093, -5093,  2764,
   -5093, -5093,  2786, -5093, -5093, -5093, -5093, -5093,  3956, -5093,
   -5093,  4756,  3868, -5093,  4614,   252,  4884,  4884,  4884,  4884,
   55478, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  5063, -5093,
   -5093,  4711,   337,  4711, -5093, -5093,  1103, -5093,  1103, -5093,
     376, 62291, -5093, -5093, -5093, -5093,  2050, 45409,  1881, -5093,
    4813,  3755,  4711, -5093,  4895,  2978, -5093, -5093,  1103,  2441,
   -5093, -5093,  4711, -5093, -5093, -5093,  2441,  1103, -5093,  4896,
   -5093, -5093, -5093,  1103,  4711,  4635, 91108,  5027,  2978, -5093,
   -5093, 94912,  2978,  1103, 22362, -5093,  4980, -5093,  2050,  5175,
    2978,  4711,  1103,  1103, -5093,   100,  4431, -5093, 54142, -5093,
    4437,  4442,  4443,  4444,  2050,  2788,  4430,  2050,  2050, -5093,
    4447,  4449, 22362,  2441,  5057,  2876,  1948,  2798,  4715,  4669,
   -5093,  4619, -5093,  2897,  2904,  2916,  1777,  4183, -5093, -5093,
   -5093, -5093,  5089,  4180, -5093,  5183, -5093,  4180, -5093, -5093,
   -5093, -5093, -5093, -5093,  4454,  2928,  3603,  3603,  2936, -5093,
   -5093, -5093,  2805,  2007,  2939,  2942, -5093, -5093, -5093,  4455,
   -5093, -5093,   251, -5093,  4459,  3868, -5093, -5093, -5093,  4271,
    2095, -5093, -5093,  2823,  5198,   418, 22362, -5093, 22362, -5093,
    4462, -5093, -5093, 91108,  4611,  1185, -5093,  2826, -5093, -5093,
    4463, 73336, 20854,  2095, -5093, -5093, -5093,  2685, -5093,  4458,
     466,  2471,   466, -5093,  3616, -5093, -5093,  3805,  3805, 15576,
   15576, -5093, -5093, -5093, -5093,  3192,  3608,  5634,  1021, -5093,
   -5093, -5093,  4743,  4945,  4068,  4068,  4809,  4950, 22362,  4474,
   -5093,  4231,  2623, -5093, -5093,  4671,  1695,  1695, -5093, -5093,
   -5093, -5093,  4477,  4480, -5093, -5093, -5093, 89206, -5093,  2839,
   -5093, -5093,  5225,  2852, -5093, -5093, 87304,  4484, 91108, 91108,
    2310, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
    4485, -5093, -5093, -5093, -5093, -5093,  2310, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  4482,  4486, -5093,  3157, -5093, 41209,  4487,  5107,
    5108,  2604, -5093,  2809, 75872, -5093, 77140, -5093,  2809,  2809,
   43315, 91108, -5093,  5228, -5093, -5093, -5093, -5093, -5093,   309,
    4079, -5093, -5093,  1754,  4601, -5093, 91108, -5093, -5093,  2310,
    5230, -5093,  4889,   514, -5093, 22362,  4490,  4488, -5093, -5093,
   -5093, -5093,  3603,  5244,  4493, -5093, -5093, -5093, 82866, -5093,
   -5093, 20854, -5093,  5136, -5093, -5093, -5093, -5093,  3071, -5093,
   -5093, -5093, -5093, -5093, -5093,  2083,  1074, -5093,  2083, -5093,
   77140, 38454, 77140, -5093, 44759, 77140,  2575, 91108, -5093, -5093,
    5130, 77140, 77140, -5093, -5093, 38454,  4498, -5093,   514,  2701,
   -5093, -5093, -5093,  3710,  4963, 77140, 38454, -5093, 38454, -5093,
    4289,  3314, -5093,  4500, 91108, -5093, -5093, -5093,  3603,  4611,
    4891, -5093, -5093,  4610,  2310,  4859, -5093,  1098, -5093, 91108,
     167, 55478, -5093,   137, -5093,   137, -5093,   137, -5093, -5093,
    4884,  1646, -5093, -5093, -5093, -5093, 54810, -5093,  5138,  5005,
   -5093, -5093, 91108, -5093,  4965,  4991, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,   337, -5093, -5093,
   -5093, -5093,  2856, -5093, -5093,  2902, -5093, -5093, -5093, -5093,
   94912,  8652, -5093,  2908, -5093, -5093, -5093,  5027,  4502, -5093,
   -5093,  3603,  4526, -5093, -5093, -5093, -5093,  5175, -5093, -5093,
   78408, -5093, -5093, -5093, 91108,  5179,  5181, -5093, -5093, -5093,
   -5093, -5093,  5101, -5093, -5093, -5093, -5093,  4512,   514, -5093,
   -5093,  4514, 86036, -5093, -5093, 22362, -5093,  4746, -5093,  4852,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  2050,
   -5093, -5093, -5093, -5093,  4070, -5093, -5093, -5093,  4516, -5093,
     137,  4231, -5093, -5093, 22362, -5093, -5093,  4522,  4106,   514,
     514, -5093, -5093,  4620,  4475,  4527, 91108, -5093,  4926, -5093,
   -5093, -5093, -5093, -5093,   466, -5093, -5093, 83500, -5093, -5093,
   -5093, -5093,  3868, -5093, -5093,  3616, -5093, -5093,  4524, -5093,
    5001, -5093, -5093, -5093,  5008,  3603, 91108,  4563,  1695,  5282,
    5025, -5093,   972, -5093, -5093, 91108, -5093, -5093,  4070,  4890,
   -5093, -5093,  4726, 91108,  2911,   514,  4535,  2919, -5093, 75872,
   -5093, -5093, 91108,  2095, -5093,  9050, -5093, 22362,  2809, -5093,
   -5093, 77140,  4537,  5017,  1603, 77140, 77140,  1775,  4533,  4536,
    2765,  1863,  4539,  4325,  2025,  4540,  4541,   206,  4547,  4549,
    4553,  4554,   442,  1086,  2084,  4555,  4556,  4557,  4180,  4558,
    2108,  2113,  2181,  4180,  2192,  4559,  5268, -5093, -5093,  4562,
   -5093,    63, -5093, -5093, -5093,  4543,  4568, -5093, 91108, -5093,
   -5093,  5246, 55478, -5093, -5093, -5093,  5140,  1686, -5093,  4572,
    4573,  8362, -5093, -5093,  8652,  4079, -5093, -5093,  2502,  5180,
   -5093,  3603, -5093, -5093,  4574, 91108, -5093, -5093, -5093,  2095,
     466,  5249, -5093,  5250,   407, -5093, 77140,  2057,  4239, -5093,
   77140,  4480, -5093, -5093,   449, -5093, 73336, -5093, -5093, -5093,
    5077,   207, -5093, 91108, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093,  4577,  2705,  5042,  2946, -5093, -5093, -5093,
   -5093, 48798, -5093, -5093, -5093, -5093,  4776, -5093,  1646, -5093,
    5064, 75872, -5093, -5093, -5093, -5093,  2050,  2441,  2050,  5027,
   -5093, -5093, 91108, -5093, 91108,  5174, -5093, -5093, -5093, -5093,
   39868, -5093, -5093, -5093,  4904, -5093,  2950, -5093, -5093,  4588,
   22362, -5093, -5093, -5093,  1157,  2977, -5093, -5093, -5093,  4589,
   -5093,  4590,  3886,  4265, -5093,  4426,  4719,  4295,  4296,  4297,
    4767,  4932, -5093,  4777, -5093, -5093,   137, -5093,  4597, 29902,
   -5093,  1568, -5093, -5093, -5093, -5093,  2095,  3868,  4911, 22362,
    4599, 22362,  4602,  2957, -5093, -5093,  1695,  1695, -5093,  1333,
    4604, -5093, -5093,  5016,  4606,  2971,   746, 91108, -5093,  5195,
     746,  4608,  4618, -5093, -5093,  4830,  3010, 77140,  5017,  1759,
   91108,  5221,  1043, -5093,  1043, -5093, -5093,  3940,  8652, -5093,
   -5093,  3577, 91108,  5072, -5093,  2378, -5093, -5093,  5283, -5093,
    4995, -5093, 91108,  1900,  4812, -5093, -5093, 56788, -5093,  5350,
    5352,  5304,  5358,  2502, -5093,  2354, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, 77140,  1311, -5093,  5324,  5325,   207, -5093,
   -5093, -5093, -5093,  1074, -5093, 75872, -5093, -5093,  4480,  1125,
    4717, -5093, 55478,  2685,  4577,  4625,  2270,   529, -5093, -5093,
    1183, -5093, -5093, 91108, 90474, -5093, -5093, -5093,  4067, -5093,
   -5093, -5093, -5093, -5093,  4621, -5093, 78408, -5093, -5093, -5093,
   -5093, 97732, -5093,   514, 86036, 86036, -5093, -5093, -5093,   466,
    1042, -5093,  5379,  1328, -5093, -5093,   510, -5093, -5093, -5093,
   91108,  4633,  4716, -5093, -5093,  4696, -5093, -5093,  1584, -5093,
    4271,  5634,  3603, 91108,  3603, 91108, -5093, -5093, -5093, -5093,
    2604, -5093,  2604, -5093,  1333, -5093, -5093,  1163,   746,  2266,
     514,  4636,  1428, -5093, 91108,   180, -5093, -5093, -5093,  1043,
    2988, -5093,  1509,  5217, -5093,  4638, -5093,  4639,  4641, -5093,
    5265, -5093,  2310, -5093,  4721, -5093,  3940, -5093, -5093, -5093,
    4672,  5280,  5239,   337, -5093, 87304, 32163, -5093,  5134, -5093,
    5093,  5355, -5093,  5407,  3713, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  1454, -5093, -5093,  4856, -5093, 91108,
    5283,  2441,  2441,  5394,  2441, -5093,  5395,  5396,  2354, -5093,
    5268,  3710,  4926, -5093, -5093, 32163, -5093, -5093, -5093,  5300,
   -5093, 22362,  5011,  5283, -5093,  2471,   466,   466,  4663,  2705,
   -5093, -5093,  2685, -5093,  4857,  5398,  5400, -5093, -5093,  3029,
   -5093, -5093, 73336, -5093, 91108, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  4426, -5093, -5093,  4793,  1703, -5093,  3039, -5093,
   -5093, -5093,  3710, -5093,  4665, -5093,  5030,   337,   337,  5032,
     337,   337,   337,   337,  4673,  1584, -5093,  5022, -5093, -5093,
    3047,  3049,  5346,  5346, -5093,  3070,  1594,  4866,  2310,   337,
    1645,  2266, -5093, -5093,   337, -5093, -5093,  1645,  1428, -5093,
   -5093,  4677, -5093,  4680,  4681, -5093, -5093, 91108, -5093, -5093,
   -5093,  1474, -5093, 91108,  4683, 91108, 91108, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, 60926, -5093,  3331,  3331, 22362, -5093,
   -5093, -5093, -5093, -5093,  3220,  5276, -5093,  4725,  1455,   337,
   -5093,  3875, 75872,  4806, 91108,  4684, -5093, -5093, -5093,  2441,
   -5093,  2441,  2441, -5093, -5093, -5093,  3098, -5093, -5093,  4690,
    3603, 22362, -5093, -5093,   466,  2151, -5093, -5093, -5093, -5093,
    2685, -5093,  2471, -5093, -5093,  1098, -5093,  4879,  4883, -5093,
   90474,  4692, -5093,   337,   998, -5093, -5093, -5093, -5093, -5093,
   -5093, 91108, -5093,  4697, -5093, -5093,   169,   337,  2310,  2310,
     337,  3780,  3780,  3710, 87304,  4778, -5093, -5093,   337, -5093,
   -5093,  2467, -5093, -5093, -5093,  1043,  1043,  1645,  1594, -5093,
   -5093, -5093,  3135, -5093,   137, -5093,  5315,  5141, -5093, 61613,
   -5093, -5093, -5093, 91108, 91108,  4699, -5093,   979,   979,  3107,
   91108,  3109,  3111, -5093, -5093, -5093, -5093, -5093, -5093,  4700,
    4702, -5093,  1065, -5093, -5093,  3875,  5372,  5058,  4698, 91108,
   -5093, -5093, -5093, -5093,  4926,  3603, -5093,  2095,   466, -5093,
   -5093, -5093, -5093, -5093, 73336, 20854, -5093,  4716, -5093, -5093,
    3116, -5093, 26886, -5093, -5093, -5093,  2310, -5093, -5093,  2310,
   -5093, -5093, -5093, -5093, -5093,  3137, -5093, 87304,  5442, -5093,
    5443,  4718,  4723, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,  3144,  3167, 91108, -5093, -5093,
    2161,  5156,  5295,  5296,  1594,  3184,  2266,  1428, -5093,   403,
   -5093,  3189,  3189,  1756, -5093, -5093, 91108,  4705,  3201, -5093,
   -5093, -5093, -5093,  5251, -5093, -5093,  4697, -5093,  4722, -5093,
    2890, -5093, -5093, 87304, -5093,  4778, -5093, -5093, -5093, 89206,
   89206,  4921,  1594,  3212, -5093, -5093, -5093,  5196,  5415, -5093,
    1594, -5093, -5093, -5093,  4724, -5093,  3189, -5093, -5093, -5093,
   -5093, -5093,  1929, -5093, -5093, -5093, 91108, -5093,  5015,  4889,
   -5093, 26886,  4727,  1584, -5093, -5093,  4728,  3214, -5093, -5093,
    1594,   979,   979, -5093, -5093, -5093, -5093,  1929, -5093,  5413,
   -5093,  5466,  5180, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  4861,  2441,  5380, -5093, -5093,  5319,  4733,  1330,
    2053, 66993,  5262, -5093, -5093, 87304, -5093, -5093, -5093, -5093,
   -5093, 87304,  3216, -5093, -5093, 73336, -5093, -5093, 55478, -5093,
   -5093, 69532,  4735, -5093,   337,  5283, -5093, 73336, -5093, -5093,
   -5093, 20854, -5093, -5093
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
    2529,  1145,  2375,     0,   458,     0,  1352,   743,  2233,  2369,
    2370,  2161,     2,   512,   225,   411,  2163,  2436,     0,     0,
     508,  1368,   881,   630,  2431,   336,     0,     0,   515,  2166,
     334,   225,  3073,  2277,     0,  3164,  2221,     0,   510,  2533,
    3447,  3309,     0,     0,     0,  3314,    69,  2130,     0,  1368,
     357,     0,    84,     0,     0,  1368,  2418,  3314,     0,  2448,
       0,     0,  2258,     0,     0,     0,     3,     8,    21,     0,
      43,    26,    31,    16,    20,    15,    45,    57,    51,    28,
    3311,   407,   408,   409,   410,    41,  3374,    40,    11,    60,
      61,    18,    48,    12,    14,    17,    39,    47,    35,    42,
      55,    24,    25,    32,    49,    65,    22,    62,    58,    23,
    2375,    13,    27,    50,    44,    36,    59,    66,    37,     0,
    2530,    56,    38,    64,    30,    52,    29,     9,    10,    19,
      53,    54,    46,    67,    33,    63,    34,  1179,     0,     0,
       0,     0,     0,  2159,     0,     0,  2159,  1261,  1503,  3372,
    3373,  3374,  1369,     0,  1370,     0,  2529,  2571,  2572,  2778,
    2826,  2827,  2721,  2854,  2673,  2948,  2970,  2996,  2760,  2762,
    2761,  2763,  2764,  2765,  2766,  2767,  2768,  2646,  2769,  2770,
    2771,  2773,  2772,  2774,  2775,  2776,  2647,  2720,  2648,  2726,
    2777,  2728,  2727,  2779,  2649,  2650,  2780,  2781,  2782,  2783,
    2704,  2652,  2651,  2784,  2786,  2785,  2729,  2730,  2707,  2787,
    2788,  2789,  2791,  2653,  2654,  2655,  2656,  2657,  2790,  2658,
    2792,  2708,  2793,  2794,  2659,  2795,  2796,  2797,  2798,  2800,
    2799,  2701,  2801,  2802,  2804,  2805,  2806,  2803,  2807,  2808,
    2810,  2809,  2732,  2811,  2731,  2812,  2660,  2813,  2814,  2815,
    2816,  2817,  2818,  2819,  2820,  2821,  2822,  2709,  2823,  2824,
    2825,  2846,  2722,  2828,  2830,  2829,  2733,  2831,  2832,  2833,
    2835,  2834,  2836,  2838,  2661,  2662,  2663,  2837,  2839,  2840,
    2841,  2842,  2844,  2843,  2848,  2849,  2734,  2664,  2705,  2665,
    2666,  2845,  2847,  3050,  2850,  2851,  2735,  2736,  2852,  2667,
    2723,  2853,  2710,  2856,  2855,  2668,  2857,  2669,  2858,  2859,
    2860,  2861,  2862,  2864,  2866,  2863,  2867,  2868,  2874,  2670,
    2865,  2869,  2870,  2871,  2872,  2873,  2875,  2737,  2876,  2702,
    2878,  2877,  2879,  2880,  2881,  2882,  2738,  2883,  2724,  2884,
    2885,  2886,  2899,  2900,  2890,  2891,  2893,  2894,  2897,  2892,
    2898,  2903,  2902,  2904,  2905,  2906,  2907,  2908,  2901,  2888,
    2895,  2896,  2889,  2909,  2910,  2887,  2911,  2913,  2912,  2914,
    2739,  2915,  2916,  2917,  2918,  2919,  2920,  2921,  2922,  2924,
    2923,  2925,  2740,  2741,  2742,  2926,  2927,  2928,  2717,  2929,
    2743,  2744,  2932,  2930,  2931,  2933,  2934,  2939,  2940,  2941,
    2703,  2936,  2935,  2937,  2938,  2745,  2746,  2747,  2942,  2943,
    2944,  2945,  2947,  2946,  2711,  2672,  2671,  2674,  2949,  2950,
    2675,  2951,  2953,  2952,  2719,  2676,  2954,  2955,  2957,  2956,
    2748,  2749,  2677,  2706,  2678,  2679,  2958,  2959,  2960,  2961,
    2962,  2963,  2964,  2965,  2966,  2967,  2968,  2969,  2750,  2751,
    2971,  2972,  2973,  2975,  2974,  2976,  2977,  2978,  2979,  2980,
    2981,  2982,  2680,  2983,  2712,  2984,  2985,  2681,  2987,  2986,
    2682,  2988,  2989,  2990,  2991,  2992,  2718,  2713,  2993,  2994,
    2995,  2752,  2997,  2998,  2999,  2714,  3000,  3001,  3002,  2683,
    3003,  3004,  2753,  2725,  2684,  3005,  3007,  2715,  2685,  3006,
    2687,  2688,  3008,  3009,  3010,  2686,  3011,  2689,  3012,  3013,
    3015,  3014,  3016,  3017,  3018,  2690,  3019,  3020,  2691,  3021,
    2692,  3022,  3023,  3024,  3025,  3027,  3026,  3028,  3029,  3030,
    3031,  3032,  3033,  3035,  3037,  3036,  3034,  3038,  3039,  2754,
    3040,  2693,  2755,  3045,  3046,  2756,  3041,  3042,  3043,  3044,
    2716,  3047,  3048,  3049,  2696,  3051,  3052,  3054,  3053,  2694,
    2695,  3055,  3056,  2700,  3057,  3058,  3063,  2757,  2758,  3059,
    3060,  3072,  3061,  3062,  3065,  3064,  3066,  3067,  2616,  2697,
    3068,  3069,  2698,  3070,  2699,  3071,  2759,  2576,  2587,   243,
    2588,  2613,  2611,  2615,  2609,  2610,  2614,  2608,  2612,   460,
     129,     0,     0,     0,     0,  2253,  2159,  2157,  2159,  2159,
    2159,  2159,     0,  2159,  2159,     0,  2162,  2159,  2159,     0,
       0,     0,   451,  2169,  2438,     0,  2455,  2456,  2450,  3154,
    3155,  3149,   413,     0,     0,     0,     0,     0,   321,   333,
     336,   329,   332,     0,   225,  1371,   413,  2231,   335,   336,
       0,  3075,     0,  2349,   336,     0,  2231,  2449,     0,  2534,
    2531,  1575,  1574,     0,  3314,  2577,     0,  1347,  1379,  1305,
    3315,  3316,     0,    72,    74,  2380,   358,     0,     0,     0,
       0,  2570,     0,     0,     0,     0,  1313,     0,  3316,  3326,
       0,   129,  1286,     0,   129,  2260,     0,     0,  3430,  3431,
       0,     0,     0,  3425,     0,  3432,     0,     1,     5,     0,
       0,   741,  1102,  1103,  1101,   741,   741,     0,     0,     0,
       0,     0,  3379,  3372,  3373,  3374,  2841,  2666,  2953,  2362,
    2374,  2360,  2565,  1466,  3347,  1420,  1405,  1407,  1148,  1180,
    1151,   227,     0,     0,  1153,     0,     0,  1168,  2593,  2592,
    2591,  1165,  1164,  1163,  1161,     0,   583,   225,     0,  1263,
       0,     0,     0,  3380,  3379,     0,  1324,  2364,  2365,  2366,
    2367,  2368,  2371,     0,   249,   471,   474,     0,   463,   466,
       0,   130,   131,  1350,  1353,     0,   744,     0,   165,     0,
    2257,  2256,     0,  2255,  2234,     0,  2253,     0,     0,     0,
       0,     0,     0,     0,     0,   225,     0,  2345,   225,  2141,
    2159,  2159,   513,     0,  3217,  3232,  3233,  1516,  3229,  3234,
       0,  3231,  3223,     0,  3227,  3221,     0,  3253,  3225,  3230,
    2834,  2663,  2848,  2962,  2966,  2982,  2985,  2715,  3028,  3211,
    3196,  3212,     0,     0,  3215,  3219,     0,     0,  2170,  2171,
    2172,  1259,  2439,  2440,  2444,     0,  2459,     0,   426,     0,
       0,     0,     0,   415,   416,   482,     0,   422,     0,   413,
     397,     0,   396,   398,  2529,   417,   392,   400,   399,   401,
     402,   403,   404,     0,   405,   406,   479,     0,   393,   394,
     509,   395,  2589,     0,  2590,  2618,  2620,  2617,  2619,  1366,
       0,  2519,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1516,  1516,  1516,  1513,     0,     0,     0,  2524,     0,
       0,     0,     0,  2515,     0,  2525,     0,     0,     0,  2517,
    2518,  2573,  2574,     0,     0,     0,     0,  2522,     0,     0,
       0,     0,     0,  2498,  1577,     0,  1513,     0,  2514,  2521,
       0,  2506,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1513,  2497,     0,  2516,
    2523,     0,  1516,  1513,  1513,     0,     0,  2761,  2646,  2776,
    2704,  2787,  2789,     0,  2653,  2654,  2655,  2656,  2657,  2701,
    2811,  2731,  2812,  2813,  2814,  2666,  2735,  2852,  2859,  2877,
    2879,  2738,  2918,  2920,  2925,  2740,  2741,  2742,  2930,  2931,
    2944,  2719,  2748,  2749,  2960,  2967,  2992,  2752,  2997,  3002,
    3005,  3024,  2755,  3045,  3046,  2756,  3044,  2716,  3057,  3063,
    3066,  3067,  2697,  2759,     0,     0,     0,  3358,  1576,     0,
       0,  1814,   882,  1522,  1534,  1550,     0,  1649,  1648,  1651,
    1653,  1659,  1569,  1680,  1620,  1621,  1623,  1742,  1622,  1627,
    1628,     0,  1791,  1629,     0,     0,  1626,  2511,  1625,  1624,
    2512,  2513,  1619,  2551,  2587,     0,  2575,   632,   631,  2344,
    2343,     0,  2432,   348,   343,   351,   345,   347,   346,   352,
     353,   354,   349,   344,   350,   337,     0,   322,     0,   330,
    3327,     0,     0,   413,   516,  2232,  2174,     0,  2173,   355,
    3217,  2762,  2966,  3185,     0,  3195,     0,     0,     0,     0,
    1020,  3098,  3099,  2717,  2719,  2718,  3100,  3041,  2645,     0,
       0,  2582,     0,     0,  2583,  2642,  2640,  2644,  2639,  2643,
    2638,  2641,  3074,  3084,  3080,     0,     0,     0,  2357,  1098,
    1097,     0,     0,     0,  2299,     0,  1020,  2357,  2300,     0,
    2052,  2347,  2350,     0,  3102,  2313,  1099,  3103,  2343,     0,
    2285,  2301,  2262,  2306,   129,  3104,     0,  2346,  2052,  2357,
       0,  2278,     0,     0,     0,     0,  1501,     0,   331,  3165,
    1259,   511,     0,     0,   484,  3310,     0,     0,     0,     0,
    3319,  1860,  2131,    76,     0,    78,     0,     0,  2567,  1988,
    3168,  3167,     0,    85,     0,  3444,    72,     0,  2424,     0,
    2422,  2419,  2421,     0,  3319,  1293,  1293,     0,     0,  1285,
    1287,  1288,  1293,  1293,  2261,     0,  3445,  3446,  2505,  2503,
    2504,  2578,  3427,  2502,  2501,  3436,  3438,  3421,     0,  3424,
    3423,  3433,     6,    68,     0,     0,   225,   225,   741,   167,
     741,   741,   741,   741,   741,   150,   148,   152,     0,     0,
     158,     0,   154,  3379,  2529,  2377,  1469,  1474,     0,  1420,
       0,     0,     0,  3330,  3329,  3328,  3342,  1408,  1409,     0,
    1036,     0,   228,     0,  3377,  3378,  3376,  1516,  2594,  2597,
    3375,  2598,   228,  1162,     0,   584,  2160,     0,     0,     0,
       0,     0,     0,   586,   585,   522,     0,     0,  1267,  1268,
    1262,  1264,  1266,     0,     0,     0,     0,  2376,     0,   245,
     251,   244,     0,   413,     0,   461,   467,    86,     0,  1354,
    2150,  2152,   164,     0,     0,     0,  2235,     0,  1995,  2237,
    2241,  2247,  2251,  2254,  2135,  2158,     0,  2138,  2144,  2143,
    2137,  2345,     0,  2147,   597,     0,     0,     0,  2148,  2132,
       0,   486,   488,  3218,  3216,  3250,  3249,  3254,     0,  3251,
    3247,     0,  3210,  3255,  3240,  3282,  3244,  3282,  3282,  3241,
    3248,  3282,     0,  3246,  3245,     0,  3213,     0,     0,     0,
    1260,     0,  2445,     0,  2437,     0,  1389,  2461,  2460,  2457,
    1988,  3151,  3156,   420,   427,     0,     0,  2930,     0,   432,
     431,   430,   283,   448,   420,   423,   440,     0,     0,   281,
     414,     0,   446,   449,   502,   498,   506,   500,   480,   476,
       0,     0,     0,     0,  1654,  1993,  1993,  1993,     0,     0,
    1868,     0,     0,     0,     0,  1993,     0,  1686,  1665,  1666,
       0,  1687,     0,     0,     0,     0,     0,  3358,     0,     0,
    1820,     0,     0,     0,     0,  3358,     0,     0,  2573,  2574,
       0,     0,     0,  1862,  1864,  2551,  2575,  1993,     0,  1993,
       0,  1521,  1696,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1993,  1993,     0,  1993,  1704,
       0,  2499,  2520,  1708,  1710,  1709,  1993,  1993,     0,     0,
    1993,     0,     0,     0,  2508,  2507,     0,     0,     0,     0,
       0,     0,     0,  2526,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2528,     0,     0,     0,  2527,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1656,     0,  1655,  1657,     0,   884,   883,  2529,     0,     0,
       0,  1573,  1572,  1571,  1570,     0,     0,     0,     0,  1579,
       0,  1581,  1583,  1578,  1580,  1582,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1658,     0,     0,     0,
       0,     0,  2500,     0,  1752,     0,   644,     0,     0,     0,
     320,  1373,  2599,     0,  1372,  1376,  3151,   495,     0,  2177,
    2167,  2176,  1900,  3216,     0,     0,     0,  3213,     0,     0,
    3076,  3078,  1019,     0,     0,  1022,  1024,  2194,  2193,  1023,
    1032,     0,  1021,     0,  3139,     0,     0,  3124,     0,  3105,
       0,  1028,  1030,  1029,  3119,  1027,     0,     0,     0,  3089,
       0,     0,   741,     0,     0,     0,     0,     0,     0,     0,
    2328,     0,  1501,  1501,  2279,     0,  2357,  2347,     0,  2357,
    2353,  2312,     0,     0,   797,  2054,  2305,     0,  2053,  2351,
    2352,  2357,     0,     0,  2357,     0,  2319,  2347,  2357,  2274,
       0,     0,  2266,  2271,  2267,     0,  2273,  2272,  2275,  2263,
    2264,     0,  2292,  2321,     0,  2304,  2311,     0,  2291,  2298,
       0,  2309,  2347,  2347,     0,  2357,  2357,  2357,  1905,   493,
    2532,  2535,  2539,  2543,   283,     0,     0,  1381,  1383,  1382,
    1399,  1307,  3318,     0,  3320,     0,  3322,     0,    78,    73,
      79,    75,     0,  2405,     0,     0,     0,  2399,  2401,  2404,
    2400,     0,     0,  2406,   129,     0,  2402,  2381,  2384,  2391,
    1501,  2382,     0,     0,   356,   359,   361,     0,   364,  1989,
    1990,     0,  3166,     0,  2566,     0,    71,  1311,  1314,     0,
    2429,  2426,   129,     0,  2714,  3325,  3323,  1281,  1297,  1279,
    1291,  1292,     0,     0,  1284,  1283,  3151,     0,     0,  3422,
    3439,  3420,     0,  3434,  3435,  3419,     7,     4,     0,   142,
       0,     0,     0,     0,     0,     0,     0,     0,   741,  1503,
    1503,   741,   160,   741,   156,   741,     0,  2363,  2361,  2378,
    2379,  1905,  2116,     0,  1406,  1493,  1458,  1470,  1493,  1995,
    2052,  3340,  1469,  1461,  3371,  3366,  3368,  3367,  3364,  3365,
    3369,  1492,  3370,  1491,  1503,  1475,  1489,  1490,  2203,  3348,
    2189,     0,  1410,  1469,  1466,  3344,  3343,  3333,  3338,  1037,
    1036,   735,   738,   737,     0,     0,  1152,   226,  2596,     0,
    1154,     0,  2345,  1169,     0,     0,  2345,   533,  2345,   587,
    2597,  3281,     0,  3287,  3269,  3151,  1265,  3381,  3382,  1159,
    1157,     0,  1325,  1326,  1329,     0,   249,     0,   252,   254,
     472,   413,     0,     0,     0,  1364,     0,  1362,  1361,  1359,
    1360,  1358,     0,  1349,  1355,  1356,  2345,   525,  1900,     0,
    2238,  2243,  2154,  2156,  2565,  1996,  2043,     0,     0,     0,
    2249,     0,     0,   597,  2140,  3208,   600,   599,  2145,   598,
    2195,  3267,  2139,  1269,     0,     0,   413,   487,   433,  3243,
    1517,     0,  3224,  3228,  3222,  3226,     0,  3206,     0,     0,
    3214,     0,     0,  3252,  3235,  3239,  3238,  3236,     0,  3237,
    3242,  3220,   412,   452,  2164,  2860,  3057,  2446,  2442,  2441,
       0,  2458,     0,     0,  3153,  2072,     0,  3150,   428,     0,
     420,     0,     0,     0,   443,   279,   424,   420,   433,   442,
     492,   282,   418,     0,     0,   413,   413,     0,   283,  3151,
       0,  1994,     0,  1835,     0,     0,     0,     0,     0,     0,
    1635,     0,     0,     0,  1774,     0,  1835,  1797,  2102,  2103,
    2083,  2084,  2082,  2085,  1514,     0,  2086,  2101,  1720,     0,
       0,     0,  1795,     0,  1964,  1965,  1966,  1967,  1968,  1969,
    1970,  1971,  1972,  1973,  1974,  1975,  1977,  1982,  1978,  1979,
    1980,  1981,  1976,  1983,     0,  1963,     0,  1821,  1787,     0,
       0,     0,     0,   884,     0,     0,     0,     0,     0,     0,
       0,  1993,     0,     0,  1993,     0,     0,     0,     0,  1796,
       0,     0,     0,  1794,     0,     0,     0,  1793,  1678,     0,
       0,     0,  1993,     0,     0,     0,     0,  1611,     0,     0,
       0,     0,     0,  1993,     0,     0,     0,     0,     0,     0,
       0,     0,  1604,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1986,  1984,  1987,  1985,     0,     0,
    1860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1734,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1682,     0,     0,     0,  2556,     0,  1068,     0,     0,     0,
       0,  1650,     0,     0,     0,     0,  3105,  1815,  1817,  1519,
    1518,  1520,  1531,  1525,  1529,  1523,  1527,     0,  1584,  2768,
    1532,     0,     0,  3358,  1544,  1548,     0,     0,     0,     0,
       0,  1566,  1567,  1555,  1553,  1554,  1551,  1552,     0,  1557,
       0,  1556,  1563,  1564,  1565,  1568,  1652,  1031,  1660,  2013,
    1789,  1790,  1813,  2017,     0,  2552,  1503,  1607,  1606,  1608,
    1609,  1610,   645,     0,   639,   642,   656,     0,     0,     0,
    2433,     0,  2731,  2755,  2756,   338,   341,   340,   342,     0,
       0,     0,     0,     0,  2175,  2529,     0,  2153,  1901,     0,
       0,     0,  3271,  3193,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3122,     0,     0,  3121,  3120,     0,  3141,
       0,     0,  3126,  3147,  3148,  3145,  3146,  3144,  3125,     0,
       0,  3083,  3127,  3128,  3131,     0,     0,     0,     0,     0,
    3112,     0,  3041,  3085,  3086,  3091,  3081,  2320,     0,     0,
    2323,  2316,  2327,  2778,  2325,  2337,  2324,  2318,  2329,  2317,
       0,     0,  2334,  2330,  2357,     0,  2357,  2332,     0,  2355,
    2342,  2341,  2340,  2289,  2288,  2065,  2066,     0,  2064,     0,
    2055,  2058,  2063,  2061,  2282,  2348,  2335,  2331,   225,  2357,
    2287,  2286,  2268,  2269,  2270,     0,  2052,     0,  2353,  2322,
    2347,     0,  2357,  2357,  2338,  2339,  2308,  2310,  1933,     0,
    1875,     0,  1877,  1874,  1873,  1872,  1903,     0,  1904,   413,
       0,     0,  2537,   279,     0,     0,     0,   629,  1399,  1385,
    1401,  1309,  1308,  1306,  3317,  3321,  1861,    77,     0,  2410,
    2393,  2392,  2394,  2398,   129,  2403,  2395,     0,  2407,  2408,
     369,     0,   365,     0,     0,  2580,  1992,  2581,  2605,  2603,
    2607,  2601,  2602,  2606,  2600,  2604,  2849,  2930,     0,  1995,
    3170,  3443,     0,  1315,  2072,  2425,  2427,  2420,  3324,  1282,
    1299,  1298,  1294,  1295,  1300,  1290,  1289,  2259,  3428,  3437,
    3441,  3426,   742,   733,  3204,  3287,   194,  1118,     0,     0,
     132,   134,     0,   151,   741,   149,   153,   741,     0,   741,
     170,   159,     0,   171,   168,   741,   155,     0,   741,  1473,
    1471,  1472,     0,     0,  2129,     0,  2124,  2045,     0,     0,
    1442,     0,  1459,  1463,  1464,  1440,  2001,  3339,  1470,  2043,
    1498,  1467,  1497,     0,  1488,  1503,     0,  1424,  1411,  1412,
    1421,  1452,  1451,  1469,     0,   736,  2195,  2195,     0,     0,
       0,     0,     0,     0,     0,     0,   229,   238,  2595,     0,
       0,   531,   532,  2195,   530,   573,   574,   577,   578,   579,
       0,     0,   580,  2195,  2195,   527,   553,   554,   557,   558,
     559,   560,   561,   523,     0,   528,     0,     0,     0,  3299,
    1146,  1171,  3383,  1155,     0,     0,  1328,   247,   246,   250,
       0,     0,   459,   468,   462,   464,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      87,    88,   109,     0,  1351,  1363,  2151,  1357,  2195,  2195,
    2195,  2195,   529,   562,   563,   566,   567,   568,   569,   572,
     570,   571,     0,  2345,  2239,  1476,     0,     0,     0,  2568,
       0,  2068,  2044,  2248,  1905,  2252,  2251,  3151,  2136,  2146,
       0,  2196,     0,     0,  1271,  1270,  2142,  2149,  3151,   413,
     308,   436,   490,  3286,     0,  3285,     0,     0,  3203,     0,
    3263,  3266,  2565,     0,     0,     0,     0,   413,  2529,  2443,
    2447,  1390,  1392,  1393,  1391,  1399,     0,     0,  3159,  3160,
    3158,  2077,  2073,     0,  3152,  3157,   421,   429,   444,   447,
       0,     0,   413,     0,   425,   434,   438,     0,   450,   503,
     477,   477,   477,   279,  1367,     0,  1769,     0,  1770,  1771,
       0,  1636,  1869,     0,     0,     0,  1663,     0,     0,     0,
    1773,     0,  1515,     0,     0,  1639,  1631,     0,  1799,     0,
    1804,     0,  1802,     0,     0,     0,     0,     0,     0,  1863,
       0,  1865,  2552,     0,  1779,  1809,     0,  1777,     0,  1798,
       0,  1810,  1811,     0,     0,     0,     0,  1783,  1781,     0,
       0,     0,  1785,     0,     0,     0,     0,     0,     0,     0,
    1681,  1782,  1784,     0,  1716,     0,  1767,  1717,  1718,  1719,
    2555,     0,  1713,     0,  1714,     0,     0,     0,     0,     0,
    1667,  1668,     0,     0,     0,  1744,     0,  1669,  1724,     0,
    1644,  1745,  1726,  1674,  1675,  1746,  1747,  1748,  1641,  1642,
    1728,  1729,     0,  1750,  1643,  1730,  1733,     0,  1677,  2072,
       0,  1661,     0,     0,     0,  1679,  1707,     0,     0,     0,
    1640,     0,  1736,     0,     0,     0,  2072,     0,     0,  1683,
       0,     0,   885,  1922,  1435,  1493,  3346,  3345,  3354,  3355,
    3359,  1632,  2553,     0,     0,  1526,  1530,  1524,  1528,  3358,
       0,     0,     0,     0,  1543,     0,  3358,  1546,  1549,     0,
       0,  2015,     0,     0,  1807,  1858,     0,     0,     0,  1763,
    1764,     0,     0,   638,   637,     0,   641,   717,     0,   658,
     646,   635,  2435,  2434,     0,     0,  1374,  1377,     0,     0,
    2181,     0,     0,  2529,  2187,  2168,  2178,     0,     0,     0,
    3194,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3109,  3079,  2529,     0,     0,  1035,  1034,  1033,  3140,     0,
       0,  3133,  3134,     0,     0,     0,  3106,  3107,  3108,     0,
    2628,  2584,  2586,     0,  2585,  2626,  2624,  2627,  2622,  2623,
    2621,  2625,  3115,     0,  3088,  3089,  3090,     0,     0,  2315,
    2326,  2358,  2359,  2283,  2336,  2333,  2354,  2072,  2293,     0,
    2507,     0,     0,     0,     0,  2314,  2284,     0,  2307,  2265,
    2355,  1995,  2347,  2280,  2281,  1933,  1905,     0,     0,  1895,
    1936,     0,  1936,  1897,  1898,  1905,     0,  1905,  1900,   413,
    2536,     0,  2541,     0,   413,  1348,  1388,  1380,  1387,  1384,
    1399,  1397,  1386,  1094,  1093,     0,  1400,  2216,  2214,    80,
      82,  2213,  2215,    83,     0,  2396,  2397,  2390,  2409,  2385,
       0,   360,   370,   362,   366,   367,   368,   363,  3181,  3182,
    3174,  3177,  3175,  3176,  3180,  3183,  3184,  3171,  3178,  2052,
    1322,  1320,  1319,  1321,  1310,  1316,  1317,  2430,  2428,  2423,
    1297,     0,  1280,  2072,     0,  3440,   143,   734,     0,   163,
    3299,     0,     0,     0,     0,     0,     0,   745,   174,  3416,
    3404,     0,   144,   172,   161,   173,   169,  3413,   227,   157,
       0,  2579,  2125,  2128,     0,  2117,  2119,  2120,  2591,  2122,
       0,  3151,     0,  2109,  1460,  1465,  3331,     0,  1998,  2052,
    1503,  1504,  1504,  2551,     0,     0,  2208,  2201,  2188,  1493,
    1466,  1427,  3334,  1414,     0,     0,  1150,     0,     0,     0,
     232,   235,   233,   234,   582,   581,     0,  2345,   575,  2195,
    2195,   188,  2195,  2195,   187,   189,     0,   183,   180,   190,
    2195,  1170,   176,     0,     0,     0,     0,  2072,     0,     0,
       0,   196,     0,     0,  2345,   555,   534,   535,   538,   539,
     540,     0,  3274,  3273,     0,  3289,     0,     0,  3291,     0,
    3290,  3288,  3259,  3270,     0,  1167,  1036,     0,  1173,  1175,
       0,     0,  3383,  1327,     0,   249,   253,   413,     0,   465,
       0,     0,  2072,     0,  2072,  2072,     0,     0,  2072,     0,
    2072,     0,     0,     0,     0,     0,     0,     0,  2072,     0,
       0,     0,     0,  2072,     0,  1365,     0,     0,     0,     0,
    2345,   564,     0,  2195,   524,   541,   542,   545,   546,   547,
     548,   549,   552,   550,   551,  1478,  1477,     0,  2236,  1480,
    2155,  2251,  1905,  2566,  1997,     0,  2245,  1995,     0,  2250,
    2134,  3209,   596,   796,  3268,  1269,     0,   309,     0,     0,
     433,  3283,     0,  3303,     0,     0,     0,     0,     0,     0,
       0,     0,   413,  2217,     0,  1399,  1403,  2451,  3162,  3163,
    3161,  2080,  2081,  2078,  2076,  2079,   445,   312,   314,   311,
     313,  2637,     0,   299,   285,   301,     0,   388,   294,   386,
     387,  2634,  2632,  2636,  2630,  2631,  2635,  2629,  2633,   483,
       0,   284,     0,   441,   433,     0,   497,   499,   478,   507,
     501,   413,     0,  1836,  1866,     0,   986,   986,   972,   990,
    1853,  1847,  1850,     0,   986,  1855,   986,  1848,   986,     0,
       0,  1845,  1846,     0,     0,     0,  1775,  1772,     0,     0,
       0,  1824,     0,     0,     0,     0,     0,  1560,     0,  1758,
       0,  1780,  1778,     0,     0,     0,     0,     0,     0,     0,
       0,  1786,  1617,     0,  1615,     0,  1616,     0,  1618,     0,
       0,  1768,     0,  1586,  1605,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1861,     0,     0,  2088,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2557,
       0,     0,     0,  1057,  1063,  1066,  1067,  1069,  1061,     0,
    1738,     0,     0,     0,  1469,  1921,  3360,  1435,     0,     0,
       0,  3352,  1493,  3356,  3342,     0,  3357,  1818,  1816,     0,
    1541,  1537,     0,  1535,  1545,     0,     0,     0,     0,  1559,
    1558,  2017,  2016,     0,  1806,     0,     0,  1859,  2554,  1504,
    1753,  1503,   648,     0,   666,   640,  2072,   643,     0,   657,
       0,   669,     0,     0,     0,   339,     0,  1378,     0,     0,
    2185,  2186,  2529,     0,     0,     0,  2184,  2545,  2544,  2556,
     724,     0,  1961,     0,  3192,  3272,     0,     0,     0,     0,
       0,     0,     0,  3077,  3123,  3114,     0,     0,     0,     0,
    3138,  3132,  3129,  3130,     0,     0,     0,  3113,  3087,  3093,
    3092,  3095,  3097,  2303,  2302,     0,  2356,  2052,  2067,  2057,
       0,  2060,  2059,  2062,  2276,  2295,  2297,  2357,  1935,  1928,
       0,  3337,  1493,  1925,  1926,  1934,  1905,     0,     0,  1899,
    1896,  1937,     0,  1936,  1936,  1905,     0,  1879,  2222,  2225,
       0,  1878,  1482,     0,  2540,     0,     0,   485,     0,  1955,
       0,     0,  2388,     0,  2383,  2386,     0,     0,     0,  3169,
       0,  1312,  1318,  1296,     0,  1303,  1301,  3429,  3442,     0,
     162,     0,  1134,  1136,  1135,  1119,  1120,     0,   138,   140,
       0,     0,  2195,  2195,  2195,  2195,  2195,     0,  2195,  2195,
    2195,  2195,  2195,     0,  2195,  2195,  2195,  2195,  2195,  2195,
    2195,  2195,  2195,  2195,     0,     0,  2195,  2195,   842,   133,
     611,   625,   746,   749,   790,   774,   775,     0,   745,   175,
       0,     0,   205,  3383,     0,     0,   146,  1025,  2121,     0,
       0,  2550,  2046,  2049,  1494,     0,     0,  1441,  3332,     0,
    1999,  2008,  1462,  1496,  1505,  1499,     0,  1504,  2204,  1503,
    2205,  1423,  1469,  1427,     0,     0,  1415,  1416,   795,   794,
     237,   236,   241,   242,  2098,  2099,  2096,  2097,   588,   601,
    2100,   602,   576,  2072,  2072,  2200,  2199,  2072,  2072,   182,
     179,  2198,  2197,  2072,  2072,   177,   200,   199,   201,   202,
     204,   203,   198,  1166,     0,   589,   590,   556,     0,   536,
    3277,     0,  3279,  3262,  3261,  3260,  3257,     0,  2072,  2072,
    2072,     0,  2072,  3298,  3300,  1257,  1257,     0,  1257,     0,
       0,  1257,  2195,     0,     0,   629,  1275,  2195,     0,     0,
       0,     0,     0,  1241,     0,  1257,     0,     0,     0,     0,
       0,  1187,  1240,   747,  1147,  1186,  1188,  1200,   625,     0,
    1218,  1243,  1244,  1242,  3312,     0,     0,   210,  3385,     0,
    3387,     0,  1331,     0,  1330,   248,   413,   469,  2072,  2072,
     102,  2072,    94,    95,    90,   122,   123,    92,    93,    98,
      97,    99,   100,   103,   104,   101,    96,    91,   126,   128,
     127,   105,   124,   125,    89,   595,   594,   593,   592,   565,
       0,     0,  2345,   543,  1479,  1481,     0,  1995,  2569,     0,
    2069,  1503,  2240,  2242,  2133,   514,  2529,   491,   437,   489,
    3284,     0,  3202,  3207,     0,  3265,  3264,  3287,  3287,  3287,
    3287,   455,     0,  2165,  1394,  1399,  1403,     0,  1395,  2462,
     966,   988,   986,  1003,   952,   972,   968,   972,   962,  1003,
     909,   909,  1003,   965,   909,   972,   967,     0,   964,  1003,
     963,   909,     0,   956,   988,   903,   904,   909,   986,   922,
       0,   972,   945,   944,  1003,   948,   949,   947,   951,     0,
     953,   972,   958,   946,   950,     0,     0,   986,   986,   986,
       0,     0,   986,   390,   891,   894,   896,   895,   897,   898,
     972,   988,   988,     0,     0,   986,   990,     0,     0,   302,
       0,   280,   435,   439,   413,   477,     0,  1867,     0,   987,
    1837,  1838,     0,  1852,   974,   973,     0,   991,  1854,  1851,
    1840,  1857,  1844,  1849,  1856,  1842,  1634,  1664,  1638,  1637,
       0,     0,     0,  1694,     0,  1822,  1805,  1803,     0,     0,
    1671,     0,  1673,     0,     0,  1760,  2554,  1727,  1801,  1697,
    1731,     0,  1676,     0,  1703,  1701,     0,  1614,  1612,  1613,
       0,  1684,  1711,     0,  1603,  1712,     0,  1743,  1690,     0,
    1692,     0,  1693,     0,  1722,     0,  1695,  1725,  1749,  1630,
    2090,  2089,  2087,  1645,  2072,     0,  1698,  1662,     0,     0,
    1735,  2558,  2559,     0,  1737,     0,     0,  1068,  1054,  1055,
    1056,     0,  1058,  1060,  1062,     0,  2072,  1751,  1562,  1561,
    3349,  1503,  3361,  3363,     0,  3353,  1436,  1922,  3350,  3341,
    1920,  1916,  1918,     0,  1533,     0,  1542,  1539,     0,  1536,
    1547,  2019,  2018,  2049,     0,     0,  1754,  1858,  1505,  1765,
       0,   649,   650,   652,   654,   720,     0,   644,     0,   633,
       0,   648,   636,  1375,   496,  2182,  2191,     0,  2529,  2179,
     619,  2529,     0,   724,     0,  1469,  1474,   629,     0,     0,
       0,  3189,  3188,  3187,  3186,  3111,  3110,  3143,  3142,  3136,
    3135,  3137,     0,     0,  3116,     0,     0,  2094,  2095,  2093,
    2091,  2092,  2294,  2056,  2052,  2290,  1930,     0,  1482,  1910,
    1911,  1913,  1493,  1924,     0,  1876,  1905,     0,     0,  1884,
    1905,  1880,  1882,     0,  1995,     0,     0,  1988,   494,  2542,
    1501,     0,  1958,     0,  1959,  1956,  1957,    81,  2072,     0,
       0,   378,   373,   381,   375,   377,   376,   382,   383,   384,
     385,   379,   374,   380,   372,   371,     0,  1323,     0,     0,
    3205,     0,   136,     0,     0,  2195,   612,  2072,  2072,  2072,
    2072,   772,   793,  2072,  2072,  2072,     0,     0,  2195,  2072,
       0,     0,  2072,  2072,  2072,  2072,     0,     0,  2072,   780,
     781,   779,  2072,  2072,  1141,     0,  2676,     0,     0,     0,
     812,   813,   815,   816,   817,   818,     0,   843,   819,   741,
    1095,  1095,   845,  2561,  2462,   624,   626,  1036,   750,     0,
     135,   277,   230,     0,     0,     0,   275,     0,   810,   811,
     809,   808,     0,  3383,     0,  2126,  2118,  2123,     0,  2050,
    2051,  2048,  3151,  1503,  2005,     0,     0,  1468,     0,  1500,
    1509,  1508,  2548,  2552,  2212,     0,     0,  2206,  2210,  1413,
    1493,  1470,  1493,     0,  1417,  1466,  1428,  1469,   181,   186,
     185,   178,   191,   184,   197,   537,  3278,  3276,  3275,     0,
    3258,  3294,  3292,  3293,  3296,     0,     0,  3295,  3297,  1141,
     741,  1258,     0,     0,  1222,  1225,  1223,   739,  2157,  1368,
    2157,     0,     0,  2157,     0,  2159,     0,     0,     0,  2157,
    2157,     0,  1368,     0,   627,  1278,  1276,  1277,     0,     0,
    1368,  1234,  1182,  1235,     0,  1183,  2157,  1368,  1202,  1368,
    1368,     0,   748,  1036,  1184,  1185,   842,  1272,  3313,     0,
       0,     0,  1172,     0,   213,   211,   221,  3384,     0,  1158,
    2529,  3387,  1333,  1334,     0,     0,     0,   115,   117,     0,
     119,   121,     0,   111,   113,   526,   591,   544,  2251,  2244,
    2070,     0,  2246,   310,     0,  3287,  3301,  3301,  3301,  3301,
     413,   451,   454,  2218,  1396,  1404,  2464,  2463,     0,   989,
     915,  1003,  1001,  1003,   929,  1004,   976,   969,   976,   932,
    1046,     0,  1039,  1044,  1040,   938,  1042,     0,  1050,  1049,
     910,   952,  1003,   940,     0,   909,   931,   937,   976,     0,
     926,   935,  1003,   902,   939,   925,     0,   976,   941,   954,
     957,   959,   961,   976,  1003,     0,     0,   390,   909,   924,
     923,     0,   909,   976,     0,   295,   970,   955,  1042,  1050,
     909,  1003,   976,   976,   304,  2072,   306,   389,   413,   481,
       0,     0,     0,     0,  1042,     0,     0,  1042,  1042,  1776,
       0,     0,     0,     0,  1828,     0,     0,     0,     0,     0,
    1633,     0,  1756,     0,     0,     0,     0,   972,  1593,  1595,
    1591,  1594,     0,   986,  1597,     0,   953,   986,  1600,  1602,
    1587,  1588,  1589,  1590,     0,     0,  1870,  1871,     0,  2108,
    2107,  2106,     0,     0,     0,     0,  2560,  1052,  1740,     0,
    1065,  1059,  1057,  1064,     0,  1923,  3362,  1439,  3351,  1469,
       0,  1819,  1538,     0,     0,  2021,     0,  2004,     0,  1808,
       0,  1766,   653,     0,     0,     0,   673,     0,   671,   647,
       0,     0,     0,     0,  3337,  2180,  2183,  1469,  2546,  2557,
    1493,  1470,  1493,   729,  1503,  1902,  1962,  3191,  3190,     0,
       0,  3094,  3096,  2296,  1927,  1474,  1929,  1988,     0,  1915,
    1914,  3359,     0,  1872,  1905,  1905,     0,  1872,     0,     0,
    2224,  2043,  2226,  2227,  1485,     0,  1476,  1476,  1483,  1953,
    3358,  1203,     0,  1204,  1215,  1217,  1402,     0,  2415,     0,
    2413,  2389,  2416,     0,  1302,  1304,     0,     0,     0,     0,
       0,  2105,  2104,   769,   762,   761,   764,   763,   766,   765,
       0,   758,   755,   767,   757,   782,     0,   770,   752,   806,
     807,   805,   776,   783,   753,   754,   760,   759,   756,   798,
     803,   801,   800,   799,   804,   802,   771,   789,   768,   784,
     844,  1142,     0,     0,  2564,   606,   603,   842,     0,     0,
       0,  1095,   835,   741,     0,   820,  1141,  1096,   741,   741,
       0,     0,   605,   731,   751,   788,   787,   785,   786,   271,
    3417,   517,   518,     0,     0,  3387,   255,  3411,   230,     0,
       0,  1026,  2465,  2049,  1495,     0,     0,  2112,  2114,  2006,
    2007,  2002,  2000,     0,  2009,  2011,  1507,  1506,     0,  1504,
    2202,     0,  1445,  1464,  1443,  1429,  1418,  1419,  1469,  1426,
    1454,  1453,  3280,  2075,  2074,     0,  1368,  1245,     0,  1220,
       0,     0,     0,  1194,     0,     0,  2157,     0,  1247,  1246,
       0,     0,     0,  1255,  1256,     0,  2039,  2041,  2049,     0,
    1238,  1253,  1254,     0,     0,     0,     0,  1210,     0,  1199,
    1257,  1257,  1219,     0,     0,  1274,  1221,   220,   209,     0,
       0,  1174,  1176,     0,     0,  1177,  3386,     0,  1156,  1339,
       0,   413,   107,  2072,   108,  2072,   106,  2072,  2071,  3304,
    3301,     0,  3200,  3199,  3198,  3197,   413,   456,     0,     0,
     927,  1005,     0,   928,   978,   979,   977,   905,   901,  1047,
    1041,   912,  1043,  1038,  1051,  1048,  1045,  1001,   911,   933,
     934,   907,     0,  1143,   919,     0,   908,   960,   906,   920,
       0,     0,   291,     0,   289,   298,   936,   390,   286,   917,
     921,   391,     0,   930,   913,   914,   916,  1050,   899,   900,
    2072,   300,   319,   318,     0,     0,     0,   984,   982,   985,
     983,  1839,     0,  1841,  1843,  1688,  1689,  1825,  2049,  1823,
    1830,     0,     0,  1829,  1721,     0,  1672,     0,  1757,     0,
    1732,  1702,  1700,  1685,  1596,  1592,  1599,   954,  1598,  1042,
    1715,  1691,  1723,  1646,  2072,  1699,  1705,  1706,     0,  1739,
    2072,  2043,  1919,  1540,     0,  2024,  2023,     0,     0,  2049,
    2049,  1755,   651,   721,   646,     0,     0,   670,     0,   634,
    2190,  2192,   621,   623,  1493,   727,   726,     0,   618,   730,
     728,   616,   725,  3118,  3117,  1503,  1907,  1912,     0,  1885,
       0,  1889,  1894,  1890,     0,  1881,     0,  2068,  1476,     0,
       0,  1906,  1950,  1502,  1398,     0,  1960,  2411,  2072,     0,
    2387,  3179,     0,     0,     0,  2049,  1139,     0,   778,  2408,
     777,   613,     0,     0,  3337,   745,   814,     0,   741,  1091,
    1092,  1141,  1073,  1116,  2561,  1141,  1141,   988,   903,   904,
     909,   986,   922,  2733,   972,   945,   944,  1003,   948,   949,
     947,   951,  2743,   953,   972,   958,   946,   950,  2751,   849,
     986,   986,   986,  2758,   986,     0,   837,   847,   892,  2563,
     732,  2529,   274,   272,   273,     0,   267,   269,     0,   239,
     231,     0,   413,   521,   519,   520,     0,     0,   145,     0,
     256,     0,   258,   259,     0,  3414,  3410,  3387,     0,  2473,
    2047,  1504,  2110,  1503,     0,     0,  2549,  2211,  2209,  3331,
    1493,     0,  1205,     0,     0,  1193,     0,  1354,  1032,  1230,
       0,  1189,  1232,  1233,  1269,  1191,     0,  2042,   628,  1198,
       0,  1272,  1190,  1212,  1196,  1224,  1273,   207,   212,   222,
     223,  1160,  1466,  1432,  3390,  3396,     0,  1340,  1336,  1337,
    1332,   413,   116,   120,   112,  3201,     0,  3308,  3302,  3306,
       0,     0,  1002,   980,   981,  1006,  1042,     0,  1042,   390,
     290,   293,     0,   296,     0,     0,   918,   328,   327,   325,
     413,   315,   323,   317,     0,   324,     0,   308,   504,     0,
       0,  1827,  1788,  1831,  1832,     0,  1759,  1761,  1601,     0,
    1053,     0,  2052,  2020,  2014,     0,     0,     0,     0,     0,
       0,  2033,  2025,     0,  2003,  1812,  2072,   719,     0,     0,
     659,   676,   675,   672,   723,  2547,  3331,  1931,  1482,     0,
       0,     0,     0,     0,  2223,  1484,  1476,  1476,  1954,     0,
       0,  1216,  2414,     0,     0,     0,  3151,     0,  1138,     0,
    3151,     0,     0,   608,   610,   625,     0,  1141,  1116,  2561,
       0,  1077,     0,   821,     0,   825,   827,   851,     0,   846,
     838,   859,     0,   791,   278,   271,   270,   240,   192,  1503,
     218,   276,     0,     0,     0,   260,  3412,     0,   147,     0,
       0,     0,     0,  2466,  2468,     0,  2127,  2115,  2113,  2012,
    2010,  1444,  1425,     0,  1207,   740,     0,     0,  1272,  1195,
    1239,  1231,  1229,  1368,  2040,     0,  1228,  1211,  1213,  1315,
     214,  1178,   413,  1469,  1432,     0,     0,  3342,  3392,  3391,
       0,  3388,  1335,     0,  1342,  3307,  3305,  2219,  1900,   943,
    1144,   942,   297,   292,   287,   971,  2072,   305,   326,   307,
     303,   477,   975,  2049,     0,     0,  1670,  1647,  1741,  1493,
       0,  2030,     0,     0,  2028,  2027,     0,  2022,  2029,   722,
       0,     0,   667,   683,   679,     0,   681,   682,   704,   617,
    1469,  1988,  1886,     0,  1891,     0,  1883,  1487,  1486,  1943,
       0,  1942,     0,  1948,  1952,  2538,  2417,     0,  3151,  1106,
    2049,     0,  1108,   773,     0,  2462,   839,   833,   829,     0,
       0,  1076,     0,  1081,  1117,     0,   823,     0,     0,  1071,
     877,  1017,     0,   880,     0,   850,   852,  1010,  1011,   854,
       0,     0,     0,     0,   893,     0,     0,   994,     0,   997,
       0,     0,   848,     0,   860,   993,  1000,  2562,   615,   792,
     268,   193,  3418,  3405,   210,   219,   257,     0,   265,     0,
     192,     0,     0,     0,     0,  2467,     0,     0,  2474,  2476,
       0,     0,     0,  1206,  1237,     0,  1227,  1192,   629,     0,
    1197,     0,   216,   192,  3389,  1470,  1493,  1493,     0,  3393,
    1466,  1433,  1469,  3335,     0,     0,     0,  1341,  1346,     0,
    1343,  1345,     0,  2452,     0,   316,   505,  1826,  1834,  1833,
    1438,  2031,     0,  2032,  2035,     0,     0,  2036,     0,   663,
     665,   655,     0,   660,     0,   677,     0,  2195,  2195,     0,
    2195,  2195,  2195,  2195,   697,   705,   707,     0,  1932,  1908,
       0,     0,  1938,  1938,  1949,     0,  1104,     0,     0,  2195,
    1248,  1107,  1132,  1114,     0,  1137,  1140,  1248,  1109,  1131,
    1112,     0,   604,     0,     0,   831,  1074,     0,  1078,  1079,
    1080,     0,  1072,     0,     0,     0,     0,   878,   879,  1018,
     853,  1016,  1009,  1008,     0,   999,     0,     0,  3358,   889,
     890,   995,   887,   888,     0,     0,   868,     0,     0,  1001,
     992,   861,     0,   221,     0,     0,  3415,  2471,  2472,     0,
    2469,     0,     0,  2475,  1226,  1209,     0,  1236,  1201,     0,
     215,     0,   208,   224,  1493,  1446,  1449,  1434,  3395,  3394,
    1469,  1431,  1470,  1455,  1456,     0,  3397,     0,     0,  1338,
       0,  2220,  2229,     0,  1025,   288,  2026,  2034,  2038,  2037,
     661,     0,   668,   690,   680,   686,     0,  2195,     0,     0,
    2195,     0,     0,     0,     0,     0,   674,   706,  2195,  1888,
    1893,     0,  1946,  1944,   195,     0,     0,  1248,  1105,  1130,
    1129,  1110,     0,  1124,  2072,   139,  1250,  1249,  1115,     0,
     141,  1113,   836,     0,     0,     0,  1075,     0,     0,     0,
       0,     0,     0,  1015,  1014,  1012,  1013,  2510,  2509,     0,
    1510,   998,     0,   863,  1007,   862,     0,     0,   263,     0,
    2470,  2478,  2477,  1208,     0,   217,  1450,     0,  1493,  1457,
    3336,  3398,  3399,  1344,     0,     0,  2453,   667,   664,   690,
       0,   688,     0,   684,   678,   685,     0,   716,   710,     0,
     712,   713,   711,   708,   701,     0,   699,     0,     0,  1939,
       0,     0,     0,  1121,  1122,   137,  1111,  1133,  1123,  1252,
    1251,  1128,  1127,  1125,  1126,     0,     0,     0,  1087,  1086,
       0,     0,  1083,  1082,  1104,     0,  1106,  1108,   886,     0,
     996,   855,   855,   869,  1503,   223,     0,   261,     0,  1448,
    1430,  2228,  2230,  2479,   662,   687,     0,   695,   691,   693,
     696,   715,   714,     0,   698,     0,   709,  1941,  1940,  1955,
       0,     0,  1104,     0,  1090,  1088,  1089,     0,     0,   822,
    1104,   826,   828,  1511,     0,   866,   856,   858,   865,   871,
     872,   870,   873,  3406,   206,   264,     0,  1214,     0,  2465,
     689,     0,     0,   704,   703,   700,     0,     0,   834,   830,
    1104,     0,     0,   824,  1512,   857,   864,   874,   876,     0,
     262,     0,  2473,   694,   692,   702,  1947,  1945,   832,  1085,
    1084,   875,     0,     0,  2481,  3407,  2480,     0,  2485,  3402,
       0,     0,  2492,  3400,  3401,     0,  3408,  2483,  2484,  2482,
    2487,     0,     0,  2489,  2490,     0,  2454,  3403,   413,  2491,
    2486,     0,  2493,  2495,     0,   192,  2488,     0,  1503,  3409,
    2494,     0,  1504,  2496
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5093, -5093, -5093, -5093,  2516,  4627, -5093, -5093, -5093,  4286,
   -5093, -5093, -5093, -5093,  3725, -5093, -5093,  1864, -5093, -5093,
   -5093, -5093, -5093,  2221, -5093,   620, -5093,   625, -5093,   624,
   -2984,  -589,  4334, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
    3646,  2980, -5093, -5093, -5093,  2376, -2865, -4922, -5093, -5093,
      69,  1733, -5093, -5093,   382, -5093,    14, -5093, -5093, -5093,
   -4269,  -133,  -324, -5093,   116,  -103,  4220,   735, -4070, -5093,
   -5093, -5093, -5093, -5093, -5093, -1824, -5093, -5093, -5093,   570,
   -5093, -3491, -5093, -5093,   201, -5093, -5093, -5093, -5093, -5093,
   -1114,  -630, -1324, -5093,   595, -5093,   310, -5093,   194, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,   294, -5093, -5093,
   -5093,   132,   990, -4381, -5093, -5093, -5093, -5093,  2751, -5093,
    2187, -5093, -1675,  3898, -5093, -5093, -5093, -5093, -5093,  3064,
   -2340, -5093, -5093, -5093,  1891, -5093, -2672, -5093, -4231,   203,
    -815,    57, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -1079,
   -5093, -5093, -5093, -5093, -5093, -5093, -1932,  2155, -5093,  2211,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  1072, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
    2913, -5093, -5093,  4774, -5093, -5093, -5093, -5093,  1540, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,  3494, -5093,  3495,
    3496, -5093,  3498, -5093, -2684, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,  4213, -5093, -5093,
   -5093, -2895, -5093, -5093, -2941,  3629, -5093, -2314, -5093, -5093,
   -2364, -5093, -5093, -2220,  1647, -5093, -5093,  1884,  1802, -5093,
   -1826, -2482, -2433, -5093, -5093, -5093, -2531, -2530,  -737,  3575,
   -1220, -2134, -5093, -5093, -5093, -5093, -5093,   104,   439, -5093,
   -5093, -5093,   258,  1726,  2319, -5093, -3724, -5093, -5093,   717,
   -5093, -5093, -5093, -5093, -5093,  1421,   555,  1419, -5093,   938,
    3279, -2662, -5093, -5093, -5093, -5093, -5093, -5093,  -125,   308,
    -213, -5093, -3980,   564, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -3817, -5093, -5093, -5093,  -318, -5093, -5093,  -281,
   -5093, -5093,  -317, -5093,     2, -5093, -5093, -5093,  1890,  1426,
   -5093, -5093,   944, -3893, -5093, -5093,  3080, -1782, -5093,  -541,
   -5093, -3600,  1761, -3350, -3092, -5093, -5093,   269, -1197, -1180,
    -212, -5093, -5093, -5093, -5093,  1171, -5093,   841,  1760, -3638,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -3636, -3634, -5093,
   -4360, -5093, -5093, -5093, -4478, -5093, -5093, -5093, -5093, -5093,
   -5093,  -242, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -3295,
   -5093, -5093,   -37,   -46, -5093,    78, -3308, -5093, -4403, -5093,
   -1848, -5093, -5093, -5093, -5093, -5093, -1840,  1541,  1664, -5093,
   -5093, -5093, -5093, -3275, -3014,  -515, -1142, -3094, -1547,  1610,
     -44, -4162, -4752,  -173, -3578, -5093, -5093, -3140, -3644, -5093,
    -644, -2671, -3076,   -84, -5093, -5093, -1597,   440, -3059, -5093,
    1121,  1115, -3417, -3425, -4168,  2135, -5093, -5093,  1513, -5093,
   -1366,  1516, -5093, -5093, -5093,  1521, -5093,  -247, -5093, -5093,
   -5093, -5093, -3620, -5093, -2356, -3937, -5093, -5093,  5539,  5540,
   -2675,  -209,  -208, -5093, -5093, -5093,   320, -5093, -5093, -3456,
     -98,    25,    34, -3048, -4547,   340, -3317,  1120, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  1800, -2512,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -3709, -4160, -5093,
   -5093,  1216, -4526, -3181, -3170, -3599,  4450, -5093, -5093, -5093,
   -5093,  4320, -3235, -4686, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093,  3813,  1633, -5093, -5093,  2523, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,   275,  2526, -5093, -5093, -5093,
   -5093, -5093,  3030, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093,   -42, -5093, -5093, -5093, -5093, -5093,   485,  3688, -5093,
   -5093, -5093, -5093,     7, -5093, -5093, -5093, -5093,  3345, -5093,
   -5093, -5093, -5093,  3209, -5093, -5093, -5093, -5093, -5093, -5093,
    2314, -5093,  2925, -5093, -2337, -5093, -5093,  1731,  -149, -5093,
   -5093,  4382, -5093, -5093, -5093,  1920, -5093, -5093,   290, -5093,
    2165, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  3092,
     848,   -11,  4402, -3543, -1862, -5093, -1247, -1255, -5093, -5093,
   -3651, -5093, -3900, -4037, -5093, -5093,  3775, -1839, -3768,  2503,
   -1602, -5093,  -145, -3103,  1529, -5093,  1998,  1504, 10035, -5093,
   -1388, -1431, -5093, -5093,   -39, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  2827,  2830, -5093, -5093,  4108, -4902,
   -5093, -5093,  -694, -5093, -2597, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093,  2143, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  4046,
   -1518, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093,  1657, -5093, -2658, -5093, -5093, -5093, -5093, -5093,  1543,
    -604, -5093,  4201, -5093,  4228, -5093, -2910, -1758,  2624,  2067,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,  2633, -5093, -1948,
   -5093, -3390, -5093, -5093, -5093, -5093, -5093,  1018, -5093, -3831,
   -5093,  1571, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093,  2640, -5093, -5093, -2586,    96, -5093,   246, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093,  -178,   995,  -177, -3876, -1412,
    2367, -5093, -5093, -1385,  4242, -1781, -5093, -5093, -5093, -5093,
    1965, -5093, -5093, -5093,   540,   547, -5093, -5093,  2175, -5093,
   -5093, -5093, -5093,   692,   141, -5093, -5093, -5093,   526, -2499,
   -1927, -5093,   700, -4015, -1125, -5093, -1145, -5093, -1676,  2105,
     661, -2700, -5093,   659, -1402,  -419, -2868, -4192, -3072, -5093,
   -2163, -5093,  3155, -5093, -5093, -5093,   557, -5093, -5093, -5093,
    1993, -5093, -1802, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  -480, -1120, -5093, -5093,  3027, -1328,  -120,  5629,
     -17, -5093, -5093,   -13, -5093, -5093, -5093, -5093,  4315,  4071,
    2990, -5093, -5093, -3219, -2832, -5093,  1079, -1052,  2561,  2512,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,  1475, -5093,  1508,
   -3087, -5093, -5093, -5093,    -1, -5093, -5093, -5093,  1515, -5093,
     -55,  5075,     4, -5093, -5093, -5093,  4935, -5093, -5093, -5093,
   -5093, -5093,  3762, -1306,  4936, -5093, -5093, -5093, -5093, -5093,
   -5093,  3316, -5093, -5093, -5093, -5093, -5093, -5093,  4022,  5090,
    -647, -1550, -5093,  -843,  3324,  2706,  -878, -5093, -5093, -5093,
    4491,  5091, -5093, -5093,  5635, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  3282,   683, -5093, -5093,   696, -5093,
   -5093, -5093, -5093,  3933, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093,  4363, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,  1829,  -140,
   -5093,   424,  -152, -5093,   253, -5093, -5093, -5093, -5093, -5093,
    -188, -5093, -5093,  -193, -5093, -1223,  4804, -1680, -5093, -1607,
   -3182, -5093, -1524,  2159, -5093, -5093, -5093,  3338, -5093, -5093,
   -5093, -5093,  1617, -5093, -5093, -3409,  -835, -1527, -3586,   196,
   -5093, -5093, -5093,  -894,  4544,    -2,  1410,  -995, -5093, -5093,
    2871,    -3,  -848,  -139,  -563,  -669,  -888, -5093,  9020, -5093,
   -5093, -5093, -5093,  -629,  -593,  -571,   111,  -568,   -86,  -628,
    -474, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  2771, -5093, -5093, -5093,  1595, -5093,  5131, -5093,
    3546, -1627,  5133,  3425,  2793,  2795, -5093, -5093, -5093, -5093,
   -1604, -5093, -5093, -1596,   273, -5093,  3754, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093, -5093,  3942,  -502,  -524,  4134,  5143,  4686,
   -5093,  4404, -5093, -5093, -5093, -5093, -5093,  2002, -5093, -1763,
    2836, -1303, -1762, -5093, -5093,  3182,  1838, -5093,  2473, -2420,
   -2983, -5093,  2678, -2821, -5093, -5093,   601, -5093, -5093, -5093,
    1966,   277,  5125,  4591, -5093, -5093, -5093, -5093, -2843, -3452,
    -726, -5093, -5092, -5093, -1816, -5093, -1272,  2203, -3421, -5093,
    -118, -5093, -5093, -3356, -3349,  1613, -1424,  2773,  1148, -5093,
   -5093, -3267,   279,  5734,  5735,  5736,  -375, -5093, -3055, -5093,
   -4227, -5093,   142, -5093, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093,  3297, -5093, -5093,   354, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093,  2486, -5093, -5093, -5093, -5093, -5093, -5093,
   -5093, -5093, -5093
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,    65,   709,  1847,    66,    67,    68,    69,    70,  1203,
    1204,    71,  1205,  1778,  1781,  2458,  3079,  3080,    72,   682,
      73,  1954,  2660,  2661,  4452,  4453,  4446,  4447,  4449,  4450,
    2662,   780,   781,    74,  3137,  3138,  4707,  4253,  4254,  2513,
    3713,  4323,  1859,  1858,  1860,  1865,  2535,  1863,  2529,   717,
    2530,  3143,  2531,  3144,  3708,  3211,  3212,  5502,  1259,  3131,
    3220,  3221,  2526,  4314,  4432,  5370,  4436,  5532,  5672,  5504,
    3248,  4875,  5371,  5372,   621,  3147,  1916,  4780,  2586,  5130,
    2587,    75,   774,  1946,  3255,  1331,  1947,  1948,  5139,  5140,
    5141,  5142,  5125,  5126,  5127,  5128,  4317,  4786,  4312,  4779,
    2752,   869,  2045,  2753,  4937,  4931,  4932,  4933,  4527,  3362,
    3363,  3364,  4546,  3365,  4950,  4955,  3327,  3328,  3906,  3366,
    5230,  5231,  5232,   639,  1098,  5233,    76,    77,   640,   649,
     641,  1095,  2305,  1096,    78,    79,   677,  1804,  1805,  1806,
    1807,  3097,  2471,  3091,  3092,  4244,  4938,  3368,  4535,   870,
     871,   872,    81,   622,   873,   874,   875,   876,  1431,  2038,
    2039,   877,   878,   879,   880,   881,  2711,  2756,  3382,  2712,
    3329,  2757,  2049,   882,   883,   884,   885,  1432,   846,   847,
    2727,  3921,  4472,    82,   599,   776,   777,  1953,  2634,   778,
    2635,  3258,  4445,   779,  1332,  2631,  1334,   886,  3386,   887,
     888,  2058,   889,  1422,    83,  1764,  1998,   812,  1372,   890,
    1191,  2439,  1104,  2313,  3387,   891,  2055,  2057,  2054,  3385,
    5401,  2056,    84,   632,   658,   620,  1370,   646,  4783,  5136,
     752,   753,   788,  2683,   754,  1342,  1303,  1922,  2613,  2614,
    3226,  3227,  3294,  3295,  3296,  2605,  2606,  2607,  2672,  2673,
    2674,  2594,  2595,  2596,  1926,  2591,  2592,   755,  1304,  1315,
    2608,  2609,  2610,  3300,  2676,  2677,  2678,  2679,  2611,  1988,
    2612,  3758,  3699,  5075,  5073,  5074,  3700,  4772,  2964,  5276,
    4643,  4644,  4304,  4305,  4306,  4849,  3071,    85,   635,  1078,
    1636,  2296,  3544,  2945,  2947,  2297,  3543,  4140,  4141,  4142,
    2943,  2944,  5270,  2949,  3541,  5422,  5787,  5568,  5569,  3533,
    5573,  4149,  4637,  4638,  5016,  5271,  5428,  5706,  5574,  5794,
    5704,  5790,  5705,  5792,  5902,  5858,  5859,  5716,  5805,  5806,
    5863,  5903,  5584,  5585,  5586,  3537,  3538,  5267,  3553,  4165,
    4166,  5024,  4650,  5028,  5121,  3126,  1910,  1911,  4829,  2532,
      86,  3701,  3832,  3702,  3703,  4720,  5498,  3704,  3705,  3706,
    3322,  1713,  4746,  4732,  4322,  4289,  4290,  4291,  4292,  4293,
    5465,  5624,  5467,  5468,  5614,  5745,  5613,  4294,  4295,  5319,
    4762,  4398,  4296,  4297,  4298,  4770,  5116,  5321,  5317,  5475,
    5476,  5885,  5886,  5492,  5843,  5493,  5892,  5916,  5917,  5477,
      87,   634,  1584,  5639,  5640,  5641,  3983,  5117,  3984,  3985,
    4514,  3986,  3987,  3988,  3989,  3990,  3991,  3992,  3993,  3994,
    3995,  3996,  4943,  4517,  4014,  4907,  4009,  4515,  4513,  4018,
    5494,  5495,  4901,  4518,  4485,  4918,  5651,  5478,  5496,  5480,
    4497,  1669,  1670,  4325,  1683,  1684,  2986,  2336,  2987,  1914,
    4498,  4499,  4911,  4500,  4916,  4096,  4998,  4102,  4103,  4104,
    3483,  3484,  3485,  3486,  3487,  2897,  5481,  4765,  5311,  5460,
    5463,  5622,  5832,  4763,  4299,  4768,  1180,   718,  4300,  4301,
    5727,  5600,  5607,  5728,  5608,  5601,  5313,  3134,  5729,  5730,
    5731,  5610,  5603,  3665,  5064,  5065,  4750,  4922,    88,   147,
    3246,  1290,  1292,  1302,  3252,  2622,  2621,  1308,  1307,  2600,
    3249,  3847,  5191,   738,  3834,  5363,  5167,  5369,  3835,  4692,
    3836,  5354,  5523,  3837,  5183,  5367,  5529,  4693,  4694,  3838,
    3839,  3840,  5735,  5736,  5737,  4387,  1401,   758,   759,  1320,
    1321,  1322,  2706,  4866,  4408,    89,  2504,  2499,    90,  1229,
    1230,  1231,  1827,  1828,  2502,  2503,  3122,  3656,    91,  1198,
    2453,  1818,  2492,    92,  1217,  3114,  3115,  3116,  3651,    93,
    1328,  1942,  1943,  2626,  3854,  4444,  4879,  5200,  5384,  5196,
    5549,  5550,    94,   784,  1338,    95,   601,  1963,  1964,  1965,
    2664,    96,  1440,   155,    97,  1102,  1641,  1644,  1645,    98,
    1197,  1766,  1767,  1768,  1769,  3067,    99,  2030,  2731,  2732,
    2733,  2734,  2448,  3638,  2449,  2450,  3076,  3928,   100,   736,
    3182,  1280,  1281,  1282,  4356,  3744,  3745,  5541,  5375,  5376,
    3498,  3499,  3500,  1874,  3166,  4349,  5159,  5534,  5777,  2570,
    4819,  5681,  2571,  1876,  1276,  1277,  2558,  2572,  1879,  2540,
    1894,  3307,  3308,  4217,  4688,  1895,  1896,  5029,  2561,  2562,
    1755,  5290,  2563,  3734,  4339,  5840,  1461,  1382,  1201,  1043,
    1044,  1045,  1596,  1597,  1612,  1046,  1606,  2251,  4064,  4590,
    4591,  4592,  4593,  4989,  2172,  2173,  2291,  1047,  2158,  1048,
    1049,  1050,  1051,  1052,  1053,  1054,  1055,  1056,  1057,  1058,
    2286,  4044,  4045,  4572,  2938,  2939,  2940,  1059,  2779,  4030,
    2789,  1060,  1061,  1062,  1063,  1064,  3525,  1065,  4135,  4803,
    1066,  1590,  2237,  2118,  4564,  4035,  4967,  4971,  4972,  4973,
    5243,  2062,  2767,  3410,  4554,  4557,  4558,  3411,  3412,  3526,
    2902,  1482,  1483,  1450,  1451,  3461,  2430,  2431,  2432,  2433,
    2434,  4678,  4679,  5279,  5040,  5281,  5044,  3054,  3055,  2317,
    2318,  2435,  2436,  2437,  2438,  3610,  4668,  4120,  4620,  3503,
    3494,  3495,  3496,  3611,  3612,  3613,  3614,  4197,  4664,  4665,
    5430,  3045,  3616,  4196,  3622,  5722,  5442,  5443,  5812,  5811,
    5444,  5288,  5289,  5051,  5052,  4223,  4224,  4225,  3561,  2114,
    2115,  2188,  1811,  1812,  2063,  1976,  2690,  3731,  4335,  3168,
    4132,  4801,  4337,  4804,  4805,  2281,  2931,  3521,  2933,  4625,
    5007,  5008,  5261,  5411,  5412,  5417,  3843,  4846,  4847,  2691,
    1880,  3160,  3722,  4331,  1716,  1717,  1881,  2400,  3598,  3599,
    3316,  2743,  4377,  4712,  3488,  3470,  4698,  3759,  2086,  2087,
    4713,  4602,  2552,  3726,  4796,  4797,  4798,  2544,  2545,  3155,
    3156,  3157,  1882,  2546,  3717,  4792,   101,   672,   102,  1995,
    1367,  1994,  3088,  1340,  1649,  1971,  1972,   799,   747,   619,
     103,   623,  2728,   104,   647,  2315,   851,  1107,  1650,  1651,
    2965,  3549,  3554,  2966,  1899,  4155,  4156,  2701,  3772,  3773,
    3767,  3178,  3740,  1900,  2565,  4346,  3175,  4347,  3176,  3082,
    3083,  3923,  4898,  5552,   105,   656,  4214,  3628,  3629,  5691,
    5692,  1108,   106,   605,  1970,   794,  1346,  1349,  1978,  2687,
    3902,  1350,  1351,  2689,   795,   796,   107,   695,  1235,  1738,
    1739,  1740,  2416,   108,   653,  1181,  3597,  4194,  2393,  1081,
    1365,  1721,  1184,  1722,  2389,  3028,  1704,   109,  1275,  1274,
     772,   110,   111,   729,   156,  1868,   112,  1206,  1797,  2469,
    3644,  3645,  4229,  1798,  1799,  3089,  3085,  4699,  4700,  5060,
     113,   687,  1221,  1222,  1822,  1820,  3119,  2495,   114,   636,
    1082,  2300,   115,   624,   854,  1404,  1405,  2028,   116,   117,
     118,   856,  3929,  5694,  5853,   628,  2032,  1409,  4773,  5149,
    5343,  5344,  5346,  5518,  5519,  5899,  5938,  5949,  5942,  5952,
    5953,  5956,  5962,  5963,  1067,  1242,  1243,  1068,  5643,  1069,
    1070,  1071,   119,   120,  1193,   660,  1760,  1761,  3063,  2442,
    3061,  1762,  3556,  3557,  3172,  3723,  1072,  3558,  4751,  1341,
    1973,   680,   587,  1073,   588,   749,  1244,  3152,  2476,  1132,
    3003,  1075,   893,  1298,  1642,  1931,  1932,  2477,   590,   894,
    3004,  3370,  1134,   591,   592,   593,   594,   595,   596,   597,
     598,   121,   652,  1117,  2332,  1660,  1142,  1689,  1678,  1688,
    2363,  3015,  2366,  3016,  3017,  4185,  3590,  4186,  3591,  1187,
    2358,  1661,  3592,  2351,  2352,  2353,  2354,  3581,  1675,  2342,
    2348,   122,   857,  2037,   631,  1411,  1412,  2740,   123,   655,
     124,  1813,  2489,  2490,  3107,  3648,  3108,   125,  1113,  1114,
     126,   840,  3129,  2718,  1984,  1301,  1985,  2012,   843,  1374,
     844,   845,  1388,  1385,  1391,  1387,  3797,  3241,  3242,  2723,
    1992,  1933,  2323,  3234,  4369,  1934,  2002,  2714,  2715,  2619,
    5207,  3804,  3245,  4892,  3912,  5208,  5209,   127,   664,   128,
    5131,   671,  1200,  1776,   129,   130,   131,   132,  1286,  3727,
    3728,  2574,  5378,  5685,  1288,  1289,  1883,  3505,  1907,  2905,
    2906,  1278,  2907,  2908,  2909,  2910,  1586,  1587,  3506,  4111,
    4112,  1897,   148,   149,   150,   151,   762,   763,  3251,  3849,
    4439,  4440,  5195,  5381,  5945,  5946,  2525,  3711,  5652,  5919,
    5939,  5958,  2533,  4788,  5144,  2534,  3714,  5337,  2523,  3710,
    5132,   133,  1249,  1245,   706,  1845,  1839,  1841,  2510,  3125,
     134,   135,   136
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     589,   737,   663,   761,   897,   751,  1183,   767,  1130,  1179,
    1414,  1287,  1419,  1420,  1421,  1718,  1103,  1908,   897,  1425,
    2684,  1878,   642,  1135,  1140,  2033,   757,   642,   633,  1877,
    2276,   642,  2307,  1718,   657,   740,  2550,  2402,   744,  2555,
     667,  2401,  2573,  2093,  1485,   674,  1980,  2223,   681,  2692,
    2312,   685,  1869,  1745,  1428,   689,   675,    80,  2085,  1136,
    3169,  2364,   686,  2233,  2124,  3841,  3504,  2142,  1202,  3735,
    1364,  1671,  1674,  1676,  1300,  2553,  3842,  3389,  3390,  3367,
    1686,  1137,  2360,  4119,  1138,  3666,  2569,  3737,  3309,  1525,
    3904,  4404,  2007,  1912,  3075,  3130,  2597,   842,  2556,  3881,
    2380,  2381,  1226,  1484,  3413,  1233,  3414,   732,  4310,  3749,
    1913,  3072,  4302,  2541,  4133,  1836,  2755,  4776,  4627,   841,
    3415,  2306,  2628,  4013,  3760,  3748,  1115,  2470,  2575,  3550,
    3551,  3090,  3229,  4462,   739,   741,  3618,  3655,   741,   768,
    2675,   750,   756,   769,  1989,  3627,  1589,   650,   841,  4121,
    3760,  3760,  3301,  3302,  3833,   770,  4122,  2384,   898,  3596,
     771,  4667,  5067,  4871,  4952,  5215,  4442,  4384,  2704,  4385,
    1255,  4386,   898,  5198,  1256,  1257,  1809,  2409,  1141,  3469,
    1299,  3230,  2261,  2262,  2263,  2264,  2265,  2266,  2267,  2269,
    2271,  2272,  2273,  2274,  2275,  2307,  4405,  3851,  2468,  4350,
     625,  3298,  2422,  2423,  3765,  2741,  1444,  4388,  1944,  4390,
    2242,  1809,  4400,  1643,  4878,  3231,  3760,  3760,  2250,  2252,
    2663,  2254,  2255,  4098,  1389,  3650,  4416,  1591,  1592,  4113,
     897,  4711,   897,   897,   897,  4209,  1909,  1591,  1592,   897,
    2507,   897,  2741,  1591,  1592, -1991,  2724,   679,  2725,  2726,
    3299,  1591,  1592,  4302,  4854, -1149, -1991,  1591,  1592,  2894,
    -614,  3803,   693,  4098,  1591,  1592, -1149,  2539,   690,  2915,
    4599,  -614,  1591,  1592,  4714,  2741,  4099,  1591,  1592,  1711,
    1591,  1592,  4716,  3535,  2306,  1591,  1592,  2078,  1428,  2741,
    1591,  1592,  3225, -2571,  4476,  1673,  4935,  1591,  1592, -2572,
     645,  1746,  4010,  4011,  4718,  1339,   731,  1591,  1592,  3291,
    4021,  4736,  4022,  1808,  4024,   665,  4099,   669,  2741,  2079,
    4133,  -419,  5793,  2819,  2717, -3172,  2741,  3595,  1591,  1592,
     760,  3789,  -419,  4159,   688,  2080, -3172,  1747,  1079,  2620,
    1580,  1582,  1583,  4615,   638,  2046,  3775,  1268,  2741, -1991,
    1591,  1592,  1626,  4308,  3893,  2741,  2916,  1591,  1592,   602,
    2705,    39,  4496,  4496,  4769,   722,  4496,  5118,  1591,  1592,
    4669,  4945,  1613,  4496,  1283,  3198,  2081,  5181, -2372,  4496,
    1591,  1592,  1263, -3172,   898,  4017,   898,   898,   898,  1326,
    4799,  4800, -3173,   898,  1708,   898, -3252,  4477,  3346,  1593,
    3866,  1594,  4318, -3173,  2082,  2941,   629, -1991,  1118,  1593,
   -3235,  1594,  1284,  1667, -3239,  1593, -3082,  1594,  4034,  1591,
    1592,  3790,  3236,  1593, -3238,  1594,  4138,  5122,   766,  1593,
     764,  1594,  1591,  1592,  5123, -2372,  1593,  1667,  1594,  3796,
    2443,  4053, -3236,  4655,  1593,  1318,  1594,  5678,  2741,  1593,
   -3173,  1594,  1593,  4406,  1594,  2917,  4600,  1593,  1667,  1594,
    2078, -2864,  1593,  2764,  1594,  1614,  3626,  1843,  4319,  1593,
    2617,  1594, -2864,  3642,  4519,   897,   626,  2704,  1991,  1593,
    5356,  1594,   839, -3237,  3878,  3769,   797,  3232,   800,   801,
     802,   803,  2079,   805,   806,  5366,  5124,   808,   809,  2741,
    1593,  4367,  1594,  2083,  2006, -3242,  1210,  1218,  2080,  1591,
    1592,   839,  1591,  1592, -1422,  4654,  5295,  2777,  2737,  2741,
    1595,  3771,  1593,  3128,  1594,  4864,  4329,  1196,  2589,  1593,
    1595,  1594, -2372,  4537,  1227,  1905,  1595,  1591,  1592,  3467,
    1593, -3172,  1594,  1213,  1595, -2372,   896,  1269,  2515,  2081,
    1595,  3237,  1593,  4320,  1594,  1591,  1592,  1595,  5138,  2548,
     896,  2974,  2975,  2976,  2977,  1595,  1139,  1285,  3595,  4952,
    1595,  1485,  1667,  1595,  2061,   600,  2738,  2082,  1595,  4330,
    4482,  1872, -2704,  1595,  5642,  1741,  2126,  1485,  5656,   643,
    1595,  1593, -1437,  1594,  1219, -2372,  1533,  1906,   782,  1830,
    1595,   756, -2372,  3911,  1593,  2554,  1594,  2330, -3173,  2549,
    5564,  5673,   756, -2372,  2508,   651,  1565,   813,   750,  4374,
     733,  1595,  5005,  5642,  1983,  1228,  1327,  2559,  2359,   898,
    2091,  3815,  2692,  2590,  4344,  2935,  2074,  1591,  1592,   668,
    1100,  5357,  2936,  1595,  5006,  4865,  1484,   750,  1220,  1133,
    1595,  1569,  3879,  4348,  4482,  1211,  1877, -2723,  4315,  2551,
    4486,  1595,  4488,   750, -2864,  1591,  1592,  1363,  4145,  2705,
    4508,   603,  5526,  1595,  1270,  1208,  2083,   734,  3643,   750,
    1214,  1593,  1215,  1594,  1593,  5849,  1594, -3082,  5358,   782,
    1368,  1369,   782,  1236,  3132,  1237,  4523,  1357,  1358,  1359,
    4492,   790,  2599,  1951,  2981,   897,  5223,  1253,  3109,  1593,
    5129,  1594,  1595,  1912,   629,  4536, -2724,  1852,  1771,  1853,
    1854,  1855,  1856,  1857,  1156,  1595,  2980,  1593,  3894,  1594,
    1913,  1591,  1592,  4520,  2763,  1718,   791,  3791,  2895,  2285,
     750,  3833,  1305,   895,  3229,  1485,  2681, -2725,  1580,  1582,
    2292,  3239,  3165,  1930,  3880,  2557,  5320,   895,  2775,  5031,
    1101,  1709,   750,  1989,  3301,  3302,  1264,  2321,  3504,  2597,
    1329,  1831,   896,  4368,   896,   896,   896,  1667,  5150,  5226,
   -3256,   896,   732,   896,  1305,  2338,  5049,  5050,  3228,  5002,
    2618,  2967,  1352,  3230,  1354,  3578,  1356,   741,   741,   741,
    1360,  1305,  1595,   750,  2308,  1595,  2942,  1591,  1592,  1593,
   -3379,  1594,  2378,  3298,  4820,  2293,  4673,  2900,  2901,  3760,
    4677,  4378,   666,  2403,  5080,  4158,   663,   627,  2383,  2922,
    1595,  2387,  1930,  5177,   630,  1080,  3595,  1593,  4481,  1594,
    4302,  4100,  2666,  2404,  3775,  4616,  2407,  2675,  1595,  2072,
    2410,  1591,  1592,  2742,   732,  4626,  1418,  3297,  1955,   898,
     841, -2571,  3299,  1423,  3770,  1426,   604, -2572,  2924,  2925,
    3041,  2927,  2928,  1316,   785,  1591,  1592,  2425,  2426,  2427,
    1433,  4100,  4152,  4528,  4529,  4530,  5032,  1993,  4533,  1667,
    2742,  1962,   811,  4365,  1962,  5291,  5565,  5764,  1866,  1319,
    2918,  4542,  1390,  1593,  1962,  1594,   899,  2421,  1485, -3256,
    3787,   694,  1810,  1591,  1592,  5484,  3233,   691,  2166,  4793,
    5338,  1362,  4443,  2742,  1366,  1668,  3889,  4496,  1189,  5199,
    1595,  5789,  4407, -1991,  2278,  2183,  3317,  2742,  2191, -1991,
    2193,  1195,  4645, -1149,  2197,  2198,  2199,  1810,  -614,  1668,
    4496,  4457,  2205,  5241,  4496,  2428,  3335,  4774,  1595,  2429,
    2059,  2747,  4496,  4101,   692,  1844,  2742,  2308,  2754,   895,
    1668,   895,   895,   895,  2742, -2737, -2373,  3762,   895,  1593,
     895,  1594,  4017, -3252,  1672,  2911,  1677,  2322,  5392,  2700,
    1680,  1685,  2820,  2084,  5264,  5265,  2742, -3235,  2778, -2251,
    1777, -3239,  4008,  2742,  1273,  2790,  2791,  5828,  3926,  -419,
     629, -3238,  2896, -3172,  5035,  4952,  2618,   896,  2792,  2793,
    1714,  4321,  1309,  1593,  1595,  1594,  2881,  2882,   629, -3236,
    1118,  2892,  2893, -2373,  3511,  3512,  1588,  4207,  4208,  4040,
    4041,  1956,  4008,  5969,  4055,  4056,  1279,  1593,  1310,  1594,
    5298,  4068,  4069,  1410, -1909,  3827,  2408,  1622,  1623,  1624,
    1625,  5505,  2232,  3469,  3469,  5566,  3501,  3469,  3469,  2618,
   -3237,  4912,  -266,  3469,  3469,  5129,  5749, -2372,  5751,  5752,
   -3173,  5740,  4074,  4075,  1668,  1593, -1951,  1594,  3785,  3786,
    1311,  4494, -3242,  1299, -2704,  1534,  2742,  2243,   750,   732,
    1595,  3320,  4376,  2294,   732,  2783,  -114,  -114,  2739, -3256,
    3632,  4054,  3325,  4912,  1659,  1566, -2704,  3852, -2251,  3133,
     750,  4944,   750,  2784,  3497,   767,   750,   750,  5171,  4912,
   -2373,  5274,  4912,  4912,  4127,  4128,  1428,  4961,  2730,  2333,
    4963,  4964,   630, -2373,  1595,  3468,  2742,  2742,  5285, -2864,
    1570,  2369,   735,  4968,  3887,  3888,   750,  -118,  -118,  4348,
    5664,   841,  1299,  1903,  1591,  1592,  5883,  2742,  1595, -2723,
    5283,  4302,   782,  2788,   782,  1774,  2568,  -110,  -110,   661,
     662,   783,  2478,  2484,  2244,  2598,  1312,  2794,   629,   793,
    1763, -2723,  4179, -2373,   732,   732,  5825,  5826,  2950,  5829,
   -2373,  5815,  4423,  5835,  2967,  2465,  1595,  5567,  3579,  1814,
    3566, -2373,  3213,  5830,   895,  1848,  5544,  5009,  2479,  5010,
    1825,  1939,  4384,   839,  4385,  1313,  4386,  1566, -2724,  2680,
    1591,  1592,   732,  2496,  3580,  1485,  2802,  3760,  2776,  1777,
    2480,  5431,  3841,  2482,  5164,   152,  5166,   896,  4791,  5169,
   -2724,  2903,  1849,  3842, -1951,  5173,  5174,   768,  4809, -2725,
    3606,   769,  4400,   659,  2795,  4705,  2805,  5277,  4790,  4302,
    2577,  1718,  1870,   770,  2840,  4820,  1591,  1592,   771,  3545,
    5873, -2725,  2984,  2245,  5041,  5042,  2988,   852,  1930,  1668,
    1917,  3038,  2796,  3180,  2801,  1957,  4672,  2451,  1646,  2295,
    4676,  1105,  4984,  1652,   732,  2034,  3229,  3090,   734,  3013,
    2798,  2329,  4121,   750,   732,  5014,  1912,  2522,  3742,  4122,
    2528,   741,   732,   897,  2537,   732,  1877,  2888,  5192,  3064,
     665,  3833,  5650,  1913,  4781,   732,  1593,  2485,  1594,  2493,
    3741,  2912,   732,  1750,  1974,  2575,  1156,  2307,   841,  2402,
     734,  1705,  2402,  2402,   848,  3230,  3601,  3602,  3504,   750,
    3593,  3301,  3302,   750,   732,  4666,  2709,  3747,   897,  3429,
    2428,  2597,  1850,  1851,  2429,  2599,   790,  4521,   152,  4522,
    3575,  1958,  4904,  1959,  3662,   734,  5437,  5438,  5557,   750,
    3319,  2809,   750,  1770,   810,  4721,  1591,  1592,   732,  1393,
    3228,  1668,  1593,  2961,  1594,  4734,  4735,  4905,  4594,  3587,
    3298,   791,  2041,  3333,    39, -1951,  2339,  1591,  1592,  1723,
    2808,  2955,  2956,  3585,  1591,  1592,  1103,   897,   897,  1271,
     670,  3855,  4910,  1407,  2542,  5605,  2306,   732,   630,  3555,
    1591,  1592,  5754,  2960,   895,  1591,  1592,  5439,  1593,  5083,
    1594,  2238,  2755,  2681,  1402,  4399,   630,  1595,  1199,  3299,
    1591,  1592,  1702,  3304,  2675,  2603,  2452,  3111, -1368,  3297,
    1591,  1592,  3853,  1960,  5368,  5305,  2035,   898,  5841,  1801,
   -2251,  2349,  1591,  1592,  5561,  2688,  2810,   644,  2277,  4986,
    1819,   853,  3607,  4988,   676,  3509,  2961,  4466,  4467,  4468,
    4469,  3663,  3517,  1923,  1944,  3030,  3023,    39,  3025,  1591,
    1592,  3534,  4496,  1935,  2707,  2708,  1775,  3519,  3520,  5800,
    5801,  1940,   898,  1595,   839,  2385,  2951,  5545,  3595,  3630,
    1742,  3036,  3510,  4180,  5831,  3514,  3903,  5747,   157,   158,
     732,  1968,  5666,  1968,  3043,  3044,  3539,  5822,  3153,   732,
    1961,  1118,  1106,  2576,  3897,  5021,  1272,  5590,  3111,  5591,
     732,  2247,  2814,  3595,  4912,  3724,  3844,   154,  1593,  1595,
    1594,  2224,  5248,  3595,  3595,  1591,  1592,  1808,  1751,  1808,
    4302,   898,   898,  2298,  5361, -2195,  3032,   750,  3346,  1593,
    2370,  1594,  2372,  2374,  2375,  2376,  1593,  1652,  1594, -2251,
    1591,  1592,  2382,  5650,  3318,   849,  2815,  1591,  1592,  2593,
    1591,  1592,  1593, -2195,  1594,  5440,   630,  1593,  4758,  1594,
    2406,  1703,  1314,  5220,   750,  3214,  2282,   707,  1962,  5423,
    2816,  5415,  1593,  3502,  1594,  2402,  3112,  5326,  4782,  3900,
    1591,  1592,  1593,  5015,  1594,   732,  4893,  4894,  4895,  3391,
    1444,   153,   750,   750,  1593,  1817,  1594,  2543,  2604,  1408,
     750,  2334,  1772,  4118,  2472,   850,  1706,  4568,  2833,  3173,
     750,  1752,  3594,  5479,  1667, -2373,  5546,  4759,  1294,  1403,
    2068,  1593,  3664,  1594,  2361,  1659,  1753,  1591,  1592,  1595,
     741,   732,   741,   741,   741,   741,   732,   750,   732,  5576,
     154,  1394,   741,  2511,   157,   158,  5157,  5351,  1591,  1592,
    1595,   839,  1962,  2516,  2524,  2527,  1223,  1595,  2340,  2405,
     741,  5404,   750,   792,  5158,  2483,  2411,  3112,  2246,  3005,
    3010,  2008,  2341,  1595,  1724,  3215,  5842,  3771,  1595,  2192,
    1743,  3347,  3216,  2009,   732,  5206,  2920,  1593,  2201,  1594,
    3217,  1607,  2350,  1595,  5748,  3113,  4906,  4456,  5168,  2212,
   -1036, -2565, -1036,  1595,  5308,  3006,   710,  5520,  5315,  5316,
    5563,  5943,  1593,  4201,  1594,  1595,  5441,  3504,     8,  1593,
    2588,  1594,  1593,  2904,  1594,  4760,  3033,  3007,  3812,  1909,
    3009,  4912,   782,  4912,  5848,  4199,  2970,  5598,  1962,  5389,
     750,  5391,  1595,  2010,  5668,  4171,  4172,  4173,  4174,  3059,
    2488,   897,  1593,  2491,  1594,  3324,   732,  5133,   841,   708,
     782,  2498,  4476,  3218,  5429,  3181,  4913,   661,   662,  4523,
    2324,  5403,  5630,  5335,  3845,    16,  5336,  2299,  2962,   750,
    2386,  5506,  2325,  4569,  1652,  1295,  3113,   750,   750,   750,
    2517,  2518,  2519,   732,   732, -2744,  5424,  5425,  2598,  4434,
    5193,  1608,  4761,  1296,   793,   896,  4435,  1156,  1595,  1591,
    1592,  1773,  1663,  1609,  5134,  3086,  3895,  5725,  4158,  4833,
    1593,  2603,  1594,  3219,  3011,  3886,  5791,  5698,  5521,  5795,
    2371,  1591,  1592,  1595,  1428,  2377, -1368,  2379,  4914,  2069,
    1595,  3788,  2010,  1595,   661,   662,  1591,  1592,  3715,  4859,
     896,  5599,  3388,  3388,  3388,  4491,   750,  5418,  5944,  2841,
    2402,  5405,  2481,  2602,   683,  4477,  3571,  3572,  1591,  1592,
    1912,  2962,    29,  1595,  1591,  1592,  2680,  3380,   732,  5362,
    1591,  1592,  2627,  2420,  4767,  4767,  3303,  1913,  2184,  1610,
    2185,  3586,  1265,  5577,  5426,  5618,  5543,  1591,  1592,   732,
    5578,  1212,  3228,  5598,  1718,   898,  3817,  4175,  4176,   896,
     896,  2963,  1591,  1592,  1352,  5579,  2696,  2599,   732,  2698,
    1595,  2579,  4184,  3140,  3649,  2843,  3141,  1591,  1592,  2011,
    5457,   732,   732,  5602,  2537,    36,  5609,  3150,  2713,   760,
   -2345,  1595,   684,   661,   662,  2722,  2722,  3898,  2722,  2722,
    1664,  4430,  3110,    39,  5699,  2355,  4528,  4529,  4530,  2034,
    4533,  1266,  4157,   750,  1718,  2593,  2580,   732,  2967,  5427,
    1986,  2846,  3351,   732,  5135,  3917,  3918,  3919,  3920,  5900,
    2750,  1593,  3528,  1594,  3732,  4890,  1591,  1592,  5347,  1293,
    2758,   813,  2520,  2521,  2356,  1930,  4355,  1591,  1592,  3098,
    1485,  2390,   895,  1593,  3352,  1594,  3297,  4490,  2581,  5205,
    2681,  1591,  1592,  5522,  2604,  3304, -1036,  5599,  1593,  2923,
    1594,   897,  1118,  1991,  4491,  5619,  1591,  1592,  2326,  3309,
    3309,  5762,  4495,  4503,  3099,  3574,  4507,  3342,  5115,   897,
    1593,  4504,  1594,  4511,  5580,  2391,  1593,   895,  1594,  4431,
    2034,  1986,  1593,   734,  1594,  4747,  4459,  5581,  1937,  2308,
    4749,  3353,  3371,  3377,   897,  2603,  5249,  4126,  5833,  1593,
    4130,  1594,   897,   897,   897,  2403,  5582,  2623,  2403,  2403,
    3603,  2937,  1591,  1592,  1593,  5602,  1594,   742,   798,  3354,
    1956,  2847,  5609,  1930,  3752,  1591,  1592,  4279,  3372,  1593,
    3235,  1594,  1595,  5620,  3798,  3799,   895,   895,  3800,  3801,
    3802,   743,  2848,  1267,  3555,  3416,  3321,  2697,  1283,  2849,
    3373,   839,  5047,  3375,  1595,  3421,  1668,  1591,  1592,  2582,
    2035, -2195, -2195,  5947,  1938,  2852,  2277,   732,   841,  1595,
    2853,  2583,  1987,   732,  2721,  2721,  5470,  2721,  2721,  2357,
    2593,  2991, -2345,  1591,  1592,  2854,  1284,  5638,  1593,  2889,
    1594,  1595,  5874,  4588,  2036,  2872,  2735,  1595,  1177,  1593,
    3753,  1594,  1410,  1595, -1447,   898,  -841,  2877,  2392,  4110,
    1591,  1592,  3455,  1593,  1428,  1594,  1434,  4080,  3355,  3380,
    1595,   661,   662,   898,  2186,  3518,  4015,  2187,  1593,  1177,
    1594,  4020,  3236,  2811,  5464,  1595,  5466,  4025,  2593,  2593,
    3020,   696, -1447,  3466,  5583,  4081,  4280,  3378,   898,  5948,
    1595,  2035,  3024,  1987,  3005,  3010,   898,   898,   898,  2500,
    2061,  5929,  5930,  2935,  3595,  2061,  1986,  2953,  5472,  4618,
    4808,  1435,  5726,  3565,  2584,  3065,   750,   750,   732,  1591,
    1592,  5314,  1591,  1592,  1593,  1962,  1594,   750,  2604,  5165,
    3006,  2722,  2722,  2722,  2722,  2978,  2979,  1593,  1659,  1594,
    2880,  3527,   750,  5175,  5875,  1702,  4550,  5889,  1756,  1595,
    4202,  2061,  3007,  2501,  5182,  3009,  5184,  1613,  3998,   697,
    1595,  5377,  2131,   896,  1986,  2887,  3002,  2134,  3595,  1593,
    3999,  1594,  2898,  4670,  1595,  3392,  3019,  1591,  1592,  1436,
     741,  1285,  4771,  1130,  4492,  2585,   157,   158,  3021,  1595,
    5602,  5609,   741,  2992,  4480,  1593,  3026,  1594,  1135,  1140,
    1757,  3237,  4493,  3305,  2257,  4038,  2868,  3306,  1156,  1611,
    3100,   745,  2874,  2152,  1957,  4767,  3159,  4657,  4658,  1299,
    5473,  5615,  1593,  1177,  1594,  1457,  1458,  1459,   732,  3139,
    3174,  2403,  1591,  1592,  1136,  4551,  3046, -1447,  4729,  1591,
    1592,   897,  5890,  4681,   732,  1595,   897,  1763,  3062,  3011,
    1614,   750,  3068,   732,  4538,  4539,  1137,  3101,  1595,  1138,
    1437,  3309,  1718,  4552,  5757,  5758,  3183,  3746,  1615,  1238,
    2598,   665,   782,  4039,  3238,   746,   732,  5459,  1987,  3008,
     140,  1177,  4192,  1591,  1592,  4730,  1513,  1632,  1591,  1592,
    1595,  1593,  1729,  1594,  1593,  5891,  1594,  4352,   789,   732,
    1958,   765,  1959,  4818,  1703,  4351,  5122,  1591,  1592,   807,
    5540,  2287,  5252,  5123,  2258,  4399,  1595,  1646,  1640,  4550,
    3102,  4812,  1238,  4814,  1616,  1617,  2259,  2061,  3608,   741,
    2721,  2721,  2721,  2721,  3035,   732,  1987,  1428,  4771,  3148,
    2797,  1591,  1592,  1595,   741,  2288,  4046,  4008,  4817,  1593,
    4983,  1594,  3158,  1141, -2726,  4731,  1239,  1240,  3163,  2553,
     895,   773,  4553,  2680,  3103,  1872,  5820,   734,  3303,  4662,
    3197,   839,  3760,  3323,  5597,  5124,  5819,  5808,  1591,  1592,
    1715,  1591,  1592,   665,  4525,  3609,  3380,  1719,  4215,  2163,
    3190,  5339,  1960,  4091,  5340,   898, -3358,  3194,  3195,  1343,
     898,  3239,  2260,   775,  1593,  5809,  1594,  5918,  4551,  1239,
    1240,  1593,  1595,  1594,  5516,  1595,  1361,  1720,  5507,  1715,
    2289,  4465,  1591,  1592,  1873,   750,  5517,  3042,  4690,  4560,
    4561,   732,  5931,   896,  4051,  4008,  4555,  3856,  4526,   897,
    1591,  1592, -2732,  3058,  3555,  5598,  1672,  2967,  1672,  3760,
    3760,   896,  3070,  1591,  1592,  1593,  4071,  1594,  4576,  5810,
    1593,  3240,  1594,  1873,  -718,  4309,   786,  4920,  4153,  1961,
    1595,  4088,  4526,  1591,  1592,  3376,   896,  3760,   787,  1593,
    3536,  1594,  3304,  4603,   896,   896,   896,  5813,  5814, -3337,
    4936,  5341,  2812,  3311,  4939,  3313,  3630,   798,  2834,  3309,
    3309,  2290,  4946,  4607,  2744,  4089,  5377,   750,  5852,   750,
     750,  5887,  5887,  1593,  1241,  1594,  2403,  1591,  1592,  3104,
    3105,  3106,  4975,   750,   897,  1595,  2722,  5556,   804,  3073,
    1591,  1592,  1595, -3337,  3142,  4553,  2837,  1077,  1598,  4195,
    1591,  1592,  3094,  3095,  3074,  4610,  4794,  3481,   855,  4612,
    1593,  2839,  1594,  1593,  1599,  1594,  5915,   637,  4639,  5599,
    1591,  1592,  3482,  1808,  2692,  1591,  1592,  1511,  1591,  1592,
    2797,  1591,  1592,   897,  5342,  4494,  1595,  1097,  1591,  1592,
    4995,  1595,   750,  1600,   750,  1930,  1930,  1930,  1930,  1601,
    1871,   648,  4490,   898,  1593,   654,  1594,  4012,  1283,  4479,
    1595,  4483,  -620,  4015, -2734,  4015,  4521,  1118,  4522,  4491,
    2842,  1918,  1593,  4015,  1594,  1591,  1592,  2643,  2644,  3096,
    4512,  2850,  4479,  1602,  1730,  1593,  1105,  1594,  4393,  4015,
     895,  1194,  2656,  1715,  1595,  2851,  1284,  1099,  5023,  4015,
    -620,  1207,  4689,  4524,  1199,  1593,  1109,  1594,   895,  4532,
    2857,  1188,  4343, -3337,  1591,  1592,  4012,  -622,  4015,  4479,
    4479,  4540,  4541, -2746,  1209,  1591,  1592,  1216,  1731,  1829,
    1732,  1595,  3374,   895,  1595,  1834,  1835,  1873,   898,  5973,
    4008,   895,   895,   895,  4394,  4008,  4848, -2754,  1225,  1593,
    1232,  1594, -2755,  3146,  5972,  1591,  1592, -3337,  3479,  3146,
    1613,  -622,  1593,  4653,  1594,  1248,  2858,  3073,  2322,  2322,
    2322,  2322,  1593,  1234,  1594,  1595,  1591,  1592,  4125,  2862,
    4652,  3002,  3074,  1591,  1592,  2721,  4877,   898,  4651,  2658,
    2659,  1254,  1593,  1595,  1594,  1591,  1592,  1593,  3522,  1594,
    1593,  1139,  1594,  1593,  5377,  1594,  1595,  1591,  1592,  4739,
    1593,  2863,  1594,  4008,  1492,  1591,  1592,  2548,  1591,  1592,
   -2756,  1591,  1592,  1733,  4008,   732,  1595,  1927,  1928,  1613,
    3559, -2759,  1591,  1592,  1509,  3562,  1258,  2864,   750,   750,
    2722,  1514,  1515,   896,  1252,  4395,  1260,  1593,   896,  1594,
     750,  1285,  -840,  1614,  1261,  -620,  1591,  1592,  2742,  1262,
    4250,  1967,  1715,  1291,  2870,  4490,  1212,  2549, -2412, -2412,
    1595,  1615,  1734,  1293,  1299,  1299,  1299,  1299,  2799,  2129,
    1118,  3165,  4491,  1595,  1133,  3718,  1593,  4684,  1594,  1591,
    1592,  1306,  4685,  1595,  3008,  1323,  4686,  1593,  1317,  1594,
    1620,  1621,  1622,  1623,  1624,  1625,  1873,  1325,  3712,    80,
     760,  1428,  1324,  1595,  1330,  2277,  1672,  1337,  1595,  1718,
    1735,  1595,  1614,  2224,  1595,  5033,  5034,  1593,  1333,  1594,
    4830,  1595,  4832,  2871,  3048,  4835,  2875,  2838,  1777,  4663,
    1615,  4841,  4842,  4324,  2692,  3049,  1591,  1592,  1593,  4813,
    1594,  1344,  3623,  1884,  5592,  1593,  5593,  1594,  4855,  4492,
    2844,  2845,  1345,  3047,  1177,  3792,  1299,  1593,  1595,  1594,
    2855,  1777,  4821,  2064,  2065,  4642,  4687,  4493,  1355,  1593,
    4351,  1594,  2075,  1156,  4157,  2861,  1777,  1593,  1371,  1594,
    1593,  2876,  1594,  1593,  1373,  1594,  1616,  1617,  2865,  1777,
    4659,  4660,   732,   732,  1593,  1375,  1594,  1595,   741,  4482,
    1736,  4375,  2742,  1613,  2132,  1885,  2135,   732,  1595,  4381,
    1381,   750,  3898,  3117,  3547,  3303,  1383,  3388,  1593,  5879,
    1594,  1737,  2149,  2150,  1384,  2153,  1871,  1386,  3048,  2721,
     895,   896,  3624,  2159,  2160,   895,  2878,  2164,  1595,  3049,
    1392,   750,   750,  2885,  1396,  4490,  3050,  1246,  1247,  1395,
    1250,  1593,  1251,  1594,  1872,  4470,  4471,  5909,  1884,  1595,
    4501,  1397,  4491,  3053,  1398,  5913,  1595,  1400,  3396,  1715,
    1406,  3776,  3777,  3778,  3779,  3051,  3781,  3782,  1595,  1438,
    1692,  1429,  5013,  3397,  1445,  2003,  2004,  2899,   897,  2005,
    1595,   750,  4033,  1591,  1592,  5928,  1614,  1439,  1595,  2668,
    -607,  1595,  1591,  1592,  1595,   157,   158,  3848,  1504,  3398,
    4740,  4036,  4741,  1873,  1615,  1595,   896,  1551,  5304,  1446,
    1885,  3399,  2866,  1777,  3864,  3865,  5053,  3867,  1447,  3869,
    3870,  3871,  3872,  3873,  3874,  3875,  3052,  3877,  -607,  1595,
    3882,  3400,  5036,  2603,  3885,  4037,  4923,  2867,  1777,  4742,
    2873,  1777,  2402,  4923,  1557,  -609,  5244,  3331,  3332,  3383,
    3384,  1607,  4492,  1627,  3515,   896,  1452,  3053,  1453,  1607,
    1616,  1617,  1595,  3634,  3635,  3401,  1454,  4743,  1455, -1070,
    4493,  5352,  4042,  1886,  1887,  4047,  1156,  3783,  3784,  2713,
    5373,  3668,  3669,  1888,  1814,   750,   750,   750,   750,  -609,
    4969,   732,  2593,  1456,  4358,  4359,  3716,  1460,  4360,  4361,
    4393,  1930,  4482,  1613,  4362,  4363,  1376,   661,   662,  4062,
    2845,  1759,  4396,  1462,  5001,  1628,  4048,  1463,   895,  4065,
    1777, -2345,  1693,  1464,  4548,  4653,   897,   897,  5379,  5030,
    1613,  4116,   898, -1792,  4049,  1465,  2937,  1466,   918,  5469,
    4072,  4073,  5026,  1467,  1603,  1604,  1605,  4050,  3798,  3799,
    4651,  5263,  3800,  3801,  3802,  1593,  4394,  1594,  1468,  2813,
    1469,  1608,  1377,  1470,  1593,  1378,  1594,  4052,  1471,  1608,
     925,  1472,  2669,  1609,  4079,  1777,  1473,  2593,  1986,  3073,
    4902,  1609,  1694,  -607,  1474,  4015,  4043,  4567,  1886,  1887,
    5553,  1695,  1379,  1477,  3074,  1487,  1614,  1629,  1888,  1488,
    1380,  5179,  4744,   895,   661,   662,  1489,  5187,  4502,  3953,
    1630,  4061,   661,   662,  1615,  1490,  5470,  4083,  4084,  4397,
    3402,  4161,  4162,  1614,  4067,  4092,  2604,   937,  1493,  2670,
    4494,  1494,  3403,  1696,  4070,  1591,  1592,  1495,  4745,  4167,
    4168,  1615,  4492,  4437,  4438,  4622,  1777,  2023,  1496,  1610,
    2322,  2322,   895,  1631,  4076,   949,  1497,  1610,  5170,  4077,
    4493,  1241,  4078,  1986,  -840,  4086,  1156,  4882,  4883,  1498,
    1616,  1617,  4087,  1499,  4623,  1500,  1595,  4884,  4885,  4143,
     898,   898,  1501,  3527, -2730,  1595,  3654,  1889,  2643,  2644,
    3925,  1130,  4482,   750,  1633,  1177,  2224,  1616,  1617,  4886,
    4887,  4959,  4962,  2656,  1635,  3489,  1135,  1140,  5472,  4090,
     137,  4976,  1777,  4821,   750,   750,   750,   750,  4993,  4994,
    5560,  4351,  1502,  1620,  1621,  1622,  1623,  1624,  1625,  1503,
    3159,  4182,  4183,  3404,  2671,  3405,  5003,  1777,  -867,  5017,
    5018,  1505,  1136,  1697,  4345,  1872,  1506,  2967,  4094,  1507,
    1987,  4187,  5057,  5058,   970,  1508,  1299,  1299,  4313,  4107,
    1715,  5485,  1591,  1592,  1137,  5061,  4811,  1138,  1698,  5216,
    5217,  2603,  1510,  1591,  1592,  2774,  1516,  4357,  4816, -2588,
    1177,  1639,  4219,  4188,  1591,  1592,  4226,  3548,  5486,  4974,
    1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  5413,  4848,
    2658,  2659,  1889,  1517,  1873,  1518,   750,  1593,  1519,  1594,
    4980,  1520,  2668,  3047,   732,  5218,  5217,  4981,   732,  1521,
    5473,  5221,  5222,  2551,  5296,  5297,  1591,  1592,  5680,  4982,
    1522,  4381,  5300,  5297,  1523,  1987,  1526,   157,   158,  1527,
    4189,  4991,  4281,  4494,  1528,  4303,  1529,  5675,  5676,  4992,
    5449,  1637,  4996,  1530,  5452,  4997,  1531, -1070,   741,  5382,
    5383,  1141,   138,  5399,  5332,  1638,  3158,  4327,  4190,  3224,
    5436,  4168,  1532,  5679,  2402,  2402,  1535,  3293,  5558,  5559,
    1536,  4341,  4340,  1428,  5448,  5297,  1537,  3406,  3048,  1655,
    5406,  1538,  1890,  1539,  1892,   661,   662,  5485,  4834,  3049,
    5487,  5616,  5617,  1540,  5488,  1656,  3050,  4463,  4766, -3374,
    4484,  1541,  2829,  3934,  1542,  2593,  4489,  2078,  1543,  4506,
     896,  1448,  1657,  5456,  5486,  1544,  4510,  5469,  1595,  1591,
    1592,  4063,  3657,  1545,  1593,  3051,  1594,  1546,  2803,  4577,
    1547,  2806,  5689,  5690,  1548,  1593,  1549,  1594,  4211,  2079,
    1550,  4578,  5700,  5701,  1552,  4428,  1593,  1553,  1594,  2821,
    5719,  4168,  5720,  4168,  2604,  2080,  1699,  4191,  4205,  1554,
    2835,  4579,  1555,   157,   158,  1619,  1620,  1621,  1622,  1623,
    1624,  1625,   139,  5724,  3784,  5776,  4303,  2078,  3534,  4826,
    4896,  1556,   897, -1070,  3407,  2669,  3052,  1558,  1593,  1559,
    1594,  1986,  5596,  1560,  5470,  4580,  2081,  1890,  1891,  1892,
    1893,  5773,  5018,  4252,  1561,  4902,  1562,  4256,  1563,  2079,
    5834,  5297,  5836,  5297,  5837,  5297,  3780,  3053,  5471,  5855,
    5856,   661,   662,  4494,  2082,  3754,  5487,  4455,  5635,  2770,
    5488,  1700,  3408,  4458,  4396,   698,   699,  2668,  1564,  1701,
    5864,  5865,  3371,  3377,  4212,  1595,  5489,  5871,  5297,  5485,
     140,   750,  1567,  5469,  3528,  3409,  1595,  5022,   896,   896,
     897,  3860,  1568,  3862,  3863,  -842,  3755,  1595,  4379,  3868,
    5872,  5297,   700, -3374,  2215,  2216,  5486,  3876,  3372,  5850,
    4581,  1571,  3883,   606, -2345,  4479,  5472,  5880,  5297,  1611,
    1572,  1593,  4015,  1594,  3756,  5413,  1573,  1611,   141,  1574,
    3373,  1575,  4015,  3375,  5897,  5018,  4524,   895,  1177,  1595,
    1576,  4532,  1577,  4908,   701,  5910,  5297,  5927,  4697,  5960,
    5961,  1578,  1634,  2083,  -842,   157,   158,  1654,   712,  1662,
    5470, -2616, -2587,  4921,  5390,  1687,   898,  4547, -2613, -2611,
    2593,  4397,  4926, -2615, -2610, -1070,   142,  3073,  4928,   607,
    4582, -2614,  1591,  1592,  5471, -2608, -2612,  1690,  4940,  1691,
    1707,  1710,  3074,  1987,  1715,  5693,  5490,  4948,  4949,  1725,
    1726,  1727,  1728,  1748,  1618,  1619,  1620,  1621,  1622,  1623,
    1624,  1625,  5489,   661,   662,  1749,  5589,  1754,  5487,  1765,
     157,   158,  5488,  3757,  1777,  1780,  1815,  3378,  5473,  1821,
    1823,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1832,
   -1070,  1833,  1595,  1837,   898,  5469,  3199,  1840,  2403,  1838,
    2669,  1428,  5472,  1842,  1846,  4380,  1986,  5649,  1862,  1864,
    4606,   711,  -842,  1861,  1898,   608,  1902,   734,  3443,  1139,
    1904,  5537,  1909,  1915,  1919,  1921,  1924,  1718,   661,   662,
    1925,  1929,  1941,  1945,  1952,   895,   895,  1969,  5536,  5665,
    4621,  5255,  1975,  4583,   901,  4584,  5535,  5409,  1977,  1981,
    1990,  4728,  1979,   713,  1996,  4341,  4340,  2670,   712,  1997,
    5469,  3371,  3377,  1982,  1999,  2000, -3312,  2001,  4143,  2022,
    2031,   702,  5470,  2040,  2042,  2043,   143, -1100,  2044,  3559,
     144,  4649,  2047,   918,   609,  4656,   750,   750,   703,  -842,
    5702,  1591,  1592,  4066,  2048,  5588,  5471,  3372,  2050,  2051,
    2060,  2053,  1133,  1659,  1593,  1672,  1594,  2061,  4795,  2070,
    2077,  2088,   923,   704,  5473,   925,  2092,  2117,  2128,  3373,
    4231,   145,  3375,  1177,  5489,  2129,  2130,  4232,  2139,  2143,
    2224,   929,   930,  2147,  2148,  2200,  2168,  5470,  4695,  2206,
    1591,  1592,  5081,  4233,  5491,  2210,  2220,  5085,  5086,  2231,
      39,   146,   705,  4234,  4235,  4236,  2235,  2253,  2256, -3374,
    2579,  5471,  2671,  4237,  5472,  2283,  4704,   661,   662,  2284,
    2309,  5201,   937,   897,  2310,  2311, -3056,  5693,  1987,  4381,
    2316,  2319,  2320,  5674,  4724,  4725,  3200,   750,   897,  2328,
    5684,   943,  2331,  2335,  4738,  4837,  4585,  4586,  2365,   948,
     949,  4303,   732,   713,  4754,  2580,  2367,  5683,  5657,  5658,
    2388,  5660,  3290,  2368,  2412,  5682,  3378,  2413,  2414,  2415,
    2419,  3371,  3377, -2161,  2417,  1595,  4778,  4777,  4900,  5472,
    4903,  5802,  3201,  5474,  2418,  2440,   610,  5328,  2441,   714,
    2444,   750,  -842,  2445,  2446,  4379,  2447,  2581,  2454,  4919,
    4872,  2455,  2459,  2282,  2460,  4807,  4806,  3372,  2461,  4924,
    2462,   611,  2463,  1593,  2464,  1594,  2466,  5303,  2467,  2473,
    2494,  4929,  2277,  2505,  2474,  2509,  5473,  2512,  1672,  3373,
    5491,  5860,  3375,   139,  2538,  2547,  1871,  4822,  4947,   967,
    2560,  2578,  2566,  2567,  2601, -2599,  4303,  2616,   969,   970,
     971,  -842,  2624,  4238,   896,   712,  1428,  2625,  4695,   612,
    2630,  2629,  1593,  3202,  1594,  2632,  4831,  4239,  4844,  2633,
    2224,  2665,  2682,  2685,  3073,   732,  4852,   898,  5684,  4845,
    5779,  4695,  2686,  1873,  5954,  5397,  2694,  4853,  4695,  3074,
    2603,  5473,   898,  4303,  4856,  5683,  4857,  4858,  5964,  2700,
     741,  5634,  4587,  5682,  5954,  4876,  5770,  5884,  5771,  5772,
    5964,   140,  2703,  2710,   901,  3376,  2716,  2736,  2582,  5474,
    2748,  2749,  2751,  2078,  2766,  3203,  3378,  4371,  4372,  4373,
    2583,  2668,   896,  2768,  1595,  2769,  2771,  2780,  2782,  2105,
    5860,  2781,  4382,  3204,  3205,  3395,  2787,  2891,  3206,  3207,
    3208,  4752,  4240,   918,   -70,  2079,  2785,  2786,   750,  -842,
    2797,  2800,  5256,  2804,   750,  2807,  2817,  4241,  2818,  2822,
    5257,  3754,  2830,  2831,   897,  2832,   157,   158, -2345,  2836,
    2403,  2403,   923,  1595,  2856,   925,  2859,  4448,  4451,  2860,
    4454,  2869,  5491,  4934,  2879,   613,  3293,  2883,  2884,  2886,
     713,   929,   930,  4242,  2890,  2914, -1585,  5307,  2106,  2919,
    2926,  1625,  3755,   614,  2932,  2934,  3209,  4243, -1762,  2941,
    2948,  2702,  5739,  3388,  1591,  1592,  2954,  5533,  1533,  1565,
    1569,  2958,  2968,  2584,  2593,  2969,  -842,  5062,  2971,  2972,
    3756,  2982,   937,   897,  1591,  1592,  2983,  2993,  2989,  4383,
    2996,   895,  2990,  2994,   615,  2995,  2997,   616,  3018,  3027,
    3031,   943,  2998,  3029,  3210,  3037,  3034,  4902,  3057,   948,
     949,  3056,   897,  2107,  4850,  2108,  3118,  3120,  3084,  3121,
    2109,  5474,  3124,  2604,   617,  3123,  3135,  3136,  3151, -2207,
    1591,  1592,   618,  3161,  2094,  2095,  2096,  2097,  1083,  3162,
    4143,  3167,  3170,  3177,  2585,  1084,  3187,  3186,  2224,  3188,
    3445,  5785,  3374,  3191,  2669,  3189,  3192,  3193,  3244,  3247,
    1986,  1085,  3250,  3254,  3257,  3260,  4381,  3261,   898,   895,
    3447,  1086,  1087,  1088,  2094,  2095,  2096,  2097,  3262,  3757,
    3284,  1089,  3263,   715,  2110,  3264,  5474,  3265,  2098,  2099,
    2100,  3266,  3267,  3312,  3376,  3268,  3269, -2161,  3270,   967,
    3271,  -166,  3272,  3273,  4226,  1672,  3274,  3275,   969,   970,
     971,  3315,  3276,   750,  1782,  5066,  5066,  3277,  5068,   897,
    5936,  3278,  3279,  3280,  3285,  3281,  3282,  2111,  2098,  2099,
    2100,  3283,  3292,  1962,  5070,  3318,  1593,   898,  1594,  2101,
    2102,  3330,  3334,  3338,  3349,   616,  3339,  3340,  3341,  3336,
    3337,  4428,  3344,  4601,   897,  3348,  1593,  3350,  1594,  3356,
    3417,  3381,  3418,  3419,  4303,  3431,   898,  3430, -1800,  5194,
    3432,   732,   716,  5084,  3492,  4614,  3493,  1177,  5119,  2101,
    2102,  3441,  3451,   897,  3477,  3490,  3478,  1809,  3513,  3523,
    3524,  5587,  3530,  5143,  3531,  3047,  5161,  5146,  3532,  5163,
    2942,  3540,  1593,  3546,  1594,   896,  3542,   157,   158,  3560,
    2103,  3563,  3567,  3568,  5258,  3569,  2112,  5259, -1991,  3570,
     896,  1090,  5256,  3576,  3577,  2350,  5260,  2113,  3584,  2349,
    5257,  3589,  1987,  2742,  3604,  1091,  3600,  4303,  4695,  4303,
    2428,   750,  4303,  5162,  4695,  3636,  3621,  3619,  4303,  4303,
    2103,  3620,  4695,  3639,  3376,  3641, -1991,  1595,  3640, -1991,
    3647,  3047,  4303,  4695,  3658,  4695,  3892, -1991,  3646, -1991,
    3048,  5186,  3661,   898,  3659,  3667, -1991,  1595,  3720,  4382,
   -1991,  3049,  5189,  3725,  2104,  3729,  5197,  3719,  3050,  3730,
   -1991,  3374,  3738, -1991,  3736,  3739,  3743, -1991,  3750, -1991,
    3751,  3793,  3794,  3846, -1991,  3795,  3047,  3850,   898,  5212,
    3858, -1991,  3859,  3861, -1991,  3890,  3896,  3051,  2695, -1991,
    3901,  5234,  5968,  1595,  2104,  3905,  3907,  4715,  4717,  4719,
    5039,  3914,  3922,  4722,  4723,  1092,  3048,   898,  4727,  3913,
   -1991,  4733,  3927,  3915,  4737,  3997,  4000,  3049,  5587,  4001,
    4004,  4748,  4008, -1991,  3050,  4012,  4016,  5235, -1991,  4019,
    4023,  5143,  4026,  4027,  4028,  4029,  4082,  4095,  4105,  4115,
    5082,  1093,  4093,  4106,  4117,  4124,  2105, -1991,  3052,  4123,
    4129,  3048,  4134,  3051,  4137,  1094,  4383,  4136,  1782,  4144,
    4146,  4147,  3049,  4148,  4150,  4151,  5043,  4154,  4160,  3050,
    4163, -1991,   895,  4164,  4169,  4170,  4177,  4178,  4181,  3053,
   -1991,  4198,  4206,  4210,  4213,  4216,  2105,   895,  4795,  4218,
    4220,  4221,  4228,  5272,  4230,  4246,  4248,  4247,  3051,  4249,
    4255,  4268, -1991,  3815,  4606,  4251,  4311,  4262,  4316,  4328,
    4332,  4354,  4333,  4336,  3052,  2106,  4366,  4381,  4389,  4391,
    4392,  3374, -1991,  3562,  4402,  4403,   896,  4411, -1991, -1991,
    4324,  4412,  4695,  4410,  4413,  4414,  4417,  4419,  4415,  4418,
    5066,  4420, -1991,  4421, -1991,  3053,   732, -1991,  4433,  5302,
    4441,   157,   158,  4460,  4461,  2106,  4464,  4473,  5309,  3052,
    4475,  4487,  4303,  4303,  4509,  4482,  4531,  4516,  4534,  1783,
    4544,  4545,  4559,  4556,  4562,  4570,  4571,  4563,  4608,  2895,
    2107,  4100,  2108,  1784,  4617,  1785,  4428,  2109, -1917,  4624,
    3053,  4626,  4628,  4633,  2292,   896,  4629,  4632,  4674,  4636,
    4641,  4675,  4696,  4701,  5258,  5143,  4697,  5259,  4702,  4753,
    4706,  4708,  4709,  4764,  4755,  1786,  5410,  3184,  3185,  4756,
    2107,  4757,  2108,  5965,   896,  4784,  4785,  2109,  4771,  4787,
    1787,  4789,  2282,  4811,  3196,  4823,  4824, -2111,  4827,  4828,
    4810,  4836,  4839,  4303,  3222,  3223,  4815,  4303,  4838,  4840,
    4867,  2110,  4870,  2224,  4880,  4874,   892,  4873,  1074,  4881,
    4695,  4888,  4891,  1788,  5503,  4889,  4899,  4917,  4537,  4927,
     892,  4942,  4914,  4954,  4962,  4970,  1131,  1186,  4930,  4977,
    4957,  1789,  1074,  4978,  4953,  4958,  4959,  4960,   732, -1991,
    4965,  2110,  4966,  4985,  2111,  4987,  1074,  4990,  4999,  4934,
    4979,  5394,   629,  5000,  5004,  5011,  5019,  5027, -1887,  3286,
    3287,  3288,  3289, -1892,  5048,  5059,  5046,  5078,  5079,  5120,
    5054,  5147,  5137,   895,  5055,  5071,  5063,  5069,  5072,  5077,
    5148,   896,  5153,  5152,  2111,  5154,  5587,  5155,  5542,  1872,
    5172,  5180,  5176,  5185,  3844,  5188,  5211,  5190,  5210,  5213,
    5214,  5224,  5237,  5225,  5238,  5239,  5240,  5242,  5482,  5250,
    5246,  1790,  5482,  5247,  5280,  5254,   896,  5278,  1791,  5269,
    5266,  5282,  5286,  5287,  5066,  5293,  5294,  5299,  1792,  5310,
    5312,  4758, -2728,  2112,  4303, -2727,  5324,  5461, -2731, -2735,
   -2736,  1793,   895,  5327,  2113,   896, -2738,  5329, -2740,  5497,
    5345,  1074, -2741, -2742, -2747, -2748, -2749, -2753,  5318,  5143,
     897,  5322,  5325,  5353,  5355,  5331,  2279,  5332,  5365,  5374,
    5380,   895,  1794,  2112,  5387,  1795,  2277,  5385,  5395,  5398,
    4303,  5402,  5407,  5408,  2113,  5414,  5415,  5234,  5416,  5420,
    1796,  5433,   732,  1783,  5435,  5446,  5418,  5445,  5447,  5451,
    5527,  5453,  5462,  3677,  5501,  5509,  5511,  1784,  5512,  1785,
    5547,  5551,  5454,  5513,  5514,  5524,  5525,  5531,  5539,  5562,
    5554,  1074,  5575,  5235,  5621,  5627,  5571,  5572,  5631,  5606,
    5623,  5625,   892,  5626,   892,   892,   892,  5388,  5629,  1786,
    5632,   892,  5633,   892,  5645,  5646,  5647,  5570,  5648,  5654,
    5659,  5661,  5662,  5669,  1787,  5671,  5677,  5703,  5686,  5697,
    3562,  5687,  3562,  5688,  5707,  5715,  5710,  5482,  5718,  5721,
    5742,  5732,  5743,  5744,  1074,  5750,  5760,  5761,   895,  1074,
    5781,  5611,  5774,  5769,  5782,  5482,  5784,  1788,  3812,  5789,
    5804,  5827,  3817,  5838,  5839,  5844,  5845,  5846,  5867,  5868,
    5628,  5876,  5877,  5878,  5896,  1789,  5911,  5898,  5912,  1074,
    5869,  5921,   750,   895,   898,  5870,  5901,  5914,  5932,  1074,
    5924,  5926,  5933,  5940,  5937,  5941,  5955,  5935,  3573,  5967,
   -1991,  1430,  1816,  2457,  4227,  3884,  5655,  5204,  5202,  5203,
    1744,  2536,   895,  1810,  3709,  3149,  5595,  4364,  5653,  5330,
    5767,  5894,  1920,  5145,  5236,  5219,  5500,  5508,  5555, -1991,
   -1991,  5400,  5393, -1991, -1991,  4951,  2301,  3093,  4245,  4003,
    5510,  3909,  4448,  4897,  4451,  4549,  4454,  3259,  2759,  2224,
    2760,  5695,  1336,  2762,  2761,  1790,  1966,  2615,  2699,  5612,
    5323,  5528,  1791,  5455,  4424,  3831,  5178,  5194,  4635,  5268,
    4640,  5012,  1792,  2946,  5854,  5803,  5788,  5421,  1074,  1074,
    1074,  1074,  5273,  5923,  5905,  1793,  5925,  5717,  4288,  4647,
    1074,  5025,  5499,  3127,  4422,  5866,  5733,  4863,  5076,  4427,
    5888,  5759,  5763,  5667,  4589,  4505,  4543,  5765,  5360,  4953,
    5786,  4909,  5482,  4915,  5746,  4611,  1794,  4097,  4609,  1795,
    5066,  4613,  5066,  5066,  5908,   719,   720,  5881,  5458,  5882,
    5816,  5756,  5755,  5741,  1796,  5738,  4925,  5450,  4425,  4862,
    1758,  1936,  3652,  3653,  5530,  1809,  2506,   892,  5783,   732,
     630,  5768,  5359,  2667,  3253,  3069,  2957,  4474,  3924,  5251,
    3345,  1901,  4114,  4353,  5538,  3179,  5160,  4631,  3323,  5778,
    2564,  3452,  3454,  3733,  4139,  2280, -1991,  2067,  1875,  2218,
    4630,  3631,  2127,  4203,  3625,  3615,  5037,  5551,  4619,  5723,
    5594,  5906,  5056,  5907,  4334,  5350,  4131,  2076,  5570,  5893,
    5262,  5349,  5364,  5696,  5253,  4193,  5797,  5798,  5284,  3164,
    5348,   750,  4326,  3310, -1991,   721,  2024, -1991,  3343,  2314,
    5020,  4703,  3774,  4683,  5904, -1991,  5482, -1991,  4680,  5851,
    1348,  1190,  1353,  3039, -1991,  2394,  5824,  5823, -1991,  2693,
    5066,  5066,  3040,  1182,  1185,   730,  3605,  5066,  1074,  3087,
    1800, -1991,  5301,  2636,  5292, -1991,  2497, -1991,  4478,  5922,
    3763,  3764, -1991,  3766,  3768,  1867,  5847,  5515,  2029, -1991,
    5934,  5663, -1991,  5966,  5970,  1512,  4204, -1991,  3060,  4646,
    4661,  2224,  2913,  1143,  3507,  1144,  3588,  3014,  3583,  3582,
    2745,  2327,  2514,  1116,  5861,  2637,  1653,  5862, -1991,  4370,
    3243,  2021,  5482,  5482,   750,  3910,  5957,  3564,  3660,  5386,
    4429, -1991,  5959,  1224,  4200,  1826, -1991,  4671,  3617,  5038,
     723,   724,   725,  5971,  5066,     0,  3145,  5780,     0,     0,
       0,     0,  2638,     0,     0, -1991,     0,     0,     0,     0,
       0,     0,     0,  5895,     0,     0,     0,  5482,  5766,     0,
       0,     0,     0,     0,  3891,     0,     0,     0,     0, -1991,
     750,     0,     0,     0,     0,     0,  4226,  4226, -1991,     0,
       0,     0,   896,     0,  1074,     0,  1074,   892,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1991,     0,     0,  5920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1991,     0,     0,     0,     0,     0,     0, -1991,     0,     0,
       0,     0,     0,     0,     0,  5419,     0,     0,     0,     0,
   -1991,     0, -1991,     0,     0, -1991,     0,     0,  2224,     0,
       0,     0,   750,     0,     0,     0,     0,  1074,   750,  1074,
       0,     0,  2224,     0,     0,     0,     0,     0,  2224,     0,
       0,     0,     0,     0,  2224,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1074,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1074,  1074,     0,     0,
       0,     0,  1074,     0,     0,     0,  1074,  1074,  1074,     0,
       0,     0,     0,     0,     0,     0,     0,  1074,  1074,     0,
       0,     0,     0,  1074,     0,  1074,  1074,  1074,  1074,  1074,
       0,  1074,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1074,     0,  1074,     0,     0,  1074,  1074,     0,
    1074,  1074,  1074,     0,  1074,  1074,  1074,     0,     0,     0,
       0,  1074,     0,     0,  1074,  4953,     0,     0,     0,     0,
       0,     0,  1074,  1074,     0,  1074,  1074,  1074,     0,   895,
    1074,  1074,  1074,  1074,  1074,  1074,  1074,     0,  1074,  1074,
    1074,  1074,  1074,  1074,     0,  1074,  1074,     0,  1074,  1074,
    1074,  1074,  1074,  1074,  1074,     0,     0,  1074,  1074,  1074,
    1074,     0,  1074,  1074,  1074,     0,  1074,     0,  1074,     0,
    1074,     0,     0,     0,  1074,  1074,  1074,     0,     0,  1074,
    1074,  1074,  1074,  1074,     0,  1074,     0,     0,     0,     0,
       0,     0,  1074,     0,     0,     0,     0,     0,     0,  1074,
    1074,  1074,  1074,     0,     0,     0,     0,     0,     0,  2639,
    1074,  1074,     0,  1074,  1074,     0,     0,  1074,  1074,  1074,
    1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,
       0,     0,  1074,     0,     0,     0,     0,     0,     0,  2640,
    2641,     0,  2642,  2643,  2644,  2645,  2646,     0,  2647,  2648,
    2649,  2650,  2651,  2652,  2653,  2654,     0,  2655,  2656,  2657,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1074,     0,     0,     0,     0,
    1074,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1074,     0,     0,  4257,  4258,  4259,  4260,  4261,     0,  4263,
    4264,  4265,  4266,  4267,     0,  4269,  4270,  4271,  4272,  4273,
    4274,  4275,  4276,  4277,  4278,     0,     0,  4282,  4283,     0,
       0,     0,     0,     0,     0,     0,  3805,     0,  3806,  3807,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3808,     0,  3809,  2658,  2659,     0,  1074,     0,
    3810,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1074,  1909,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   815,  3811,     0,     0,     0,     0,     0,
       0, -1181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1181,     0,     0,  2475,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   816, -1991,     0,
       0,   157,   158,  4401,     0,     0,  3670,     0,  4409,     0,
       0,  1810,     0,     0,     0,     0,     0,     0,     0,   818,
       0,     0,     0,  5818,     0,     0,     0, -1991, -1991,   819,
       0, -1991, -1991,     0,  3812,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1036,     0, -1036,     0,   820,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3813,
       0,   821,     0,  3814,     0,     0,   822,     0,     0,     0,
    1909,  3672,     0,     0,  3815,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   823,
       0,     0,     0,     0,     0,     0,  3816,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   892,     0,     0,     0,   157,
     158,     0,     0,     0,  3670,     0,     0,     0,     0,     0,
       0,     0,  3673,  3674,  3675,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3676,   824,     0,
     892,     0,     0,     0,     0,     0,     0,     0, -1036,     0,
   -1036,     0,     0,     0,     0,     0,   825,     0,     0,     0,
       0,     0,  3677,     0,   826,     0,     0,     0,     0,  1074,
       0,     0,     0,     0,     0,     0,     0,  1909,     0,  3672,
       0,     0,  3817,  1074,     0,     0,     0,     0,     0,     0,
    3678,     0,  3679,     0,     0,     0,   827,     0,     0,   892,
     892,  1074,     0,     0,  1074,     0,   828,   829,     0,     0,
       0,  3680,  1074,  1074,     0,     0,     0,     0,  3818,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
    3681,  3670,     0,     0,     0,     0,     0,  3682,     0,     0,
    3673,  3674,  3675,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3683,  3671,     0,     0,     0,     0,     0,     0,
       0,     0,  3684,     0,     0,  3676,  3819,  3820,     0,     0,
       0,     0,     0,  3821,     0,     0,     0,  3685,     0,     0,
       0,     0,     0,     0,     0,  3822,     0,     0,     0,     0,
    3677,     0,     0,     0,     0,     0,     0,     0,  1074,  1074,
    1074,     0,     0,     0,  3823,     0,  3672,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3678,     0,
    3679,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3824,     0,     0,     0,  3686,     0,     0, -1036,     0,  3680,
       0,     0,     0,     0,  3687,     0,     0,     0,  2013,     0,
       0,     0,     0,  2014,     0,     0,     0,     0,  3681,     0,
       0,     0,     0,  2015,     0,  3682,     0,  3673,  3674,  3675,
       0,     0,     0,     0,     0,     0,  1074,     0,     0,     0,
    3683,  3688,     0,     0,     0,     0,     0,     0,     0,     0,
    3684,     0,  3676,     0,  3689,     0,  3825,  1074,     0,     0,
    1074,  1074,     0,  1074,  1074,  3685,     0,     0,     0,     0,
       0,     0,  1074,     0,  1074,     0,  4710,  3677,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4726,
       0,     0,     0,     0,  3690,     1,     2,     0,     0,     0,
    3691,     0,  1074,     0,     0,  3678,     0,  3679,     0,     0,
       0,     0,     0,     0,     0,     3,     0,  1074,     0,     5,
       0,     6,  3686,     0, -1036,     0,  3680,  3826,     0,     7,
       0,     0,  3687,     0,  1074,     0,     0,     0,  3827,  3828,
    3829,     0,     0,     0,     0,  3681,     0,     0,  1074,     0,
       0,     8,  3682,     9,    10,     0,     0,     0,     0,  3692,
       0,    11,  3001,  1074,     0,     0,  3693,  3683,     0,  3688,
       0,     0,     0,     0,     0,     0,     0,  3684,     0,     0,
       0,  2016,  3689,     0,     0,  1074,     0,    14,     0,     0,
       0,     0,  3685,     0,     0,     0,  3694,     0,     0,     0,
       0,     0,  2017,     0,     0,     0,     0,  2018,    16,     0,
       0,  3695,  3696,     0,     0,     0,     0,     0,     0,    17,
       0,     0,  3690,     0,  3697,     0,     0,  3830,  3691,    18,
       0,    19,     0,     0,     0,     0,     0,     0,  2019,     0,
       0,     0,     0,   892,     0,     0,     0,     0,     0,  3686,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3687,
       0,     0,  1074,     0,     0,     0,    21,     0,     0,  2020,
       0,  1800,     0,     0,     0,     0,     0,     0,     0,     0,
      22,    23,     0,     0,     0,     0,     0,  3692,     0, -1181,
      24,    25,     0,     0,  3693,     0,  3688,     0,     0,     0,
       0,     0,    26,    27,     0,    29,     0,    30,     0,  3689,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    32,     0,  3694,     0,    33,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3695,
    3696,     0,     0,     0,     0,     0,     0,     0,     0,  3690,
       0,     0,  3697,     0,     0,  3691,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    35,  1074,    36,     0,
      37,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    39,     0,     0,     0,
       0,     0,     0,    40,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4307,  3692,     0,     0,     0,     0,     0,
       0,  3693,     0,     0,    42,     0,     0,     0,     0,     0,
       0,    43,     0,     0,  1074,     0,     0,     0,    44,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3694,     0,     0,     0,     0,     0,     0,     0,    45,
       0,     0,     0,     0,     0,     0,  3695,  3696,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3697,
       0,     0,     0,     0,    46,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1074,     0,    47,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   892,     0,    48,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    49,     0,
       0,   892,     0,     0,     0,     0,     0,     0,  3698,     0,
       0,    50,     0,     0,    51,     0,     0,    52,     0,     0,
       0,     0,     0,     0,     0,  3369,   892,     0,     0,     0,
       0,     0,    53,     0,   892,   892,   892,     0,     0,     0,
       0,  1074,     0,     0,  1074,     0,     0,     0,     0,     0,
       0,     0,     0,  1074,     0,     0,     0,     0,     0,     0,
       0,  1074,     0,  1074,     0,  1074,     0,  1074,  1074,  1074,
    1074,  1074,  1074,     0,  1074,     0,     0,     0,     0,     0,
       0,     0,  1074,     0,  1074,     0,     0,  1074,  1074,  1074,
    1074,     0,     0,  1074,  1074,     0,     0,  1074,     0,  1074,
       0,  1074,     0,  1074,     0,     0,     0,  1074,     0,     0,
       0,     0,     0,     0,     0,  1074,     0,  1074,     0,  1074,
    1074,  1074,  1074,  1074,     0,     0,  1074,  1074,  1074,     0,
    1074,     0,     0,  1074,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1074,     0,    54,     0,
       0,  1074,     0,     0,  1074,     0,  1074,  1074,  1074,     0,
       0,  1074,     0,     0,     0,     0,     0,  1074,     0,     0,
       0,     0,  1074,     0,     0,     0,     0,    55,     0,     0,
      56,     0,     0,     0,     0,     0,     0,  3001,  1074,     0,
      57,     0,     0,     0,  1074,     0,     0,  1074,    58,     0,
    1074,     0,     0,     0,     0,     0,     0,     0,     0,  1074,
      59,  1074,     0,     0,     0,     0,  1074,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    60,
       0,     0,    61,     0,     0,     0,     0,     1,     2,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     3,  1074,     4,
       0,     5,     0,     6,    62,     0,     0,     0,     0,     0,
       0,     7,     0,     0,    63,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1074,     0,     0,
       0,  1131,     0,     8,     0,     9,    10,     0,     0,    64,
       0,     0,     0,    11,     0,     0,     0,     0,     0,     0,
      12,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,    14,
       0,     0,     0,   892,     0,     0,     0,     0,   892,     0,
       0,     0,    15,     0,     0,     0,     0,     0,     0,     0,
      16,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,    19,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,  3707,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,    23,     0,     0,     0,     0,     0,     0,
       0,     0,    24,    25,  1074,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    26,    27,    28,    29,  1074,    30,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    32,     0,     0,     0,    33,    34,
    3761,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3761,  3761,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    35,     0,
      36,     0,    37,     0,     0,     0,     0,     0,     0,     0,
    3707,     0,     0,     0,     0,     0,     0,    38,    39,     0,
       0,   892,  1074,     0,     0,    40,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3761,  3761,    41,     0,    42,     0,     0,     0,
       0,     0,     0,    43,     0,     0,     0,     0,     0,     0,
      44,  1074,     0,     0,     0,     0,     1,     2,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    45,     0,  1074,     0,     0,     3,     0,     4,     0,
       5,     0,     6,     0,     0,     0,   892,     0,     0,     0,
       7,     0,     0,     0,     0,     0,    46,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,     0,
       0,     0,     8,     0,     9,    10,     0,     0,     0,     0,
       0,     0,    11,     0,     0,     0,  1074,    48,     0,     0,
       0,     0,     0,     0,     0,   892,  1074,     0,     0,  1074,
      49,     0,    13,     0,     0,     0,     0,     0,    14,     0,
       0,     0,     0,    50,     0,     0,    51,     0,     0,    52,
       0,    15,  1074,  1074,     0,     0,     0,     0,     0,    16,
       0,     0,     0,     0,    53,     0,     0,     0,     0,     0,
      17,     0,     0,     0,     0,     0,     0,  1074,     0,  1074,
      18,  1074,    19,  1074,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1074,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,  1074,  1074,     0,     0,
       0,    22,    23,     0,     0,     0,     0,     0,     0,     0,
       0,    24,    25,     0,     0,     0,  1074,     0,     0,  1074,
       0,     0,  1074,    26,    27,    28,    29,  1074,    30,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    32,     0,     0,     0,    33,    34,     0,
      54,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1074,  1074,     0,     0,    55,
       0,     0,    56,     0,     0,     0,     0,    35,     0,    36,
    1074,    37,    57,     0,     0,     0,     0,     0,  5708,  5709,
      58,  5711,  5712,  5713,  5714,     0,    38,    39,     0,     0,
       0,     0,    59,     0,    40,     0,     0,     0,     0,     0,
    5734,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    60,     0,     0,    61,  3930,  3931,     0,     0,     0,
       0,  3932,  3933,    41,  1074,    42,     0,     0,     0,     0,
       0,  3934,    43,     0,     0,     0,     0,     0,     0,    44,
       0,     0,     0,     0,     0,     0,    62,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    63,  3935,     0,     0,
      45,     0,     0,     0,     0,     0,     0,     0,     0,  3936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    64,     0,     0,     0,    46,     0,  3707,     0,  3937,
       0,     0,  3707,     0,     0,     0,     0,    47,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5796,     0,
       0,  5799,     0,  1074,     0,     0,    48,     0,     0,  5807,
       0,     0,     0,  3938,  1074,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    50,  3939,  3940,    51,  3941,     0,    52,     0,
       0,     0,     0,     0,  3942,  3943,  3944,     0,     0,     0,
       0,     0,     0,    53,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3945,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3946,     0,
       0,     0,     0,     0,     0,     0,     0,  3707,  3930,  3931,
       0,     0,     0,     0,  3932,  3933,     0,     0,     0,     0,
       0,     0,     0,  3947,  3934,     0,     0,     0,     0,  3948,
     892,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3935,     0,     0,     0,  3949,  3950,  3951,     0,     0,     0,
       0,     0,  3936,     0,     0,  3761,     0,     0,     0,    54,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3952,
    3953,     0,  3937,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    55,     0,
       0,    56,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    57,     0,     0,     0,     0,  3938,     0,     0,    58,
       0,     0,     0,     0,     0,     0,  3954,     0,  3955,  3956,
       0,    59,     0,     0,     0,     0,  3939,  3940,     0,  3941,
       0,     0,     0,     0,  3957,     0,     0,  3942,  3943,  3944,
      60,     0,     0,    61,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3945,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   892,   892,
       0,  3958,     0,  3959,     0,    62,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    63,     0,     0,     0,     0,
       0,  3946,     0,     0,     0,     0,  3960,     0,     0,     0,
       0,     0,  1074,  1074,     0,  1074,     0,     0,     0,     0,
      64,     0,     0,     0,     0,  1074,  3947,  1074,  3961,     0,
    1074,     0,  3948,     0,     0,     0,     0,     0,     0,  3962,
    3963,     0,     0,  1074,     0,  1074,     0,  1074,     0,  1074,
       0,     0,     0,     0,     0,     0,     0,  3949,  3950,  3951,
       0,     0,  1074,  1074,     0,     0,     0,     0,     0,     0,
       0,  3964,     0,     0,     0,     0,     0,     0,     0,     0,
    3965,     0,  3952,  3953,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3930,  3931,
       0,     0,  1074,     0,  3932,  3933,     0,     0,     0,     0,
       0,  1074,     0,     0,  3934,     0,     0,     0,     0,     0,
    1074,     0,     0,     0,     0,     0,  3966,  3967,  3968,  3954,
       0,  3955,  3956,     0,  3969,  3970,     0,     0,     0,     0,
    3935,     0,     0,     0,     0,     0,     0,  3957,     0,     0,
    3971,  3972,  3936,     0,     0,     0,     0,     0,     0,  1131,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3937,     0,  3973,  3974,     0,     0,     0,     0,
       0,     0,     0,     0,  3958,     0,  3959,     0,     0,  1074,
       0,     0,     0,  3975,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3938,     0,     0,  3960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1074,     0,     0,     0,     0,  3976,  3939,  3940,     0,  3941,
       0,  3961,     0,     0,     0,     0,     0,  3942,  3943,  3944,
       0,  1145,  3962,  3963,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,     0,     0,     0,     0,  3945,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,  3964,  1146,  1147,     0,     0,     0,
       0,  3707,     0,  3965,  3977,  1148,     0,  3978,     0,     0,
    3979,  3946,     0,     0,     0,     0,     0,  3980,     0,     0,
       9,    10,  1074,     0,     0,     0,     0,     0,     0,  1074,
       0,     0,     0,  3981,     0,     0,  3947,     0,     0,  1074,
       0,     0,  3948,     0,     0,     0,     0,     0,     0,  3966,
    3967,  3968,  3982,     0,     0,     0,     0,  3969,  3970,     0,
       0,     0,     0,     0,     0,   157,   158,  3949,  3950,  3951,
    1149,     0,     0,  3971,  3972,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1150,     0,     0,     0,     0,     0,
       0,     0,  3952,  3953,     0,     0,     0,  3973,  3974,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3975,  3707,     0,     0,
       0,  4860,     0,  3806,  1074,  1074,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3954,
       0,  3955,  3956,     0,     0,     0,     0,  3808,  5333,     0,
       0,     0,     0,     0,     0,  3810,  1151,  3957,     0,     0,
       0,     0,     0,     0,   892,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1909,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4861,
       0,     0,     0,     0,  3958,     0,  3959,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3977,     0,     0,
    3978,     0,     0,  3979,     0,     0,  1152,     0,     0,  3960,
    5334,     0,     0,     0,     0,  3369,   157,   158,  1074,     0,
       0,  3670, -1036,     0, -1036,     0,  3981,     0,     0,     0,
       0,  3961,   892,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3962,  3963,     0,  3982,  1074,     0,     0,  3812,
       0,  1909,     0,     0,     0,     0,     0,  1153,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1154,     0,  3964,     0,     0,     0,     0,     0,
       0,  1155,     0,  3965,     0,     0,     0,     0,  3814,     0,
       0,     0,     0,  1156,     0,     0,  3672,     0,     0,     0,
     157,   158,     0,     0,  1157,  3670,     0,     0,     0,     0,
    1074,     0,  1074,     0,     0,     0,     0,     0,     0,     0,
       0,  3816,     0,     0,     0,     0,  1074,     0,  1158,  3966,
    3967,  3968,     0,     0,     0,     0,     0,  3969,  3970,     0,
       0,     0,     0,  1074,  1074,     0,     0,     0,     0,     0,
       0,     0,     0,  3971,  3972,     0,     0,  3673,  3674,  3675,
   -2345,  1159,  1074,     0,  1160,     0,  1161,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3973,  3974,     0,
    3672,     0,  3676,     0,     0,     0,     0,     0,     0,     0,
       0,  1162,  1163,     0,     0,     0,  3975,     0,     0,  1164,
    1165,     0,     0,     0,     0,     0,     0,  3677,     0,     0,
       0,     0,     0,     0,     0,     0,  1166,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3817,     0,     0,
       0,     0,     0,     0,     0,  3678,     0,  3679,  1167,     0,
       0,  3673,  3674,  3675,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3369,     0,  3680,     0,     0,  1168,
       0,     0,     0,     0,     0,     0,  3676,     0,     0,     0,
       0,     0,     0,     0,     0,  3681,     0,     0,     0,  1074,
       0,     0,  3682,     0,     0,     0,     0,  3977,     0,     0,
    3978,  3677,     0,  3979,     0,  1074,     0,  3683,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3684,     0,     0,
       0,  3819,     0,     0,  1169,     0,  3981,     0,  3821,  3678,
       0,  3679,  3685,     0,     0,     0,     0,     0,  1170,     0,
       0,     0,     0,     0,     0,  3982,     0,     0, -1036,  1171,
    3680,     0,  1172,  1173,     0,     0,     0,     0,     0,  3823,
       0,     0,     0,     0,     0,     0,     0,  1174,     0,  3681,
       0,     0,     0,     0,     0,   892,  3682,     0,     0,     0,
       0,     0,     0,     0,     0,  1909,     0,     0,     0,  3686,
     892,  3683,     0,     0,     0,     0,     0,     0,     0,  3687,
       0,  3684,     0,  1175,     0,     0,     0,     0,     0,     0,
    1176,     0,     0,     0,     0,     0,  3685,     0,     0,     0,
       0,     0,     0,     0,  3369,     0,     0,     0, -3101,     0,
    1177,     0,     0,     0,   157,   158,  3688,     0,     0,  3670,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3689,
       0,  3825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1074,
       0,     0,     0,  3686,     0,     0,     0,     0,     0,     0,
   -3101,     0,     0,  3687,     0,     0,  1178,     0,     0,  3690,
       0,     0,     0,     0,     0,  3691,     0,     0,  1074,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3672,     0,     0,     0,     0,     0,
    3688,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3689,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3692,     0,     0,     0,     0,     0,
       0,  3693,     0,     0,     0,     0,     0,     0,     0,  3707,
       0,  1074,     0,  3690,     0,  3673,  3674,  3675,     0,  3691,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3694,     0,     0,     0,     0,     0,     0,     0,     0,
    3676,     0,     0,     0,  1076,     0,  3695,  3696,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3697,
       0,     0,     0,     0,     0,  3677,   892,     0,  1076,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3692,     0,
       0,     0,  1076,     0,     0,  3693,     0,     0,     0,     0,
       0,     0,     0,  3678,     0,  3679,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3680,  3694,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3695,  3696,     0,  3681,     0,   892,     0,     0,     0,     0,
    3682,     0,     0,  3697,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3683,     0,     0,     0,     0,
       0,     0,     0,     0,   892,  3684,     0,     0,     0,     0,
       0,     0,     0,     0,  1074,     0,     0,     0,     0,     0,
    3685,     0,     0,     0,     0,     0,     0,  1076,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1074,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1074,     0,  1074,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3686,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3687,     0,     0,
       0,  5483,     0,     0,     0,  5483,     0,  1076,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   892,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3688,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3689,     0,     0,
       0,     0,     0,     0,     0,     0,   892,     0,     0,     0,
    1076,     0,     0,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   892,     0,  3690,     0,     0,
       0,     0,     0,  3691,     0,  1076,     0,     0,  1486,     0,
       0,     0,     0,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5604,     0,     0,  5604,     0,     0,     0,
       0,     0,     0,  1486,     0,     0,     0,     0,     0,     0,
       0,     0,  3692,     0,     0,     0,     0,     0,     0,  3693,
    5483,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5644,     0,     0,     0,     0,     0,     0,     0,  5483,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3694,
       0,     0,     0,     0,  1076,  1076,  1076,  1076,     0,     0,
    1486,     0,     0,     0,  3695,  3696,  1076,     0,     0,  5644,
       0,     0,     0,     0,     0,  1074,     0,  3697,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5604,     0,     0,     0,     0,  5604,     0,     0,     0,     0,
       0,     0,  5604,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1074,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5483,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1074,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,     0,     0,  1486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5604,     0,     0,     0,  5817,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5483,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1074,
       0,     0,     0,     0,     0,     0,  1074,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1076,     0,  1076,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5604,     0,
    5604,  5604,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5604,     0,     0,     0,
       0,     0,     0,  1076,  5604,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1074,     0,     0,     0,     0,
       0,  1076,     0,     0,  5604,     0,     0,     0,     0,     0,
       0,     0,  1076,  1076,     0,     0,     0,     0,  1076,     0,
       0,     0,  1076,  1076,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,  1076,  1076,  1486,     0,     0,     0,  1076,
       0,  1076,  1076,  1076,  1076,  1076,     0,  1076,     0,     0,
    1486,  1486,   892,     0,     0,     0,     0,     0,  1076,     0,
    1076,     0,     0,  1076,  1076,  1074,  1076,  1076,  1076,     0,
    1076,  1076,  1076,     0,     0,     0,     0,  1076,     0,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,  1076,  1076,
       0,  1076,  1076,  1076,     0,     0,  1076,  1076,  1076,  1076,
    1076,  1076,  1076,     0,  1076,  1076,  1076,  1076,  1076,  1076,
       0,  1076,  1076,     0,  1076,  1076,  1076,  1076,  1076,  1076,
    1076,     0,     0,  1076,  1076,  1076,  1076,     0,  1076,  1076,
    1076,     0,  1076,     0,  1076,     0,  1076,     0,     0,     0,
    1076,  1076,  1076,     0,     0,  1076,  1076,  1076,  1076,  1076,
       0,  1076,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,     0,     0,  1076,  1076,  1076,  1076,     0,
       0,     0,     0,     0,     0,     0,  1076,  1076,     0,  1076,
    1076,     0,     0,  1076,  1076,  1076,  1076,  1076,  1076,  1076,
    1076,  1076,  1076,  1076,  1076,  1076,     0,     0,  1076,     0,
       0,     0,     0,  1486,     0,     0,     0,     0,     0,  1486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1042,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,  1192,     0,     0,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1076,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1335,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1399,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1449,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1476,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1491,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1585,     0,     0,     0,     0,  1076,     0,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,  1076,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1486,
    1486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,  1076,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1779,
       0,  1486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,  1486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1076,     0,     0,  1076,  1076,     0,  1076,
    1076,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1076,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,  1949,     0,  1950,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2027,     0,
    2027,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2052,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,  2066,     0,     0,     0,  2071,     0,  2073,
       0,  1486,     0,  1486,     0,     0,     0,     0,  2089,  2090,
       0,     0,     0,     0,  2116,     0,  2119,  2120,  2121,  2122,
    2123,     0,  2125,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2133,     0,  2136,     0,     0,  2137,  2138,
       0,  2140,  2141,     0,     0,  2144,  2145,  2146,     0,     0,
       0,     0,  2151,     0,     0,  2157,     0,     0,     0,     0,
       0,     0,     0,  2161,  2162,     0,  2165,     0,  2167,     0,
       0,  2169,  2170,  2171,  2174,  2175,  2176,  2177,     0,  2178,
    2179,  2180,  2181,  2182,     0,     0,  2189,  2190,     0,     0,
    2194,  2195,  2196,  1076,     0,     0,     0,     0,  2202,  2203,
    2204,     0,     0,  2207,  2208,  2209,     0,  2211,     0,  2213,
       0,  2214,     0,     0,     0,  2217,  2157,  2219,     0,     0,
    2225,  2226,  2227,  2228,  2229,     0,  2230,     0,     0,     0,
       0,     0,     0,  2234,     0,     0,     0,     0,     0,     0,
    2239,  2240,  2241,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2337,     0,     0,     0,
    1076,  2347,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2347,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1076,     0,  2424,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,     0,     0,     0,     0,     0,     0,  1076,     0,  1076,
       0,  1076,  2456,  1076,  1076,  1076,  1076,  1076,  1076,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
    1076,     0,     0,  1076,  1076,  1076,  1076,     0,     0,  1076,
    1076,     0,     0,  1076,     0,  1076,     0,  1076,     0,  1076,
       0,     0,     0,  1076,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,  1076,     0,  1076,  1076,  1076,  1076,  1076,
       0,     0,  1076,  1076,  1076,     0,  1076,     0,     0,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,     0,     0,  1076,     0,     0,
    1076,     0,  1076,  1076,  1076,     0,     0,  1076,     0,     0,
       0,     0,     0,  1076,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,     0,     0,     0,     0,     0,
    1076,     0,     0,  1076,     0,     0,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,  1076,  1486,  1076,     0,     0,
       0,     0,  1076,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1076,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1486,
       0,     0,  1486,  1486,  1486,     0,     0,     0,     0,     0,
    2729,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2746,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1192,     0,     0,  2765,     0,     0,     0,     0,
       0,     0,     0,  2772,  2773,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,  2824,
    2826,  2828,     0,     0,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2921,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2929,     0,  2930,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1076,     0,     0,
       0,     0,     0,  2952,     0,  1486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2959,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2347,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3012,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,  1076,  3022,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1076,     0,  1076,     0,  1076,     0,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,  3081,     0,     0,     0,  1486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1076,  1076,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,  1076,     0,     0,  1076,     0,
       0,     0,     0,  1076,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,  1076,     0,     0,     0,     0,     0,  3171,     0,
       0,     0,     0,     0,     0,     0,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1076,     0,     0,     0,     0,  3256,     0,  1486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3314,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,     0,     0,     0,     0,     0,  1486,     0,     0,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3393,     0,     0,  3394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3420,     0,     0,     0,  3422,     0,  3423,  3424,
    3425,  3426,  3427,  3428,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3433,     0,  3434,     0,     0,  3435,  3436,
    3437,  3438,     0,     0,  3439,  3440,     0,     0,  3442,     0,
    3444,     0,  3446,     0,  3448,     0,     0,     0,  3450,     0,
       0,     0,     0,     0,     0,     0,  2171,     0,  3453,     0,
    2171,     0,  3456,  3457,  3458,     0,     0,  3459,  3460,  3462,
       0,  3463,     0,     0,  3464,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3465,     0,     0,
       0,     0,     0,     0,     0,  3472,     0,  3473,  3474,  3475,
       0,     0,  3476,     0,     0,     0,     0,     0,  3480,     0,
       0,     0,     0,  3491,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3508,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3516,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3529,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2347,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,  1076,
       0,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,  1076,     0,     0,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,  1076,     0,  1076,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,     0,     0,     0,     0,  1076,     0,     0,
       0,     0,     0,     0,     0,     0,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3721,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3081,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3857,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,  3908,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4006,     0,     0,
    4007,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1076,  1076,     0,  4031,  4032,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4057,     0,
    4058,     0,  4059,     0,  4060,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4085,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4108,  4109,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,     0,     0,     0,  3721,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2347,  2347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2347,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1076,     0,  1076,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3081,     0,     0,     0,  1076,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3721,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3081,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1486,     0,
       0,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1486,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4565,  4566,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4573,     0,  4574,     0,
       0,  4575,     0,     0,     0,     0,     0,  1076,     0,     0,
       0,     0,     0,     0,  4595,     0,  4596,     0,  4597,     0,
    4598,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4604,  4605,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4634,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3081,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3081,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3721,     0,     0,     0,     0,     0,     0,
    4802,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3081,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1486,  1486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4868,  4869,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1486,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1486,     0,     0,     0,     0,
       0,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4941,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3721,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1076,     0,
       0,  3721,     0,  3721,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3081,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,     0,  2347,  2347,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5045,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1076,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5151,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3081,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5245,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3721,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5306,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3721,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5432,     0,  5434,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5670,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2343,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2344,   901,   902,   903,   904,     0,     0,
       0,     0,     0,     0,     0,   905,   906,     0,   907,     0,
       0,     0,     0,     0,     0,   908,   909,     0,     0,   910,
     911,   912,   913,     0,   914,   915,     0,   916,   917,     0,
       0,     0,     0,   918,     0,     0,     0,  2345,     0,     0,
     920,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     921,   922,   923,     0,   924,   925,     0,     0,     0,     0,
       0,     0,     0,  1585,     0,     0,     0,   926,   927,   928,
       0,   929,   930,     0,     0,     0,   931,   932,   933,     0,
       0,     0,     0,     0,     0,     0,   934,     0,   935,     0,
       0,     0,     0,     0,     0,     0,  5775,     0,     0,     0,
       0,   936,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   937,     0,     0,     0,     0,   938,   939,     0,
     940,     0,     0,     0,     0,     0,   941,     0,   942,     0,
       0,   943,     0,     0,   944,   945,   946,     0,   947,   948,
     949,     0,   950,  2346,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   951,     0,     0,
       0,   952,   953,   954,   955,     0,     0,     0,     0,     0,
       0,   956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   957,   958,     0,     0,     0,     0,     0,     0,
       0,   959,     0,     0,   960,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3081,     0,     0,     0,   961,     0,     0,     0,     0,     0,
     962,   963,     0,   964,   965,   966,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,   968,   969,   970,
     971,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     972,   973,   974,     0,     0,     0,     0,     0,   975,     0,
     976,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   977,   171,   172,   173,   174,   175,   176,
     978,   178,   179,   180,   181,   182,   183,   184,   979,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   980,   201,   202,   203,   204,   205,
     206,   207,   208,   981,   210,   982,   983,   212,   984,   985,
     986,   987,   988,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   989,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   990,
     991,   992,   246,   993,   994,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,  3081,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     995,   291,   292,   293,   294,   295,   996,   297,   997,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     998,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   999,  1000,   333,   334,   335,  1001,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,  1002,   375,  1003,   377,   378,
     379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,
     389,   390,   391,   392,  1008,  1009,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,  1010,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,  1011,   425,   426,   427,   428,
     429,  1012,  1013,   432,   433,   434,   435,   436,   437,  1014,
     439,   440,   441,   442,   443,   444,  1015,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,  1016,   476,   477,   478,
     479,   480,  1017,  1018,   483,   484,   485,   486,   487,  1019,
     489,   490,   491,   492,   493,   494,  1020,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,  1021,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,
     548,  1026,  1027,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,  1028,   565,  1029,   567,
     568,   569,   570,   571,   572,   573,   574,   575,  1030,  1031,
     578,  1032,   580,   581,   582,     0,   583,   584,   585,  1033,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,  2248,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,     0,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,  2249,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,  1034,  1035,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,
    1041,   900,   901,   902,   903,   904,     0,     0,     0,  2154,
       0,     0,     0,   905,   906,     0,   907,     0,     0,     0,
       0,     0,     0,   908,   909,     0,     0,   910,   911,   912,
     913,     0,   914,   915,     0,   916,   917,     0,     0,     0,
       0,   918,     0,     0,     0,   919,     0,     0,   920,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   921,   922,
     923,     0,   924,   925,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   926,   927,   928,     0,   929,
     930,     0,     0,     0,   931,   932,   933,     0,     0,     0,
       0,     0,     0,     0,   934,     0,   935,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2155,     0,   936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,   938,   939,     0,   940,     0,
       0,     0,     0,     0,   941,     0,   942,     0,     0,   943,
       0,     0,   944,   945,   946,     0,   947,   948,   949,     0,
     950,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   951,     0,     0,     0,   952,
     953,   954,   955,     0,     0,     0,     0,     0,     0,   956,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     957,   958,     0,     0,     0,     0,     0,     0,     0,   959,
       0,     0,   960,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   961,     0,     0,     0,     0,     0,   962,   963,
       0,   964,   965,   966,     0,     0,     0,   967,     0,     0,
       0,     0,     0,  2156,     0,   968,   969,   970,   971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,   975,     0,   976,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   977,   171,   172,   173,   174,   175,   176,   978,   178,
     179,   180,   181,   182,   183,   184,   979,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   980,   201,   202,   203,   204,   205,   206,   207,
     208,   981,   210,   982,   983,   212,   984,   985,   986,   987,
     988,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   989,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   990,   991,   992,
     246,   993,   994,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   995,   291,
     292,   293,   294,   295,   996,   297,   997,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   998,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     999,  1000,   333,   334,   335,  1001,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,  1002,   375,  1003,   377,   378,   379,   380,
    1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,   390,
     391,   392,  1008,  1009,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,  1010,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,  1011,   425,   426,   427,   428,   429,  1012,
    1013,   432,   433,   434,   435,   436,   437,  1014,   439,   440,
     441,   442,   443,   444,  1015,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,  1016,   476,   477,   478,   479,   480,
    1017,  1018,   483,   484,   485,   486,   487,  1019,   489,   490,
     491,   492,   493,   494,  1020,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,  1021,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,
    1027,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,  1028,   565,  1029,   567,   568,   569,
     570,   571,   572,   573,   574,   575,  1030,  1031,   578,  1032,
     580,   581,   582,     0,   583,   584,   585,  1033,     0,     0,
       0,     0,     0,     0,     0,     0,  1034,  1035,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,     0,     0,  1038,
    1039,     0,     0,  1040,  1041,   900,   901,   902,   903,   904,
       0,     0,     0,     0,     0,     0,     0,   905,   906,     0,
     907,     0,     0,     0,     0,     0,     0,   908,   909,     0,
       0,   910,   911,   912,   913,     0,   914,   915,     0,   916,
     917,     0,     0,     0,     0,   918,     0,     0,     0,   919,
       0,     0,   920,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   921,   922,   923,     0,   924,   925,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   926,
     927,   928,     0,   929,   930,     0,     0,     0,   931,   932,
     933,     0,     0,     0,     0,     0,     0,     0,   934,     0,
     935,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   936,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   937,     0,     0,     0,     0,   938,
     939,     0,   940,     0,     0,     0,     0,     0,   941,     0,
     942,     0,     0,   943,     0,     0,   944,   945,   946,     0,
     947,   948,   949,     0,   950,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   951,
       0,     0,     0,   952,   953,   954,   955,     0,     0,     0,
       0,     0,     0,   956,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   957,   958,     0,     0,     0,     0,
       0,     0,     0,   959,     0,     0,   960,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   961,     0,     0,     0,
       0,     0,   962,   963,     0,   964,   965,   966,     0,     0,
       0,   967,     0,     0,     0,     0,     0,     0,     0,   968,
     969,   970,   971,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   972,   973,   974,     0,     0,     0,     0,     0,
     975,     0,   976,  1448,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   977,   171,   172,   173,   174,
     175,   176,   978,   178,   179,   180,   181,   182,   183,   184,
     979,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   980,   201,   202,   203,
     204,   205,   206,   207,   208,   981,   210,   982,   983,   212,
     984,   985,   986,   987,   988,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   989,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   990,   991,   992,   246,   993,   994,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   995,   291,   292,   293,   294,   295,   996,   297,
     997,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   998,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   999,  1000,   333,   334,   335,  1001,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,  1002,   375,  1003,
     377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,
     387,   388,   389,   390,   391,   392,  1008,  1009,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,  1010,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,  1011,   425,   426,
     427,   428,   429,  1012,  1013,   432,   433,   434,   435,   436,
     437,  1014,   439,   440,   441,   442,   443,   444,  1015,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,  1016,   476,
     477,   478,   479,   480,  1017,  1018,   483,   484,   485,   486,
     487,  1019,   489,   490,   491,   492,   493,   494,  1020,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,  1021,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,
     546,   547,   548,  1026,  1027,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,  1028,   565,
    1029,   567,   568,   569,   570,   571,   572,   573,   574,   575,
    1030,  1031,   578,  1032,   580,   581,   582,     0,   583,   584,
     585,  1033,     0,     0,     0,     0,     0,     0,     0,     0,
    1034,  1035,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,
     901,   902,   903,   904,     0,     0,     0,     0,     0,     0,
       0,   905,   906,     0,   907,     0,     0,     0,     0,     0,
       0,   908,   909,     0,     0,   910,   911,   912,   913,     0,
     914,   915,     0,   916,   917,     0,     0,     0,     0,   918,
       0,     0,     0,   919,     0,     0,   920,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   921,   922,   923,     0,
     924,   925,     0,     0,     0,     0,     0,  2823,     0,     0,
       0,     0,     0,   926,   927,   928,     0,   929,   930,     0,
       0,     0,   931,   932,   933,     0,     0,     0,     0,     0,
       0,     0,   934,     0,   935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   936,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   937,     0,
       0,     0,     0,   938,   939,     0,   940,     0,     0,     0,
       0,     0,   941,     0,   942,     0,     0,   943,     0,     0,
     944,   945,   946,     0,   947,   948,   949,     0,   950,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   951,     0,     0,     0,   952,   953,   954,
     955,     0,     0,     0,     0,     0,     0,   956,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   957,   958,
       0,     0,     0,     0,     0,     0,     0,   959,     0,     0,
     960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     961,     0,     0,     0,     0,     0,   962,   963,     0,   964,
     965,   966,     0,     0,     0,   967,     0,     0,     0,     0,
       0,     0,     0,   968,   969,   970,   971,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   972,   973,   974,     0,
       0,     0,     0,     0,   975,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   977,
     171,   172,   173,   174,   175,   176,   978,   178,   179,   180,
     181,   182,   183,   184,   979,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     980,   201,   202,   203,   204,   205,   206,   207,   208,   981,
     210,   982,   983,   212,   984,   985,   986,   987,   988,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   989,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   990,   991,   992,   246,   993,
     994,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   995,   291,   292,   293,
     294,   295,   996,   297,   997,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   998,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   999,  1000,
     333,   334,   335,  1001,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,  1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,
    1006,  1007,   385,   386,   387,   388,   389,   390,   391,   392,
    1008,  1009,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,  1010,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,  1011,   425,   426,   427,   428,   429,  1012,  1013,   432,
     433,   434,   435,   436,   437,  1014,   439,   440,   441,   442,
     443,   444,  1015,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,  1016,   476,   477,   478,   479,   480,  1017,  1018,
     483,   484,   485,   486,   487,  1019,   489,   490,   491,   492,
     493,   494,  1020,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,  1021,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
    1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,  1028,   565,  1029,   567,   568,   569,   570,   571,
     572,   573,   574,   575,  1030,  1031,   578,  1032,   580,   581,
     582,     0,   583,   584,   585,  1033,     0,     0,     0,     0,
       0,     0,     0,     0,  1034,  1035,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,     0,
       0,  1040,  1041,   900,   901,   902,   903,   904,     0,     0,
       0,     0,     0,     0,     0,   905,   906,     0,   907,     0,
       0,     0,     0,     0,     0,   908,   909,     0,     0,   910,
     911,   912,   913,     0,   914,   915,     0,   916,   917,     0,
       0,     0,     0,   918,     0,     0,     0,   919,     0,     0,
     920,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     921,   922,   923,     0,   924,   925,     0,     0,     0,     0,
       0,  2825,     0,     0,     0,     0,     0,   926,   927,   928,
       0,   929,   930,     0,     0,     0,   931,   932,   933,     0,
       0,     0,     0,     0,     0,     0,   934,     0,   935,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   936,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   937,     0,     0,     0,     0,   938,   939,     0,
     940,     0,     0,     0,     0,     0,   941,     0,   942,     0,
       0,   943,     0,     0,   944,   945,   946,     0,   947,   948,
     949,     0,   950,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   951,     0,     0,
       0,   952,   953,   954,   955,     0,     0,     0,     0,     0,
       0,   956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   957,   958,     0,     0,     0,     0,     0,     0,
       0,   959,     0,     0,   960,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   961,     0,     0,     0,     0,     0,
     962,   963,     0,   964,   965,   966,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,   968,   969,   970,
     971,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     972,   973,   974,     0,     0,     0,     0,     0,   975,     0,
     976,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   977,   171,   172,   173,   174,   175,   176,
     978,   178,   179,   180,   181,   182,   183,   184,   979,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   980,   201,   202,   203,   204,   205,
     206,   207,   208,   981,   210,   982,   983,   212,   984,   985,
     986,   987,   988,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   989,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   990,
     991,   992,   246,   993,   994,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     995,   291,   292,   293,   294,   295,   996,   297,   997,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     998,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   999,  1000,   333,   334,   335,  1001,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,  1002,   375,  1003,   377,   378,
     379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,
     389,   390,   391,   392,  1008,  1009,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,  1010,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,  1011,   425,   426,   427,   428,
     429,  1012,  1013,   432,   433,   434,   435,   436,   437,  1014,
     439,   440,   441,   442,   443,   444,  1015,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,  1016,   476,   477,   478,
     479,   480,  1017,  1018,   483,   484,   485,   486,   487,  1019,
     489,   490,   491,   492,   493,   494,  1020,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,  1021,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,
     548,  1026,  1027,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,  1028,   565,  1029,   567,
     568,   569,   570,   571,   572,   573,   574,   575,  1030,  1031,
     578,  1032,   580,   581,   582,     0,   583,   584,   585,  1033,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,  2827,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,  1034,  1035,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,
    1041,   900,   901,   902,   903,   904,     0,     0,     0,     0,
       0,     0,     0,   905,   906,     0,   907,     0,     0,     0,
       0,     0,     0,   908,   909,     0,     0,   910,   911,   912,
     913,     0,   914,   915,     0,   916,   917,     0,     0,     0,
       0,   918,     0,     0,     0,  3077,     0,     0,   920,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   921,   922,
     923,     0,   924,   925,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   926,   927,   928,     0,   929,
     930,     0,     0,     0,   931,   932,   933,     0,  3078,     0,
       0,     0,     0,     0,   934,     0,   935,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,   938,   939,     0,   940,     0,
       0,     0,     0,     0,   941,     0,   942,     0,     0,   943,
       0,     0,   944,   945,   946,     0,   947,   948,   949,     0,
     950,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   951,     0,     0,     0,   952,
     953,   954,   955,     0,     0,     0,     0,     0,     0,   956,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     957,   958,     0,     0,     0,     0,     0,     0,     0,   959,
       0,     0,   960,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   961,     0,     0,     0,     0,     0,   962,   963,
       0,   964,   965,   966,     0,     0,     0,   967,     0,     0,
       0,     0,     0,     0,     0,   968,   969,   970,   971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,   975,     0,   976,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   977,   171,   172,   173,   174,   175,   176,   978,   178,
     179,   180,   181,   182,   183,   184,   979,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   980,   201,   202,   203,   204,   205,   206,   207,
     208,   981,   210,   982,   983,   212,   984,   985,   986,   987,
     988,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   989,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   990,   991,   992,
     246,   993,   994,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   995,   291,
     292,   293,   294,   295,   996,   297,   997,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   998,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     999,  1000,   333,   334,   335,  1001,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,  1002,   375,  1003,   377,   378,   379,   380,
    1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,   390,
     391,   392,  1008,  1009,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,  1010,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,  1011,   425,   426,   427,   428,   429,  1012,
    1013,   432,   433,   434,   435,   436,   437,  1014,   439,   440,
     441,   442,   443,   444,  1015,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,  1016,   476,   477,   478,   479,   480,
    1017,  1018,   483,   484,   485,   486,   487,  1019,   489,   490,
     491,   492,   493,   494,  1020,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,  1021,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,
    1027,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,  1028,   565,  1029,   567,   568,   569,
     570,   571,   572,   573,   574,   575,  1030,  1031,   578,  1032,
     580,   581,   582,     0,   583,   584,   585,  1033,     0,     0,
       0,     0,     0,     0,     0,     0,  1034,  1035,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,     0,     0,  1038,
    1039,     0,     0,  1040,  1041,   900,   901,   902,   903,   904,
       0,     0,     0,     0,     0,     0,     0,   905,   906,     0,
     907,     0,     0,     0,     0,     0,     0,   908,   909,     0,
       0,   910,   911,   912,   913,     0,   914,   915,     0,   916,
     917,     0,     0,     0,     0,   918,     0,     0,     0,  4682,
       0,     0,   920,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   921,   922,   923,     0,   924,   925,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   926,
     927,   928,     0,   929,   930,     0,     0,     0,   931,   932,
     933,     0,  3078,     0,     0,     0,     0,     0,   934,     0,
     935,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   936,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   937,     0,     0,     0,     0,   938,
     939,     0,   940,     0,     0,     0,     0,     0,   941,     0,
     942,     0,     0,   943,     0,     0,   944,   945,   946,     0,
     947,   948,   949,     0,   950,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   951,
       0,     0,     0,   952,   953,   954,   955,     0,     0,     0,
       0,     0,     0,   956,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   957,   958,     0,     0,     0,     0,
       0,     0,     0,   959,     0,     0,   960,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   961,     0,     0,     0,
       0,     0,   962,   963,     0,   964,   965,   966,     0,     0,
       0,   967,     0,     0,     0,     0,     0,     0,     0,   968,
     969,   970,   971,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   972,   973,   974,     0,     0,     0,     0,     0,
     975,     0,   976,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   977,   171,   172,   173,   174,
     175,   176,   978,   178,   179,   180,   181,   182,   183,   184,
     979,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   980,   201,   202,   203,
     204,   205,   206,   207,   208,   981,   210,   982,   983,   212,
     984,   985,   986,   987,   988,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   989,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   990,   991,   992,   246,   993,   994,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   995,   291,   292,   293,   294,   295,   996,   297,
     997,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   998,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   999,  1000,   333,   334,   335,  1001,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,  1002,   375,  1003,
     377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,
     387,   388,   389,   390,   391,   392,  1008,  1009,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,  1010,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,  1011,   425,   426,
     427,   428,   429,  1012,  1013,   432,   433,   434,   435,   436,
     437,  1014,   439,   440,   441,   442,   443,   444,  1015,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,  1016,   476,
     477,   478,   479,   480,  1017,  1018,   483,   484,   485,   486,
     487,  1019,   489,   490,   491,   492,   493,   494,  1020,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,  1021,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,
     546,   547,   548,  1026,  1027,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,  1028,   565,
    1029,   567,   568,   569,   570,   571,   572,   573,   574,   575,
    1030,  1031,   578,  1032,   580,   581,   582,     0,   583,   584,
     585,  1033,     0,     0,     0,     0,     0,     0,     0,     0,
    1034,  1035,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,
     901,   902,   903,   904,     0,     0,     0,     0,     0,     0,
       0,   905,   906,     0,   907,     0,     0,     0,     0,     0,
       0,   908,   909,     0,     0,   910,   911,   912,   913,     0,
     914,   915,     0,   916,   917,     0,     0,     0,     0,   918,
       0,     0,     0,   919,     0,     0,   920,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   921,   922,   923,     0,
     924,   925,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   926,   927,   928,     0,   929,   930,     0,
       0,     0,   931,   932,   933,     0,     0,     0,     0,     0,
       0,     0,   934,     0,   935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   936,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   937,     0,
       0,     0,     0,   938,   939,     0,   940,     0,     0,     0,
       0,     0,   941,     0,   942,     0,     0,   943,     0,     0,
     944,   945,   946,     0,   947,   948,   949,     0,   950,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   951,     0,     0,     0,   952,   953,   954,
     955,     0,     0,     0,     0,     0,     0,   956,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   957,   958,
       0,     0,     0,     0,     0,     0,     0,   959,     0,     0,
     960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     961,     0,     0,     0,     0,     0,   962,   963,     0,   964,
     965,   966,     0,     0,     0,   967,     0,     0,     0,     0,
       0,     0,     0,   968,   969,   970,   971,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   972,   973,   974,     0,
       0,     0,     0,     0,   975,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   977,
     171,   172,   173,   174,   175,   176,   978,   178,   179,   180,
     181,   182,   183,   184,   979,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     980,   201,   202,   203,   204,   205,   206,   207,   208,   981,
     210,   982,   983,   212,   984,   985,   986,   987,   988,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   989,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   990,   991,   992,   246,   993,
     994,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   995,   291,   292,   293,
     294,   295,   996,   297,   997,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   998,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   999,  1000,
     333,   334,   335,  1001,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,  1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,
    1006,  1007,   385,   386,   387,   388,   389,   390,   391,   392,
    1008,  1009,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,  1010,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,  1011,   425,   426,   427,   428,   429,  1012,  1013,   432,
     433,   434,   435,   436,   437,  1014,   439,   440,   441,   442,
     443,   444,  1015,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,  1016,   476,   477,   478,   479,   480,  1017,  1018,
     483,   484,   485,   486,   487,  1019,   489,   490,   491,   492,
     493,   494,  1020,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,  1021,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
    1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,  1028,   565,  1029,   567,   568,   569,   570,   571,
     572,   573,   574,   575,  1030,  1031,   578,  1032,   580,   581,
     582,     0,   583,   584,   585,  1033,     0,     0,     0,     0,
       0,     0,     0,     0,  1034,  1035,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,     0,
       0,  1040,  1041,   900,   901,   902,   903,   904,     0,     0,
       0,     0,     0,     0,     0,   905,   906,     0,   907,     0,
       0,     0,     0,     0,     0,   908,   909,     0,     0,   910,
     911,   912,   913,     0,   914,   915,     0,   916,   917,     0,
       0,     0,     0,   918,     0,     0,     0,   919,     0,     0,
     920,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     921,   922,   923,     0,   924,   925,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   926,   927,   928,
       0,   929,   930,     0,     0,     0,   931,   932,   933,     0,
       0,     0,     0,     0,     0,     0,   934,     0,   935,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   936,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   937,     0,     0,     0,     0,   938,   939,     0,
     940,     0,     0,     0,     0,     0,   941,     0,   942,     0,
       0,   943,     0,     0,   944,   945,   946,     0,   947,   948,
     949,     0,   950,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   951,     0,     0,
       0,   952,   953,   954,   955,     0,     0,     0,     0,     0,
       0,   956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   957,   958,     0,     0,     0,     0,     0,     0,
       0,   959,     0,     0,   960,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   961,     0,     0,     0,     0,     0,
     962,   963,     0,   964,   965,   966,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,   968,   969,   970,
     971,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     972,   973,   974,     0,     0,     0,     0,     0,   975,     0,
     976,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   977,   171,   172,   173,   174,   175,   176,
     978,   178,   179,   180,   181,   182,   183,   184,   979,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   980,   201,   202,   203,   204,   205,
     206,   207,   208,   981,   210,   982,   983,   212,   984,   985,
     986,   987,   988,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   989,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   990,
     991,   992,   246,   993,   994,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     995,   291,   292,   293,   294,   295,   996,   297,   997,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     998,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   999,  1000,   333,   334,   335,  1001,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,  1002,   375,  1003,   377,   378,
     379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,
     389,   390,   391,   392,  1008,  1009,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,  1010,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,  1011,   425,   426,   427,   428,
     429,  1012,  1013,   432,   433,   434,   435,   436,   437,  1014,
     439,   440,   441,   442,   443,   444,  1015,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,  1016,   476,   477,   478,
     479,   480,  1017,  1018,   483,   484,   485,   486,   487,  1019,
     489,   490,   491,   492,   493,   494,  1020,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,  1021,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,
     548,  1026,  1027,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,  1028,   565,  1029,   567,
     568,   569,   570,   571,   572,   573,   574,   575,  1030,  1031,
     578,  1032,   580,   581,   582,     0,   583,   584,   585,  1033,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1475,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,  2025,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    2026,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,  1034,  1035,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,
    1041,   900,   901,   902,   903,   904,     0,     0,     0,     0,
       0,     0,     0,   905,   906,     0,   907,     0,     0,     0,
       0,     0,     0,   908,   909,     0,     0,   910,   911,   912,
     913,     0,   914,   915,     0,   916,   917,     0,     0,     0,
       0,   918,     0,     0,     0,   919,     0,     0,   920,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   921,   922,
     923,     0,   924,   925,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   926,   927,   928,     0,   929,
     930,     0,     0,     0,   931,   932,   933,     0,     0,     0,
       0,     0,     0,     0,   934,     0,   935,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,   938,   939,     0,   940,     0,
       0,     0,     0,     0,   941,     0,   942,     0,     0,   943,
       0,     0,   944,   945,   946,     0,   947,   948,   949,     0,
     950,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   951,     0,     0,     0,   952,
     953,   954,   955,     0,     0,     0,     0,     0,     0,   956,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     957,   958,     0,     0,     0,     0,     0,     0,     0,   959,
       0,     0,   960,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   961,     0,     0,     0,     0,     0,   962,   963,
       0,   964,   965,   966,     0,     0,     0,   967,     0,     0,
       0,     0,     0,     0,     0,   968,   969,   970,   971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,   975,     0,   976,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   977,   171,   172,   173,   174,   175,   176,   978,   178,
     179,   180,   181,   182,   183,   184,   979,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   980,   201,   202,   203,   204,   205,   206,   207,
     208,   981,   210,   982,   983,   212,   984,   985,   986,   987,
     988,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   989,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   990,   991,   992,
     246,   993,   994,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   995,   291,
     292,   293,   294,   295,   996,   297,   997,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   998,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     999,  1000,   333,   334,   335,  1001,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,  1002,   375,  1003,   377,   378,   379,   380,
    1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,   390,
     391,   392,  1008,  1009,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,  1010,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,  1011,   425,   426,   427,   428,   429,  1012,
    1013,   432,   433,   434,   435,   436,   437,  1014,   439,   440,
     441,   442,   443,   444,  1015,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,  1016,   476,   477,   478,   479,   480,
    1017,  1018,   483,   484,   485,   486,   487,  1019,   489,   490,
     491,   492,   493,   494,  1020,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,  1021,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,
    1027,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,  2026,   565,  1029,   567,   568,   569,
     570,   571,   572,   573,   574,   575,  1030,  1031,   578,  1032,
     580,   581,   582,     0,   583,   584,   585,  1033,     0,     0,
       0,     0,     0,     0,     0,     0,  1034,  1035,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,     0,     0,  1038,
    1039,     0,     0,  1040,  1041,   900,   901,   902,   903,   904,
       0,     0,     0,     0,     0,     0,     0,   905,   906,     0,
     907,     0,     0,     0,     0,     0,     0,   908,   909,     0,
       0,   910,   911,   912,   913,     0,   914,   915,     0,   916,
     917,     0,     0,     0,     0,   918,     0,     0,     0,   919,
       0,     0,   920,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   921,   922,   923,     0,   924,   925,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   926,
     927,   928,     0,   929,   930,     0,     0,     0,   931,   932,
     933,     0,     0,     0,     0,     0,     0,     0,   934,     0,
    3449,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   936,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   937,     0,     0,     0,     0,   938,
     939,     0,   940,     0,     0,     0,     0,     0,   941,     0,
     942,     0,     0,   943,     0,     0,   944,   945,   946,     0,
     947,   948,   949,     0,   950,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   951,
       0,     0,     0,   952,   953,   954,   955,     0,     0,     0,
       0,     0,     0,   956,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   957,   958,     0,     0,     0,     0,
       0,     0,     0,   959,     0,     0,   960,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   961,     0,     0,     0,
       0,     0,   962,   963,     0,   964,   965,   966,     0,     0,
       0,   967,     0,     0,     0,     0,     0,     0,     0,   968,
     969,   970,   971,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   972,   973,   974,     0,     0,     0,     0,     0,
     975,     0,   976,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   977,   171,   172,   173,   174,
     175,   176,   978,   178,   179,   180,   181,   182,   183,   184,
     979,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   980,   201,   202,   203,
     204,   205,   206,   207,   208,   981,   210,   982,   983,   212,
     984,   985,   986,   987,   988,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   989,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   990,   991,   992,   246,   993,   994,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   995,   291,   292,   293,   294,   295,   996,   297,
     997,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   998,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   999,  1000,   333,   334,   335,  1001,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,  1002,   375,  1003,
     377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,
     387,   388,   389,   390,   391,   392,  1008,  1009,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,  1010,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,  1011,   425,   426,
     427,   428,   429,  1012,  1013,   432,   433,   434,   435,   436,
     437,  1014,   439,   440,   441,   442,   443,   444,  1015,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,  1016,   476,
     477,   478,   479,   480,  1017,  1018,   483,   484,   485,   486,
     487,  1019,   489,   490,   491,   492,   493,   494,  1020,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,  1021,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,
     546,   547,   548,  1026,  1027,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,  1028,   565,
    1029,   567,   568,   569,   570,   571,   572,   573,   574,   575,
    1030,  1031,   578,  1032,   580,   581,   582,     0,   583,   584,
     585,  1033,     0,     0,     0,     0,     0,     0,     0,     0,
    1034,  1035,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,
     901,   902,   903,   904,     0,     0,     0,     0,     0,     0,
       0,   905,   906,     0,   907,     0,     0,     0,     0,     0,
       0,   908,   909,     0,     0,   910,   911,   912,   913,     0,
     914,   915,     0,   916,   917,     0,     0,     0,     0,   918,
       0,     0,     0,   919,     0,     0,   920,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   921,   922,   923,     0,
     924,   925,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   926,   927,   928,     0,   929,   930,     0,
       0,     0,   931,   932,   933,     0,     0,     0,     0,     0,
       0,     0,   934,     0,  3471,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   936,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   937,     0,
       0,     0,     0,   938,   939,     0,   940,     0,     0,     0,
       0,     0,   941,     0,   942,     0,     0,   943,     0,     0,
     944,   945,   946,     0,   947,   948,   949,     0,   950,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   951,     0,     0,     0,   952,   953,   954,
     955,     0,     0,     0,     0,     0,     0,   956,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   957,   958,
       0,     0,     0,     0,     0,     0,     0,   959,     0,     0,
     960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     961,     0,     0,     0,     0,     0,   962,   963,     0,   964,
     965,   966,     0,     0,     0,   967,     0,     0,     0,     0,
       0,     0,     0,   968,   969,   970,   971,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   972,   973,   974,     0,
       0,     0,     0,     0,   975,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   977,
     171,   172,   173,   174,   175,   176,   978,   178,   179,   180,
     181,   182,   183,   184,   979,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     980,   201,   202,   203,   204,   205,   206,   207,   208,   981,
     210,   982,   983,   212,   984,   985,   986,   987,   988,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   989,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   990,   991,   992,   246,   993,
     994,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   995,   291,   292,   293,
     294,   295,   996,   297,   997,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   998,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   999,  1000,
     333,   334,   335,  1001,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,  1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,
    1006,  1007,   385,   386,   387,   388,   389,   390,   391,   392,
    1008,  1009,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,  1010,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,  1011,   425,   426,   427,   428,   429,  1012,  1013,   432,
     433,   434,   435,   436,   437,  1014,   439,   440,   441,   442,
     443,   444,  1015,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,  1016,   476,   477,   478,   479,   480,  1017,  1018,
     483,   484,   485,   486,   487,  1019,   489,   490,   491,   492,
     493,   494,  1020,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,  1021,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
    1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,  1028,   565,  1029,   567,   568,   569,   570,   571,
     572,   573,   574,   575,  1030,  1031,   578,  1032,   580,   581,
     582,     0,   583,   584,   585,  1033,     0,     0,     0,     0,
       0,     0,     0,     0,  1034,  1035,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,     0,
       0,  1040,  1041,   900,   901,   902,   903,   904,     0,     0,
       0,     0,     0,     0,     0,   905,   906,     0,   907,     0,
       0,     0,     0,     0,     0,   908,   909,     0,     0,   910,
     911,   912,   913,     0,   914,   915,     0,   916,   917,     0,
       0,     0,     0,   918,     0,     0,     0,   919,     0,     0,
     920,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     921,   922,   923,     0,   924,   925,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   926,   927,   928,
       0,   929,   930,     0,     0,     0,   931,   932,   933,     0,
       0,     0,     0,     0,     0,     0,   934,     0,   935,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   936,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   937,     0,     0,     0,     0,   938,   939,  5857,
     940,     0,     0,     0,     0,     0,   941,     0,   942,     0,
       0,   943,     0,     0,   944,     0,   946,     0,   947,   948,
     949,     0,   950,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   951,     0,     0,
       0,   952,   953,   954,   955,     0,     0,     0,     0,     0,
       0,   956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   957,   958,     0,     0,     0,     0,     0,     0,
       0,   959,     0,     0,   960,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   961,     0,     0,     0,     0,     0,
     962,   963,     0,   964,   965,   966,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,   968,   969,   970,
     971,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     972,   973,   974,     0,     0,     0,     0,     0,   975,     0,
     976,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   977,   171,   172,   173,   174,   175,   176,
     978,   178,   179,   180,   181,   182,   183,   184,   979,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   980,   201,   202,   203,   204,   205,
     206,   207,   208,   981,   210,   982,   983,   212,   984,   985,
     986,   987,   988,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   989,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   990,
     991,   992,   246,   993,   994,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     995,   291,   292,   293,   294,   295,   996,   297,   997,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     998,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   999,  1000,   333,   334,   335,  1001,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,  1002,   375,  1003,   377,   378,
     379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,
     389,   390,   391,   392,  1008,  1009,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,  1010,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,  1011,   425,   426,   427,   428,
     429,  1012,  1013,   432,   433,   434,   435,   436,   437,  1014,
     439,   440,   441,   442,   443,   444,  1015,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,  1016,   476,   477,   478,
     479,   480,  1017,  1018,   483,   484,   485,   486,   487,  1019,
     489,   490,   491,   492,   493,   494,  1020,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,  1021,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,
     548,  1026,  1027,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,  1028,   565,  1029,   567,
     568,   569,   570,   571,   572,   573,   574,   575,  1030,  1031,
     578,  1032,   580,   581,   582,     0,   583,   584,   585,  1033,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,  1441,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,     0,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,  1442,  1443,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,
    1041,   900,   901,   902,   903,   904,     0,     0,     0,     0,
       0,     0,     0,   905,   906,     0,   907,     0,     0,     0,
       0,     0,     0,   908,   909,     0,     0,   910,   911,   912,
     913,     0,   914,   915,     0,   916,   917,     0,     0,     0,
       0,   918,     0,     0,     0,   919,     0,     0,   920,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   921,   922,
     923,     0,   924,   925,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   926,   927,   928,     0,   929,
     930,     0,     0,     0,   931,   932,   933,     0,     0,     0,
       0,     0,     0,     0,   934,     0,  1579,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,   938,   939,     0,   940,     0,
       0,     0,     0,     0,   941,     0,   942,     0,     0,   943,
       0,     0,   944,     0,   946,     0,   947,   948,   949,     0,
     950,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   951,     0,     0,     0,   952,
     953,   954,   955,     0,     0,     0,     0,     0,     0,   956,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     957,   958,     0,     0,     0,     0,     0,     0,     0,   959,
       0,     0,   960,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   961,     0,     0,     0,     0,     0,   962,   963,
       0,   964,   965,   966,     0,     0,     0,   967,     0,     0,
       0,     0,     0,     0,     0,   968,   969,   970,   971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,   975,     0,   976,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   977,   171,   172,   173,   174,   175,   176,   978,   178,
     179,   180,   181,   182,   183,   184,   979,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   980,   201,   202,   203,   204,   205,   206,   207,
     208,   981,   210,   982,   983,   212,   984,   985,   986,   987,
     988,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   989,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   990,   991,   992,
     246,   993,   994,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   995,   291,
     292,   293,   294,   295,   996,   297,   997,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   998,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     999,  1000,   333,   334,   335,  1001,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,  1002,   375,  1003,   377,   378,   379,   380,
    1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,   390,
     391,   392,  1008,  1009,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,  1010,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,  1011,   425,   426,   427,   428,   429,  1012,
    1013,   432,   433,   434,   435,   436,   437,  1014,   439,   440,
     441,   442,   443,   444,  1015,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,  1016,   476,   477,   478,   479,   480,
    1017,  1018,   483,   484,   485,   486,   487,  1019,   489,   490,
     491,   492,   493,   494,  1020,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,  1021,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,
    1027,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,  1028,   565,  1029,   567,   568,   569,
     570,   571,   572,   573,   574,   575,  1030,  1031,   578,  1032,
     580,   581,   582,     0,   583,   584,   585,  1033,     0,     0,
       0,     0,     0,     0,     0,     0,  1442,  1443,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,     0,     0,  1038,
    1039,     0,     0,  1040,  1041,   900,   901,   902,   903,   904,
       0,     0,     0,     0,     0,     0,     0,   905,   906,     0,
     907,     0,     0,     0,     0,     0,     0,   908,   909,     0,
       0,   910,   911,   912,   913,     0,   914,   915,     0,   916,
     917,     0,     0,     0,     0,   918,     0,     0,     0,   919,
       0,     0,   920,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   921,   922,   923,     0,   924,   925,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   926,
     927,   928,     0,   929,   930,     0,     0,     0,   931,   932,
     933,     0,     0,     0,     0,     0,     0,     0,   934,     0,
    1581,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   936,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   937,     0,     0,     0,     0,   938,
     939,     0,   940,     0,     0,     0,     0,     0,   941,     0,
     942,     0,     0,   943,     0,     0,   944,     0,   946,     0,
     947,   948,   949,     0,   950,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   951,
       0,     0,     0,   952,   953,   954,   955,     0,     0,     0,
       0,     0,     0,   956,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   957,   958,     0,     0,     0,     0,
       0,     0,     0,   959,     0,     0,   960,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   961,     0,     0,     0,
       0,     0,   962,   963,     0,   964,   965,   966,     0,     0,
       0,   967,     0,     0,     0,     0,     0,     0,     0,   968,
     969,   970,   971,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   972,   973,   974,     0,     0,     0,     0,     0,
     975,     0,   976,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   977,   171,   172,   173,   174,
     175,   176,   978,   178,   179,   180,   181,   182,   183,   184,
     979,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   980,   201,   202,   203,
     204,   205,   206,   207,   208,   981,   210,   982,   983,   212,
     984,   985,   986,   987,   988,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   989,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   990,   991,   992,   246,   993,   994,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   995,   291,   292,   293,   294,   295,   996,   297,
     997,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   998,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   999,  1000,   333,   334,   335,  1001,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,  1002,   375,  1003,
     377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,
     387,   388,   389,   390,   391,   392,  1008,  1009,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,  1010,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,  1011,   425,   426,
     427,   428,   429,  1012,  1013,   432,   433,   434,   435,   436,
     437,  1014,   439,   440,   441,   442,   443,   444,  1015,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,  1016,   476,
     477,   478,   479,   480,  1017,  1018,   483,   484,   485,   486,
     487,  1019,   489,   490,   491,   492,   493,   494,  1020,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,  1021,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,
     546,   547,   548,  1026,  1027,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,  1028,   565,
    1029,   567,   568,   569,   570,   571,   572,   573,   574,   575,
    1030,  1031,   578,  1032,   580,   581,   582,     0,   583,   584,
     585,  1033,     0,     0,     0,     0,     0,     0,     0,     0,
    1442,  1443,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,
     901,   902,   903,   904,     0,     0,     0,     0,     0,     0,
       0,   905,   906,     0,   907,     0,     0,     0,     0,     0,
       0,   908,   909,     0,     0,   910,   911,   912,   913,     0,
     914,   915,     0,   916,   917,     0,     0,     0,     0,   918,
       0,     0,     0,   919,     0,     0,   920,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   921,   922,   923,     0,
     924,   925,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   926,   927,   928,     0,   929,   930,     0,
       0,     0,   931,   932,   933,     0,     0,     0,     0,     0,
       0,     0,   934,     0,   935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   936,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   937,     0,
       0,     0,     0,   938,   939,     0,   940,     0,     0,     0,
       0,     0,   941,     0,   942,     0,     0,   943,     0,     0,
     944,     0,   946,     0,   947,   948,   949,     0,   950,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   951,     0,     0,     0,   952,   953,   954,
     955,     0,     0,     0,     0,     0,     0,   956,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   957,   958,
       0,     0,     0,     0,     0,     0,     0,   959,     0,     0,
     960,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     961,     0,     0,     0,     0,     0,   962,   963,     0,   964,
     965,   966,     0,     0,     0,   967,     0,     0,     0,     0,
       0,     0,     0,   968,   969,   970,   971,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   972,   973,   974,     0,
       0,     0,     0,     0,   975,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   977,
     171,   172,   173,   174,   175,   176,   978,   178,   179,   180,
     181,   182,   183,   184,   979,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     980,   201,   202,   203,   204,   205,   206,   207,   208,   981,
     210,   982,   983,   212,   984,   985,   986,   987,   988,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   989,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   990,   991,   992,   246,   993,
     994,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   995,   291,   292,   293,
     294,   295,   996,   297,   997,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   998,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   999,  1000,
     333,   334,   335,  1001,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,  1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,
    1006,  1007,   385,   386,   387,   388,   389,   390,   391,   392,
    1008,  1009,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,  1010,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,  1011,   425,   426,   427,   428,   429,  1012,  1013,   432,
     433,   434,   435,   436,   437,  1014,   439,   440,   441,   442,
     443,   444,  1015,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,  1016,   476,   477,   478,   479,   480,  1017,  1018,
     483,   484,   485,   486,   487,  1019,   489,   490,   491,   492,
     493,   494,  1020,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,  1021,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
    1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,  1028,   565,  1029,   567,   568,   569,   570,   571,
     572,   573,   574,   575,  1030,  1031,   578,  1032,   580,   581,
     582,     0,   583,   584,   585,  1033,     0,     0,     0,     0,
       0,     0,     0,     0,  1034,  1035,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,     0,
       0,  1040,  1041,   900,   901,   902,   903,   904,     0,     0,
       0,     0,     0,     0,     0,   905,   906,     0,   907,     0,
       0,     0,     0,     0,     0,   908,   909,     0,     0,   910,
     911,   912,   913,     0,   914,   915,     0,   916,   917,     0,
       0,     0,     0,   918,     0,     0,     0,   919,     0,     0,
     920,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     921,   922,   923,     0,   924,   925,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   926,   927,   928,
       0,   929,   930,     0,     0,     0,   931,   932,   933,     0,
       0,     0,     0,     0,     0,     0,   934,     0,  2268,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   936,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   937,     0,     0,     0,     0,   938,   939,     0,
     940,     0,     0,     0,     0,     0,   941,     0,   942,     0,
       0,   943,     0,     0,   944,     0,   946,     0,   947,   948,
     949,     0,   950,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   951,     0,     0,
       0,   952,   953,   954,   955,     0,     0,     0,     0,     0,
       0,   956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   957,   958,     0,     0,     0,     0,     0,     0,
       0,   959,     0,     0,   960,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   961,     0,     0,     0,     0,     0,
     962,   963,     0,   964,   965,   966,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,   968,   969,   970,
     971,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     972,   973,   974,     0,     0,     0,     0,     0,   975,     0,
     976,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   977,   171,   172,   173,   174,   175,   176,
     978,   178,   179,   180,   181,   182,   183,   184,   979,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   980,   201,   202,   203,   204,   205,
     206,   207,   208,   981,   210,   982,   983,   212,   984,   985,
     986,   987,   988,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   989,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   990,
     991,   992,   246,   993,   994,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     995,   291,   292,   293,   294,   295,   996,   297,   997,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     998,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   999,  1000,   333,   334,   335,  1001,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,  1002,   375,  1003,   377,   378,
     379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,
     389,   390,   391,   392,  1008,  1009,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,  1010,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,  1011,   425,   426,   427,   428,
     429,  1012,  1013,   432,   433,   434,   435,   436,   437,  1014,
     439,   440,   441,   442,   443,   444,  1015,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,  1016,   476,   477,   478,
     479,   480,  1017,  1018,   483,   484,   485,   486,   487,  1019,
     489,   490,   491,   492,   493,   494,  1020,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,  1021,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,
     548,  1026,  1027,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,  1028,   565,  1029,   567,
     568,   569,   570,   571,   572,   573,   574,   575,  1030,  1031,
     578,  1032,   580,   581,   582,     0,   583,   584,   585,  1033,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,  2270,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,     0,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,  1034,  1035,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,
    1041,   901,   902,   903,   904,     0,     0,     0,     0,     0,
       0,     0,   905,   906,     0,   907,     0,     0,     0,     0,
       0,     0,   908,   909,     0,     0,   910,   911,   912,   913,
       0,   914,   915,     0,   916,   917,     0,     0,     0,     0,
     918,     0,     0,     0,   919,     0,     0,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   921,   922,   923,
       0,   924,   925,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   926,   927,   928,     0,   929,   930,
       0,     0,     0,   931,   932,   933,     0,     0,     0,     0,
       0,     0,     0,   934,     0,  1441,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   936,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,   938,   939,     0,   940,     0,     0,
       0,     0,     0,   941,     0,   942,     0,     0,   943,     0,
       0,     0,     0,   946,     0,   947,   948,   949,     0,   950,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   951,     0,     0,     0,   952,   953,
     954,   955,     0,     0,     0,     0,     0,     0,   956,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   957,
     958,     0,     0,     0,     0,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,     0,     0,     0,     0,     0,   962,   963,     0,
     964,   965,   966,     0,     0,     0,   967,     0,     0,     0,
       0,     0,     0,     0,   968,   969,   970,   971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   972,   973,   974,
       0,     0,     0,     0,     0,   975,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     977,   171,   172,   173,   174,   175,   176,   978,   178,   179,
     180,   181,   182,   183,   184,   979,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   980,   201,   202,   203,   204,   205,   206,   207,   208,
     981,   210,   982,   983,   212,   984,   985,   986,   987,   988,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   989,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   990,   991,   992,   246,
     993,   994,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   995,   291,   292,
     293,   294,   295,   996,   297,   997,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   998,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   999,
    1000,   333,   334,   335,  1001,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,  1002,   375,  1003,   377,   378,   379,   380,  1004,
    1005,  1006,  1007,   385,   386,   387,   388,   389,   390,   391,
     392,  1008,  1009,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,  1010,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,  1011,   425,   426,   427,   428,   429,  1012,  1013,
     432,   433,   434,   435,   436,   437,  1014,   439,   440,   441,
     442,   443,   444,  1015,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,  1016,   476,   477,   478,   479,   480,  1017,
    1018,   483,   484,   485,   486,   487,  1019,   489,   490,   491,
     492,   493,   494,  1020,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,  1021,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,  1028,   565,  1029,   567,   568,   569,   570,
     571,   572,   573,   574,   575,  1030,  1031,   578,  1032,   580,
     581,   582,   901,   583,   584,   585,  1033,     0,     0,     0,
       0,     0,     0,     0,     0,  5636,  5637,     0,     0,     0,
       0,     0,     0,     0,     0,  5638,     0,     0,     0,  1039,
       0,     0,  1040,  1041,     0,     0,     0,     0,     0,     0,
       0,   918,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     923,     0,     0,   925,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   929,
     930,     0,     0,     0,  1478,  1479,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   943,
       0,     0,     0,     0,     0,     0,     0,   948,   949,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   967,     0,     0,
       0,     0,     0,     0,     0,     0,   969,   970,   971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,  1480,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,  2302,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,  2719,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,  2303,   543,   544,  2304,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1040,  1041,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  2973,   583,   584,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2720,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   678,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,  1118,   583,   584,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2720,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1119,   678,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,  1120,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,  1121,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,  1122,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,  1123,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,  1124,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
    1125,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,  1126,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,  1127,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,  1128,   579,   580,   581,   582,  1118,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1119,     0,  1129,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,  1120,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
    1121,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,  1122,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,  1123,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,  1124,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,  1125,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,  1126,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
    1128,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     814,   815,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1129,     0,     0,     0,
       0,     0,     0,     0,     0,   816,     0,     0,     0,     0,
     817,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   819,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   820,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,     0,     0,     0,   821,
       0,     0,     0,     0,   822,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     748,     0,     0,     0,     0,     0,     0,   823,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   825,     0,     0,     0,     0,     0,
       0,     0,   826,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   665,     0,     0,
       0,     0,     0,     0,   827,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   828,   829,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   830,   272,   273,   274,
     275,   831,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   832,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   833,
     441,   442,   443,   834,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     835,   462,   463,   464,   465,   836,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   837,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   838,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,  1110,   815,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   816,     0,     0,     0,     0,   817,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   818,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   819,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   820,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,     0,     0,     0,   821,     0,     0,
       0,     0,   822,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   748,     0,
       0,     0,     0,     0,     0,   823,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   825,     0,     0,     0,     0,     0,     0,     0,
     826,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   665,     0,     0,     0,     0,
       0,     0,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   828,   829,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,  1111,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   830,   272,   273,   274,   275,   831,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   832,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   833,   441,   442,
     443,  1112,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   835,   462,
     463,   464,   465,   836,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   837,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,  1712,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   838,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
    4691,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,  1802,   583,   584,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1478,  1479,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     4,   583,   584,
     585,   586,     0,     0,     0,     0,   858,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1803,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   859,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,   860,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   861,     0,     0,     0,     0,
       0,     0,   862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     863,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    38,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,     0,   163,     0,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,     0,   178,   179,   180,   181,   182,   183,   184,
     185,     0,   865,     0,     0,   189,   190,   191,   192,   193,
       0,     0,   196,   197,   198,   199,     0,     0,     0,   203,
     204,   205,   206,   207,   866,   209,   210,   211,     0,   212,
       0,     0,     0,     0,     0,     0,   218,     0,   220,     0,
     222,   223,     0,   225,   226,   227,   228,   229,   230,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,     0,   258,   259,   260,
     261,     0,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,     0,     0,     0,   277,     0,   867,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,     0,
       0,     0,     0,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   300,   301,     0,   303,   304,     0,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   868,     0,     0,
       0,   418,   419,     0,   421,   422,   423,   424,     0,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   463,     0,   465,   466,
       0,   468,   469,     0,   471,   472,   473,   474,   475,   476,
       0,   478,   479,   480,   481,   482,   483,   484,     0,   486,
     487,   488,     0,   490,   491,   492,   493,     0,   495,   496,
       0,     0,   499,     0,     0,   502,   503,   504,     0,   506,
       0,   508,   509,   510,   511,     0,   512,   513,   514,     0,
     516,   517,  4284,   519,     0,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,     0,   542,   543,   544,   545,
     546,   547,   548,   549,     0,   551,   552,   553,     0,   555,
     556,   557,   558,     0,     0,   561,   562,     0,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   712,     0,   580,   581,     0,     0,   583,     0,
     585,   586,     0,     0,     0,     0,   157,   158,     0,     0,
       0,  3073,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5396,     0,     0,     0,  3074,     0,     0,     0,
       0,     0,     0,  4285,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -2529,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   713,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    39,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  4286,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,  4284,   583,   584,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4287,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   712,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,  3073,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3074,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     713,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,  4286,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,  4338,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,  4287,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   665,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1665,   583,   584,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1666,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   748,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1667,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,  3930,  3931,     0,  1668,     0,     0,  3932,  3933,     0,
       0,     0,     0,     0,     0,     0,     0,  3934,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3935,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3937,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3938,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3939,
    3940,     0,  3941,     0,     0,     0,     0,     0,     0,     0,
    3942,  3943,  3944,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3945,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3946,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3947,
       0,     0,     0,     0,     0,  3948,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3949,  3950,  3951,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3952,  3953,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,  5087,   190,  5088,  5089,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
    5090,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,  5091,   243,  5092,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,  5093,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,  5094,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,  5095,  5096,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,  5097,   328,   329,
     330,   331,   332,   333,   334,   335,  5098,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,  5099,  5100,  5101,   385,   386,   387,   388,   389,
    5102,  5103,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,  5104,  5105,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
    5106,  5107,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,  5108,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,  5109,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
    5110,   540,   541,  5111,   543,   544,  5112,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,  5113,
     569,   570,   571,   572,   573,   574,   575,   576,   577,  3361,
     579,   580,   581,   582,  1681,   583,   584,   585,  5114,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1682,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   748,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  1665,   583,   584,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1666,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,  1665,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,  1238,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1239,  1240,     0,     0,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1241,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,  1297,   583,   584,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   748,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     4,   583,   584,   585,   586,     0,     0,     0,     0,
     858,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1573,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  -453,  -453,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   859,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   861,
       0,     0,     0,     0,     0,     0,   862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,   866,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,  -453,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,   867,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   868,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     4,
     542,   543,   544,   545,   546,   547,   548,   549,   858,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,  -473,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   859,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   860,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   861,     0,     0,
       0,     0,     0,     0,   862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,   863,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  -473,     0,    38,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,     0,
     163,     0,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,     0,   178,   179,   180,   181,   182,
     183,   184,   185,     0,   865,     0,     0,   189,   190,   191,
     192,   193,     0,     0,   196,   197,   198,   199,     0,     0,
       0,   203,   204,   205,   206,   207,   866,   209,   210,   211,
       0,   212,     0,     0,     0,     0,     0,     0,   218,     0,
     220,     0,   222,   223,     0,   225,   226,   227,   228,   229,
     230,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,  -473,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,     0,     0,   277,     0,
     867,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,     0,     0,     0,     0,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   300,   301,     0,   303,   304,     0,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   868,
       0,     0,     0,   418,   419,     0,   421,   422,   423,   424,
       0,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   463,     0,
     465,   466,     0,   468,   469,     0,   471,   472,   473,   474,
     475,   476,     0,   478,   479,   480,   481,   482,   483,   484,
       0,   486,   487,   488,     0,   490,   491,   492,   493,     0,
     495,   496,     0,     0,   499,     0,     0,   502,   503,   504,
       0,   506,     0,   508,   509,   510,   511,     0,   512,   513,
     514,     0,   516,   517,     0,   519,     0,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,     4,   542,   543,
     544,   545,   546,   547,   548,   549,   858,   551,   552,   553,
       0,   555,   556,   557,   558,     0,     0,   561,   562,     0,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,     0,     0,   580,   581,     0,     0,
     583,     0,   585,   586,  -470,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   859,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,   860,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   861,     0,     0,     0,     0,
       0,     0,   862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     863,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  -470,     0,    38,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,     0,   163,     0,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,     0,   178,   179,   180,   181,   182,   183,   184,
     185,     0,   865,     0,     0,   189,   190,   191,   192,   193,
       0,     0,   196,   197,   198,   199,     0,     0,     0,   203,
     204,   205,   206,   207,   866,   209,   210,   211,     0,   212,
       0,     0,     0,     0,     0,     0,   218,     0,   220,     0,
     222,   223,     0,   225,   226,   227,   228,   229,   230,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,     0,   258,   259,   260,
     261,  -470,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,     0,     0,     0,   277,     0,   867,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,     0,
       0,     0,     0,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   300,   301,     0,   303,   304,     0,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   868,     0,     0,
       0,   418,   419,     0,   421,   422,   423,   424,     0,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   463,     0,   465,   466,
       0,   468,   469,     0,   471,   472,   473,   474,   475,   476,
       0,   478,   479,   480,   481,   482,   483,   484,     0,   486,
     487,   488,     0,   490,   491,   492,   493,     0,   495,   496,
       0,     0,   499,     0,     0,   502,   503,   504,     0,   506,
       0,   508,   509,   510,   511,     0,   512,   513,   514,     0,
     516,   517,     0,   519,     0,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,     4,   542,   543,   544,   545,
     546,   547,   548,   549,   858,   551,   552,   553,     0,   555,
     556,   557,   558,     0,     0,   561,   562,     0,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,     0,     0,   580,   581,     0,     0,   583,     0,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   859,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,   860,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   861,     0,     0,     0,     0,     0,     0,
     862,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,   863,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,     0,   163,     0,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
       0,   178,   179,   180,   181,   182,   183,   184,   185,     0,
     865,     0,     0,   189,   190,   191,   192,   193,     0,     0,
     196,   197,   198,   199,     0,     0,     0,   203,   204,   205,
     206,   207,   866,   209,   210,   211,     0,   212,     0,     0,
       0,     0,     0,     0,   218,     0,   220,     0,   222,   223,
       0,   225,   226,   227,   228,   229,   230,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,     0,   258,   259,   260,   261,  1427,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,     0,     0,   277,     0,   867,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,     0,     0,     0,
       0,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     300,   301,     0,   303,   304,     0,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,     0,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   868,     0,     0,     0,   418,
     419,     0,   421,   422,   423,   424,     0,   426,   427,   428,
     429,   430,   431,     0,     0,     0,     0,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   463,     0,   465,   466,     0,   468,
     469,     0,   471,   472,   473,   474,   475,   476,     0,   478,
     479,   480,   481,   482,   483,   484,     0,   486,   487,   488,
       0,   490,   491,   492,   493,     0,   495,   496,     0,     0,
     499,     0,     0,   502,   503,   504,     0,   506,     0,   508,
     509,   510,   511,     0,   512,   513,   514,     0,   516,   517,
       0,   519,     0,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,     4,   542,   543,   544,   545,   546,   547,
     548,   549,   858,   551,   552,   553,     0,   555,   556,   557,
     558,     0,     0,   561,   562,     0,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
       0,     0,   580,   581,     0,     0,   583,     0,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   859,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,   860,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,    15,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   861,     0,     0,     0,     0,     0,     0,   862,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   863,   864,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    38,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,     0,   163,     0,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,     0,   178,
     179,   180,   181,   182,   183,   184,   185,     0,   865,     0,
       0,   189,   190,   191,   192,   193,     0,     0,   196,   197,
     198,   199,     0,     0,     0,   203,   204,   205,   206,   207,
     866,   209,   210,   211,     0,   212,     0,     0,     0,     0,
       0,     0,   218,     0,   220,     0,   222,   223,     0,   225,
     226,   227,   228,   229,   230,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,     0,   258,   259,   260,   261,  -475,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
       0,     0,   277,     0,   867,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,     0,     0,     0,     0,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   300,   301,
       0,   303,   304,     0,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   868,     0,     0,     0,   418,   419,     0,
     421,   422,   423,   424,     0,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   463,     0,   465,   466,     0,   468,   469,     0,
     471,   472,   473,   474,   475,   476,     0,   478,   479,   480,
     481,   482,   483,   484,     0,   486,   487,   488,     0,   490,
     491,   492,   493,     0,   495,   496,     0,     0,   499,     0,
       0,   502,   503,   504,     0,   506,     0,   508,   509,   510,
     511,     0,   512,   513,   514,     0,   516,   517,     0,   519,
       0,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,     4,   542,   543,   544,   545,   546,   547,   548,   549,
     858,   551,   552,   553,     0,   555,   556,   557,   558,     0,
       0,   561,   562,     0,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,     0,
     580,   581,     0,     0,   583,     0,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   859,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   861,
       0,     0,     0,     0,     0,     0,   862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,   866,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,  3326,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,   867,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   868,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     4,
     542,   543,   544,   545,   546,   547,   548,   549,   858,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   859,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   860,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   861,     0,     0,
       0,     0,     0,     0,   862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,   863,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    38,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,     0,
     163,     0,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,     0,   178,   179,   180,   181,   182,
     183,   184,   185,     0,   865,     0,     0,   189,   190,   191,
     192,   193,     0,     0,   196,   197,   198,   199,     0,     0,
       0,   203,   204,   205,   206,   207,   866,   209,   210,   211,
       0,   212,     0,     0,     0,     0,     0,     0,   218,     0,
     220,     0,   222,   223,     0,   225,   226,   227,   228,   229,
     230,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,  3379,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,     0,     0,   277,     0,
     867,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,     0,     0,     0,     0,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   300,   301,     0,   303,   304,     0,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   868,
       0,     0,     0,   418,   419,     0,   421,   422,   423,   424,
       0,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   463,     0,
     465,   466,     0,   468,   469,     0,   471,   472,   473,   474,
     475,   476,     0,   478,   479,   480,   481,   482,   483,   484,
       0,   486,   487,   488,     0,   490,   491,   492,   493,     0,
     495,   496,     0,     0,   499,     0,     0,   502,   503,   504,
       0,   506,     0,   508,   509,   510,   511,     0,   512,   513,
     514,     0,   516,   517,     0,   519,     0,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,     4,   542,   543,
     544,   545,   546,   547,   548,   549,   858,   551,   552,   553,
       0,   555,   556,   557,   558,     0,     0,   561,   562,     0,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,     0,     0,   580,   581,     0,     0,
     583,     0,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   859,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,   860,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   861,     0,     0,     0,     0,
       0,     0,   862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     863,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    38,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,     0,   163,     0,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,     0,   178,   179,   180,   181,   182,   183,   184,
     185,     0,   865,     0,     0,   189,   190,   191,   192,   193,
       0,     0,   196,   197,   198,   199,     0,     0,     0,   203,
     204,   205,   206,   207,   866,   209,   210,   211,     0,   212,
       0,     0,     0,     0,     0,     0,   218,     0,   220,     0,
     222,   223,     0,   225,   226,   227,   228,   229,   230,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,     0,   258,   259,   260,
     261,  3633,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,     0,     0,     0,   277,     0,   867,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,     0,
       0,     0,     0,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   300,   301,     0,   303,   304,     0,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   868,     0,     0,
       0,   418,   419,     0,   421,   422,   423,   424,     0,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   463,     0,   465,   466,
       0,   468,   469,     0,   471,   472,   473,   474,   475,   476,
       0,   478,   479,   480,   481,   482,   483,   484,     0,   486,
     487,   488,     0,   490,   491,   492,   493,     0,   495,   496,
       0,     0,   499,     0,     0,   502,   503,   504,     0,   506,
       0,   508,   509,   510,   511,     0,   512,   513,   514,     0,
     516,   517,     0,   519,     0,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,     4,   542,   543,   544,   545,
     546,   547,   548,   549,   858,   551,   552,   553,     0,   555,
     556,   557,   558,     0,     0,   561,   562,     0,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,     0,     0,   580,   581,     0,     0,   583,     0,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   859,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,   860,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   861,     0,     0,     0,     0,     0,     0,
     862,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,   863,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,     0,   163,     0,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
       0,   178,   179,   180,   181,   182,   183,   184,   185,     0,
     865,     0,     0,   189,   190,   191,   192,   193,     0,     0,
     196,   197,   198,   199,     0,     0,     0,   203,   204,   205,
     206,   207,   866,   209,   210,   211,     0,   212,     0,     0,
       0,     0,     0,     0,   218,     0,   220,     0,   222,   223,
       0,   225,   226,   227,   228,   229,   230,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,     0,   258,   259,   260,   261,  3637,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,     0,     0,   277,     0,   867,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,     0,     0,     0,
       0,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     300,   301,     0,   303,   304,     0,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,     0,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   868,     0,     0,     0,   418,
     419,     0,   421,   422,   423,   424,     0,   426,   427,   428,
     429,   430,   431,     0,     0,     0,     0,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   463,     0,   465,   466,     0,   468,
     469,     0,   471,   472,   473,   474,   475,   476,     0,   478,
     479,   480,   481,   482,   483,   484,     0,   486,   487,   488,
       0,   490,   491,   492,   493,     0,   495,   496,     0,     0,
     499,     0,     0,   502,   503,   504,     0,   506,     0,   508,
     509,   510,   511,     0,   512,   513,   514,     0,   516,   517,
       0,   519,     0,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,     4,   542,   543,   544,   545,   546,   547,
     548,   549,   858,   551,   552,   553,     0,   555,   556,   557,
     558,     0,     0,   561,   562,     0,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
       0,     0,   580,   581,     0,     0,   583,     0,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   859,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,   860,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,    15,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   861,     0,     0,     0,     0,     0,     0,   862,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   863,   864,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    38,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,     0,   163,     0,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,     0,   178,
     179,   180,   181,   182,   183,   184,   185,     0,   865,     0,
       0,   189,   190,   191,   192,   193,     0,     0,   196,   197,
     198,   199,     0,     0,     0,   203,   204,   205,   206,   207,
     866,   209,   210,   211,     0,   212,     0,     0,     0,     0,
       0,     0,   218,     0,   220,     0,   222,   223,     0,   225,
     226,   227,   228,   229,   230,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,     0,   258,   259,   260,   261,  4005,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
       0,     0,   277,     0,   867,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,     0,     0,     0,     0,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   300,   301,
       0,   303,   304,     0,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   868,     0,     0,     0,   418,   419,     0,
     421,   422,   423,   424,     0,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   463,     0,   465,   466,     0,   468,   469,     0,
     471,   472,   473,   474,   475,   476,     0,   478,   479,   480,
     481,   482,   483,   484,     0,   486,   487,   488,     0,   490,
     491,   492,   493,     0,   495,   496,     0,     0,   499,     0,
       0,   502,   503,   504,     0,   506,     0,   508,   509,   510,
     511,     0,   512,   513,   514,     0,   516,   517,     0,   519,
       0,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,     4,   542,   543,   544,   545,   546,   547,   548,   549,
     858,   551,   552,   553,     0,   555,   556,   557,   558,     0,
       0,   561,   562,     0,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,     0,
     580,   581,     0,     0,   583,     0,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   859,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   861,
       0,     0,     0,     0,     0,     0,   862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,   866,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,  4956,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,   867,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   868,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     4,
     542,   543,   544,   545,   546,   547,   548,   549,   858,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   859,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   860,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   861,     0,     0,
       0,     0,     0,     0,   862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,   863,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    38,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,     0,
     163,     0,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,     0,   178,   179,   180,   181,   182,
     183,   184,   185,     0,   865,     0,     0,   189,   190,   191,
     192,   193,     0,     0,   196,   197,   198,   199,     0,     0,
       0,   203,   204,   205,   206,   207,   866,   209,   210,   211,
       0,   212,     0,     0,     0,     0,     0,     0,   218,     0,
     220,     0,   222,   223,     0,   225,   226,   227,   228,   229,
     230,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,  -457,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,     0,     0,   277,     0,
     867,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,     0,     0,     0,     0,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   300,   301,     0,   303,   304,     0,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   868,
       0,     0,     0,   418,   419,     0,   421,   422,   423,   424,
       0,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   463,     0,
     465,   466,     0,   468,   469,     0,   471,   472,   473,   474,
     475,   476,     0,   478,   479,   480,   481,   482,   483,   484,
       0,   486,   487,   488,     0,   490,   491,   492,   493,     0,
     495,   496,     0,     0,   499,     0,     0,   502,   503,   504,
       0,   506,     0,   508,   509,   510,   511,     0,   512,   513,
     514,     0,   516,   517,     0,   519,     0,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,     4,   542,   543,
     544,   545,   546,   547,   548,   549,   858,   551,   552,   553,
       0,   555,   556,   557,   558,     0,     0,   561,   562,     0,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,     0,     0,   580,   581,     0,     0,
     583,     0,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   859,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,   860,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   861,     0,     0,     0,     0,
       0,     0,   862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     863,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    38,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,     0,   163,     0,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,     0,   178,   179,   180,   181,   182,   183,   184,
     185,     0,   865,     0,     0,   189,   190,   191,   192,   193,
       0,     0,   196,   197,   198,   199,     0,     0,     0,   203,
     204,   205,   206,   207,   866,   209,   210,   211,     0,   212,
       0,     0,     0,     0,     0,     0,   218,     0,   220,     0,
     222,   223,     0,   225,   226,   227,   228,   229,   230,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,     0,   258,   259,   260,
     261,     0,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,     0,     0,     0,   277,     0,   867,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,     0,
       0,     0,     0,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   300,   301,     0,   303,   304,     0,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   868,     0,     0,
       0,   418,   419,     0,   421,   422,   423,   424,     0,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   463,     0,   465,   466,
       0,   468,   469,     0,   471,   472,   473,   474,   475,   476,
       0,   478,   479,   480,   481,   482,   483,   484,     0,   486,
     487,   488,     0,   490,   491,   492,   493,     0,   495,   496,
       0,     0,   499,     0,     0,   502,   503,   504,     0,   506,
       0,   508,   509,   510,   511,     0,   512,   513,   514,     0,
     516,   517,     0,   519,     0,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,     4,   542,   543,   544,   545,
     546,   547,   548,   549,   858,   551,   552,   553,     0,   555,
     556,   557,   558,     0,     0,   561,   562,     0,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,     0,     0,   580,   581,     0,     0,   583,     0,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   859,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,   860,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   861,     0,     0,     0,     0,     0,     0,
     862,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,   863,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,     0,   163,     0,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
       0,   178,   179,   180,   181,   182,   183,   184,   185,     0,
     865,     0,     0,   189,   190,   191,   192,   193,     0,     0,
     196,   197,   198,   199,     0,     0,     0,   203,   204,   205,
     206,   207,   866,   209,   210,   211,     0,   212,     0,     0,
       0,     0,     0,     0,   218,     0,   220,     0,   222,   223,
       0,   225,   226,   227,   228,   229,   230,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,     0,   258,   259,   260,   261,     0,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,     0,     0,   277,     0,   867,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,     0,     0,     0,
       0,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     300,   301,     0,   303,   304,     0,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,     0,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   868,     0,     0,     0,   418,
     419,     0,   421,   422,   423,   424,     0,   426,   427,   428,
     429,   430,   431,     0,     0,     0,     0,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   463,     0,   465,   466,     0,   468,
     469,     0,   471,   472,   473,   474,   475,   476,     0,   478,
     479,   480,   481,   482,   483,   484,     0,   486,   487,   488,
       0,   490,   491,   492,   493,     0,   495,   496,     0,     0,
     499,     0,     0,   502,   503,   504,     0,   506,     0,   508,
     509,   510,   511,     0,   512,   513,   514,     4,   516,   517,
       0,   519,     0,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,     0,   542,   543,   544,   545,   546,   547,
     548,   549,     0,   551,   552,   553,     0,   555,   556,   557,
     558,     0,     0,   561,  1647,     0,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
       0,    13,   580,   581,     0,     0,   583,     0,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     863,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    38,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,     0,   163,     0,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,     0,   178,   179,   180,   181,   182,   183,   184,
     185,     0,   865,     0,     0,   189,   190,   191,   192,   193,
       0,     0,   196,   197,   198,   199,     0,     0,     0,   203,
     204,   205,   206,   207,     0,   209,   210,   211,     0,   212,
       0,     0,     0,     0,     0,     0,   218,     0,   220,     0,
     222,   223,     0,   225,   226,   227,   228,   229,   230,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,     0,   258,   259,   260,
     261,     0,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,     0,     0,     0,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,     0,
       0,     0,     0,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   300,   301,     0,   303,   304,     0,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,     0,     0,     0,
       0,   418,   419,     0,   421,   422,   423,   424,     0,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   463,     0,   465,   466,
       0,   468,   469,     0,   471,   472,   473,   474,   475,   476,
       0,   478,   479,   480,   481,   482,   483,   484,     0,   486,
     487,   488,     0,   490,   491,   492,   493,     0,   495,   496,
       0,     0,   499,     0,     0,   502,   503,   504,     0,   506,
       0,   508,   509,   510,   511,     0,   512,   513,   514,     0,
     516,   517,     0,   519,     0,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,     0,   542,   543,   544,   545,
     546,   547,   548,   549,     0,   551,   552,   553,     0,   555,
     556,   557,   558,  3357,  3358,   561,   562,     0,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,     0,     0,   580,   581,     0,     0,   583,     0,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  3359,  3360,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
    3361,   579,   580,   581,   582,     0,   583,   584,   585,   586,
    1297,   817,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   748,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   665,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1297,   583,   584,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   817,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   748,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,  2078,     0,     0,     0,
    4775,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2079,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3754,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3755,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3756,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3757,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,  2078,     0,     0,     0,  5753,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2079,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3754,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3755,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3756,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3757,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
    2078,     0,     0,     0,  5821,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2079,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3754,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3755,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3756,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3757,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  2985,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   748,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    1658,   583,   584,   585,   586,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1658,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,  2362,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  3066,   583,   584,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  4843,   583,   584,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  4851,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    2999,   583,   584,   585,   586,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,     0,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,  3000,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,  2221,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5950,     0,     0,     0,
       0,     0,  2222,  5951,   748,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1679,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2236,   748,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3154,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,  2221,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,  1478,  1479,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2222,  5951,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1803,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    39,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
    2221,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,  1478,  1479,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3552,     0,     0,     0,     0,     0,  2222,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,  1480,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1648,     0,     0,     0,     0,  1481,     0,     0,     0,
       0,     0,     0,  1040,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,  1478,  1479,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   678,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,  1480,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1040,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,  2221,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2222,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,  2720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   678,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
    4825,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4426,     0,     0,     0,
       0,     0,     0,  4287,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4287,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   678,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   726,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     727,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   728,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   678,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4287,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,  2741,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2279,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   661,   662,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5227,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5228,   638,  5229,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,  1415,   583,   584,
     585,   586,  1416,     0,     0,     0,     0,     0,     0,     0,
       0,  2742,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
    1417,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,  1347,   583,   584,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,  2695,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,  1478,  1479,
       0,     0,     0,     0,     0,     0,     0,     0,  3916,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,  4342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,  1478,  1479,     0,     0,
       0,     0,     0,     0,     0,     0,  4648,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
    5156,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,  5275,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     748,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1667,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   665,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,  1478,  1479,
       0,  1668,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2395,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2396,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   951,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2397,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2398,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,  2399,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,  1478,  1479,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2395,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2396,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   951,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3899,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2398,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,  2399,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,  1478,  1479,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2395,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2396,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   951,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2398,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,  2399,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   637,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   638,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     748,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   665,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   638,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,  1478,  1479,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1524,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4222,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5548,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     673,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,  1478,  1479,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
    1824,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2373,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,  2486,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,  2487,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,  3361,   579,   580,   581,
     582,     0,   583,   584,   585,   586,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
       0,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,     0,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,     0,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,  3000,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,     0,   163,     0,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,     0,   178,
     179,   180,   181,   182,   183,   184,   185,     0,     0,     0,
       0,   189,   190,   191,   192,   193,     0,     0,   196,   197,
     198,   199,     0,     0,     0,   203,   204,   205,   206,   207,
       0,   209,   210,   211,     0,   212,     0,     0,     0,     0,
       0,     0,   218,     0,   220,     0,   222,   223,     0,   225,
     226,   227,   228,   229,   230,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,     0,   258,   259,   260,   261,     0,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
       0,     0,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,     0,     0,     0,     0,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   300,   301,
       0,   303,   304,     0,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   157,   158,     0,     0,   418,   419,     0,
     421,   422,   423,   424,     0,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   463,     0,   465,   466,     0,   468,   469,     0,
     471,   472,   473,   474,   475,   476,     0,   478,   479,   480,
     481,   482,   483,   484,     0,   486,   487,   488,     0,   490,
     491,   492,   493,     0,   495,   496,     0,     0,   499,     0,
       0,   502,   503,   504,     0,   506,     0,   508,   509,   510,
     511,     0,   512,   513,   514,     0,   516,   517,     0,   519,
       0,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,     0,   542,   543,   544,   545,   546,   547,   548,   549,
       0,   551,   552,   553,     0,   555,   556,   557,   558,     0,
       0,   561,   562,     0,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,     0,
     580,   581,     0,     0,   583,     0,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1424,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,     0,   163,     0,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,     0,   178,   179,
     180,   181,   182,   183,   184,   185,     0,     0,     0,     0,
     189,   190,   191,   192,   193,     0,     0,   196,   197,   198,
     199,     0,     0,     0,   203,   204,   205,   206,   207,     0,
     209,   210,   211,     0,   212,     0,     0,     0,     0,     0,
       0,   218,     0,   220,     0,   222,   223,     0,   225,   226,
     227,   228,   229,   230,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,     0,   258,   259,   260,   261,     0,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,     0,     0,
       0,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,     0,     0,     0,     0,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   300,   301,     0,
     303,   304,     0,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   157,   158,     0,     0,   418,   419,     0,   421,
     422,   423,   424,     0,   426,   427,   428,   429,   430,   431,
       0,     0,     0,     0,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   463,     0,   465,   466,     0,   468,   469,     0,   471,
     472,   473,   474,   475,   476,     0,   478,   479,   480,   481,
     482,   483,   484,     0,   486,   487,   488,     0,   490,   491,
     492,   493,     0,   495,   496,     0,     0,   499,     0,     0,
     502,   503,   504,     0,   506,     0,   508,   509,   510,   511,
       0,   512,   513,   514,     0,   516,   517,     0,   519,     0,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
       0,   542,   543,   544,   545,   546,   547,   548,   549,     0,
     551,   552,   553,     0,   555,   556,   557,   558,     0,     0,
     561,   562,     0,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,     0,     0,   580,
     581,     0,     0,   583,     0,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,     0,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,     0,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,     0,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     0,
     542,   543,   544,   545,   546,   547,   548,   549,     0,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586
};

static const yytype_int16 yycheck[] =
{
       3,   119,    41,   148,   632,   144,   653,   156,   652,   653,
     858,   737,   860,   861,   862,  1160,   646,  1289,   646,   867,
    1968,  1276,    25,   652,   652,  1410,   146,    30,    21,  1276,
    1627,    34,  1639,  1178,    37,   138,  1875,  1717,   141,  1878,
      42,  1717,  1904,  1467,   938,    48,  1352,  1574,    51,  1976,
    1646,    54,  1275,  1178,   869,    58,    49,     0,  1460,   652,
    2559,  1688,    55,  1587,  1476,  3246,  2909,  1498,   672,  3172,
     807,  1123,  1124,  1125,   743,  1877,  3246,  2761,  2762,  2751,
    1132,   652,  1686,  3504,   652,  3133,  1902,  3174,  2685,   983,
    3325,  3815,  1395,  1290,  2450,  2515,  1922,   621,  1879,  3281,
    1702,  1703,   691,   938,  2775,   694,  2777,   110,  3708,  3185,
    1290,  2448,  3698,  1871,  3523,  1235,  2048,  4309,  4133,   621,
    2778,  1639,  1946,  3398,  3196,  3184,   650,  1802,  1910,  2961,
    2962,  2471,  2614,  3901,   137,   138,  3046,  3121,   141,   156,
    1966,   144,   145,   156,  1364,  3055,  1040,    31,   650,  3505,
    3222,  3223,  2683,  2683,  3246,   156,  3505,  1707,   632,  3027,
     156,  4198,  4709,  4432,  4545,  4917,     6,  3805,    28,  3805,
     711,  3805,   646,     6,   715,   716,    11,  1727,   652,  2879,
     743,  2614,  1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,
    1621,  1622,  1623,  1624,  1625,  1802,    11,  3252,  1800,  3742,
     115,  2683,  1752,  1753,    26,   105,   900,  3806,  1328,  3808,
    1598,    11,  3811,  1101,  4441,    26,  3288,  3289,  1606,  1607,
      93,  1609,  1610,    12,    50,    95,  3825,     9,    10,  3496,
     858,    61,   860,   861,   862,  3625,    61,     9,    10,   867,
    1836,   869,   105,     9,    10,    80,  2009,    51,  2011,  2012,
    2683,     9,    10,  3839,  4414,    80,    91,     9,    10,    11,
      80,  3244,     6,    12,     9,    10,    91,    74,     6,    86,
      86,    91,     9,    10,    61,   105,    65,     9,    10,  1157,
       9,    10,    61,  2945,  1802,     9,    10,    57,  1103,   105,
       9,    10,  2606,   194,   114,    93,  4527,     9,    10,   194,
      27,  1179,  3396,  3397,    61,   785,   110,     9,    10,  2673,
    3404,    61,  3406,  1207,  3408,   263,    65,    44,   105,    89,
    3729,    80,   153,    95,   298,    80,   105,  3027,     9,    10,
     248,  3226,    91,  3552,    57,   105,    91,  1180,    17,  1935,
    1034,  1035,  1036,  4111,   244,  1424,  3211,   722,   105,   149,
       9,    10,  1046,  3703,  3295,   105,   173,     9,    10,   183,
     220,   298,  3940,  3941,  4301,    86,  3944,  4770,     9,    10,
    4201,  4539,    69,  3951,    83,  2595,   146,  4855,    63,  3957,
       9,    10,   261,   138,   858,  3399,   860,   861,   862,   764,
     299,   300,    80,   867,   306,   869,   177,   217,  2735,   181,
    3268,   183,    58,    91,   174,   361,   261,   207,    32,   181,
     177,   183,   121,   235,   177,   181,   207,   183,   182,     9,
      10,   263,   351,   181,   177,   183,  3529,   118,   155,   181,
     151,   183,     9,    10,   125,   120,   181,   235,   183,    10,
    1764,    93,   177,  4167,   181,   114,   183,  5539,   105,   181,
     138,   183,   181,   268,   183,   272,   272,   181,   235,   183,
      57,    80,   181,  2059,   183,   162,  3052,   128,   124,   181,
     218,   183,    91,    93,    32,  1103,   391,    28,  1366,   181,
      73,   183,   621,   177,   387,   153,   606,   298,   608,   609,
     610,   611,    89,   613,   614,  5181,   187,   617,   618,   105,
     181,    11,   183,   273,  1392,   177,   207,   514,   105,     9,
      10,   650,     9,    10,   230,  4166,  5063,   283,   149,   105,
     302,   298,   181,   298,   183,   318,    12,   666,   608,   181,
     302,   183,   217,   293,   207,     6,   302,     9,    10,   146,
     181,   296,   183,   682,   302,   230,   632,   320,  1851,   146,
     302,   480,   181,   209,   183,     9,    10,   302,  4785,    93,
     646,  2324,  2325,  2326,  2327,   302,   652,   276,  3268,  4950,
     302,  1465,   235,   302,     6,   514,   207,   174,   302,    65,
     374,   123,   235,   302,  5486,  1174,  1480,  1481,  5510,   640,
     302,   181,   230,   183,   601,   280,   263,    68,   600,   567,
     302,   604,   287,   298,   181,  1877,   183,  1659,   296,   143,
     100,  5533,   615,   298,  1837,   672,   263,   620,   621,  3801,
     230,   302,   204,  5525,  1361,   298,   765,  1882,  1680,  1103,
    1465,   193,  2559,   713,  3737,   762,    68,     9,    10,   115,
     643,   234,   769,   302,   226,   438,  1481,   650,   655,   652,
     302,   263,   555,  3740,   374,   356,  1903,   235,  3713,   201,
    3935,   302,  3937,   666,   283,     9,    10,   806,  3536,   220,
    3945,   495,  5358,   302,   447,   678,   273,   287,   298,   682,
     683,   181,   684,   183,   181,  5777,   183,   478,  5166,   691,
     810,   811,   694,   696,   283,   697,  3971,   800,   801,   802,
     324,   114,  1922,  1333,  2331,  1333,  4937,   710,  2489,   181,
    4780,   183,   302,  1910,   261,  3990,   235,  1258,  1198,  1260,
    1261,  1262,  1263,  1264,   348,   302,  2330,   181,   263,   183,
    1910,     9,    10,   291,  2058,  1880,   149,   579,   490,  1633,
     743,  3833,   745,   632,  3226,  1639,  1966,   235,  1442,  1443,
     139,   680,  2554,  1316,   657,  1880,  5116,   646,   283,  4652,
     644,   673,   765,  1983,  3295,  3295,   645,  1655,  3611,  2595,
     773,   739,   858,   283,   860,   861,   862,   235,  4793,  4947,
     351,   867,   785,   869,   787,  1673,  4686,  4687,  2614,  4620,
     764,  2315,   795,  3226,   797,   207,   799,   800,   801,   802,
     803,   804,   302,   806,  1639,   302,   762,     9,    10,   181,
     728,   183,  1700,  3295,  4357,   204,  4206,  2229,  2230,  3891,
    4210,  3804,   770,  1717,  4761,   762,   865,   742,  1706,  2253,
     302,  1709,  1395,  4848,   689,   514,  3536,   181,  3932,   183,
    4426,   630,  1962,  1721,  3709,  4112,  1724,  2673,   302,  1453,
    1728,     9,    10,   753,   857,   764,   859,  2683,  1338,  1333,
    1362,   762,  3295,   866,   532,   868,   690,   762,  2256,  2257,
    2420,  2259,  2260,   757,   601,     9,    10,  1755,  1756,  1757,
     883,   630,  3544,  3977,  3978,  3979,  4654,  1367,  3982,   235,
     753,   764,   619,  3788,   764,  5055,   386,  5649,  1273,   568,
     717,  3995,   728,   181,   764,   183,   633,  1750,  1802,   480,
    3224,   655,   747,     9,    10,  5318,   727,   655,  1522,  4328,
    5147,   805,   762,   753,   808,   747,  3290,  4505,   655,   762,
     302,   762,   747,   768,  1628,  1539,  2694,   753,  1542,   739,
    1544,   664,  4161,   768,  1548,  1549,  1550,   747,   768,   747,
    4528,  3892,  1556,  4968,  4532,   762,  2719,  4307,   302,   766,
    1440,  2040,  4540,   752,   702,   626,   753,  1802,  2047,   858,
     747,   860,   861,   862,   753,   769,    63,  3197,   867,   181,
     869,   183,  3996,   764,  1123,   767,  1125,  1656,  5219,   764,
    1129,  1130,   764,   763,  5009,  5010,   753,   764,   764,   283,
     764,   764,   762,   753,   725,   763,   764,    28,  3345,   768,
     261,   764,   764,   768,  4665,  5396,   764,  1103,   763,   764,
    1159,   677,     5,   181,   302,   183,   763,   764,   261,   764,
      32,   763,   764,   120,   763,   764,  1039,  3623,  3624,   763,
     764,    93,   762,  5965,   763,   764,   762,   181,    31,   183,
    5065,   763,   764,   857,   763,   617,  1725,   754,   755,   756,
     757,  5330,   764,  3763,  3764,   555,  2905,  3767,  3768,   764,
     764,  4496,   763,  3773,  3774,  5145,  5623,   762,  5625,  5626,
     768,  5607,   763,   764,   747,   181,   114,   183,  3222,  3223,
      73,   715,   764,  1656,   747,   762,   753,    86,  1101,  1102,
     302,  2697,  3802,   492,  1107,   764,   763,   764,   739,   680,
    3058,   763,  2708,  4538,  1117,   762,   769,     6,   283,   708,
    1123,  4538,  1125,   764,   762,  1274,  1129,  1130,  4837,  4554,
     217,  5024,  4557,  4558,   763,   764,  1951,  4554,  2026,  1663,
    4557,  4558,   689,   230,   302,   752,   753,   753,  5048,   768,
     762,  1692,   762,  4562,  3288,  3289,  1159,   763,   764,  4246,
    5520,  1663,  1725,  1281,     9,    10,   763,   753,   302,   747,
    5046,  4757,  1174,   763,  1176,   214,  1902,   763,   764,   168,
     169,   728,  1811,  1811,   173,  1922,   169,   764,   261,   602,
    1193,   769,   370,   280,  1197,  1198,  5743,  5744,   130,   220,
     287,  5727,   764,  5750,  2728,  1794,   302,   697,   620,  1212,
    2973,   298,    49,   234,  1103,  1254,    33,  4626,  1811,  4628,
    1223,  1324,  4860,  1362,  4860,   208,  4860,   762,   747,  1966,
       9,    10,  1235,  1822,   646,  2129,  2130,  4309,   763,   764,
    1811,  5278,  4423,  1811,  4830,   171,  4832,  1333,  4324,  4835,
     769,   230,  1255,  4423,   282,  4841,  4842,  1274,  4345,   747,
    3041,  1274,  4861,   210,   764,  4249,   763,  5035,  4323,  4855,
    1914,  2416,  1275,  1274,  2168,  4818,     9,    10,  1274,  2954,
    5827,   769,  2334,   272,  4674,  4675,  2338,   457,  1851,   747,
    1293,  2416,   764,   230,  2129,   347,  4206,   433,  1102,   688,
    4210,   149,  4577,  1107,  1307,   559,  3788,  3647,   287,  2361,
     764,   769,  4668,  1316,  1317,   130,  2513,  1858,  3180,  4668,
    1861,  1324,  1325,  1951,  1865,  1328,  2573,  2221,   230,  2443,
     263,  4423,  5494,  2513,    14,  1338,   181,  1811,   183,  1819,
    3179,  2235,  1345,   361,  1347,  3127,   348,  2954,  1850,  3029,
     287,   358,  3032,  3033,   149,  3788,  3032,  3033,  4201,  1362,
     419,  3892,  3892,  1366,  1367,  4197,  1996,  3183,  1996,  2800,
     762,  3197,  1256,  1257,   766,  2595,   114,   291,   171,   293,
    2984,   433,   279,   435,   341,   287,  5286,  5287,  5403,  1392,
    2696,   763,  1395,  1197,   645,  4263,     9,    10,  1401,   353,
    3226,   747,   181,   287,   183,  4273,  4274,   304,  4066,  3013,
    3892,   149,  1415,  2716,   298,   443,   263,     9,    10,   358,
     764,  2309,  2310,   769,     9,    10,  2056,  2055,  2056,   320,
     737,  3255,  4491,   149,   186,  5450,  2954,  1440,   689,  2963,
       9,    10,  5634,   234,  1333,     9,    10,   114,   181,  4766,
     183,  1590,  3384,  2673,   376,  3811,   689,   302,    10,  3892,
       9,    10,   137,  2683,  3290,   328,   602,   433,   261,  3295,
       9,    10,   361,   525,  5183,  5075,   730,  1951,   413,  1206,
     764,   207,     9,    10,   442,   769,   764,   720,  1627,  4583,
    1217,   661,  3042,  4587,   386,  2919,   287,  3917,  3918,  3919,
    3920,   458,  2926,  1307,  2624,  2399,  2384,   298,  2386,     9,
      10,  2942,  5090,  1317,  1994,  1995,   555,  2929,  2930,  5711,
    5712,  1325,  1996,   302,  1663,   358,   458,   344,  4228,  3056,
     463,  2409,  2920,   711,   555,  2923,  3317,    63,   110,   111,
    1543,  1345,  5522,  1347,  2422,  2423,  2948,  5739,  2543,  1552,
     602,    32,   400,    34,  3312,  4642,   447,  5433,   433,  5435,
    1563,  1600,   764,  4263,  4989,  3161,   373,   493,   181,   302,
     183,  1574,  4989,  4273,  4274,     9,    10,  2471,   596,  2473,
    5166,  2055,  2056,    14,  5170,   146,   564,  1590,  3925,   181,
    1693,   183,  1695,  1696,  1697,  1698,   181,  1401,   183,   764,
       9,    10,  1705,  5765,   769,   400,   764,     9,    10,   472,
       9,    10,   181,   174,   183,   282,   689,   181,    33,   183,
    1723,   296,   605,  4931,  1627,   462,  1629,     0,   764,    61,
     764,   589,   181,  2905,   183,  3315,   602,  5128,   318,  3315,
       9,    10,   181,   458,   183,  1648,  4467,  4468,  4469,  2763,
    2344,   444,  1655,  1656,   181,   728,   183,   409,   521,   375,
    1663,  1664,   346,  3502,  1803,   460,   673,   164,   764,  2563,
    1673,   689,   731,  5317,   235,   762,   493,    92,   527,   601,
      76,   181,   639,   183,  1687,  1688,   704,     9,    10,   302,
    1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,   115,
     493,   655,  1705,  1842,   110,   111,  4809,  5159,     9,    10,
     302,  1850,   764,  1852,  1859,  1860,   268,   302,   565,  1722,
    1723,   564,  1725,   461,  4811,  1811,  1728,   602,   717,  2358,
    2358,   189,   579,   302,   673,   572,   671,   298,   302,  1543,
     673,  2736,   579,   201,  1747,    99,    10,   181,  1552,   183,
     587,    15,   478,   302,   280,   721,   653,  3891,  4834,  1563,
      32,   569,    34,   302,  5081,  2358,   590,  5353,  5085,  5086,
     442,   441,   181,  3612,   183,   302,   443,  4620,    63,   181,
    1919,   183,   181,   762,   183,   200,   764,  2358,   143,    61,
    2358,  5216,  1794,  5218,  5774,  3611,  2320,   369,   764,  5216,
    1803,  5218,   302,   261,  5528,  3567,  3568,  3569,  3570,  2439,
    1813,  2439,   181,  1815,   183,  2703,  1819,    63,  2320,    80,
    1822,  1824,   114,   660,  5276,   762,  4497,   168,   169,  5104,
     189,  5240,  5476,  5141,   641,   120,  5144,   268,   722,  1842,
     673,  5332,   201,   340,  1648,   694,   721,  1850,  1851,  1852,
    1853,  1854,  1855,  1856,  1857,   769,   288,   289,  2595,   405,
     762,   125,   277,   712,   602,  1951,   412,   348,   302,     9,
      10,   555,   631,   137,   120,  2464,  3307,   283,   762,  4391,
     181,   328,   183,   720,  2358,  3287,  5703,   184,   577,  5706,
    1694,     9,    10,   302,  2709,  1699,   689,  1701,    17,   295,
     302,   764,   261,   302,   168,   169,     9,    10,   628,  4421,
    1996,   483,  2760,  2761,  2762,    34,  1919,   589,   588,   764,
    3600,   764,  1811,  1925,   584,   217,  2978,  2979,     9,    10,
    3127,   722,   217,   302,     9,    10,  2673,  2752,  1941,  5174,
       9,    10,  1945,  1747,  4300,  4301,  2683,  3127,   392,   213,
     394,  3003,   201,   369,   386,   446,  5377,     9,    10,  1962,
     376,   769,  3788,   369,  3109,  2439,   321,  3571,  3572,  2055,
    2056,   762,     9,    10,  1977,   391,  1979,  3197,  1981,  1982,
     302,   161,  3586,  2524,  3109,   764,  2527,     9,    10,   447,
    5307,  1994,  1995,  5449,  2535,   280,  5452,  2538,  2001,   248,
     416,   302,   662,   168,   169,  2008,  2009,  3313,  2011,  2012,
     769,   325,  2492,   298,   311,   454,  5110,  5111,  5112,   559,
    5114,   270,  3549,  2026,  3169,   472,   206,  2030,  3552,   461,
     558,   764,    57,  2036,   280,  3338,  3339,  3340,  3341,  5856,
    2043,   181,  2936,   183,  3169,  4465,     9,    10,  5151,   769,
    2053,  2054,  1856,  1857,   493,  2618,   230,     9,    10,    97,
    2954,   496,  1951,   181,    89,   183,  3892,    17,   248,  4890,
    3290,     9,    10,   762,   521,  3295,   348,   483,   181,   420,
     183,  2709,    32,  2971,    34,   576,     9,    10,   447,  4686,
    4687,   636,  3940,  3941,   132,  2983,  3944,  2727,  4770,  2727,
     181,  3941,   183,  3951,   520,   540,   181,  1996,   183,   423,
     559,   558,   181,   287,   183,  4278,  3897,   533,   399,  2954,
    4283,   146,  2751,  2751,  2752,   328,  4994,  3515,  5748,   181,
    3518,   183,  2760,  2761,  2762,  3029,   552,  1941,  3032,  3033,
    3034,  2286,     9,    10,   181,  5601,   183,   747,   112,   174,
      93,   764,  5608,  2716,   399,     9,    10,   407,  2751,   181,
     249,   183,   302,   654,   518,   519,  2055,  2056,   522,   523,
     524,   747,   764,   422,  3698,  2779,  2700,  1981,    83,   764,
    2751,  2320,  4681,  2751,   302,  2789,   747,     9,    10,   369,
     730,   752,   753,   140,   475,   764,  2335,  2200,  2700,   302,
     764,   381,   730,  2206,  2008,  2009,   277,  2011,  2012,   648,
     472,   567,   416,     9,    10,   764,   121,   762,   181,  2222,
     183,   302,    61,  4063,   764,   764,  2030,   302,   675,   181,
     475,   183,  2036,   302,    83,  2709,   200,   764,   673,  3494,
       9,    10,  2846,   181,  3059,   183,    93,   146,   273,  3064,
     302,   168,   169,  2727,   698,   420,  3398,   701,   181,   675,
     183,  3403,   351,   763,  5312,   302,  5314,  3409,   472,   472,
    2373,   584,   121,  2877,   690,   174,   526,  2751,  2752,   226,
     302,   730,  2385,   730,  2913,  2913,  2760,  2761,  2762,   615,
       6,  5911,  5912,   762,  4994,     6,   558,  2299,   369,  4115,
     769,   148,   708,  2972,   484,  2444,  2309,  2310,  2311,     9,
      10,   708,     9,    10,   181,   764,   183,  2320,   521,  4831,
    2913,  2324,  2325,  2326,  2327,  2328,  2329,   181,  2331,   183,
     764,  2935,  2335,  4845,   173,   137,    57,   581,   673,   302,
    3612,     6,  2913,   669,  4856,  2913,  4858,    69,    35,   662,
     302,  5194,    68,  2439,   558,   764,  2358,    68,  5058,   181,
      47,   183,   764,  4202,   302,   764,  2369,     9,    10,   216,
    2373,   276,   769,  3017,   324,   555,   110,   111,  2380,   302,
    5836,  5837,  2385,   739,  3931,   181,  2388,   183,  3017,  3017,
     725,   480,   342,   698,    15,   764,  2200,   702,   348,   663,
     438,   100,  2206,    68,   347,  4761,  2545,  4169,  4170,  2972,
     481,  5459,   181,   675,   183,   911,   912,   913,  2421,  2522,
    2565,  3315,     9,    10,  3017,   146,  2429,   276,   438,     9,
      10,  3059,   676,  4214,  2437,   302,  3064,  2440,  2441,  2913,
     162,  2444,  2445,  2446,  3991,  3992,  3017,   485,   302,  3017,
     297,  5048,  3597,   174,  5636,  5637,  2574,  3183,   180,    18,
    3197,   263,  2464,   764,   553,   112,  2469,   708,   730,  2358,
     399,   675,  3597,     9,    10,   485,   972,  1067,     9,    10,
     302,   181,     6,   183,   181,   729,   183,  3742,   604,  2492,
     433,   747,   435,  4355,   296,  3742,   118,     9,    10,   615,
     230,   445,  5001,   125,   125,  4861,   302,  2311,  1098,    57,
     548,  4350,    18,  4352,   236,   237,   137,     6,   230,  2522,
    2324,  2325,  2326,  2327,  2408,  2528,   730,  3342,   769,  2532,
     753,     9,    10,   302,  2537,   479,  3430,   762,  4354,   181,
     763,   183,  2545,  3017,   769,   555,   105,   106,  2551,  4351,
    2439,   769,   273,  3290,   592,   123,  5737,   287,  3295,  4186,
     764,  2700,  5634,  2702,   298,   187,  5736,   100,     9,    10,
     138,     9,    10,   263,   708,   287,  3391,    95,  3630,    68,
    2582,    79,   525,  3477,    82,  3059,   298,  2589,  2590,   787,
    3064,   680,   213,   295,   181,   128,   183,  5892,   146,   105,
     106,   181,   302,   183,   250,   302,   804,   125,   708,   138,
     554,  3914,     9,    10,   182,  2618,   262,  2421,  4220,  4031,
    4032,  2624,  5917,  2709,   764,   762,   174,  3257,   762,  3257,
       9,    10,   769,  2437,  4158,   369,  2775,  4161,  2777,  5711,
    5712,  2727,  2446,     9,    10,   181,   764,   183,  4060,   182,
     181,   740,   183,   182,   122,  3707,   217,  4505,  3546,   602,
     302,   764,   762,     9,    10,  2751,  2752,  5739,   100,   181,
     138,   183,  3892,  4085,  2760,  2761,  2762,  5725,  5726,   138,
    4528,   179,   763,  2686,  4532,  2688,  4213,   112,   763,  5286,
    5287,   635,  4540,  4095,  2035,   764,  5539,  2700,  5785,  2702,
    2703,  5841,  5842,   181,   263,   183,  3600,     9,    10,   747,
     748,   749,   764,  2716,  3342,   302,  2719,  5401,   100,   115,
       9,    10,   302,   182,  2528,   273,   763,    26,    81,  3607,
       9,    10,   560,   561,   130,  4101,  4332,    17,   123,  4105,
     181,   763,   183,   181,    97,   183,  5886,   234,  4150,   483,
       9,    10,    32,  3647,  4681,     9,    10,   263,     9,    10,
     753,     9,    10,  3391,   262,   715,   302,   722,     9,    10,
     763,   302,  2775,   126,  2777,  3338,  3339,  3340,  3341,   132,
      95,    30,    17,  3257,   181,    34,   183,   762,    83,  3931,
     302,  3933,    83,  3935,   769,  3937,   291,    32,   293,    34,
     763,  1297,   181,  3945,   183,     9,    10,   501,   502,   637,
    3952,   763,  3954,   166,   338,   181,   149,   183,    36,  3961,
    2709,   326,   516,   138,   302,   763,   121,   640,  4644,  3971,
     121,   403,  4217,  3975,    10,   181,   649,   183,  2727,  3981,
     763,   654,  3736,   138,     9,    10,   762,   138,  3990,  3991,
    3992,  3993,  3994,   769,   569,     9,    10,    95,   382,  1226,
     384,   302,  2751,  2752,   302,  1232,  1233,   182,  3342,  5972,
     762,  2760,  2761,  2762,    92,   762,  4403,   769,   656,   181,
     656,   183,   769,  2529,  5971,     9,    10,   182,  2891,  2535,
      69,   182,   181,  4165,   183,   444,   763,   115,  3567,  3568,
    3569,  3570,   181,   261,   183,   302,     9,    10,  3512,   763,
    4165,  2913,   130,     9,    10,  2719,  4440,  3391,  4165,   613,
     614,   112,   181,   302,   183,     9,    10,   181,  2931,   183,
     181,  3017,   183,   181,  5777,   183,   302,     9,    10,    61,
     181,   763,   183,   762,   946,     9,    10,    93,     9,    10,
     769,     9,    10,   477,   762,  2958,   302,  1310,  1311,    69,
    2963,   769,     9,    10,   966,  2968,   649,   763,  2971,  2972,
    2973,   973,   974,  3059,   768,   193,   115,   181,  3064,   183,
    2983,   276,   200,   162,   115,   276,     9,    10,   753,   115,
    3659,  1344,   138,   719,   763,    17,   769,   143,   763,   764,
     302,   180,   526,   769,  3567,  3568,  3569,  3570,   763,   764,
      32,  4813,    34,   302,  3017,  3154,   181,     6,   183,     9,
      10,    84,    11,   302,  2913,   644,    15,   181,   261,   183,
     752,   753,   754,   755,   756,   757,   182,   728,  3141,  2982,
     248,  3856,   422,   302,   762,  3184,  3185,   268,   302,  4194,
     574,   302,   162,  3056,   302,  4659,  4660,   181,    76,   183,
    4388,   302,  4390,   763,   117,  4393,   763,   763,   764,  4194,
     180,  4399,  4400,  3717,  5001,   128,     9,    10,   181,  4351,
     183,     5,   135,     6,  5440,   181,  5442,   183,  4416,   324,
     763,   764,    95,    42,   675,  3234,  3659,   181,   302,   183,
     763,   764,  4357,  1446,  1447,  4157,    95,   342,    84,   181,
    4357,   183,  1455,   348,  4641,   763,   764,   181,   125,   183,
     181,   763,   183,   181,   594,   183,   236,   237,   763,   764,
    4182,  4183,  3135,  3136,   181,   634,   183,   302,  3141,   374,
     664,   752,   753,    69,  1487,    68,  1489,  3150,   302,   367,
     762,  3154,  4458,  2494,  2958,  3892,   461,  4005,   181,  5834,
     183,   685,  1505,  1506,   571,  1508,    95,   689,   117,  2973,
    3059,  3257,   225,  1516,  1517,  3064,   763,  1520,   302,   128,
     177,  3184,  3185,   763,   177,    17,   135,   701,   702,   268,
     704,   181,   706,   183,   123,    76,    77,  5872,     6,   302,
      32,   764,    34,   256,   413,  5880,   302,   114,    17,   138,
     343,  3213,  3214,  3215,  3216,   164,  3218,  3219,   302,   334,
      49,   768,  4634,    32,   762,  1387,  1388,   763,  3856,  1391,
     302,  3234,   763,     9,    10,  5910,   162,   771,   302,   369,
      83,   302,     9,    10,   302,   110,   111,  3250,   194,    58,
     372,   763,   374,   182,   180,   302,  3342,   722,  5074,   762,
      68,    70,   763,   764,  3266,  3267,  4690,  3269,   762,  3271,
    3272,  3273,  3274,  3275,  3276,  3277,   225,  3279,   121,   302,
    3282,    90,  4667,   328,  3286,   763,  4509,   763,   764,   411,
     763,   764,  4972,  4516,   722,   138,  4972,   763,   764,   763,
     764,    15,   324,    34,    10,  3391,   762,   256,   762,    15,
     236,   237,   302,   763,   764,   124,   762,   439,   762,   130,
     342,  5160,   763,   246,   247,   763,   348,   763,   764,  3332,
    5192,  3135,  3136,   256,  3337,  3338,  3339,  3340,  3341,   182,
    4563,  3344,   472,   762,  3763,  3764,  3150,   762,  3767,  3768,
      36,  3914,   374,    69,  3773,  3774,   634,   168,   169,   763,
     764,   408,   580,   762,  4619,   163,   763,   762,  3257,   763,
     764,   416,   201,   762,  4004,  4647,  4004,  4005,  5194,  4651,
      69,  3499,  3856,   188,   763,   762,  3531,   762,    57,   200,
     763,   764,  4647,   762,   747,   748,   749,   763,   518,   519,
    4647,  5008,   522,   523,   524,   181,    92,   183,   762,   125,
     762,   125,   690,   762,   181,   693,   183,   763,   762,   125,
      89,   762,   552,   137,   763,   764,   762,   472,   558,   115,
    4482,   137,   261,   276,   762,  4577,   125,  4041,   246,   247,
    5388,   270,   720,   762,   130,   762,   162,   188,   256,   762,
     728,  4853,   574,  3342,   168,   169,   762,  4869,   290,   291,
     188,   763,   168,   169,   180,   762,   277,   763,   764,   687,
     279,   763,   764,   162,   763,  3478,   521,   146,   762,   609,
     715,   762,   291,   312,   763,     9,    10,   762,   610,   763,
     764,   180,   324,   763,   764,   763,   764,   264,   762,   213,
    4169,  4170,  3391,   735,   763,   174,   762,   213,  4836,   763,
     342,   263,   763,   558,   200,   763,   348,   763,   764,   762,
     236,   237,   763,   762,  4128,   762,   302,   763,   764,  3532,
    4004,  4005,   762,  4137,   769,   302,   499,   460,   501,   502,
    3344,  4185,   374,  3546,   769,   675,  3549,   236,   237,   763,
     764,   763,   764,   516,   194,  2896,  4185,  4185,   369,   763,
      49,   763,   764,  4818,  3567,  3568,  3569,  3570,   763,   764,
    5409,  4818,   762,   752,   753,   754,   755,   756,   757,   762,
    3719,  3584,  3585,   392,   714,   394,   763,   764,    11,   763,
     764,   762,  4185,   422,  3739,   123,   762,  5121,   763,   762,
     730,    57,   763,   764,   273,   762,  4169,  4170,  3711,   763,
     138,    34,     9,    10,  4185,   763,   764,  4185,   447,   763,
     764,   328,   762,     9,    10,    11,   762,  3745,  4354,   194,
     675,   747,  3635,    89,     9,    10,  3639,   413,    61,   763,
     750,   751,   752,   753,   754,   755,   756,   757,  5255,  5176,
     613,   614,   460,   762,   182,   762,  3659,   181,   762,   183,
     763,   762,   369,    42,  3667,   763,   764,   763,  3671,   762,
     481,   763,   764,   201,   763,   764,     9,    10,  5540,   763,
     762,   367,   763,   764,   762,   730,   762,   110,   111,   762,
     146,   763,  3695,   715,   762,  3698,   762,  5536,  5537,   763,
    5296,   496,   763,   762,  5300,   763,   762,   130,  3711,   763,
     764,  4185,   201,   763,   764,   764,  3719,  3720,   174,   764,
     763,   764,   762,  5539,  5404,  5405,   762,   434,  5404,  5405,
     762,  3734,  3734,  4548,   763,   764,   762,   546,   117,   177,
     763,   762,   665,   762,   667,   168,   169,    34,  4392,   128,
     173,   763,   764,   762,   177,    95,   135,  3906,  4299,   248,
    3933,   762,    95,    32,   762,   472,  3939,    57,   762,  3942,
    3856,   295,   177,   763,    61,   762,  3949,   200,   302,     9,
      10,    11,  3123,   762,   181,   164,   183,   762,  2131,    58,
     762,  2134,   763,   764,   762,   181,   762,   183,   177,    89,
     762,    70,   763,   764,   762,  3844,   181,   762,   183,  2152,
     763,   764,   763,   764,   521,   105,   645,   273,   767,   762,
    2163,    90,   762,   110,   111,   751,   752,   753,   754,   755,
     756,   757,   321,   763,   764,  5674,  3839,    57,  5269,  4380,
    4470,   762,  4470,   130,   653,   552,   225,   762,   181,   762,
     183,   558,  5448,   762,   277,   124,   146,   665,   666,   667,
     668,   763,   764,  3667,   762,  4917,   762,  3671,   762,    89,
     763,   764,   763,   764,   763,   764,  3217,   256,   301,   763,
     764,   168,   169,   715,   174,   105,   173,  3890,  5485,   264,
     177,   720,   701,  3896,   580,   334,   335,   369,   762,   728,
     763,   764,  4531,  4531,   283,   302,   329,   763,   764,    34,
     399,  3914,   762,   200,  4808,   724,   302,  4643,  4004,  4005,
    4548,  3262,   762,  3264,  3265,    33,   146,   302,    36,  3270,
     763,   764,   371,   422,  1567,  1568,    61,  3278,  4531,  5778,
     209,   762,  3283,    49,   416,  5087,   369,   763,   764,   663,
     762,   181,  5094,   183,   174,  5562,   762,   663,   447,   762,
    4531,   762,  5104,  4531,   763,   764,  5108,  3856,   675,   302,
     762,  5113,   762,  4488,   413,   763,   764,   763,   764,   763,
     764,   762,   762,   273,    92,   110,   111,   571,    96,   234,
     277,   769,   769,  4508,  5217,   769,  4470,  4000,   769,   769,
     472,   687,  4517,   769,   769,   130,   495,   115,  4523,   115,
     279,   769,     9,    10,   301,   769,   769,   656,  4533,   762,
     673,   421,   130,   730,   138,  5552,   449,  4542,  4543,    93,
     673,   689,   662,   496,   750,   751,   752,   753,   754,   755,
     756,   757,   329,   168,   169,   415,  5431,    93,   173,   764,
     110,   111,   177,   273,   764,   283,   662,  4531,   481,   343,
     764,   750,   751,   752,   753,   754,   755,   756,   757,   377,
     130,   764,   302,   764,  4548,   200,   153,   684,  4972,   566,
     552,  4896,   369,   747,    80,   193,   558,   374,   447,   447,
    4093,    49,   200,   728,   762,   201,   763,   287,    95,  4185,
     230,  5373,    61,   391,   770,     5,   570,  5252,   168,   169,
     390,     4,   728,   769,   413,  4004,  4005,    14,  5373,  5521,
    4123,    15,   296,   392,    18,   394,  5373,  5252,   764,   177,
     416,  4270,   769,   241,   408,  4138,  4138,   609,    96,   630,
     200,  4770,  4770,   769,   689,   763,    67,   762,  4151,   112,
     493,   590,   277,   295,   548,    95,   645,   115,   123,  4162,
     649,  4164,   295,    57,   270,  4168,  4169,  4170,   607,   277,
    5572,     9,    10,    11,   762,  5430,   301,  4770,   148,   768,
     762,   764,  4185,  4186,   181,  4324,   183,     6,  4333,   413,
     763,   763,    86,   632,   481,    89,   763,    68,   319,  4770,
     345,   690,  4770,   675,   329,   764,   769,   352,   763,   763,
    4213,   105,   106,   763,   635,    93,   769,   277,  4221,    93,
       9,    10,  4763,   368,   647,   763,   763,  4768,  4769,   763,
     298,   720,   671,   378,   379,   380,   769,   762,   137,   728,
     161,   301,   714,   388,   369,   762,  4248,   168,   169,   100,
     764,  4881,   146,  4881,   268,   764,   771,  5784,   730,   367,
     193,   764,    93,  5535,  4266,  4267,   343,  4270,  4896,   769,
    5542,   165,   764,    34,  4276,  4395,   545,   546,   764,   173,
     174,  4284,  4285,   241,  4287,   206,   673,  5542,  5511,  5512,
     125,  5514,   764,   754,   476,  5542,  4770,   686,   436,    93,
     673,  4930,  4930,   261,   764,   302,  4309,  4309,  4481,   369,
    4483,  5713,   389,   736,   421,   764,   422,  5132,   762,   277,
     770,  4324,    33,   125,   764,    36,   193,   248,   346,  4502,
    4433,   214,   496,  4336,   496,  4338,  4338,  4930,   496,  4512,
     496,   447,   343,   181,   496,   183,   496,  5073,   764,   764,
     268,  4524,  4491,   659,   747,   582,   481,    84,  4497,  4930,
     647,  5792,  4930,   321,   728,    26,    95,  4369,  4541,   263,
     754,   404,   764,   763,   762,   466,  4379,   466,   272,   273,
     274,    92,   764,   528,  4470,    96,  5201,   581,  4391,   495,
     764,   763,   181,   470,   183,    29,  4389,   542,  4401,   295,
    4403,   719,   282,   688,   115,  4408,  4409,  4881,  5680,  4402,
    5682,  4414,   764,   182,  5941,  5230,    95,  4410,  4421,   130,
     328,   481,  4896,  4426,  4417,  5680,  4419,  4420,  5955,   764,
    4433,  5483,   701,  5680,  5961,  4438,  5659,  5839,  5661,  5662,
    5967,   399,   764,   762,    18,  4531,   268,   116,   369,   736,
     123,   636,    59,    57,   763,   532,  4930,  3798,  3799,  3800,
     381,   369,  4548,   763,   302,   763,   413,   763,   763,   395,
    5901,   754,   580,   550,   551,   264,    95,   769,   555,   556,
     557,  4285,   627,    57,   590,    89,   763,   763,  4491,   200,
     753,   762,   386,   763,  4497,   763,   763,   642,   763,   763,
     394,   105,   763,   763,  5132,   763,   110,   111,   416,   763,
    5404,  5405,    86,   302,   764,    89,   764,  3858,  3859,   763,
    3861,   763,   647,  4526,   764,   631,   434,   764,   764,   763,
     241,   105,   106,   678,   763,   235,   762,  5078,   464,   762,
     762,   757,   146,   649,   193,   762,   623,   692,   763,   361,
     577,  1990,  5604,  5401,     9,    10,   747,  5372,   263,   263,
     263,   268,   762,   484,   472,    99,   277,  4706,    95,   764,
     174,    93,   146,  5201,     9,    10,    93,   490,   762,   687,
     769,  4470,   762,   764,   690,   764,   769,   693,   763,    95,
     226,   165,   769,   425,   671,   601,   769,  5649,   764,   173,
     174,   234,  5230,   529,  4408,   531,     6,   764,    62,   718,
     536,   736,    93,   521,   720,   764,   177,   177,   263,   763,
       9,    10,   728,   280,    53,    54,    55,    56,   345,   125,
    4633,   100,   764,   762,   555,   352,   248,   544,  4641,   248,
      95,  5693,  4531,   248,   552,   644,   248,   248,   298,   177,
     558,   368,   762,    93,   264,   747,   367,   747,  5132,  4548,
      95,   378,   379,   380,    53,    54,    55,    56,   747,   273,
     764,   388,   747,   631,   600,   747,   736,   747,   107,   108,
     109,   747,   747,   283,  4770,   747,   747,   645,   747,   263,
     747,   649,   747,   747,  4697,  4834,   747,   747,   272,   273,
     274,   138,   747,  4706,    17,  4708,  4709,   747,  4710,  5337,
    5933,   747,   747,   747,   719,   747,   747,   643,   107,   108,
     109,   747,   495,   764,  4726,   769,   181,  5201,   183,   158,
     159,    72,   316,   268,   493,   693,   268,   268,   268,   769,
     769,  4780,   764,  4084,  5372,   739,   181,   375,   183,   123,
     763,   768,   122,   122,  4757,   763,  5230,   769,   188,  4877,
     763,  4764,   720,  4766,   753,  4106,   753,   675,  4771,   158,
     159,   763,   763,  5401,   769,   763,   769,    11,   763,    26,
     763,  5428,   763,  4786,   764,    42,  4825,  4789,   762,  4828,
     762,   682,   181,   268,   183,  4881,   321,   110,   111,   230,
     229,   571,    95,    95,   698,    95,   732,   701,    42,    95,
    4896,   528,   386,   263,   263,   478,   710,   743,   769,   207,
     394,   764,   730,   753,   174,   542,   425,  4830,  4831,  4832,
     762,  4834,  4835,  4826,  4837,    11,   185,   128,  4841,  4842,
     229,   128,  4845,   762,  4930,   747,    80,   302,   764,    83,
     764,    42,  4855,  4856,   530,  4858,   764,    91,   747,    93,
     117,  4864,    92,  5337,   316,   177,   100,   302,   769,   580,
     104,   128,  4874,   651,   303,    26,  4879,   764,   135,   104,
     114,  4770,   763,   117,   769,   764,   762,   121,   391,   123,
     391,   263,   263,   215,   128,   263,    42,    11,  5372,  4902,
     762,   135,   762,   762,   138,   100,   769,   164,   754,   143,
     221,  4950,  5964,   302,   303,    93,   763,  4258,  4259,  4260,
     177,   268,   177,  4264,  4265,   642,   117,  5401,  4269,   571,
     164,  4272,   114,   754,  4275,   456,   764,   128,  5585,   768,
     408,  4282,   762,   177,   135,   762,   762,  4950,   182,   124,
     124,  4954,   763,   763,   763,   763,   174,   762,   764,   763,
    4764,   678,   769,   764,   230,   763,   395,   201,   225,   769,
     763,   117,   182,   164,   762,   692,   687,   763,    17,   763,
     122,    26,   128,   762,   747,   762,   177,   216,   763,   135,
     230,   225,  4881,   769,    95,    95,   763,   763,   207,   256,
     234,   763,   128,   128,   764,    94,   395,  4896,  5153,   297,
     762,   762,   762,  5016,   207,   762,   747,   541,   164,   764,
     404,   404,   256,   193,  5027,   391,   762,   726,   762,   764,
     534,   763,   762,   734,   225,   464,   263,   367,   193,   193,
     268,  4930,   276,  5046,   193,    26,  5132,   129,   282,   283,
    5694,   690,  5055,   193,   129,   193,   193,   193,   690,   578,
    5063,   193,   296,   193,   298,   256,  5069,   301,   268,  5072,
      11,   110,   111,   425,   226,   464,    99,   410,  5081,   225,
     488,   199,  5085,  5086,   762,   374,   563,   762,    61,   402,
      93,    93,   763,   174,    26,   763,   298,   232,   763,   490,
     529,   630,   531,   416,   763,   418,  5145,   536,   763,   182,
     256,   764,    26,   764,   139,  5201,   763,   763,   128,   193,
     764,   128,   763,   432,   698,  5128,   764,   701,   143,    94,
     738,   762,   762,   212,   763,   448,   710,  2576,  2577,   763,
     529,   764,   531,  5958,  5230,   177,    11,   536,   769,   628,
     463,   662,  5155,   764,  2593,   174,   174,   763,   726,   112,
     763,   130,   726,  5166,  2603,  2604,   763,  5170,    94,   200,
     591,   600,   177,  5176,   471,   369,   632,   177,   634,   264,
    5183,   425,   298,   496,  5329,   571,   123,   374,   293,   293,
     646,   211,    17,   762,   764,   138,   652,   653,   563,   484,
     763,   514,   658,   534,  4545,   763,   763,   763,  5211,   443,
     763,   600,   763,   124,   643,    32,   672,   763,   763,  5222,
     601,  5224,   261,   764,    26,   763,   763,   769,   283,  2668,
    2669,  2670,  2671,   283,   563,    10,   762,   130,   130,    11,
     763,    11,   641,  5132,   764,   763,   762,   762,   762,   762,
     361,  5337,   764,   763,   643,    11,  5903,   764,  5376,   123,
     130,   298,   764,   763,   373,   655,   261,   408,   130,   304,
     279,   769,    93,   747,    93,   174,   764,   763,  5317,   763,
     534,   594,  5321,   431,   283,   763,  5372,   763,   601,   762,
     670,   283,    10,   268,  5297,   405,   570,   762,   611,   762,
     283,    33,   769,   732,  5307,   769,   763,  5310,   769,   769,
     769,   624,  5201,    67,   743,  5401,   769,   177,   769,  5322,
     140,   777,   769,   769,   769,   769,   769,   769,   769,  5332,
    5958,   769,   764,    84,    84,   763,   762,   764,   261,   762,
     298,  5230,   655,   732,   280,   658,  5485,   571,   174,   445,
    5353,   763,   763,   763,   743,   636,   589,  5396,   426,   762,
     673,   762,  5365,   402,   762,   349,   589,   763,   762,   174,
    5363,   763,   151,   301,    91,   563,    26,   416,    26,   418,
    5383,  5384,   764,    79,    26,    61,    61,   670,   763,    10,
     769,   847,   696,  5396,   177,   130,   763,   681,   726,   763,
     762,   762,   858,   762,   860,   861,   862,  5211,   687,   448,
     130,   867,   173,   869,   280,   322,    61,  5420,    11,   563,
      26,    26,    26,   123,   463,   414,   763,   762,   571,   636,
    5433,    33,  5435,    33,   404,   762,   404,  5476,   416,    93,
     763,   575,   762,   762,   900,   762,   170,   722,  5337,   905,
     571,  5454,   762,   769,   571,  5494,   764,   496,   143,   762,
     682,   762,   321,   763,   762,    93,   408,   769,    26,    26,
    5472,   315,   177,   177,   769,   514,   280,   226,    63,   935,
     762,   466,  5485,  5372,  5958,   762,   764,   763,    75,   945,
     763,   763,    26,   174,   114,   762,   234,   636,  2982,   764,
     734,   874,  1216,  1778,  3640,  3284,  5509,  4887,  4883,  4885,
    1176,  1865,  5401,   747,  3138,  2535,  5447,  3784,  5504,  5137,
    5653,  5845,  1302,  4788,  4954,  4930,  5325,  5333,  5396,   763,
     764,  5237,  5222,   767,   768,  4545,  1638,  2473,  3647,  3384,
    5337,  3330,  4883,  4471,  4885,  4005,  4887,  2634,  2054,  5552,
    2055,  5554,   778,  2057,  2056,   594,  1343,  1928,  1983,  5455,
    5121,  5365,   601,  5305,  3838,  3246,  4849,  5685,  4147,  5014,
    4151,  4633,   611,  2294,  5787,  5714,  5701,  5269,  1034,  1035,
    1036,  1037,  5018,  5901,  5865,   624,  5903,  5585,  3698,  4163,
    1046,  4647,  5323,  2513,  3833,  5807,  5598,  4426,  4757,  3839,
    5842,  5638,  5648,  5525,  4063,  3941,  3996,  5651,  5168,  4950,
    5694,  4490,  5651,  4498,  5617,  4102,   655,  3482,  4097,   658,
    5623,  4105,  5625,  5626,  5871,    86,    86,  5836,  5308,  5837,
    5728,  5634,  5634,  5608,   673,  5601,  4516,  5297,  3838,  4423,
    1190,  1321,  3116,  3120,  5369,    11,  1833,  1103,  5690,  5652,
     689,  5654,  5167,  1965,  2624,  2446,  2311,  3926,  3344,  5000,
    2735,  1279,  3497,  3743,  5374,  2573,  4818,  4138,  5807,  5680,
    1895,  2841,  2845,  3170,  3531,  1629,    42,  1449,  1276,  1571,
    4137,  3057,  1481,  3616,  3051,  3045,  4668,  5690,  4117,  5593,
    5444,  5869,  4697,  5870,  3729,  5155,  3521,  1455,  5701,  5844,
    5008,  5154,  5176,  5562,  5004,  3600,  5708,  5709,  5047,  2554,
    5153,  5714,  3719,  2686,    80,    86,  1401,    83,  2728,  1648,
    4641,  4246,  3210,  4215,  5863,    91,  5765,    93,  4213,  5784,
     795,   656,   796,  2417,   100,  1713,  5739,  5739,   104,  1977,
    5743,  5744,  2418,   653,   653,   110,  3040,  5750,  1204,  2467,
    1206,   117,  5069,    71,  5058,   121,  1823,   123,  3929,  5899,
    3199,  3200,   128,  3202,  3203,  1274,  5769,  5343,  1405,   135,
    5922,  5518,   138,  5961,  5967,   971,  3617,   143,  2440,  4162,
    4185,  5784,  2236,   652,  2913,   652,  3015,  2362,  2995,  2994,
    2036,  1657,  1850,   650,  5796,   113,  1110,  5799,   164,  3797,
    2618,  1397,  5841,  5842,  5807,  3332,  5945,  2971,  3130,  5208,
    3844,   177,  5951,   688,  3611,  1224,   182,  4204,  3045,  4671,
      86,    86,    86,  5968,  5827,    -1,  2529,  5685,    -1,    -1,
      -1,    -1,   150,    -1,    -1,   201,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5846,    -1,    -1,    -1,  5886,  5652,    -1,
      -1,    -1,    -1,    -1,  3293,    -1,    -1,    -1,    -1,   225,
    5863,    -1,    -1,    -1,    -1,    -1,  5869,  5870,   234,    -1,
      -1,    -1,  5958,    -1,  1330,    -1,  1332,  1333,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     256,    -1,    -1,  5896,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     276,    -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5266,    -1,    -1,    -1,    -1,
     296,    -1,   298,    -1,    -1,   301,    -1,    -1,  5941,    -1,
      -1,    -1,  5945,    -1,    -1,    -1,    -1,  1403,  5951,  1405,
      -1,    -1,  5955,    -1,    -1,    -1,    -1,    -1,  5961,    -1,
      -1,    -1,    -1,    -1,  5967,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1431,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1442,  1443,    -1,    -1,
      -1,    -1,  1448,    -1,    -1,    -1,  1452,  1453,  1454,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1463,  1464,    -1,
      -1,    -1,    -1,  1469,    -1,  1471,  1472,  1473,  1474,  1475,
      -1,  1477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1488,    -1,  1490,    -1,    -1,  1493,  1494,    -1,
    1496,  1497,  1498,    -1,  1500,  1501,  1502,    -1,    -1,    -1,
      -1,  1507,    -1,    -1,  1510,  5396,    -1,    -1,    -1,    -1,
      -1,    -1,  1518,  1519,    -1,  1521,  1522,  1523,    -1,  5958,
    1526,  1527,  1528,  1529,  1530,  1531,  1532,    -1,  1534,  1535,
    1536,  1537,  1538,  1539,    -1,  1541,  1542,    -1,  1544,  1545,
    1546,  1547,  1548,  1549,  1550,    -1,    -1,  1553,  1554,  1555,
    1556,    -1,  1558,  1559,  1560,    -1,  1562,    -1,  1564,    -1,
    1566,    -1,    -1,    -1,  1570,  1571,  1572,    -1,    -1,  1575,
    1576,  1577,  1578,  1579,    -1,  1581,    -1,    -1,    -1,    -1,
      -1,    -1,  1588,    -1,    -1,    -1,    -1,    -1,    -1,  1595,
    1596,  1597,  1598,    -1,    -1,    -1,    -1,    -1,    -1,   467,
    1606,  1607,    -1,  1609,  1610,    -1,    -1,  1613,  1614,  1615,
    1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,
      -1,    -1,  1628,    -1,    -1,    -1,    -1,    -1,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,    -1,   506,   507,
     508,   509,   510,   511,   512,   513,    -1,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1671,    -1,    -1,    -1,    -1,
    1676,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1686,    -1,    -1,  3672,  3673,  3674,  3675,  3676,    -1,  3678,
    3679,  3680,  3681,  3682,    -1,  3684,  3685,  3686,  3687,  3688,
    3689,  3690,  3691,  3692,  3693,    -1,    -1,  3696,  3697,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    33,   613,   614,    -1,  1754,    -1,
      39,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1777,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,  1811,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,   734,    -1,
      -1,   110,   111,  3812,    -1,    -1,   115,    -1,  3817,    -1,
      -1,   747,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    -1,  5734,    -1,    -1,    -1,   763,   764,    73,
      -1,   767,   768,    -1,   143,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    34,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,
      -1,   115,    -1,   182,    -1,    -1,   120,    -1,    -1,    -1,
      61,   190,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,
      -1,    -1,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1951,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,   252,   253,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,   212,    -1,
    1996,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      34,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,
      -1,    -1,   301,    -1,   238,    -1,    -1,    -1,    -1,  2025,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,   190,
      -1,    -1,   321,  2039,    -1,    -1,    -1,    -1,    -1,    -1,
     329,    -1,   331,    -1,    -1,    -1,   270,    -1,    -1,  2055,
    2056,  2057,    -1,    -1,  2060,    -1,   280,   281,    -1,    -1,
      -1,   350,  2068,  2069,    -1,    -1,    -1,    -1,   357,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
     369,   115,    -1,    -1,    -1,    -1,    -1,   376,    -1,    -1,
     251,   252,   253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   391,   137,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   401,    -1,    -1,   276,   405,   406,    -1,    -1,
      -1,    -1,    -1,   412,    -1,    -1,    -1,   416,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   424,    -1,    -1,    -1,    -1,
     301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2154,  2155,
    2156,    -1,    -1,    -1,   443,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   329,    -1,
     331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     469,    -1,    -1,    -1,   473,    -1,    -1,   348,    -1,   350,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,   422,    -1,
      -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,    -1,   437,    -1,   376,    -1,   251,   252,   253,
      -1,    -1,    -1,    -1,    -1,    -1,  2232,    -1,    -1,    -1,
     391,   520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     401,    -1,   276,    -1,   533,    -1,   535,  2253,    -1,    -1,
    2256,  2257,    -1,  2259,  2260,   416,    -1,    -1,    -1,    -1,
      -1,    -1,  2268,    -1,  2270,    -1,  4255,   301,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4268,
      -1,    -1,    -1,    -1,   573,     7,     8,    -1,    -1,    -1,
     579,    -1,  2298,    -1,    -1,   329,    -1,   331,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    27,    -1,  2313,    -1,    31,
      -1,    33,   473,    -1,   348,    -1,   350,   606,    -1,    41,
      -1,    -1,   483,    -1,  2330,    -1,    -1,    -1,   617,   618,
     619,    -1,    -1,    -1,    -1,   369,    -1,    -1,  2344,    -1,
      -1,    63,   376,    65,    66,    -1,    -1,    -1,    -1,   638,
      -1,    73,  2358,  2359,    -1,    -1,   645,   391,    -1,   520,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,
      -1,   595,   533,    -1,    -1,  2381,    -1,    99,    -1,    -1,
      -1,    -1,   416,    -1,    -1,    -1,   675,    -1,    -1,    -1,
      -1,    -1,   616,    -1,    -1,    -1,    -1,   621,   120,    -1,
      -1,   690,   691,    -1,    -1,    -1,    -1,    -1,    -1,   131,
      -1,    -1,   573,    -1,   703,    -1,    -1,   706,   579,   141,
      -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,   652,    -1,
      -1,    -1,    -1,  2439,    -1,    -1,    -1,    -1,    -1,   473,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,  2458,    -1,    -1,    -1,   178,    -1,    -1,   683,
      -1,  2467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,   193,    -1,    -1,    -1,    -1,    -1,   638,    -1,   768,
     202,   203,    -1,    -1,   645,    -1,   520,    -1,    -1,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,   219,    -1,   533,
      -1,    -1,   224,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   234,    -1,   675,    -1,   238,   239,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   690,
     691,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   573,
      -1,    -1,   703,    -1,    -1,   579,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,  2563,   280,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   298,    -1,    -1,    -1,
      -1,    -1,    -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   764,   638,    -1,    -1,    -1,    -1,    -1,
      -1,   645,    -1,    -1,   336,    -1,    -1,    -1,    -1,    -1,
      -1,   343,    -1,    -1,  2630,    -1,    -1,    -1,   350,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,
      -1,    -1,    -1,    -1,    -1,    -1,   690,   691,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   703,
      -1,    -1,    -1,    -1,   396,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2690,    -1,   408,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2709,    -1,   427,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   440,    -1,
      -1,  2727,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,
      -1,   453,    -1,    -1,   456,    -1,    -1,   459,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2751,  2752,    -1,    -1,    -1,
      -1,    -1,   474,    -1,  2760,  2761,  2762,    -1,    -1,    -1,
      -1,  2767,    -1,    -1,  2770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2779,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2787,    -1,  2789,    -1,  2791,    -1,  2793,  2794,  2795,
    2796,  2797,  2798,    -1,  2800,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2808,    -1,  2810,    -1,    -1,  2813,  2814,  2815,
    2816,    -1,    -1,  2819,  2820,    -1,    -1,  2823,    -1,  2825,
      -1,  2827,    -1,  2829,    -1,    -1,    -1,  2833,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2841,    -1,  2843,    -1,  2845,
    2846,  2847,  2848,  2849,    -1,    -1,  2852,  2853,  2854,    -1,
    2856,    -1,    -1,  2859,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2872,    -1,   590,    -1,
      -1,  2877,    -1,    -1,  2880,    -1,  2882,  2883,  2884,    -1,
      -1,  2887,    -1,    -1,    -1,    -1,    -1,  2893,    -1,    -1,
      -1,    -1,  2898,    -1,    -1,    -1,    -1,   619,    -1,    -1,
     622,    -1,    -1,    -1,    -1,    -1,    -1,  2913,  2914,    -1,
     632,    -1,    -1,    -1,  2920,    -1,    -1,  2923,   640,    -1,
    2926,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2935,
     652,  2937,    -1,    -1,    -1,    -1,  2942,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   671,
      -1,    -1,   674,    -1,    -1,    -1,    -1,     7,     8,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,  2984,    29,
      -1,    31,    -1,    33,   706,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,   716,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3013,    -1,    -1,
      -1,  3017,    -1,    63,    -1,    65,    66,    -1,    -1,   741,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,  3059,    -1,    -1,    -1,    -1,  3064,    -1,
      -1,    -1,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   141,    -1,   143,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,
      -1,  3137,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,   193,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   202,   203,  3160,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   214,   215,   216,   217,  3174,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,   238,   239,
    3196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3222,  3223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,    -1,
     280,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3246,    -1,    -1,    -1,    -1,    -1,    -1,   297,   298,    -1,
      -1,  3257,  3258,    -1,    -1,   305,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3288,  3289,   334,    -1,   336,    -1,    -1,    -1,
      -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,
     350,  3307,    -1,    -1,    -1,    -1,     7,     8,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,  3329,    -1,    -1,    27,    -1,    29,    -1,
      31,    -1,    33,    -1,    -1,    -1,  3342,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,   396,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,
      -1,    -1,    63,    -1,    65,    66,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,  3382,   427,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3391,  3392,    -1,    -1,  3395,
     440,    -1,    93,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,   453,    -1,    -1,   456,    -1,    -1,   459,
      -1,   112,  3418,  3419,    -1,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,   474,    -1,    -1,    -1,    -1,    -1,
     131,    -1,    -1,    -1,    -1,    -1,    -1,  3443,    -1,  3445,
     141,  3447,   143,  3449,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3471,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3492,  3493,    -1,    -1,
      -1,   192,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   202,   203,    -1,    -1,    -1,  3512,    -1,    -1,  3515,
      -1,    -1,  3518,   214,   215,   216,   217,  3523,   219,    -1,
      -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,   238,   239,    -1,
     590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3571,  3572,    -1,    -1,   619,
      -1,    -1,   622,    -1,    -1,    -1,    -1,   278,    -1,   280,
    3586,   282,   632,    -1,    -1,    -1,    -1,    -1,  5577,  5578,
     640,  5580,  5581,  5582,  5583,    -1,   297,   298,    -1,    -1,
      -1,    -1,   652,    -1,   305,    -1,    -1,    -1,    -1,    -1,
    5599,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   671,    -1,    -1,   674,    16,    17,    -1,    -1,    -1,
      -1,    22,    23,   334,  3640,   336,    -1,    -1,    -1,    -1,
      -1,    32,   343,    -1,    -1,    -1,    -1,    -1,    -1,   350,
      -1,    -1,    -1,    -1,    -1,    -1,   706,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   716,    58,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   741,    -1,    -1,    -1,   396,    -1,  3703,    -1,    90,
      -1,    -1,  3708,    -1,    -1,    -1,    -1,   408,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5707,    -1,
      -1,  5710,    -1,  3729,    -1,    -1,   427,    -1,    -1,  5718,
      -1,    -1,    -1,   124,  3740,    -1,    -1,    -1,    -1,   440,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   453,   144,   145,   456,   147,    -1,   459,    -1,
      -1,    -1,    -1,    -1,   155,   156,   157,    -1,    -1,    -1,
      -1,    -1,    -1,   474,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3833,    16,    17,
      -1,    -1,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    32,    -1,    -1,    -1,    -1,   240,
    3856,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,   265,   266,   267,    -1,    -1,    -1,
      -1,    -1,    70,    -1,    -1,  3891,    -1,    -1,    -1,   590,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   290,
     291,    -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   619,    -1,
      -1,   622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   632,    -1,    -1,    -1,    -1,   124,    -1,    -1,   640,
      -1,    -1,    -1,    -1,    -1,    -1,   337,    -1,   339,   340,
      -1,   652,    -1,    -1,    -1,    -1,   144,   145,    -1,   147,
      -1,    -1,    -1,    -1,   355,    -1,    -1,   155,   156,   157,
     671,    -1,    -1,   674,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4004,  4005,
      -1,   392,    -1,   394,    -1,   706,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   716,    -1,    -1,    -1,    -1,
      -1,   209,    -1,    -1,    -1,    -1,   417,    -1,    -1,    -1,
      -1,    -1,  4038,  4039,    -1,  4041,    -1,    -1,    -1,    -1,
     741,    -1,    -1,    -1,    -1,  4051,   234,  4053,   439,    -1,
    4056,    -1,   240,    -1,    -1,    -1,    -1,    -1,    -1,   450,
     451,    -1,    -1,  4069,    -1,  4071,    -1,  4073,    -1,  4075,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   265,   266,   267,
      -1,    -1,  4088,  4089,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     491,    -1,   290,   291,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    16,    17,
      -1,    -1,  4128,    -1,    22,    23,    -1,    -1,    -1,    -1,
      -1,  4137,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
    4146,    -1,    -1,    -1,    -1,    -1,   537,   538,   539,   337,
      -1,   339,   340,    -1,   545,   546,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
     561,   562,    70,    -1,    -1,    -1,    -1,    -1,    -1,  4185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    90,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,    -1,   394,    -1,    -1,  4215,
      -1,    -1,    -1,   604,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,   417,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4246,    -1,    -1,    -1,    -1,   636,   144,   145,    -1,   147,
      -1,   439,    -1,    -1,    -1,    -1,    -1,   155,   156,   157,
      -1,     6,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,   482,    40,    41,    -1,    -1,    -1,
      -1,  4307,    -1,   491,   695,    50,    -1,   698,    -1,    -1,
     701,   209,    -1,    -1,    -1,    -1,    -1,   708,    -1,    -1,
      65,    66,  4328,    -1,    -1,    -1,    -1,    -1,    -1,  4335,
      -1,    -1,    -1,   724,    -1,    -1,   234,    -1,    -1,  4345,
      -1,    -1,   240,    -1,    -1,    -1,    -1,    -1,    -1,   537,
     538,   539,   743,    -1,    -1,    -1,    -1,   545,   546,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,   265,   266,   267,
     115,    -1,    -1,   561,   562,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   290,   291,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   604,  4423,    -1,    -1,
      -1,     5,    -1,     7,  4430,  4431,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   337,
      -1,   339,   340,    -1,    -1,    -1,    -1,    31,   636,    -1,
      -1,    -1,    -1,    -1,    -1,    39,   201,   355,    -1,    -1,
      -1,    -1,    -1,    -1,  4470,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,   392,    -1,   394,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   695,    -1,    -1,
     698,    -1,    -1,   701,    -1,    -1,   261,    -1,    -1,   417,
     708,    -1,    -1,    -1,    -1,  4531,   110,   111,  4534,    -1,
      -1,   115,    32,    -1,    34,    -1,   724,    -1,    -1,    -1,
      -1,   439,  4548,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   450,   451,    -1,   743,  4562,    -1,    -1,   143,
      -1,    61,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   327,    -1,   482,    -1,    -1,    -1,    -1,    -1,
      -1,   336,    -1,   491,    -1,    -1,    -1,    -1,   182,    -1,
      -1,    -1,    -1,   348,    -1,    -1,   190,    -1,    -1,    -1,
     110,   111,    -1,    -1,   359,   115,    -1,    -1,    -1,    -1,
    4626,    -1,  4628,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,    -1,    -1,    -1,    -1,  4642,    -1,   383,   537,
     538,   539,    -1,    -1,    -1,    -1,    -1,   545,   546,    -1,
      -1,    -1,    -1,  4659,  4660,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   561,   562,    -1,    -1,   251,   252,   253,
     415,   416,  4678,    -1,   419,    -1,   421,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     190,    -1,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   446,   447,    -1,    -1,    -1,   604,    -1,    -1,   454,
     455,    -1,    -1,    -1,    -1,    -1,    -1,   301,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   471,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   329,    -1,   331,   493,    -1,
      -1,   251,   252,   253,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4770,    -1,   350,    -1,    -1,   514,
      -1,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,  4795,
      -1,    -1,   376,    -1,    -1,    -1,    -1,   695,    -1,    -1,
     698,   301,    -1,   701,    -1,  4811,    -1,   391,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,
      -1,   405,    -1,    -1,   569,    -1,   724,    -1,   412,   329,
      -1,   331,   416,    -1,    -1,    -1,    -1,    -1,   583,    -1,
      -1,    -1,    -1,    -1,    -1,   743,    -1,    -1,   348,   594,
     350,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   443,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   612,    -1,   369,
      -1,    -1,    -1,    -1,    -1,  4881,   376,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,   473,
    4896,   391,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,   401,    -1,   648,    -1,    -1,    -1,    -1,    -1,    -1,
     655,    -1,    -1,    -1,    -1,    -1,   416,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4930,    -1,    -1,    -1,   673,    -1,
     675,    -1,    -1,    -1,   110,   111,   520,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   533,
      -1,   535,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4975,
      -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,    -1,    -1,
     725,    -1,    -1,   483,    -1,    -1,   731,    -1,    -1,   573,
      -1,    -1,    -1,    -1,    -1,   579,    -1,    -1,  5004,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   533,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   638,    -1,    -1,    -1,    -1,    -1,
      -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5075,
      -1,  5077,    -1,   573,    -1,   251,   252,   253,    -1,   579,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     276,    -1,    -1,    -1,   634,    -1,   690,   691,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   703,
      -1,    -1,    -1,    -1,    -1,   301,  5132,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   638,    -1,
      -1,    -1,   672,    -1,    -1,   645,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   329,    -1,   331,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   350,   675,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     690,   691,    -1,   369,    -1,  5201,    -1,    -1,    -1,    -1,
     376,    -1,    -1,   703,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5230,   401,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5240,    -1,    -1,    -1,    -1,    -1,
     416,    -1,    -1,    -1,    -1,    -1,    -1,   777,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5269,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5279,    -1,  5281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      -1,  5317,    -1,    -1,    -1,  5321,    -1,   847,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5337,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   520,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   533,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5372,    -1,    -1,    -1,
     900,    -1,    -1,    -1,    -1,   905,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5401,    -1,   573,    -1,    -1,
      -1,    -1,    -1,   579,    -1,   935,    -1,    -1,   938,    -1,
      -1,    -1,    -1,    -1,    -1,   945,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5449,    -1,    -1,  5452,    -1,    -1,    -1,
      -1,    -1,    -1,   983,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   638,    -1,    -1,    -1,    -1,    -1,    -1,   645,
    5476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5494,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,
      -1,    -1,    -1,    -1,  1034,  1035,  1036,  1037,    -1,    -1,
    1040,    -1,    -1,    -1,   690,   691,  1046,    -1,    -1,  5525,
      -1,    -1,    -1,    -1,    -1,  5531,    -1,   703,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5596,    -1,    -1,    -1,    -1,  5601,    -1,    -1,    -1,    -1,
      -1,    -1,  5608,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5638,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5651,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5671,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1204,    -1,    -1,  1207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5728,    -1,    -1,    -1,  5732,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5765,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5785,
      -1,    -1,    -1,    -1,    -1,    -1,  5792,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1330,    -1,  1332,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5834,    -1,
    5836,  5837,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5872,    -1,    -1,    -1,
      -1,    -1,    -1,  1403,  5880,  1405,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5901,    -1,    -1,    -1,    -1,
      -1,  1431,    -1,    -1,  5910,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1442,  1443,    -1,    -1,    -1,    -1,  1448,    -1,
      -1,    -1,  1452,  1453,  1454,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1463,  1464,  1465,    -1,    -1,    -1,  1469,
      -1,  1471,  1472,  1473,  1474,  1475,    -1,  1477,    -1,    -1,
    1480,  1481,  5958,    -1,    -1,    -1,    -1,    -1,  1488,    -1,
    1490,    -1,    -1,  1493,  1494,  5971,  1496,  1497,  1498,    -1,
    1500,  1501,  1502,    -1,    -1,    -1,    -1,  1507,    -1,    -1,
    1510,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1518,  1519,
      -1,  1521,  1522,  1523,    -1,    -1,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,    -1,  1534,  1535,  1536,  1537,  1538,  1539,
      -1,  1541,  1542,    -1,  1544,  1545,  1546,  1547,  1548,  1549,
    1550,    -1,    -1,  1553,  1554,  1555,  1556,    -1,  1558,  1559,
    1560,    -1,  1562,    -1,  1564,    -1,  1566,    -1,    -1,    -1,
    1570,  1571,  1572,    -1,    -1,  1575,  1576,  1577,  1578,  1579,
      -1,  1581,    -1,    -1,    -1,    -1,    -1,    -1,  1588,    -1,
      -1,    -1,    -1,    -1,    -1,  1595,  1596,  1597,  1598,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1606,  1607,    -1,  1609,
    1610,    -1,    -1,  1613,  1614,  1615,  1616,  1617,  1618,  1619,
    1620,  1621,  1622,  1623,  1624,  1625,    -1,    -1,  1628,    -1,
      -1,    -1,    -1,  1633,    -1,    -1,    -1,    -1,    -1,  1639,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   634,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1671,    -1,   658,    -1,    -1,  1676,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1686,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1717,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1754,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1777,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   777,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1802,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   847,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     935,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     945,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2025,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2039,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1037,    -1,    -1,    -1,    -1,  2057,    -1,    -1,
    2060,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2068,  2069,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2129,
    2130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2154,  2155,  2156,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2168,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1204,
      -1,  2221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2232,    -1,    -1,  2235,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2253,    -1,    -1,  2256,  2257,    -1,  2259,
    2260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2268,    -1,
    2270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2298,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2313,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2344,  1330,    -1,  1332,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2359,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2399,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1403,    -1,
    1405,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1431,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2458,    -1,
      -1,    -1,    -1,  1448,    -1,    -1,    -1,  1452,    -1,  1454,
      -1,  2471,    -1,  2473,    -1,    -1,    -1,    -1,  1463,  1464,
      -1,    -1,    -1,    -1,  1469,    -1,  1471,  1472,  1473,  1474,
    1475,    -1,  1477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1488,    -1,  1490,    -1,    -1,  1493,  1494,
      -1,  1496,  1497,    -1,    -1,  1500,  1501,  1502,    -1,    -1,
      -1,    -1,  1507,    -1,    -1,  1510,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1518,  1519,    -1,  1521,    -1,  1523,    -1,
      -1,  1526,  1527,  1528,  1529,  1530,  1531,  1532,    -1,  1534,
    1535,  1536,  1537,  1538,    -1,    -1,  1541,  1542,    -1,    -1,
    1545,  1546,  1547,  2563,    -1,    -1,    -1,    -1,  1553,  1554,
    1555,    -1,    -1,  1558,  1559,  1560,    -1,  1562,    -1,  1564,
      -1,  1566,    -1,    -1,    -1,  1570,  1571,  1572,    -1,    -1,
    1575,  1576,  1577,  1578,  1579,    -1,  1581,    -1,    -1,    -1,
      -1,    -1,    -1,  1588,    -1,    -1,    -1,    -1,    -1,    -1,
    1595,  1596,  1597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2630,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1671,    -1,    -1,    -1,
    2690,  1676,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1686,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2767,    -1,  1754,
    2770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2787,    -1,  2789,
      -1,  2791,  1777,  2793,  2794,  2795,  2796,  2797,  2798,    -1,
    2800,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2808,    -1,
    2810,    -1,    -1,  2813,  2814,  2815,  2816,    -1,    -1,  2819,
    2820,    -1,    -1,  2823,    -1,  2825,    -1,  2827,    -1,  2829,
      -1,    -1,    -1,  2833,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2841,    -1,  2843,    -1,  2845,  2846,  2847,  2848,  2849,
      -1,    -1,  2852,  2853,  2854,    -1,  2856,    -1,    -1,  2859,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2872,    -1,    -1,    -1,    -1,  2877,    -1,    -1,
    2880,    -1,  2882,  2883,  2884,    -1,    -1,  2887,    -1,    -1,
      -1,    -1,    -1,  2893,    -1,    -1,    -1,    -1,  2898,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2914,    -1,    -1,    -1,    -1,    -1,
    2920,    -1,    -1,  2923,    -1,    -1,  2926,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2935,  2936,  2937,    -1,    -1,
      -1,    -1,  2942,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2954,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2984,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3013,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3029,
      -1,    -1,  3032,  3033,  3034,    -1,    -1,    -1,    -1,    -1,
    2025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2039,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2057,    -1,    -1,  2060,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2068,  2069,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2154,
    2155,  2156,    -1,    -1,  3174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2253,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2268,    -1,  2270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3307,    -1,    -1,
      -1,    -1,    -1,  2298,    -1,  3315,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2313,  3329,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2330,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2359,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3392,    -1,    -1,  3395,  2381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3418,  3419,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3430,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3443,    -1,  3445,    -1,  3447,    -1,  3449,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3471,    -1,  2458,    -1,    -1,    -1,  3477,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3492,  3493,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3512,    -1,    -1,  3515,    -1,    -1,  3518,    -1,
      -1,    -1,    -1,  3523,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3571,  3572,    -1,    -1,    -1,    -1,    -1,  2563,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3586,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3600,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3640,    -1,    -1,    -1,    -1,  2630,    -1,  3647,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2690,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3729,
      -1,    -1,    -1,    -1,    -1,    -1,  3736,    -1,    -1,    -1,
    3740,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2767,    -1,    -1,  2770,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2787,    -1,    -1,    -1,  2791,    -1,  2793,  2794,
    2795,  2796,  2797,  2798,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2808,    -1,  2810,    -1,    -1,  2813,  2814,
    2815,  2816,    -1,    -1,  2819,  2820,    -1,    -1,  2823,    -1,
    2825,    -1,  2827,    -1,  2829,    -1,    -1,    -1,  2833,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2841,    -1,  2843,    -1,
    2845,    -1,  2847,  2848,  2849,    -1,    -1,  2852,  2853,  2854,
      -1,  2856,    -1,    -1,  2859,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2872,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2880,    -1,  2882,  2883,  2884,
      -1,    -1,  2887,    -1,    -1,    -1,    -1,    -1,  2893,    -1,
      -1,    -1,    -1,  2898,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2914,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2926,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2937,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2984,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3013,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4038,  4039,
      -1,  4041,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4051,    -1,  4053,    -1,    -1,  4056,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4069,
      -1,  4071,    -1,  4073,    -1,  4075,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4088,  4089,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4128,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4137,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3160,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4215,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4246,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3258,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4328,    -1,
      -1,    -1,    -1,    -1,    -1,  4335,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3329,  4345,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3382,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3392,    -1,    -1,
    3395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4430,  4431,    -1,  3418,  3419,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3443,    -1,
    3445,    -1,  3447,    -1,  3449,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3471,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3492,  3493,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4534,    -1,    -1,    -1,  3523,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4562,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3571,  3572,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4626,    -1,  4628,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4642,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3640,    -1,    -1,    -1,  4659,
    4660,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4678,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3729,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3740,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4795,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4808,    -1,
      -1,  4811,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4972,    -1,    -1,  4975,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5004,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4038,  4039,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4051,    -1,  4053,    -1,
      -1,  4056,    -1,    -1,    -1,    -1,    -1,  5077,    -1,    -1,
      -1,    -1,    -1,    -1,  4069,    -1,  4071,    -1,  4073,    -1,
    4075,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4088,  4089,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4246,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5279,
      -1,  5281,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4328,    -1,    -1,    -1,    -1,    -1,    -1,
    4335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4345,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5404,  5405,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4430,  4431,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5486,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5525,    -1,    -1,    -1,    -1,
      -1,  5531,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4534,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4562,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5638,    -1,
      -1,  4626,    -1,  4628,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4642,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5671,    -1,    -1,  4659,  4660,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4678,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5785,    -1,    -1,    -1,    -1,
      -1,    -1,  5792,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4795,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4811,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5901,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5971,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4975,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5004,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5077,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5240,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5279,    -1,  5281,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5531,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5638,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5671,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,   173,
     174,    -1,   176,   177,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5785,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,  5971,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,     6,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    25,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   133,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,   169,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,   269,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,   295,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,   169,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    95,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,   114,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,   169,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,   114,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,   169,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,   169,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,   169,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,   153,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,    -1,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,    -1,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,
      -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,
      -1,    -1,    -1,   170,    -1,   172,   173,   174,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
     217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,
      -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    18,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,   766,
      -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   165,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    24,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    24,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    32,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      61,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    32,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,   770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
       6,     7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     136,    -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,   281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,     6,     7,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    46,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,   281,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,     6,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
       6,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    35,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    29,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,    -1,    -1,   337,   338,   339,   340,   341,
      -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
      -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,    -1,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,    -1,
      -1,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,
      -1,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,    -1,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,   581,
     582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,    -1,   618,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,   650,   651,
      -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,   670,    -1,
     672,   673,    36,   675,    -1,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,    -1,   698,   699,   700,   701,
     702,   703,   704,   705,    -1,   707,   708,   709,    -1,   711,
     712,   713,   714,    -1,    -1,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,    96,    -1,   736,   737,    -1,    -1,   740,    -1,
     742,   743,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   764,    -1,    -1,    -1,   130,    -1,    -1,    -1,
      -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   298,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    36,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    11,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,   769,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    17,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    16,    17,    -1,   747,    -1,    -1,    22,    23,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
     145,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     155,   156,   157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,
      -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     265,   266,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,   291,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    17,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    17,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    17,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    18,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    45,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,    -1,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    29,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    76,    77,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    29,
     698,   699,   700,   701,   702,   703,   704,   705,    38,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    76,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
      -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
      -1,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    -1,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    29,   698,   699,
     700,   701,   702,   703,   704,   705,    38,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,
     740,    -1,   742,   743,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,    -1,    -1,   337,   338,   339,   340,   341,
      -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
      -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,    -1,
      -1,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,
      -1,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,    -1,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,   581,
     582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,    -1,   618,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,   650,   651,
      -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,   670,    -1,
     672,   673,    -1,   675,    -1,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,    29,   698,   699,   700,   701,
     702,   703,   704,   705,    38,   707,   708,   709,    -1,   711,
     712,   713,   714,    -1,    -1,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,    -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,
     344,   345,   346,   347,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
      -1,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,    -1,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,   581,   582,   583,
     584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,    -1,   618,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,   630,   631,    -1,   633,
     634,   635,   636,   637,   638,   639,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,    -1,   650,   651,    -1,    -1,
     654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,
     664,   665,   666,    -1,   668,   669,   670,    -1,   672,   673,
      -1,   675,    -1,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,    29,   698,   699,   700,   701,   702,   703,
     704,   705,    38,   707,   708,   709,    -1,   711,   712,   713,
     714,    -1,    -1,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
      -1,    -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,    -1,
      -1,   337,   338,   339,   340,   341,    -1,    -1,   344,   345,
     346,   347,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
      -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,   581,   582,   583,   584,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,    -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,   631,    -1,   633,   634,   635,
     636,   637,   638,   639,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,
      -1,   657,   658,   659,    -1,   661,    -1,   663,   664,   665,
     666,    -1,   668,   669,   670,    -1,   672,   673,    -1,   675,
      -1,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,    29,   698,   699,   700,   701,   702,   703,   704,   705,
      38,   707,   708,   709,    -1,   711,   712,   713,   714,    -1,
      -1,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,    -1,
     736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    29,
     698,   699,   700,   701,   702,   703,   704,   705,    38,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
      -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
      -1,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    -1,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    29,   698,   699,
     700,   701,   702,   703,   704,   705,    38,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,
     740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,    -1,    -1,   337,   338,   339,   340,   341,
      -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
      -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,    -1,
      -1,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,
      -1,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,    -1,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,   581,
     582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,    -1,   618,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,   650,   651,
      -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,   670,    -1,
     672,   673,    -1,   675,    -1,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,    29,   698,   699,   700,   701,
     702,   703,   704,   705,    38,   707,   708,   709,    -1,   711,
     712,   713,   714,    -1,    -1,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,    -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,
     344,   345,   346,   347,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
      -1,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,    -1,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,   581,   582,   583,
     584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,    -1,   618,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,   630,   631,    -1,   633,
     634,   635,   636,   637,   638,   639,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,    -1,   650,   651,    -1,    -1,
     654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,
     664,   665,   666,    -1,   668,   669,   670,    -1,   672,   673,
      -1,   675,    -1,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,    29,   698,   699,   700,   701,   702,   703,
     704,   705,    38,   707,   708,   709,    -1,   711,   712,   713,
     714,    -1,    -1,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
      -1,    -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,    -1,
      -1,   337,   338,   339,   340,   341,    -1,    -1,   344,   345,
     346,   347,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
      -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,   581,   582,   583,   584,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,    -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,   631,    -1,   633,   634,   635,
     636,   637,   638,   639,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,
      -1,   657,   658,   659,    -1,   661,    -1,   663,   664,   665,
     666,    -1,   668,   669,   670,    -1,   672,   673,    -1,   675,
      -1,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,    29,   698,   699,   700,   701,   702,   703,   704,   705,
      38,   707,   708,   709,    -1,   711,   712,   713,   714,    -1,
      -1,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,    -1,
     736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    29,
     698,   699,   700,   701,   702,   703,   704,   705,    38,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
      -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
      -1,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    -1,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    29,   698,   699,
     700,   701,   702,   703,   704,   705,    38,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,
     740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,    -1,    -1,   337,   338,   339,   340,   341,
      -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
      -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,    -1,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,    -1,
      -1,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,
      -1,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,    -1,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,   581,
     582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,    -1,   618,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,   650,   651,
      -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,   670,    -1,
     672,   673,    -1,   675,    -1,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,    29,   698,   699,   700,   701,
     702,   703,   704,   705,    38,   707,   708,   709,    -1,   711,
     712,   713,   714,    -1,    -1,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,    -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,
     344,   345,   346,   347,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,   412,    -1,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
      -1,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,    -1,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,   581,   582,   583,
     584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,    -1,   618,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,   630,   631,    -1,   633,
     634,   635,   636,   637,   638,   639,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,    -1,   650,   651,    -1,    -1,
     654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,
     664,   665,   666,    -1,   668,   669,   670,    29,   672,   673,
      -1,   675,    -1,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,    -1,   698,   699,   700,   701,   702,   703,
     704,   705,    -1,   707,   708,   709,    -1,   711,   712,   713,
     714,    -1,    -1,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
      -1,    93,   736,   737,    -1,    -1,   740,    -1,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,    -1,    -1,   337,   338,   339,   340,   341,
      -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,    -1,   361,
      -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,    -1,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,    -1,
      -1,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,
      -1,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,    -1,    -1,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,   581,
     582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,    -1,   618,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,   650,   651,
      -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,   670,    -1,
     672,   673,    -1,   675,    -1,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,    -1,   698,   699,   700,   701,
     702,   703,   704,   705,    -1,   707,   708,   709,    -1,   711,
     712,   713,   714,    37,    38,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      45,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    45,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    46,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    57,    -1,    -1,    -1,
      61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    57,    -1,    -1,    -1,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      57,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    61,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      61,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    61,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    61,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    61,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    61,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      61,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,    -1,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,    -1,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   763,    -1,    -1,    -1,
      -1,    -1,   769,   770,   136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   770,   136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,   770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   298,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   763,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   123,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   105,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   168,   169,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   243,   244,   245,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    95,   740,   741,
     742,   743,   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   753,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    95,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,   747,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   200,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   200,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
      -1,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,    -1,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,    -1,    -1,
      -1,   337,   338,   339,   340,   341,    -1,    -1,   344,   345,
     346,   347,    -1,    -1,    -1,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,   412,    -1,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
      -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   110,   111,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,   581,   582,   583,   584,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,    -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,   631,    -1,   633,   634,   635,
     636,   637,   638,   639,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,
      -1,   657,   658,   659,    -1,   661,    -1,   663,   664,   665,
     666,    -1,   668,   669,   670,    -1,   672,   673,    -1,   675,
      -1,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,    -1,   698,   699,   700,   701,   702,   703,   704,   705,
      -1,   707,   708,   709,    -1,   711,   712,   713,   714,    -1,
      -1,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,    -1,
     736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,    -1,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,    -1,    -1,    -1,
     337,   338,   339,   340,   341,    -1,    -1,   344,   345,   346,
     347,    -1,    -1,    -1,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,
      -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,   455,    -1,
     457,   458,    -1,    -1,   461,    -1,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,    -1,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,    -1,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   110,   111,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,   581,   582,   583,   584,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
      -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,   631,    -1,   633,   634,   635,   636,
     637,   638,   639,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,
     657,   658,   659,    -1,   661,    -1,   663,   664,   665,   666,
      -1,   668,   669,   670,    -1,   672,   673,    -1,   675,    -1,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
      -1,   698,   699,   700,   701,   702,   703,   704,   705,    -1,
     707,   708,   709,    -1,   711,   712,   713,   714,    -1,    -1,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,    -1,    -1,   736,
     737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,    -1,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,    -1,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    -1,
     698,   699,   700,   701,   702,   703,   704,   705,    -1,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    63,    65,
      66,    73,    80,    93,    99,   112,   120,   131,   141,   143,
     148,   178,   192,   193,   202,   203,   214,   215,   216,   217,
     219,   224,   234,   238,   239,   278,   280,   282,   297,   298,
     305,   334,   336,   343,   350,   371,   396,   408,   427,   440,
     453,   456,   459,   474,   590,   619,   622,   632,   640,   652,
     671,   674,   706,   716,   741,   773,   776,   777,   778,   779,
     780,   783,   790,   792,   805,   853,   898,   899,   906,   907,
     923,   924,   955,   976,   994,  1059,  1122,  1172,  1270,  1317,
    1320,  1330,  1335,  1341,  1354,  1357,  1363,  1366,  1371,  1378,
    1390,  1638,  1640,  1652,  1655,  1686,  1694,  1708,  1715,  1729,
    1733,  1734,  1738,  1752,  1760,  1764,  1770,  1771,  1772,  1804,
    1805,  1853,  1883,  1890,  1892,  1899,  1902,  1939,  1941,  1946,
    1947,  1948,  1949,  2003,  2012,  2013,  2014,    49,   201,   321,
     399,   447,   495,   645,   649,   690,   720,  1271,  1974,  1975,
    1976,  1977,   171,   444,   493,  1365,  1736,   110,   111,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   361,   362,   363,   364,   365,   366,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   740,   741,   742,   743,  1824,  1826,  1833,
    1840,  1845,  1846,  1847,  1848,  1849,  1850,  1851,  1852,   956,
     514,  1358,   183,   495,   690,  1695,    49,   115,   201,   270,
     422,   447,   495,   631,   649,   690,   693,   720,   728,  1651,
     997,   846,   925,  1653,  1765,   115,   391,   742,  1777,   261,
     689,  1886,   995,  1365,  1173,  1060,  1761,   234,   244,   895,
     900,   902,  1833,   640,   720,  1886,   999,  1656,   900,   901,
     846,   672,  1854,  1716,   900,  1891,  1687,  1833,   996,   210,
    1807,   168,   169,  1446,  1940,   263,   770,  1827,   115,  1886,
     737,  1943,  1639,   468,  1833,  1365,   386,   908,   769,  1821,
    1823,  1833,   791,   584,   662,  1833,  1365,  1753,  1943,  1833,
       6,   655,   702,     6,   655,  1709,   584,   662,   334,   335,
     371,   413,   590,   607,   632,   671,  2006,     0,    80,   774,
     590,    49,    96,   241,   277,   631,   720,   821,  1249,  1250,
    1251,  1651,  1974,  1975,  1976,  1977,   433,   444,   577,  1735,
    1736,  1821,  1833,   230,   287,   762,  1391,  1962,  1285,  1833,
     847,  1833,   747,   747,   847,   100,   112,  1650,   136,  1827,
    1833,  1835,  1002,  1003,  1006,  1029,  1833,  1650,  1309,  1310,
     248,  1434,  1978,  1979,  1974,   747,  1886,  1390,  1652,  1655,
    1686,  1694,  1732,   769,   854,   295,   957,   958,   961,   965,
     803,   804,  1827,   728,  1355,  1886,   217,   100,  1004,  1029,
     114,   149,   461,   602,  1697,  1706,  1707,  1650,   112,  1649,
    1650,  1650,  1650,  1650,   100,  1650,  1650,  1029,  1650,  1650,
     645,  1886,   979,  1833,     6,     7,    41,    46,    63,    73,
      99,   115,   120,   143,   212,   230,   238,   270,   280,   281,
     422,   427,   437,   595,   599,   616,   621,   652,   683,  1835,
    1903,  1907,  1908,  1910,  1912,  1913,   950,   951,   149,   400,
     460,  1658,   457,   661,  1766,   123,  1773,  1884,    38,    87,
      98,   127,   134,   222,   223,   334,   356,   430,   569,   873,
     921,   922,   923,   926,   927,   928,   929,   933,   934,   935,
     936,   937,   945,   946,   947,   948,   969,   971,   972,   974,
     981,   987,  1826,  1834,  1841,  1848,  1850,  1851,  1852,  1886,
      17,    18,    19,    20,    21,    29,    30,    32,    39,    40,
      43,    44,    45,    46,    48,    49,    51,    52,    57,    61,
      64,    84,    85,    86,    88,    89,   101,   102,   103,   105,
     106,   110,   111,   112,   120,   122,   135,   146,   151,   152,
     154,   160,   162,   165,   168,   169,   170,   172,   173,   174,
     176,   191,   195,   196,   197,   198,   205,   216,   217,   225,
     228,   248,   254,   255,   257,   258,   259,   263,   271,   272,
     273,   274,   284,   285,   286,   292,   294,   317,   324,   332,
     348,   357,   359,   360,   362,   363,   364,   365,   366,   381,
     393,   394,   395,   397,   398,   444,   450,   452,   464,   486,
     487,   491,   529,   531,   536,   537,   538,   539,   548,   549,
     565,   579,   585,   586,   593,   600,   630,   636,   637,   643,
     650,   679,   698,   699,   700,   701,   705,   706,   720,   722,
     732,   733,   735,   743,   752,   753,   758,   762,   765,   766,
     769,   770,  1440,  1441,  1442,  1443,  1447,  1459,  1461,  1462,
    1463,  1464,  1465,  1466,  1467,  1468,  1469,  1470,  1471,  1479,
    1483,  1484,  1485,  1486,  1487,  1489,  1492,  1796,  1799,  1801,
    1802,  1803,  1818,  1825,  1826,  1833,  1840,    26,  1061,    17,
     514,  1721,  1762,   345,   352,   368,   378,   379,   380,   388,
     528,   542,   642,   678,   692,   903,   905,   722,   896,   902,
    1833,   846,  1367,   873,   984,   149,   400,  1659,  1693,   902,
       6,   316,   599,  1900,  1901,  1908,  1910,  1855,    32,    61,
     348,   454,   493,   543,   579,   631,   648,   702,   734,   770,
    1212,  1826,  1831,  1833,  1844,  1845,  1846,  1847,  1849,  1850,
    1851,  1852,  1858,  1870,  1874,     6,    40,    41,    50,   115,
     129,   201,   261,   312,   327,   336,   348,   359,   383,   416,
     419,   421,   446,   447,   454,   455,   471,   493,   514,   569,
     583,   594,   597,   598,   612,   648,   655,   675,   731,  1212,
    1248,  1717,  1721,  1722,  1724,  1733,  1826,  1871,   902,  1886,
    1693,   982,  1440,  1806,   326,  1943,  1835,  1372,  1331,    10,
    1944,  1440,  1512,   781,   782,   784,  1739,   403,  1833,   569,
     207,   356,   769,  1835,  1833,  1827,    95,  1336,   514,   601,
     655,  1754,  1755,   268,  1944,   656,   803,   207,   298,  1321,
    1322,  1323,   656,   803,   261,  1710,  1833,  1827,    18,   105,
     106,   263,  1797,  1798,  1828,  2005,  2005,  2005,   444,  2004,
    2005,  2005,   768,  1833,   112,  1121,  1121,  1121,   649,   830,
     115,   115,   115,   261,   645,   201,   270,   422,  1978,   320,
     447,   320,   447,  1974,  1731,  1730,  1416,  1417,  1963,   762,
    1393,  1394,  1395,    83,   121,   276,  1950,  1952,  1956,  1957,
    1273,   719,  1274,   769,   527,   694,   712,    45,  1835,  1836,
    1837,  1907,  1275,  1008,  1030,  1833,    84,  1280,  1279,     5,
      31,    73,   169,   208,   605,  1031,   846,   261,   114,   568,
    1311,  1312,  1313,   644,   422,   728,  1978,  1835,  1342,  1833,
     762,   857,   966,    76,   968,  1440,   965,   268,  1356,  1644,
    1645,  1821,  1007,  1030,     5,    95,  1698,    95,  1698,  1699,
    1703,  1704,  1833,  1706,  1833,    84,  1833,   847,   847,   847,
    1833,  1030,   846,  1835,  1040,  1722,   846,  1642,  1650,  1650,
     998,   125,   980,   594,  1911,   634,   634,   690,   693,   720,
     728,   762,  1439,   461,   571,  1915,   689,  1917,  1914,    50,
     728,  1916,   177,   353,   655,   268,   177,   764,   413,  1440,
     114,  1308,   376,   601,  1767,  1768,   343,   149,   375,  1779,
    1821,  1887,  1888,   295,  1834,    95,   100,   548,  1833,  1834,
    1834,  1834,   975,  1833,   295,  1834,  1833,   413,   922,   768,
     777,   930,   949,  1833,    93,   148,   216,   297,   334,   771,
    1364,   122,   752,   753,  1464,   762,   762,   762,   295,  1440,
    1515,  1516,   762,   762,   762,   762,   762,  1439,  1439,  1439,
     762,  1438,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   762,  1440,   762,   110,   111,
     360,   762,  1513,  1514,  1818,  1825,  1840,   762,   762,   762,
     762,  1440,  1438,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   194,   762,   762,   762,   762,  1438,
     762,   263,  1798,  1439,  1438,  1438,   762,   762,   762,   762,
     762,   762,   762,   762,   174,  1825,   762,   762,   762,   762,
     762,   762,   762,   263,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   722,   762,   762,   762,   762,   762,   722,   762,   762,
     762,   762,   762,   762,   762,   263,   762,   762,   762,   263,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   122,
    1464,   122,  1464,  1464,  1174,  1440,  1968,  1969,  1833,  1825,
    1493,     9,    10,   181,   183,   302,  1444,  1445,    81,    97,
     126,   132,   166,   747,   748,   749,  1448,    15,   125,   137,
     213,   663,  1446,    69,   162,   180,   236,   237,   750,   751,
     752,   753,   754,   755,   756,   757,  1464,    34,   163,   188,
     188,   735,  1828,   769,   762,   194,  1062,   496,   764,   747,
    1828,  1368,  1836,  1838,  1369,  1370,  1821,   718,   123,  1646,
    1660,  1661,  1821,  1911,   571,   177,    95,   177,    61,  1833,
    1857,  1873,   234,   631,   769,    17,    61,   235,   747,  1213,
    1214,  1669,  1835,    93,  1669,  1880,  1669,  1835,  1860,   770,
    1835,    17,    61,  1216,  1217,  1835,  1669,   769,  1861,  1859,
     656,   762,    49,   201,   261,   270,   312,   422,   447,   645,
     720,   728,   137,   296,  1728,   358,   673,   673,   306,   673,
     421,  1728,     6,  1133,  1835,   138,  1606,  1607,  1608,    95,
     125,  1723,  1725,   358,   673,    93,   673,   689,   662,     6,
     338,   382,   384,   477,   526,   574,   664,   685,  1711,  1712,
    1713,   803,   463,   673,   804,  1606,  1728,  1725,   496,   415,
     361,   596,   689,   704,    93,  1432,   673,   725,  1308,   408,
    1808,  1809,  1813,  1833,   977,   764,  1373,  1374,  1375,  1376,
    1821,  1644,   346,   555,   214,   555,  1945,   764,   785,  1440,
     283,   786,    17,   402,   416,   418,   448,   463,   496,   514,
     594,   601,   611,   624,   655,   658,   673,  1740,  1745,  1746,
    1826,  1886,    35,   770,   909,   910,   911,   912,  1825,    11,
     747,  1574,  1575,  1893,  1833,   662,   781,   728,  1333,  1886,
    1757,   343,  1756,   764,   640,  1833,  1945,  1324,  1325,  1324,
     567,   739,   377,   764,  1324,  1324,  1645,   764,   566,  2008,
     684,  2009,   747,   128,   626,  2007,    80,   775,  1446,  1833,
     846,   846,  1121,  1121,  1121,  1121,  1121,  1121,   815,   814,
     816,   728,   447,   819,   447,   817,  1978,  1732,  1737,  1797,
    1833,    95,   123,   182,  1405,  1414,  1415,  1418,  1419,  1420,
    1602,  1608,  1634,  1958,     6,    68,   246,   247,   256,   460,
     665,   666,   667,   668,  1422,  1427,  1428,  1973,   762,  1666,
    1675,  1393,   763,  1962,   230,     6,    68,  1960,  1958,    61,
    1118,  1119,  1130,  1131,  1221,   391,   848,  1833,  1439,   770,
     848,     5,  1009,  1821,   570,   390,  1026,  1026,  1026,     4,
    1836,  1837,  1838,  1923,  1927,  1821,  1313,   399,   475,   847,
    1821,   728,  1343,  1344,  1645,   769,   855,   858,   859,  1440,
    1440,   873,   413,   959,   793,  1644,    93,   347,   433,   435,
     525,   602,   764,  1359,  1360,  1361,  1009,  1026,  1821,    14,
    1696,  1647,  1648,  1822,  1833,   296,  1577,   764,  1700,   769,
    1705,   177,   769,  1040,  1906,  1908,   558,   730,  1041,  1042,
     416,  1838,  1922,  1644,  1643,  1641,   408,   630,   978,   689,
     763,   762,  1928,  1928,  1928,  1928,  1838,  1923,   189,   201,
     261,   447,  1909,   422,   427,   437,   595,   616,   621,   652,
     683,  1913,   112,   264,  1660,   465,   720,  1440,  1769,  1769,
    1379,   493,  1778,  1575,   559,   730,   764,  1885,   931,   932,
     295,  1833,   548,    95,   123,   874,   931,   295,   762,   944,
     148,   768,  1440,   764,   990,   988,   993,   989,   973,  1644,
     762,     6,  1503,  1576,  1503,  1503,  1440,  1516,    76,   295,
     413,  1440,  1512,  1440,    68,  1503,  1576,   763,    57,    89,
     105,   146,   174,   273,   763,  1616,  1620,  1621,   763,  1440,
    1440,  1818,   763,  1968,    53,    54,    55,    56,   107,   108,
     109,   158,   159,   229,   303,   395,   464,   529,   531,   536,
     600,   643,   732,   743,  1571,  1572,  1440,    68,  1495,  1440,
    1440,  1440,  1440,  1440,  1571,  1440,  1825,  1514,   319,   764,
     769,    68,  1503,  1440,    68,  1503,  1440,  1440,  1440,   763,
    1440,  1440,  1443,   763,  1440,  1440,  1440,   763,   635,  1503,
    1503,  1440,    68,  1503,    25,   133,   269,  1440,  1460,  1503,
    1503,  1440,  1440,    68,  1503,  1440,  1512,  1440,   769,  1440,
    1440,  1440,  1456,  1457,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1512,   392,   394,   698,   701,  1573,  1440,
    1440,  1512,  1821,  1512,  1440,  1440,  1440,  1512,  1512,  1512,
      93,  1821,  1440,  1440,  1440,  1512,    93,  1440,  1440,  1440,
     763,  1440,  1821,  1440,  1440,  1572,  1572,  1440,  1460,  1440,
     763,   360,   769,  1819,  1833,  1440,  1440,  1440,  1440,  1440,
    1440,   763,   764,  1804,  1440,   769,   770,  1494,  1835,  1440,
    1440,  1440,  1442,    86,   173,   272,   717,  1446,     6,   323,
    1442,  1449,  1442,   762,  1442,  1442,   137,    15,   125,   137,
     213,  1443,  1443,  1443,  1443,  1443,  1443,  1443,   122,  1443,
     122,  1443,  1443,  1443,  1443,  1443,  1218,  1835,  1464,   762,
    1491,  1587,  1833,   762,   100,  1825,  1472,   445,   479,   554,
     635,  1458,   139,   204,   492,   688,  1063,  1067,    14,   268,
    1763,   905,   394,   698,   701,   904,  1492,  1801,  1818,   764,
     268,   764,  1885,   985,  1661,  1657,   193,  1531,  1532,   764,
      93,  1838,  1837,  1924,   189,   201,   447,  1909,   769,   769,
    1669,   764,  1856,  1908,  1833,    34,  1219,  1440,  1838,   263,
     565,   579,  1881,     6,    17,    61,   177,  1440,  1882,   207,
     478,  1875,  1876,  1877,  1878,   454,   493,   648,  1872,  1669,
    1882,  1833,   702,  1862,  1873,   764,  1864,   673,   754,  1121,
     847,  1821,   847,   306,   847,   847,   847,  1821,  1838,  1821,
    1432,  1432,   847,  1728,  1723,   358,   673,  1728,   125,  1726,
     496,   540,   673,  1720,  1720,   146,   174,   226,   273,   360,
    1609,  1610,  1799,  1825,  1728,  1833,   847,  1728,  1837,  1723,
    1728,  1827,   476,   686,   436,    93,  1714,   764,   421,   673,
    1821,  1725,  1723,  1723,  1440,  1728,  1728,  1728,   762,   766,
    1518,  1519,  1520,  1521,  1522,  1533,  1534,  1535,  1536,   983,
     764,   762,  1811,   874,   770,   125,   764,   193,  1384,  1386,
    1387,   433,   602,  1332,   346,   214,  1440,   786,   787,   496,
     496,   496,   496,   343,   496,   803,   496,   764,  1432,  1741,
     904,   914,  1835,   764,   747,  1826,  1830,  1839,  1845,  1846,
    1847,  1848,  1849,  1850,  1851,  1852,   438,   548,  1833,  1894,
    1895,  1827,  1334,  1644,   268,  1759,   803,  1755,  1833,  1319,
     615,   669,  1326,  1327,  1318,   659,  1323,  1885,  1797,   582,
    2010,  1835,    84,   811,  1906,  1923,  1835,  1833,  1833,  1833,
    1821,  1821,  1121,  2000,  1434,  1988,   834,  1434,  1121,   820,
     822,   824,  1121,  1994,  1997,   818,   822,  1121,   728,    74,
    1421,  1519,   186,   409,  1629,  1630,  1635,    26,    93,   143,
    1429,   201,  1624,  1634,  1958,  1429,  1577,  1606,  1418,  1419,
     754,  1430,  1431,  1434,  1428,  1676,   764,   763,  1952,  1956,
    1411,  1414,  1419,  1416,  1953,  1119,    34,  1212,   404,   161,
     206,   248,   369,   381,   484,   555,   850,   852,  1835,   608,
     713,  1027,  1028,   472,  1023,  1024,  1025,  1032,  1040,  1042,
    1281,   762,  1827,   328,   521,  1017,  1018,  1019,  1032,  1033,
    1034,  1040,  1042,  1010,  1011,  1017,   466,   218,   764,  1931,
    1885,  1278,  1277,  1821,   764,   581,  1345,  1833,   857,   763,
     764,   967,    29,   295,   960,   962,    71,   113,   150,   467,
     497,   498,   500,   501,   502,   503,   504,   506,   507,   508,
     509,   510,   511,   512,   513,   515,   516,   517,   613,   614,
     794,   795,   802,    93,  1362,   719,  1645,  1360,   369,   552,
     609,   714,  1020,  1021,  1022,  1032,  1036,  1037,  1038,  1039,
    1040,  1042,   282,  1005,  1531,   688,   764,  1701,   769,  1705,
    1578,  1601,  1602,  1704,    95,   754,  1833,  1821,  1833,  1041,
     764,  1669,  1670,   764,    28,   220,  1314,  1644,  1644,   873,
     762,   938,   941,  1833,  1929,  1930,   268,   298,  1905,    24,
     754,  1821,  1833,  1921,  1921,  1921,  1921,   952,  1654,  1440,
    1838,  1380,  1381,  1382,  1383,  1821,   116,   149,   207,   739,
    1889,   105,   753,  1613,  1615,  1888,  1440,   931,   123,   636,
    1833,    59,   872,   875,   931,   938,   939,   943,  1833,   979,
     981,   984,   982,   874,  1885,  1440,   763,  1504,   763,   763,
     264,   413,  1440,  1440,    11,   283,   763,   283,   764,  1480,
     763,   754,   763,   764,   764,   763,   763,    95,   763,  1482,
     763,   764,   763,   764,   764,   764,   764,   753,   764,   763,
     762,  1818,  1825,  1503,   763,   763,  1503,   763,   764,   763,
     764,   763,   763,   125,   764,   764,   764,   763,   763,    95,
     764,  1503,   763,    95,  1440,    95,  1440,    95,  1440,    95,
     763,   763,   763,   764,   763,  1503,   763,   763,   763,   763,
    1825,   764,   763,   764,   763,   764,   764,   764,   764,   764,
     763,   763,   764,   764,   764,   763,   764,   763,   763,   764,
     763,   763,   763,   763,   763,   763,   763,   763,  1821,   763,
     763,   763,   764,   763,  1821,   763,   763,   764,   763,   764,
     764,   763,   764,   764,   764,   763,   763,   764,  1825,  1833,
     763,   769,   763,   764,    11,   490,   764,  1237,   764,   763,
    1571,  1571,  1512,   230,   762,  1961,  1962,  1964,  1965,  1966,
    1967,   767,  1825,  1872,   235,    86,   173,   272,   717,   762,
      10,  1440,  1968,   420,  1442,  1442,   762,  1442,  1442,  1440,
    1440,  1588,   193,  1590,   762,   762,   769,  1434,  1476,  1477,
    1478,   361,   762,  1072,  1073,  1065,  1072,  1066,   577,  1075,
     130,   458,  1440,  1827,   747,  1838,  1838,  1370,   268,  1440,
     234,   287,   722,   762,  1050,  1662,  1665,  1804,   762,    99,
    1908,    95,   764,    24,  1921,  1921,  1921,  1921,  1833,  1833,
    1882,  1873,    93,    93,  1669,    61,  1218,  1220,  1669,   762,
     762,   567,   739,   490,   764,   764,   769,   769,   769,    61,
     734,  1826,  1827,  1832,  1842,  1845,  1846,  1847,  1848,  1849,
    1851,  1852,  1440,  1669,  1875,  1863,  1865,  1866,   763,  1833,
     847,  1827,  1440,  1728,   847,  1728,  1827,    95,  1727,   425,
    1825,   226,   564,   764,   769,   846,  1728,   601,  1606,  1713,
    1726,  1723,  1821,  1728,  1728,  1553,  1833,    42,   117,   128,
     135,   164,   225,   256,  1529,  1530,   234,   764,  1821,   873,
    1809,  1812,  1833,  1810,   872,  1835,    61,  1377,  1833,  1375,
    1821,  1058,  1386,   115,   130,  1246,  1388,    61,   114,   788,
     789,  1440,  1681,  1682,    62,  1748,   803,  1746,  1644,  1747,
     912,   915,   916,   911,   560,   561,   637,   913,    97,   132,
     438,   485,   548,   592,   747,   748,   749,  1896,  1898,  1577,
    1644,   433,   602,   721,  1337,  1338,  1339,  1615,     6,  1758,
     764,   718,  1328,   764,    93,  2011,  1117,  1118,   298,  1904,
    1931,   831,   283,   708,  1259,   177,   177,   806,   807,   847,
    1121,  1121,  1821,   823,   825,  1994,  1997,   847,  1833,   823,
    1121,   263,  1829,  1829,   770,  1631,  1632,  1633,  1833,  1835,
    1603,   280,   125,  1833,  1624,  1634,  1406,   100,  1581,  1601,
     764,  1440,  1816,  1825,  1434,  1678,  1680,   762,  1673,  1411,
     230,   762,  1392,  1962,  1670,  1670,   544,   248,   248,   644,
    1827,   248,   248,   248,  1827,  1827,  1670,   764,  1025,   153,
     343,   389,   470,   532,   550,   551,   555,   556,   557,   623,
     671,   827,   828,    49,   462,   572,   579,   587,   660,   720,
     832,   833,  1670,  1670,   764,  1019,  1012,  1013,  1032,  1033,
    1034,    26,   298,   727,  1925,   249,   351,   480,   553,   680,
     740,  1919,  1920,  1927,   298,  1934,  1272,   177,   842,  1282,
     762,  1980,  1276,  1344,    93,   856,  1440,   264,   963,   962,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   764,   719,  1670,  1670,  1670,  1670,
     764,  1022,   495,   434,  1014,  1015,  1016,  1032,  1033,  1034,
    1035,  1038,  1039,  1040,  1042,   698,   702,  1423,  1424,  1466,
    1648,  1833,   283,  1833,  1440,   138,  1612,  1519,   769,  1705,
    1885,  1908,  1132,  1835,  1838,  1885,   413,   888,   889,   942,
      72,   763,   764,  1923,   316,  1921,   769,   769,   268,   268,
     268,   268,   873,  1662,   764,  1384,  1386,  1829,   739,   493,
     375,    57,    89,   146,   174,   273,   123,    37,    38,   429,
     430,   734,   881,   882,   883,   885,   891,   918,   919,  1826,
    1843,  1845,  1846,  1847,  1848,  1849,  1850,  1851,  1852,   413,
     922,   768,   940,   763,   764,   991,   970,   986,  1834,   986,
     986,   872,   764,  1440,  1440,   264,    17,    32,    58,    70,
      90,   124,   279,   291,   392,   394,   546,   653,   701,   724,
    1505,  1509,  1510,  1213,  1213,  1505,  1512,   763,   122,   122,
    1440,  1512,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1443,
     769,   763,   763,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,   763,  1440,    95,  1440,    95,  1440,    95,  1440,   122,
    1440,   763,  1457,  1440,  1456,  1512,  1440,  1440,  1440,  1440,
    1440,  1517,  1440,  1440,  1440,  1440,  1512,   146,   752,  1613,
    1617,   122,  1440,  1440,  1440,  1440,  1440,   769,   769,  1833,
    1440,    17,    32,  1232,  1233,  1234,  1235,  1236,  1616,  1615,
     763,  1440,   753,   753,  1542,  1543,  1544,   762,  1402,  1403,
    1404,  1429,  1958,  1541,  1950,  1959,  1970,  1832,  1440,  1968,
    1442,   763,   764,   763,  1442,    10,  1440,  1968,   420,  1571,
    1571,  1589,  1833,    26,   763,  1488,  1511,  1512,  1825,  1440,
     763,   764,   762,  1081,  1443,  1073,   138,  1107,  1108,  1616,
     682,  1076,   321,  1068,  1064,   904,   268,  1821,   413,  1663,
    1666,  1666,   763,  1110,  1664,  1804,  1814,  1815,  1819,  1833,
     230,  1570,  1833,   571,  1922,  1837,  1921,    95,    95,    95,
      95,  1669,  1669,   776,  1838,  1882,   263,   263,   207,   620,
     646,  1879,  1877,  1876,   769,   769,  1669,  1882,  1864,   764,
    1868,  1870,  1874,   419,   731,  1613,  1618,  1718,  1610,  1611,
     425,  1610,  1610,  1825,   174,  1727,  1577,  1723,   230,   287,
    1537,  1545,  1546,  1547,  1548,  1553,  1554,  1969,  1518,   128,
     128,   185,  1556,   135,   225,  1529,  1556,  1518,  1689,  1690,
    1819,  1520,  1531,   413,   763,   764,    11,   413,  1385,   762,
     764,   747,    93,   298,  1742,  1743,   747,   764,  1897,  1606,
      95,  1340,  1338,  1327,   499,   802,  1329,  1615,   530,   316,
    1934,    92,   341,   458,   639,  1265,  1265,   177,  1821,  1821,
     115,   137,   190,   251,   252,   253,   276,   301,   329,   331,
     350,   369,   376,   391,   401,   416,   473,   483,   520,   533,
     573,   579,   638,   645,   675,   690,   691,   703,   762,  1044,
    1048,  1123,  1125,  1126,  1129,  1130,  1131,  1826,   826,   827,
    2001,  1989,   847,   812,  1998,   628,  1821,  1636,  1835,   764,
     769,  1440,  1604,  1817,  1885,   651,  1625,  1951,  1952,    26,
     104,  1579,  1606,  1431,  1435,  1435,   769,  1682,   763,   764,
    1674,  1429,  1416,   762,  1397,  1398,  1952,  1956,  1220,  1214,
     391,   391,   399,   475,   105,   146,   174,   273,  1043,  1619,
    1620,  1826,  1025,  1670,  1670,    26,  1670,  1672,  1670,   153,
     532,   298,  1670,  1671,  1671,   828,  1827,  1827,  1827,  1827,
    1615,  1827,  1827,   763,   764,  1043,  1043,  1019,   764,  1013,
     263,   579,  1835,   263,   263,   263,    10,  1918,   518,   519,
     522,   523,   524,  1932,  1933,     5,     7,     8,    31,    33,
      39,    73,   143,   178,   182,   193,   215,   321,   357,   405,
     406,   412,   424,   443,   469,   535,   606,   617,   618,   619,
     706,  1056,  1124,  1126,  1286,  1290,  1292,  1295,  1301,  1302,
    1303,  1305,  1306,  1598,   373,   641,   215,  1283,  1833,  1981,
      11,  1980,     6,   361,  1346,   857,   873,  1440,   762,   762,
    1615,   762,  1615,  1615,  1827,  1827,  1618,  1827,  1615,  1827,
    1827,  1827,  1827,  1827,  1827,  1827,  1615,  1827,   387,   555,
     657,  1802,  1827,  1615,   795,  1827,  1616,  1043,  1043,  1022,
     100,  1670,   764,  1016,   263,  1443,   769,  1519,  1705,   226,
    1610,   221,  1702,  1577,  1314,    93,   890,   763,  1440,   941,
    1930,   298,  1936,   571,   268,   754,   754,  1923,  1923,  1923,
    1923,   953,   177,  1683,  1382,  1821,  1386,   114,  1389,  1774,
      16,    17,    22,    23,    32,    58,    70,    90,   124,   144,
     145,   147,   155,   156,   157,   175,   209,   234,   240,   265,
     266,   267,   290,   291,   337,   339,   340,   355,   392,   394,
     417,   439,   450,   451,   482,   491,   537,   538,   539,   545,
     546,   561,   562,   585,   586,   604,   636,   695,   698,   701,
     708,   724,   743,  1178,  1180,  1181,  1183,  1184,  1185,  1186,
    1187,  1188,  1189,  1190,  1191,  1192,  1193,   456,    35,    47,
     764,   768,  1440,   939,   408,   413,  1440,  1440,   762,  1198,
    1199,  1199,   762,  1195,  1196,  1198,   762,  1196,  1201,   124,
    1198,  1199,  1199,   124,  1199,  1198,   763,   763,   763,   763,
    1481,  1440,  1440,   763,   182,  1497,   763,   763,   764,   764,
     763,   764,   763,   125,  1473,  1474,  1825,   763,   763,   763,
     763,   764,   763,    93,   763,   763,   764,  1440,  1440,  1440,
    1440,   763,   763,    11,  1450,   763,    11,   763,   763,   764,
     763,   764,   763,   764,   763,   764,   763,   763,   763,   763,
     146,   174,   174,   763,   764,  1440,   763,   763,   764,   764,
     763,  1825,  1833,   769,   763,   762,  1227,  1227,    12,    65,
     630,   752,  1229,  1230,  1231,   764,   764,   763,  1440,  1440,
    1419,  1971,  1972,  1973,  1402,   763,  1962,   230,  1429,  1960,
    1539,  1965,  1966,   769,   763,  1512,  1442,   763,   764,   763,
    1442,  1590,  1582,  1817,   182,  1490,   763,   762,  1435,  1478,
    1069,  1070,  1071,  1833,   763,  1618,   122,    26,   762,  1083,
     747,   762,  1073,  1838,   216,  1667,  1668,  1819,   762,  1665,
     763,   763,   764,   230,   769,  1111,  1112,   763,   764,    95,
      95,  1924,  1924,  1924,  1924,  1882,  1882,   763,   763,   370,
     711,   207,  1833,  1833,  1882,  1867,  1869,    57,    89,   146,
     174,   273,  1606,  1611,  1719,  1728,  1555,  1549,   763,  1956,
    1959,  1429,  1958,  1521,  1805,   767,   128,  1556,  1556,  1533,
     128,   177,   283,   764,  1688,  1669,    94,  1425,   297,  1833,
     762,   762,   200,  1567,  1568,  1569,  1833,   789,   762,  1744,
     207,   345,   352,   368,   378,   379,   380,   388,   528,   542,
     627,   642,   678,   692,   917,   916,   762,   541,   747,   764,
    1837,   391,  1821,   809,   810,   404,  1821,  1670,  1670,  1670,
    1670,  1670,   726,  1670,  1670,  1670,  1670,  1670,   404,  1670,
    1670,  1670,  1670,  1670,  1670,  1670,  1670,  1670,  1670,   407,
     526,  1833,  1670,  1670,    36,   137,   580,   769,  1110,  1137,
    1138,  1139,  1140,  1141,  1149,  1150,  1154,  1155,  1156,  1246,
    1250,  1251,  1820,  1833,  1054,  1055,  1056,   764,  1125,  1669,
    1123,   762,   870,   847,   835,  1980,   762,   868,    58,   124,
     209,   677,  1136,   813,  1212,  1215,  1632,  1833,   764,    12,
      65,  1605,   534,   762,  1582,  1580,   734,  1584,    11,  1436,
    1827,  1833,   754,  1825,  1435,  1434,  1677,  1679,  1682,  1407,
    1415,  1418,  1419,  1397,   763,   230,  1396,  1962,  1617,  1617,
    1617,  1617,  1617,  1617,   833,  1013,   263,    11,   283,  1926,
    1919,  1615,  1615,  1615,  1802,   752,  1613,  1614,  1932,    36,
     193,   367,   580,   687,  1141,  1149,  1150,  1307,  1307,   193,
    1307,   193,   268,    36,    92,   193,   580,   687,  1153,  1246,
    1307,  1670,   193,    26,  1058,    11,   268,   747,  1316,  1670,
     193,   129,   690,   129,   193,   690,  1307,   193,   578,   193,
     193,   193,  1124,   764,  1055,  1290,   762,  1140,  1446,  1942,
     325,   423,   836,   268,   405,   412,   838,   763,   764,  1982,
    1983,    11,     6,   762,  1347,   964,   798,   799,  1615,   800,
     801,  1615,   796,   797,  1615,  1833,  1043,  1016,  1833,  1577,
     425,   226,  1430,  1390,    99,  1923,  1931,  1931,  1931,  1931,
      76,    77,   954,   410,  1389,   488,   114,   217,  1780,  1198,
    1200,  1199,   374,  1198,  1205,  1206,  1195,   199,  1195,  1205,
      17,    34,   324,   342,   715,  1182,  1206,  1212,  1222,  1223,
    1225,    32,   290,  1182,  1188,  1190,  1205,  1182,  1195,   762,
    1205,  1182,  1198,  1200,  1182,  1199,   762,  1195,  1205,    32,
     291,   291,   293,  1195,  1198,   708,   762,   880,  1199,  1199,
    1199,   563,  1198,  1199,    61,   920,  1195,   293,  1200,  1200,
    1198,  1198,  1199,  1201,    93,    93,   884,  1833,   873,   970,
      57,   146,   174,   273,  1506,   174,   174,  1507,  1508,   763,
    1571,  1571,    26,   232,  1496,  1440,  1440,  1512,   164,   340,
     763,   298,  1475,  1440,  1440,  1440,  1571,    58,    70,    90,
     124,   209,   279,   392,   394,   545,   546,   701,  1188,  1189,
    1451,  1452,  1453,  1454,  1505,  1440,  1440,  1440,  1440,    86,
     272,  1615,  1623,  1571,  1440,  1440,  1833,  1616,   763,  1237,
    1232,  1230,  1232,  1233,  1615,  1430,  1973,   763,  1956,  1543,
    1540,  1833,   763,  1512,   182,  1591,   764,  1605,    26,   763,
    1511,  1436,   763,   764,  1440,  1067,   193,  1084,  1085,  1616,
    1069,   764,  1669,  1052,  1053,  1665,  1814,  1111,   754,  1833,
    1114,  1418,  1419,  1958,  1422,  1058,  1833,  1924,  1924,  1669,
    1669,  1868,  1873,  1606,  1550,  1551,  1666,  1425,  1538,  1541,
    1429,  1967,  1518,  1533,   128,   128,  1518,  1533,  1523,  1524,
    1690,  1577,    61,  1681,     6,    11,    15,    95,  1426,  1575,
    1432,     6,  1291,  1299,  1300,  1833,   763,   764,  1618,  1749,
    1750,   432,   143,  1679,  1827,   802,   738,   808,   762,   762,
    1670,    61,  1615,  1622,    61,  1615,    61,  1615,    61,  1615,
    1127,  1618,  1615,  1615,  1827,  1827,  1670,  1615,  1835,   438,
     485,   555,  1135,  1615,  1618,  1618,    61,  1615,  1827,    61,
     372,   374,   411,   439,   574,   610,  1134,  1622,  1615,  1622,
    1268,  1820,  1821,    94,  1833,   763,   763,   764,    33,    92,
     200,   277,  1152,  1245,   212,  1239,  1121,  1246,  1247,  1247,
    1157,   769,  1049,  1780,  1125,    61,  1619,  1827,  1833,   871,
     849,    14,   318,  1000,   177,    11,   869,   628,  1995,   662,
    1980,  1214,  1637,  1817,  1885,  1434,  1626,  1627,  1628,   299,
     300,  1583,  1440,  1491,  1585,  1586,  1827,  1833,   769,  1682,
     763,   764,  1429,  1958,  1429,   763,  1952,  1956,  1416,  1412,
    1415,  1419,  1827,   174,   174,   112,  1121,   726,   112,  1120,
    1649,  1365,  1649,  1291,  1212,  1649,   130,  1650,    94,   726,
     200,  1649,  1649,    61,  1833,  1365,  1599,  1600,  1819,  1057,
    1821,    61,  1833,  1365,  1300,  1649,  1365,  1365,  1365,  1291,
       5,    73,  1303,  1137,   318,   438,  1315,   591,  1440,  1440,
     177,   842,   847,   177,   369,   843,  1833,  1804,  1982,  1348,
     471,   264,   763,   764,   763,   764,   763,   764,   425,   571,
    1931,   298,  1935,  1935,  1935,  1935,   873,   950,  1684,   123,
    1205,  1204,  1669,  1205,   279,   304,   653,  1197,  1197,  1222,
    1220,  1224,  1225,  1213,    17,  1223,  1226,   374,  1207,  1205,
    1182,  1197,  1269,  1797,  1205,  1269,  1197,   293,  1197,  1205,
     563,   877,   878,   879,  1833,   920,  1182,   876,   918,  1182,
    1197,  1440,   211,  1194,  1224,  1226,  1182,  1205,  1197,  1197,
     886,   894,   895,  1615,   762,   887,   413,   763,   763,   763,
     763,  1224,   764,  1224,  1224,   763,   763,  1498,  1817,  1797,
     138,  1499,  1500,  1501,   763,   764,   763,   484,   534,   601,
     763,   763,   763,   763,  1195,   124,  1199,    32,  1199,  1455,
     763,   763,   763,   763,   764,   763,   763,   763,  1228,   763,
     764,  1419,  1541,   763,    26,   204,   226,  1592,  1593,  1817,
    1817,   763,  1071,  1571,   130,   458,  1086,   763,   764,   763,
    1668,  1682,  1952,  1956,  1113,  1114,  1419,   769,  1115,  1429,
    1958,  1115,  1430,  1882,  1882,  1422,  1575,  1539,  1970,   177,
    1526,  1533,  1533,   177,  1528,  1440,   762,  1601,   563,  1424,
    1424,  1565,  1566,  1968,   763,   764,  1568,   763,   764,    10,
    1751,   763,  1835,   762,  1266,  1267,  1833,  1266,  1827,   762,
    1827,   763,   762,  1046,  1047,  1045,  1139,   762,   130,   130,
    1247,  1121,  1821,  1268,  1833,  1121,  1121,   337,   339,   340,
     355,   392,   394,   417,   439,   450,   451,   482,   491,   537,
     538,   539,   545,   546,   561,   562,   585,   586,   604,   647,
     695,   698,   701,   724,   743,   918,  1158,  1179,  1180,  1833,
      11,  1116,   118,   125,   187,   864,   865,   866,   867,   850,
     851,  1942,  2002,    63,   120,   280,  1001,   641,  1982,   860,
     861,   862,   863,  1833,  1996,   849,  1827,    11,   361,  1781,
    1605,  1440,   763,   764,    11,   764,   754,  1435,  1682,  1408,
    1412,  1446,  1365,  1446,  1820,  1291,  1820,  1288,  1214,  1820,
    1649,  1299,   130,  1820,  1820,  1291,   764,  1605,  1061,  1616,
     298,  1156,  1291,  1296,  1291,   763,  1833,  1571,   655,  1827,
     408,  1284,   230,   762,  1962,  1984,  1351,  1833,     6,   762,
    1349,   873,   799,   801,   797,  1935,    99,  1932,  1937,  1938,
     130,   261,  1833,   304,   279,  1204,   763,   764,   763,   876,
    1178,   763,   764,   920,   769,   747,  1226,   184,   243,   245,
     892,   893,   894,   897,  1446,  1833,   861,    93,    93,   174,
     764,  1605,   763,  1502,  1610,  1440,   534,   431,  1224,  1618,
     763,  1615,  1601,  1604,   763,    15,   386,   394,   698,   701,
     710,  1594,  1595,  1801,  1605,  1605,   670,  1109,  1068,   762,
    1074,  1087,  1833,  1085,  1115,   754,  1051,  1430,   763,  1525,
     283,  1527,   283,  1570,  1612,  1424,    10,   268,  1563,  1564,
    1433,  1300,  1750,   405,   570,  1266,   763,   764,  1605,   762,
     763,  1747,  1833,  1952,  1956,  1123,  1440,  1121,  1268,  1833,
     762,  1240,   283,  1258,   708,  1268,  1268,  1160,   769,  1151,
    1152,  1159,   769,  1050,   763,   764,   863,    67,   922,   177,
     836,   763,   764,   636,   708,  1178,  1178,  1999,  1982,    79,
      82,   179,   262,  1782,  1783,   140,  1784,  1435,  1628,  1587,
    1586,  1951,  1429,    84,  1293,    84,    73,   234,  1156,  1359,
    1219,  1820,  1314,  1287,  1600,   261,  1315,  1297,  1299,  1289,
     837,   844,   845,  1416,   762,  1400,  1401,  1950,  1954,  1956,
     298,  1985,   763,   764,  1350,   571,  1938,   280,  1821,  1224,
    1797,  1224,   920,   878,  1833,   174,   764,   922,   445,   763,
     889,   992,   763,  1817,   564,   764,   763,   763,   763,  1606,
     710,  1595,  1596,  1801,   636,   589,   426,  1597,   589,  1615,
     762,  1081,  1077,    61,   288,   289,   386,   461,  1088,  1951,
    1552,  1425,  1440,   762,  1440,   762,   763,  1424,  1424,   114,
     282,   443,  1558,  1559,  1562,   763,   349,   762,   763,  1885,
    1267,   174,  1885,   763,   764,  1054,   763,  1268,  1258,   708,
    1241,  1833,   151,  1242,  1265,  1142,  1265,  1144,  1145,   200,
     277,   301,   369,   481,   736,  1161,  1162,  1171,  1209,  1210,
    1211,  1238,  1446,  1826,  1180,    34,    61,   173,   177,   329,
     449,   647,  1165,  1167,  1202,  1203,  1210,  1833,  1128,  1129,
     866,    91,   829,  1434,   841,   842,   863,   708,   880,   563,
     921,    26,    26,    79,    26,  1783,   250,   262,  1785,  1786,
    1820,   577,   762,  1294,    61,    61,  1315,  1365,  1821,  1298,
    1337,   670,   839,   922,  1409,  1418,  1419,  1958,  1400,   763,
     230,  1399,  1962,  1960,    33,   344,   493,  1833,   200,  1352,
    1353,  1833,  1685,  1531,   769,   893,   986,  1605,  1610,  1610,
    1429,   442,    10,   442,   100,   386,   555,   697,  1079,  1080,
    1833,   763,   681,  1082,  1090,   696,   115,   369,   376,   391,
     520,   533,   552,   690,  1104,  1105,  1106,  1722,  1419,  1575,
    1570,  1570,  1246,  1246,  1559,   832,  1885,   298,   369,   483,
    1253,  1257,  1261,  1264,  1826,  1605,   763,  1254,  1256,  1261,
    1263,  1833,  1049,  1148,  1146,  1265,   763,   764,   446,   576,
     654,   177,  1243,   762,  1143,   762,   762,   130,  1827,   687,
    1210,   726,   130,   173,  1669,  1218,   752,   753,   762,  1175,
    1176,  1177,  1461,  1800,  1826,   280,   322,    61,    11,   374,
    1203,  1208,  1990,   838,   563,  1833,   829,  1797,  1797,    26,
    1797,    26,    26,  1786,  1152,  1616,  1084,  1177,  1058,   123,
    1440,   414,   840,   829,  1958,  1429,  1429,   763,  1954,  1956,
    1416,  1413,  1418,  1419,  1958,  1955,   571,    33,    33,   763,
     764,  1691,  1692,  1819,  1775,  1833,  1596,   636,   184,   311,
     763,   764,  1616,   762,  1092,  1094,  1089,   404,  1670,  1670,
     404,  1670,  1670,  1670,  1670,   762,  1099,  1106,   416,   763,
     763,    93,  1557,  1557,   763,   283,   708,  1252,  1255,  1260,
    1261,  1262,   575,  1827,  1670,  1304,  1305,  1306,  1264,  1669,
    1304,  1263,   763,   762,   762,  1147,  1833,    63,   280,  1266,
     762,  1266,  1266,    61,  1619,  1827,  1833,  1802,  1802,  1174,
     170,   722,   636,  1175,  1204,  1202,  1821,   843,  1833,   769,
    1797,  1797,  1797,   763,   762,  1440,  1429,  1410,  1413,  1958,
    1984,   571,   571,  1353,   764,  1669,  1215,  1078,  1080,   762,
    1093,  1094,  1095,   153,  1091,  1094,  1670,  1827,  1827,  1670,
    1619,  1619,  1616,  1835,   682,  1100,  1101,  1670,   100,   128,
     182,  1561,  1560,  1265,  1265,  1304,  1262,  1826,  1615,  1306,
    1305,    61,  1619,  1827,  1833,  1266,  1266,   762,    28,   220,
     234,   555,  1244,  1244,   763,  1266,   763,   763,   763,   762,
    1437,   413,   671,  1166,    93,   408,   769,  1833,  1084,  1954,
    1429,  1692,  1682,  1776,  1082,   763,   764,   153,  1097,  1098,
    1443,  1827,  1827,  1102,   763,   764,  1132,    26,    26,   762,
     762,   763,   763,  1266,    61,   173,   315,   177,   177,  1252,
     763,  1253,  1254,   763,  1616,  1163,  1164,  1209,  1163,   581,
     676,   729,  1168,  1434,   844,  1833,   769,   763,   226,  1787,
    1094,   764,  1096,  1103,  1835,  1101,  1567,  1569,  1239,  1252,
     763,   280,    63,  1252,   763,  1209,  1169,  1170,  1171,  1991,
    1833,   466,  1781,  1098,   763,  1104,   763,   763,  1252,  1244,
    1244,  1171,    75,    26,  1784,   636,  1797,   114,  1788,  1992,
     174,   762,  1790,   441,   588,  1986,  1987,   140,   226,  1789,
     763,   770,  1791,  1792,  1819,   234,  1793,  1835,  1993,  1835,
     763,   764,  1794,  1795,  1819,   922,  1792,   764,  1669,   829,
    1795,  1434,  1682,  1435
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   772,   773,   774,   773,   773,   775,   775,   776,   776,
     776,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   778,   779,
     779,   780,   782,   781,   784,   783,   785,   783,   786,   787,
     786,   788,   788,   789,   791,   790,   793,   792,   794,   794,
     795,   795,   795,   795,   795,   795,   795,   795,   795,   795,
     795,   795,   795,   795,   795,   795,   795,   795,   795,   795,
     796,   796,   796,   797,   798,   798,   798,   799,   800,   800,
     800,   801,   802,   802,   802,   802,   802,   802,   802,   803,
     803,   804,   806,   805,   807,   805,   808,   805,   809,   805,
     810,   805,   811,   805,   812,   805,   813,   805,   814,   805,
     815,   805,   816,   805,   817,   805,   818,   805,   819,   805,
     820,   805,   805,   805,   805,   805,   821,   805,   822,   823,
     824,   824,   825,   825,   826,   826,   827,   827,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   829,   829,   831,   830,   832,   832,   833,   833,
     833,   833,   833,   833,   833,   835,   834,   837,   836,   836,
     838,   838,   838,   838,   839,   839,   840,   840,   841,   841,
     842,   843,   843,   845,   844,   846,   847,   847,   848,   848,
     849,   849,   850,   850,   850,   850,   850,   850,   850,   851,
     851,   852,   852,   854,   853,   855,   853,   856,   853,   857,
     857,   858,   858,   859,   859,   860,   860,   861,   861,   862,
     863,   863,   863,   863,   863,   863,   864,   864,   865,   865,
     866,   867,   867,   867,   867,   869,   868,   871,   870,   872,
     872,   873,   873,   874,   874,   875,   876,   876,   876,   877,
     878,   879,   879,   880,   881,   882,   882,   882,   882,   883,
     883,   883,   884,   883,   886,   885,   887,   887,   888,   890,
     889,   891,   891,   891,   891,   892,   892,   893,   894,   894,
     895,   896,   896,   897,   897,   897,   897,   897,   897,   898,
     898,   899,   900,   900,   901,   901,   902,   902,   903,   903,
     904,   904,   904,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   906,   907,   908,   908,   909,
     909,   910,   910,   911,   912,   912,   913,   913,   913,   914,
     915,   915,   916,   917,   917,   917,   917,   917,   917,   917,
     917,   917,   917,   917,   917,   917,   918,   918,   919,   919,
     920,   920,   921,   921,   921,   921,   921,   922,   922,   922,
     922,   922,   922,   922,   922,   922,   922,   923,   923,   923,
     923,   925,   924,   927,   926,   928,   928,   930,   929,   929,
     932,   931,   933,   933,   933,   933,   934,   934,   934,   934,
     935,   936,   937,   938,   940,   939,   942,   941,   943,   943,
     944,   944,   945,   946,   946,   946,   947,   947,   948,   949,
     949,   951,   952,   953,   950,   954,   954,   954,   956,   955,
     958,   959,   957,   957,   960,   960,   961,   961,   963,   964,
     962,   966,   967,   965,   968,   968,   969,   970,   970,   971,
     973,   972,   975,   974,   977,   976,   978,   978,   979,   980,
     980,   980,   981,   983,   982,   985,   984,   986,   988,   987,
     989,   987,   990,   991,   992,   987,   993,   987,   995,   994,
     996,   994,   997,   998,   994,   999,   994,  1000,  1000,  1001,
    1001,  1001,  1002,  1003,  1004,  1005,  1005,  1006,  1006,  1007,
    1008,  1009,  1009,  1011,  1010,  1012,  1012,  1012,  1013,  1013,
    1013,  1014,  1015,  1015,  1015,  1016,  1016,  1016,  1016,  1016,
    1016,  1016,  1016,  1017,  1018,  1018,  1018,  1019,  1019,  1019,
    1019,  1019,  1020,  1021,  1021,  1021,  1022,  1022,  1022,  1022,
    1022,  1022,  1022,  1023,  1024,  1024,  1024,  1025,  1025,  1025,
    1026,  1027,  1028,  1029,  1030,  1031,  1031,  1031,  1032,  1033,
    1034,  1035,  1036,  1037,  1038,  1039,  1040,  1041,  1041,  1042,
    1042,  1043,  1043,  1045,  1044,  1044,  1044,  1046,  1044,  1047,
    1044,  1044,  1048,  1048,  1049,  1049,  1051,  1050,  1050,  1050,
    1052,  1050,  1053,  1050,  1054,  1055,  1055,  1057,  1056,  1058,
    1060,  1059,  1062,  1061,  1063,  1064,  1063,  1063,  1063,  1065,
    1063,  1063,  1066,  1063,  1067,  1067,  1068,  1068,  1069,  1069,
    1070,  1070,  1071,  1072,  1073,  1074,  1075,  1075,  1076,  1077,
    1076,  1078,  1076,  1079,  1079,  1080,  1081,  1082,  1082,  1083,
    1083,  1084,  1084,  1086,  1085,  1087,  1088,  1089,  1088,  1090,
    1088,  1088,  1088,  1088,  1091,  1091,  1092,  1092,  1093,  1093,
    1095,  1096,  1094,  1097,  1097,  1098,  1098,  1099,  1099,  1100,
    1100,  1102,  1101,  1103,  1104,  1104,  1105,  1105,  1106,  1106,
    1106,  1106,  1106,  1106,  1106,  1106,  1106,  1107,  1108,  1107,
    1107,  1109,  1109,  1110,  1112,  1111,  1113,  1113,  1114,  1114,
    1115,  1116,  1116,  1117,  1117,  1118,  1118,  1119,  1119,  1120,
    1120,  1121,  1121,  1122,  1122,  1123,  1123,  1124,  1124,  1125,
    1125,  1125,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,
    1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,
    1126,  1126,  1127,  1126,  1126,  1126,  1126,  1126,  1126,  1126,
    1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,
    1126,  1128,  1128,  1129,  1130,  1131,  1132,  1133,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1135,  1135,  1135,  1136,  1136,
    1136,  1136,  1137,  1138,  1138,  1139,  1139,  1139,  1139,  1140,
    1140,  1142,  1141,  1143,  1141,  1144,  1141,  1145,  1141,  1146,
    1141,  1147,  1141,  1148,  1141,  1149,  1150,  1151,  1151,  1152,
    1153,  1153,  1154,  1154,  1155,  1157,  1156,  1159,  1158,  1160,
    1158,  1161,  1161,  1162,  1162,  1163,  1163,  1164,  1164,  1165,
    1165,  1165,  1165,  1166,  1165,  1165,  1165,  1167,  1167,  1168,
    1168,  1168,  1168,  1169,  1169,  1170,  1170,  1171,  1171,  1171,
    1171,  1173,  1172,  1174,  1174,  1174,  1175,  1176,  1176,  1177,
    1177,  1178,  1179,  1179,  1180,  1180,  1180,  1180,  1180,  1181,
    1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,  1182,
    1182,  1182,  1182,  1183,  1183,  1183,  1183,  1183,  1183,  1183,
    1183,  1184,  1184,  1184,  1184,  1184,  1185,  1185,  1185,  1185,
    1185,  1185,  1185,  1185,  1185,  1185,  1185,  1185,  1185,  1185,
    1185,  1185,  1186,  1186,  1187,  1187,  1187,  1187,  1187,  1187,
    1187,  1187,  1188,  1189,  1189,  1190,  1190,  1191,  1191,  1191,
    1191,  1191,  1192,  1192,  1192,  1192,  1192,  1193,  1193,  1193,
    1194,  1194,  1195,  1195,  1195,  1196,  1197,  1197,  1197,  1197,
    1197,  1197,  1198,  1198,  1198,  1198,  1199,  1199,  1200,  1200,
    1201,  1201,  1202,  1202,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1204,  1204,  1205,  1205,  1206,  1207,  1208,  1209,  1209,
    1209,  1210,  1210,  1210,  1210,  1210,  1210,  1211,  1211,  1212,
    1212,  1213,  1213,  1214,  1214,  1215,  1215,  1216,  1216,  1217,
    1217,  1218,  1219,  1219,  1220,  1220,  1221,  1221,  1222,  1222,
    1222,  1223,  1224,  1224,  1225,  1225,  1225,  1225,  1225,  1225,
    1226,  1226,  1228,  1227,  1229,  1229,  1230,  1231,  1231,  1231,
    1231,  1232,  1233,  1234,  1234,  1235,  1236,  1236,  1237,  1237,
    1238,  1238,  1239,  1240,  1240,  1241,  1241,  1242,  1242,  1242,
    1242,  1243,  1243,  1243,  1243,  1243,  1244,  1244,  1244,  1244,
    1244,  1245,  1245,  1246,  1246,  1247,  1247,  1248,  1248,  1248,
    1249,  1249,  1250,  1251,  1252,  1252,  1253,  1253,  1254,  1254,
    1255,  1255,  1256,  1256,  1257,  1257,  1258,  1258,  1259,  1259,
    1259,  1260,  1260,  1261,  1261,  1261,  1261,  1261,  1261,  1262,
    1262,  1263,  1264,  1264,  1265,  1265,  1265,  1266,  1266,  1267,
    1267,  1268,  1268,  1269,  1269,  1271,  1272,  1270,  1273,  1270,
    1270,  1274,  1270,  1275,  1270,  1276,  1270,  1277,  1270,  1278,
    1270,  1270,  1270,  1270,  1270,  1279,  1270,  1270,  1280,  1281,
    1270,  1282,  1282,  1282,  1282,  1283,  1283,  1284,  1284,  1285,
    1285,  1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,
    1286,  1287,  1286,  1286,  1288,  1286,  1289,  1286,  1286,  1286,
    1286,  1286,  1290,  1291,  1291,  1293,  1292,  1294,  1294,  1294,
    1296,  1295,  1297,  1298,  1297,  1299,  1299,  1300,  1301,  1301,
    1302,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,
    1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,
    1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1304,  1304,
    1304,  1304,  1304,  1305,  1305,  1306,  1306,  1307,  1307,  1308,
    1308,  1310,  1309,  1311,  1311,  1312,  1312,  1313,  1313,  1314,
    1314,  1314,  1315,  1315,  1315,  1316,  1316,  1316,  1316,  1318,
    1317,  1319,  1317,  1317,  1317,  1320,  1321,  1321,  1322,  1322,
    1323,  1323,  1323,  1325,  1324,  1326,  1326,  1327,  1327,  1327,
    1328,  1328,  1328,  1329,  1329,  1331,  1330,  1332,  1332,  1332,
    1333,  1334,  1333,  1336,  1335,  1337,  1337,  1338,  1338,  1339,
    1339,  1339,  1340,  1340,  1342,  1341,  1343,  1343,  1344,  1345,
    1345,  1346,  1346,  1347,  1348,  1347,  1349,  1350,  1349,  1351,
    1351,  1351,  1352,  1352,  1352,  1353,  1353,  1354,  1354,  1355,
    1356,  1355,  1358,  1357,  1359,  1359,  1360,  1360,  1361,  1361,
    1361,  1361,  1361,  1361,  1362,  1362,  1364,  1363,  1365,  1365,
    1365,  1367,  1366,  1366,  1368,  1368,  1369,  1369,  1370,  1372,
    1371,  1373,  1373,  1374,  1374,  1375,  1376,  1377,  1377,  1379,
    1378,  1380,  1380,  1381,  1381,  1382,  1383,  1385,  1384,  1387,
    1386,  1388,  1388,  1389,  1389,  1390,  1391,  1391,  1391,  1391,
    1391,  1391,  1391,  1392,  1392,  1392,  1392,  1392,  1392,  1392,
    1394,  1393,  1395,  1393,  1393,  1396,  1396,  1398,  1397,  1397,
    1399,  1399,  1401,  1400,  1400,  1403,  1402,  1404,  1402,  1402,
    1406,  1405,  1405,  1408,  1407,  1407,  1409,  1410,  1409,  1409,
    1409,  1411,  1411,  1412,  1412,  1413,  1413,  1413,  1414,  1414,
    1414,  1415,  1415,  1415,  1415,  1415,  1417,  1416,  1418,  1419,
    1419,  1420,  1421,  1421,  1422,  1422,  1423,  1423,  1423,  1424,
    1424,  1424,  1425,  1425,  1426,  1426,  1426,  1426,  1427,  1427,
    1428,  1428,  1428,  1429,  1429,  1429,  1430,  1430,  1430,  1431,
    1431,  1432,  1433,  1434,  1435,  1436,  1436,  1436,  1436,  1436,
    1437,  1437,  1437,  1438,  1438,  1438,  1439,  1439,  1440,  1440,
    1440,  1440,  1440,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1444,  1444,  1445,  1445,  1446,  1446,  1447,  1447,  1448,  1448,
    1448,  1448,  1448,  1448,  1449,  1449,  1450,  1450,  1451,  1451,
    1451,  1452,  1452,  1452,  1452,  1452,  1452,  1453,  1453,  1453,
    1455,  1454,  1454,  1456,  1457,  1457,  1458,  1458,  1458,  1458,
    1459,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1462,  1462,
    1462,  1463,  1463,  1464,  1464,  1464,  1464,  1464,  1464,  1465,
    1465,  1466,  1466,  1467,  1467,  1467,  1467,  1467,  1467,  1467,
    1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,
    1467,  1467,  1467,  1467,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1470,  1470,  1470,  1470,  1470,  1470,  1470,
    1470,  1470,  1472,  1471,  1471,  1471,  1473,  1473,  1474,  1474,
    1475,  1475,  1476,  1476,  1477,  1477,  1478,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1480,  1481,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1479,  1482,  1479,  1483,
    1483,  1484,  1484,  1485,  1485,  1485,  1485,  1485,  1485,  1485,
    1485,  1485,  1485,  1485,  1485,  1485,  1486,  1488,  1487,  1487,
    1489,  1489,  1490,  1491,  1493,  1492,  1494,  1494,  1494,  1494,
    1495,  1495,  1496,  1496,  1497,  1497,  1498,  1498,  1499,  1499,
    1500,  1501,  1502,  1502,  1502,  1504,  1503,  1505,  1506,  1505,
    1507,  1505,  1508,  1505,  1505,  1505,  1505,  1509,  1509,  1509,
    1509,  1509,  1509,  1509,  1509,  1510,  1510,  1510,  1511,  1511,
    1512,  1512,  1513,  1513,  1514,  1514,  1515,  1515,  1516,  1516,
    1517,  1517,  1518,  1518,  1519,  1520,  1520,  1521,  1521,  1522,
    1523,  1522,  1524,  1522,  1522,  1525,  1522,  1526,  1522,  1522,
    1527,  1522,  1528,  1522,  1522,  1529,  1529,  1529,  1530,  1530,
    1531,  1531,  1532,  1533,  1533,  1535,  1534,  1536,  1536,  1537,
    1537,  1538,  1537,  1537,  1537,  1537,  1539,  1539,  1540,  1539,
    1541,  1542,  1544,  1543,  1545,  1546,  1546,  1547,  1549,  1548,
    1551,  1552,  1550,  1553,  1554,  1555,  1556,  1556,  1557,  1557,
    1557,  1557,  1558,  1558,  1560,  1559,  1561,  1559,  1562,  1562,
    1563,  1564,  1563,  1566,  1565,  1567,  1567,  1568,  1568,  1569,
    1569,  1570,  1570,  1571,  1571,  1571,  1571,  1571,  1571,  1571,
    1571,  1571,  1571,  1571,  1571,  1572,  1572,  1572,  1572,  1572,
    1572,  1572,  1572,  1572,  1573,  1573,  1573,  1573,  1574,  1574,
    1574,  1575,  1575,  1576,  1576,  1577,  1578,  1577,  1579,  1580,
    1579,  1581,  1581,  1582,  1582,  1583,  1583,  1583,  1584,  1584,
    1585,  1585,  1586,  1588,  1587,  1589,  1589,  1590,  1590,  1591,
    1591,  1592,  1592,  1593,  1593,  1594,  1594,  1595,  1595,  1595,
    1596,  1596,  1596,  1597,  1597,  1597,  1597,  1597,  1597,  1598,
    1599,  1599,  1600,  1601,  1601,  1603,  1602,  1604,  1604,  1605,
    1605,  1605,  1606,  1606,  1607,  1608,  1608,  1608,  1609,  1609,
    1609,  1610,  1610,  1610,  1610,  1610,  1610,  1611,  1612,  1612,
    1612,  1612,  1613,  1613,  1614,  1614,  1615,  1615,  1615,  1615,
    1615,  1615,  1616,  1616,  1616,  1616,  1616,  1617,  1617,  1617,
    1617,  1618,  1618,  1618,  1618,  1618,  1619,  1619,  1619,  1619,
    1619,  1620,  1621,  1621,  1622,  1622,  1623,  1623,  1623,  1625,
    1624,  1626,  1626,  1627,  1627,  1628,  1630,  1629,  1631,  1631,
    1632,  1633,  1633,  1633,  1634,  1636,  1637,  1635,  1635,  1635,
    1639,  1638,  1641,  1640,  1640,  1640,  1640,  1640,  1640,  1640,
    1640,  1642,  1640,  1640,  1640,  1640,  1640,  1640,  1643,  1640,
    1644,  1644,  1645,  1646,  1647,  1647,  1648,  1649,  1649,  1650,
    1650,  1651,  1651,  1653,  1654,  1652,  1656,  1657,  1655,  1658,
    1658,  1658,  1658,  1659,  1659,  1660,  1660,  1661,  1662,  1662,
    1662,  1663,  1662,  1664,  1664,  1665,  1665,  1665,  1666,  1666,
    1667,  1667,  1668,  1669,  1669,  1670,  1670,  1671,  1671,  1672,
    1672,  1674,  1673,  1676,  1675,  1677,  1677,  1678,  1678,  1679,
    1679,  1680,  1680,  1681,  1681,  1682,  1682,  1683,  1684,  1685,
    1683,  1687,  1688,  1686,  1689,  1689,  1690,  1690,  1691,  1691,
    1692,  1693,  1693,  1695,  1694,  1696,  1696,  1697,  1697,  1698,
    1699,  1700,  1699,  1701,  1699,  1702,  1702,  1703,  1703,  1704,
    1704,  1705,  1705,  1706,  1706,  1707,  1707,  1707,  1709,  1708,
    1710,  1710,  1711,  1711,  1712,  1712,  1713,  1713,  1713,  1713,
    1713,  1713,  1713,  1713,  1713,  1714,  1714,  1716,  1715,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1718,  1717,  1719,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1720,  1720,  1720,  1721,  1721,  1722,  1722,  1723,  1723,  1724,
    1724,  1725,  1725,  1726,  1726,  1727,  1727,  1728,  1728,  1728,
    1730,  1729,  1731,  1729,  1732,  1732,  1732,  1732,  1732,  1733,
    1733,  1734,  1735,  1735,  1735,  1736,  1736,  1737,  1737,  1737,
    1739,  1738,  1741,  1740,  1740,  1742,  1742,  1743,  1744,  1743,
    1745,  1745,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,
    1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1747,  1747,
    1748,  1748,  1749,  1749,  1749,  1750,  1751,  1751,  1753,  1752,
    1754,  1754,  1756,  1755,  1757,  1755,  1755,  1758,  1758,  1759,
    1759,  1761,  1760,  1762,  1763,  1763,  1765,  1764,  1766,  1766,
    1766,  1767,  1767,  1767,  1768,  1768,  1769,  1769,  1770,  1771,
    1773,  1774,  1775,  1776,  1772,  1777,  1777,  1778,  1778,  1779,
    1779,  1779,  1780,  1780,  1780,  1781,  1781,  1782,  1782,  1783,
    1783,  1783,  1783,  1784,  1784,  1785,  1785,  1786,  1786,  1787,
    1787,  1788,  1788,  1789,  1789,  1790,  1790,  1790,  1791,  1791,
    1792,  1792,  1793,  1793,  1794,  1794,  1795,  1796,  1796,  1796,
    1796,  1797,  1797,  1798,  1798,  1798,  1799,  1799,  1799,  1800,
    1800,  1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,
    1801,  1802,  1802,  1802,  1802,  1802,  1803,  1803,  1803,  1804,
    1804,  1806,  1805,  1807,  1807,  1808,  1808,  1810,  1809,  1811,
    1811,  1812,  1812,  1813,  1814,  1814,  1815,  1815,  1816,  1816,
    1817,  1818,  1818,  1818,  1818,  1818,  1819,  1819,  1819,  1819,
    1819,  1820,  1820,  1820,  1820,  1821,  1821,  1821,  1822,  1822,
    1823,  1824,  1824,  1825,  1825,  1825,  1826,  1827,  1828,  1829,
    1830,  1830,  1831,  1831,  1832,  1832,  1832,  1833,  1833,  1834,
    1834,  1835,  1835,  1835,  1836,  1836,  1836,  1837,  1837,  1838,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1841,  1841,  1841,
    1841,  1842,  1842,  1842,  1842,  1842,  1842,  1842,  1842,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1846,  1846,  1846,  1846,  1846,  1846,  1847,  1847,  1847,
    1847,  1847,  1847,  1847,  1847,  1847,  1847,  1848,  1848,  1848,
    1849,  1849,  1849,  1850,  1850,  1850,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1854,  1853,  1855,  1856,  1853,  1857,  1857,
    1859,  1858,  1860,  1858,  1861,  1858,  1863,  1862,  1862,  1864,
    1864,  1866,  1865,  1867,  1865,  1869,  1868,  1868,  1870,  1870,
    1870,  1871,  1871,  1871,  1871,  1872,  1872,  1872,  1872,  1873,
    1873,  1873,  1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,
    1874,  1874,  1874,  1874,  1874,  1874,  1874,  1875,  1875,  1875,
    1875,  1876,  1877,  1878,  1878,  1879,  1879,  1879,  1879,  1880,
    1880,  1881,  1881,  1881,  1882,  1882,  1882,  1882,  1882,  1884,
    1883,  1885,  1885,  1885,  1886,  1886,  1887,  1887,  1888,  1889,
    1889,  1889,  1889,  1889,  1891,  1890,  1892,  1892,  1893,  1892,
    1894,  1894,  1895,  1895,  1896,  1896,  1896,  1896,  1897,  1896,
    1898,  1898,  1898,  1898,  1898,  1899,  1900,  1900,  1900,  1900,
    1900,  1900,  1900,  1900,  1901,  1901,  1902,  1903,  1903,  1903,
    1903,  1903,  1903,  1903,  1904,  1904,  1905,  1905,  1906,  1906,
    1907,  1908,  1908,  1909,  1909,  1910,  1910,  1911,  1911,  1912,
    1912,  1914,  1913,  1915,  1913,  1916,  1913,  1917,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1918,  1918,  1919,  1919,
    1920,  1920,  1920,  1921,  1921,  1921,  1921,  1922,  1922,  1923,
    1923,  1924,  1924,  1925,  1925,  1926,  1926,  1927,  1927,  1927,
    1927,  1927,  1928,  1928,  1929,  1929,  1930,  1931,  1931,  1931,
    1931,  1931,  1932,  1932,  1932,  1932,  1932,  1933,  1933,  1934,
    1934,  1935,  1935,  1936,  1936,  1937,  1937,  1938,  1938,  1940,
    1939,  1941,  1942,  1942,  1943,  1943,  1944,  1944,  1944,  1945,
    1945,  1945,  1946,  1947,  1947,  1947,  1948,  1949,  1950,  1950,
    1950,  1951,  1951,  1953,  1952,  1955,  1954,  1957,  1956,  1958,
    1958,  1959,  1960,  1960,  1960,  1961,  1961,  1963,  1962,  1964,
    1965,  1965,  1966,  1966,  1967,  1967,  1967,  1968,  1969,  1970,
    1971,  1971,  1972,  1972,  1973,  1973,  1973,  1973,  1973,  1973,
    1973,  1973,  1974,  1974,  1975,  1976,  1977,  1977,  1977,  1978,
    1978,  1979,  1979,  1980,  1980,  1981,  1981,  1983,  1982,  1984,
    1984,  1984,  1984,  1984,  1984,  1984,  1985,  1985,  1985,  1985,
    1986,  1986,  1987,  1987,  1989,  1990,  1991,  1992,  1993,  1988,
    1994,  1996,  1995,  1998,  1999,  1997,  2001,  2002,  2000,  2003,
    2003,  2003,  2003,  2003,  2003,  2004,  2004,  2005,  2005,  2005,
    2006,  2006,  2006,  2007,  2007,  2007,  2008,  2008,  2009,  2010,
    2009,  2011,  2011,  2012,  2012,  2013,  2013,  2014
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     4,     0,     2,     0,     4,     0,     5,     0,     0,
       3,     3,     1,     1,     0,     3,     0,     6,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     5,     5,     1,
       0,     1,     3,     1,     0,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     3,     3,     3,     3,     3,     0,
       1,     1,     0,     7,     0,     8,     0,    15,     0,    14,
       0,    14,     0,     6,     0,    10,     0,    11,     0,     5,
       0,     5,     0,     5,     0,     5,     0,     6,     0,     5,
       0,     6,     7,     6,     4,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     2,
       1,     3,     2,     1,     3,     3,     3,     1,     1,     1,
       1,     3,     0,     1,     0,    12,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       4,     0,     2,     0,     3,     0,     3,     1,     0,     2,
       0,     2,     2,     2,     2,     2,     3,     3,     1,     1,
       2,     3,     3,     0,     4,     0,     6,     0,     8,     0,
       3,     0,     1,     3,     1,     0,     1,     3,     1,     1,
       2,     6,     8,     5,     7,     3,     0,     1,     3,     1,
       2,     0,     1,     1,     1,     0,     4,     0,     4,     0,
       3,     2,     3,     0,     3,     2,     1,     3,     5,     1,
       2,     1,     3,     3,     1,     3,     5,     6,     4,     1,
       4,     1,     0,     6,     0,     6,     0,     3,     0,     0,
       3,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     1,     1,     0,     3,     1,
       0,     2,     1,     2,     3,     4,     1,     2,     3,     4,
       2,     2,     2,     0,     0,     3,     0,     3,     1,     3,
       0,     3,     3,     3,     4,     5,     2,     4,     2,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     0,     6,
       0,     0,     4,     1,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     2,     0,     1,     1,
       0,     7,     0,     5,     0,     7,     0,     1,     2,     5,
       3,     5,     3,     0,     6,     0,     6,     1,     0,     5,
       0,     5,     0,     0,     0,    11,     0,     5,     0,     3,
       0,     3,     0,     0,     8,     0,     3,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     0,     7,     3,     3,     0,     5,     0,
       5,     1,     2,     4,     0,     4,     0,     7,     5,     3,
       0,     5,     0,     5,     1,     0,     1,     0,     4,     0,
       0,     3,     0,     6,     6,     0,     4,     2,     2,     0,
       3,     2,     0,     3,     0,     1,     0,     3,     0,     1,
       1,     3,     1,     4,     3,     3,     0,     2,     0,     0,
       7,     0,    10,     1,     3,     1,     1,     0,     2,     0,
       3,     1,     3,     0,     6,     1,     0,     0,     4,     0,
       3,     1,     1,     1,     1,     1,     1,     3,     1,     3,
       0,     0,     5,     1,     3,     1,     1,     0,     3,     1,
       3,     0,     4,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     3,     4,     4,     3,     0,     0,     5,
       2,     0,     2,     5,     0,     3,     1,     1,     2,     1,
       1,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       3,     0,     3,     1,     3,     0,     1,     1,     2,     1,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     0,     6,     1,     1,     3,     4,     4,     2,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       1,     0,     1,     2,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       2,     0,     9,     0,    10,     0,     9,     0,     9,     0,
      10,     0,    11,     0,    10,     2,     7,     0,     1,     4,
       0,     1,     0,     1,     2,     0,     4,     0,     3,     0,
       3,     0,     1,     2,     1,     0,     1,     2,     1,     0,
       1,     2,     3,     0,     6,     5,     5,     0,     2,     0,
       1,     1,     1,     0,     1,     2,     1,     1,     2,     2,
       1,     0,     3,     1,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     3,
       3,     3,     2,     1,     1,     3,     3,     3,     3,     0,
       1,     2,     2,     3,     3,     2,     3,     3,     4,     3,
       3,     3,     1,     2,     2,     2,     2,     3,     3,     2,
       3,     2,     2,     3,     3,     2,     3,     2,     2,     2,
       2,     2,     5,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     2,     1,     2,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     2,
       0,     3,     0,     1,     1,     5,     0,     1,     1,     1,
       2,     2,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     1,     2,     1,     1,     2,     4,     1,     3,     2,
       1,     0,     2,     0,     1,     2,     2,     2,     2,     2,
       1,     1,     3,     3,     3,     3,     2,     1,     2,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     0,     2,     1,     1,     0,     1,     2,     1,
       1,     2,     0,     1,     1,     2,     1,     2,     2,     1,
       0,     1,     0,     4,     1,     1,     1,     0,     1,     2,
       1,     1,     2,     1,     3,     3,     1,     1,     0,     2,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     2,     2,     1,     1,     0,     1,     1,     1,     1,
       0,     1,     1,     1,     0,     1,     0,     1,     0,     1,
       1,     2,     1,     2,     1,     2,     0,     2,     0,     2,
       2,     2,     2,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     1,     1,     1,     4,     2,     1,
       4,     0,     1,     1,     3,     0,     0,     8,     0,     5,
       7,     0,     5,     0,     5,     0,    10,     0,     9,     0,
      11,     3,     4,     3,     3,     0,     8,     7,     0,     0,
       7,     0,     3,     1,     4,     0,     3,     0,     2,     0,
       1,     0,     2,     2,     2,     2,     1,     1,     1,     4,
       4,     0,     6,     4,     0,     5,     0,     6,     4,     3,
       1,     7,     2,     1,     1,     0,     6,     0,     3,     2,
       0,     5,     0,     0,     6,     1,     3,     1,     1,     3,
       3,     3,     2,     2,     4,     2,     7,     6,     5,     5,
       4,     5,     4,     4,     2,     2,     7,     6,     3,     5,
       1,     1,     1,     1,     1,     3,     3,     3,     0,     1,
       1,     2,     2,     3,     3,     3,     3,     0,     1,     0,
       1,     0,     2,     0,     1,     2,     1,     1,     1,     0,
       1,     1,     0,     2,     1,     0,     1,     1,     1,     0,
       6,     0,     5,     4,     4,     3,     0,     1,     1,     3,
       3,     2,     2,     0,     2,     1,     3,     0,     1,     1,
       0,     2,     4,     1,     3,     0,     5,     0,     1,     1,
       3,     0,     4,     0,     4,     0,     1,     1,     2,     1,
       1,     1,     0,     2,     0,     5,     1,     3,     2,     0,
       3,     1,     4,     1,     0,     4,     1,     0,     4,     0,
       1,     3,     0,     1,     3,     1,     1,     2,     6,     3,
       0,     4,     0,     3,     0,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     0,     2,     0,     6,     0,     1,
       1,     0,     4,     4,     3,     5,     1,     3,     4,     0,
       6,     1,     1,     1,     3,     2,     3,     1,     1,     0,
       6,     1,     1,     1,     3,     3,     4,     0,     6,     0,
       2,     0,     4,     0,     2,     2,     3,     1,     2,     2,
       3,     4,     4,     3,     1,     2,     2,     3,     4,     4,
       0,     3,     0,     5,     3,     4,     2,     0,     2,     3,
       4,     2,     0,     2,     3,     0,     2,     0,     7,     3,
       0,     4,     2,     0,     4,     2,     2,     0,     4,     2,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     2,
       3,     1,     4,     2,     2,     3,     0,     3,     5,     0,
       1,     2,     1,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     0,     2,     3,     1,     4,     4,     2,     1,
       1,     1,     1,     0,     3,     5,     3,     1,     1,     3,
       4,     0,     0,     0,     0,     0,     2,     2,     1,     1,
       0,     2,     3,     0,     2,     3,     0,     2,     3,     3,
       3,     2,     1,     3,     4,     3,     4,     3,     4,     3,
       4,     3,     3,     6,     1,     5,     6,     5,     7,     6,
       8,     5,     6,     4,     3,     5,     4,     6,     3,     4,
       1,     3,     3,     3,     3,     3,     3,     3,     5,     5,
       5,     6,     6,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     2,     1,     1,     1,     2,     1,     2,     2,
       0,     3,     1,     4,     1,     3,     1,     1,     1,     1,
       3,     1,     4,     4,     4,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       6,     4,     4,     7,     6,     3,     4,     6,     6,     4,
       4,     4,     4,     4,     4,     6,     8,    10,     1,     1,
       3,     1,     3,     1,     2,     2,     2,     2,     2,     1,
       3,     4,     6,     4,     6,     2,     2,     4,     4,     4,
      10,     6,     8,     6,     4,     4,     6,     4,     3,     4,
       1,     4,     3,     4,     6,     8,     2,     2,     8,     8,
       6,     8,     6,     6,     6,     6,     2,     6,     6,     8,
       8,     6,     8,     6,     2,     8,     8,     4,     2,     2,
       2,     6,     6,     4,     4,     8,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     6,     4,     4,
       4,     6,     8,     4,     3,     6,     4,     6,     5,     8,
       7,    10,     1,     6,     4,     4,     4,     4,     4,     6,
       4,     6,     0,     5,     6,     8,     2,     3,     0,     4,
       0,     3,     0,     1,     1,     3,     4,     4,     5,     4,
       4,     4,     5,     4,     0,     0,     7,     4,     5,     4,
       5,     4,     4,     4,     4,     4,     5,     0,     9,     3,
       3,     1,     1,     3,     3,     3,     3,     3,     4,     4,
       4,     6,     4,     6,     4,     6,     5,     0,     7,     4,
       4,     4,     4,     1,     0,     3,     3,     1,     3,     5,
       0,     1,     0,     2,     0,     3,     4,     2,     0,     1,
       1,     2,     1,     3,     3,     0,     3,     2,     0,     4,
       0,     4,     0,     4,     2,     1,     1,     1,     1,     2,
       1,     2,     2,     1,     2,     1,     2,     2,     0,     1,
       1,     3,     1,     3,     1,     3,     4,     5,     1,     3,
       3,     3,     1,     1,     1,     1,     4,     1,     3,     3,
       0,     6,     0,     8,     4,     0,     8,     0,    10,     6,
       0,     8,     0,    10,     6,     1,     2,     1,     1,     2,
       0,     1,     5,     1,     1,     0,     6,     6,     9,     1,
       2,     0,     4,     2,     3,     3,     1,     1,     0,     3,
       2,     1,     0,     3,     2,     1,     1,     3,     0,     3,
       0,     0,     5,     0,     1,     0,     0,     1,     0,     2,
       3,     3,     1,     1,     0,     7,     0,     7,     1,     2,
       0,     0,     2,     0,     2,     0,     1,     1,     1,     1,
       3,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     0,     2,     0,     1,     0,     0,     3,     0,     0,
       3,     0,     4,     4,     2,     0,     1,     1,     0,     2,
       3,     1,     3,     0,     7,     0,     1,     0,     3,     0,
       3,     0,     3,     1,     1,     1,     4,     2,     2,     2,
       1,     2,     2,     0,     3,     2,     2,     3,     3,     3,
       3,     1,     2,     0,     1,     0,     4,     4,     2,     0,
       1,     1,     0,     1,     1,     2,     5,     4,     1,     3,
       3,     1,     3,     1,     1,     1,     1,     1,     0,     2,
       3,     4,     0,     1,     2,     2,     2,     1,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       6,     0,     1,     3,     1,     3,     0,     2,     3,     1,
       1,     2,     1,     3,     2,     0,     0,     7,     2,     1,
       0,     3,     0,     8,     7,     4,     6,     4,     4,     5,
       5,     0,     6,     4,     4,     5,     6,     4,     0,     6,
       1,     3,     1,     2,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     0,     0,     8,     0,     0,     6,     0,
       1,     1,     1,     1,     1,     2,     1,     1,     1,     3,
       4,     0,     3,     3,     1,     2,     2,     1,     3,     1,
       3,     1,     3,     1,     1,     0,     1,     1,     1,     1,
       1,     0,     4,     0,     4,     0,     1,     0,     1,     3,
       1,     5,     3,     1,     1,     1,     1,     0,     0,     0,
       7,     0,     0,    11,     3,     1,     3,     3,     3,     1,
       3,     0,     1,     0,     3,     0,     3,     2,     3,     3,
       5,     0,     5,     0,     6,     0,     2,     1,     3,     2,
       4,     0,     2,     0,     2,     1,     1,     1,     0,     5,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     3,     3,
       6,     2,     2,     0,     6,     0,     7,     5,     2,     1,
       1,     1,     5,     5,     2,     2,     1,     4,     3,     2,
       3,     2,     2,     1,     4,     4,     3,     3,     3,     2,
       3,     2,     3,     3,     3,     3,     4,     3,     2,     3,
       3,     3,     3,     4,     3,     3,     4,     3,     3,     3,
       1,     1,     1,     1,     1,     0,     1,     0,     2,     0,
       1,     1,     1,     0,     2,     0,     2,     0,     3,     3,
       0,     4,     0,     4,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     0,     3,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     1,     4,     0,     3,
       3,     1,     2,     2,     2,     2,     3,     3,     2,     1,
       1,     1,     1,     2,     1,     1,     1,     2,     0,     1,
       0,     5,     0,     1,     3,     1,     0,     3,     0,     3,
       3,     1,     0,     4,     0,     3,     2,     0,     1,     0,
       2,     0,     3,     3,     2,     2,     0,     4,     0,     1,
       1,     2,     2,     3,     0,     1,     1,     2,     1,     2,
       0,     0,     0,     0,    22,     1,     1,     0,     1,     0,
       1,     1,     0,     1,     1,     0,     2,     2,     1,     3,
       4,     3,     3,     0,     2,     2,     1,     3,     3,     0,
       4,     0,     3,     1,     1,     0,     3,     2,     3,     1,
       1,     2,     0,     2,     3,     1,     5,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     2,     2,     0,
       1,     0,     4,     0,     1,     1,     3,     0,     9,     0,
       3,     1,     3,     1,     1,     1,     3,     5,     3,     5,
       1,     1,     3,     4,     5,     4,     1,     3,     4,     4,
       5,     1,     5,     3,     2,     1,     3,     2,     2,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     0,     0,     7,     1,     3,
       0,     3,     0,     3,     0,     3,     0,     3,     2,     0,
       2,     0,     2,     0,     4,     0,     3,     1,     1,     1,
       1,     0,     1,     1,     1,     0,     2,     2,     2,     3,
       5,     5,     3,     5,     5,     4,     6,     8,     8,     2,
       3,     3,     3,     5,     2,     3,     3,     1,     1,     3,
       3,     1,     3,     2,     2,     2,     2,     2,     1,     1,
       3,     1,     4,     4,     1,     1,     1,     1,     1,     0,
       5,     0,     2,     1,     1,     1,     1,     3,     3,     1,
       1,     2,     2,     2,     0,     3,     4,     3,     0,     7,
       1,     2,     1,     1,     1,     1,     1,     1,     0,     5,
       1,     1,     1,     1,     1,     3,     6,     6,     6,     6,
       7,     7,     5,     3,     4,     1,     3,     8,     8,     8,
       8,     9,     6,     4,     0,     3,     0,     3,     1,     3,
       2,     1,     1,     0,     1,     1,     2,     0,     1,     1,
       3,     0,     3,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     2,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     1,     3,     1,     1,     1,     1,     4,     5,     4,
       6,     1,     0,     3,     3,     1,     1,     0,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     0,
       2,     0,     2,     0,     3,     2,     1,     2,     1,     0,
       3,     1,     0,     1,     0,     1,     0,     3,     2,     0,
       1,     2,     4,     4,     5,     4,     2,     3,     1,     1,
       1,     0,     1,     0,     4,     0,     4,     0,     2,     2,
       1,     2,     0,     1,     1,     1,     1,     0,     3,     3,
       3,     4,     2,     3,     1,     1,     2,     4,     0,     0,
       0,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     3,     3,     3,     0,
       1,     3,     3,     0,     3,     1,     3,     0,     4,     3,
       1,     2,     2,     3,     4,     4,     0,     3,     4,     4,
       1,     1,     0,     2,     0,     0,     0,     0,     0,    20,
       6,     0,     3,     0,     0,     9,     0,     0,     8,     4,
       4,     3,     4,     3,     3,     0,     3,     1,     3,     5,
       1,     1,     1,     0,     1,     1,     0,     2,     0,     0,
       3,     0,     2,     5,     3,     3,     3,     1
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (thd, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)




# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (thd);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep, thd);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp,
                 int yyrule, THD *thd)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)], thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, THD *thd)
{
  YY_USE (yyvaluep);
  YY_USE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* query: END_OF_INPUT  */
#line 2270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(!thd->bootstrap) &&
                unlikely(!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 27191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3: /* $@1: %empty  */
#line 2279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 27218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 5: /* query: verb_clause END_OF_INPUT  */
#line 2304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 27227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 68: /* deallocate: deallocate_or_drop PREPARE_SYM ident  */
#line 2384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 27237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 71: /* prepare: PREPARE_SYM ident FROM prepare_src  */
#line 2398 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "PREPARE..FROM"));
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].ident_sys);
          }
#line 27250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 72: /* $@2: %empty  */
#line 2409 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->expr_allows_subselect= false; }
#line 27256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 73: /* prepare_src: $@2 expr  */
#line 2411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->prepared_stmt_code= (yyvsp[0].item);
            Lex->expr_allows_subselect= true;
          }
#line 27265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 74: /* $@3: %empty  */
#line 2419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 27275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 75: /* execute: EXECUTE_SYM ident $@3 execute_using  */
#line 2425 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 27281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 76: /* $@4: %empty  */
#line 2427 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE IMMEDIATE"));
            Lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
          }
#line 27292 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 77: /* execute: EXECUTE_SYM IMMEDIATE_SYM prepare_src $@4 execute_using  */
#line 2434 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 27298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 79: /* $@5: %empty  */
#line 2439 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->expr_allows_subselect= false; }
#line 27304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 80: /* execute_using: USING $@5 execute_var_list  */
#line 2441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE..USING"));
            Lex->expr_allows_subselect= true;
          }
#line 27315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 83: /* execute_var_ident: expr_or_ignore_or_default  */
#line 2456 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->prepared_stmt_params.push_back((yyvsp[0].item),
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 84: /* $@6: %empty  */
#line 2467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 27334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 85: /* help: HELP_SYM $@6 ident_or_text  */
#line 2472 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 27344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 86: /* $@7: %empty  */
#line 2483 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 27352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 87: /* change: CHANGE MASTER_SYM optional_connection_name TO_SYM $@7 master_defs  */
#line 2487 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 27358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 90: /* master_def: MASTER_HOST_SYM '=' TEXT_STRING_sys  */
#line 2497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 27366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 91: /* master_def: MASTER_USER_SYM '=' TEXT_STRING_sys  */
#line 2501 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 27374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 92: /* master_def: MASTER_PASSWORD_SYM '=' TEXT_STRING_sys  */
#line 2505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 27382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 93: /* master_def: MASTER_PORT_SYM '=' ulong_num  */
#line 2509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 27390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 94: /* master_def: MASTER_CONNECT_RETRY_SYM '=' ulong_num  */
#line 2513 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 27398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 95: /* master_def: MASTER_DELAY_SYM '=' ulong_num  */
#line 2517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 27412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 96: /* master_def: MASTER_SSL_SYM '=' ulong_num  */
#line 2527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 97: /* master_def: MASTER_SSL_CA_SYM '=' TEXT_STRING_sys  */
#line 2532 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 27429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 98: /* master_def: MASTER_SSL_CAPATH_SYM '=' TEXT_STRING_sys  */
#line 2536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 27437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 99: /* master_def: MASTER_SSL_CERT_SYM '=' TEXT_STRING_sys  */
#line 2540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 27445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 100: /* master_def: MASTER_SSL_CIPHER_SYM '=' TEXT_STRING_sys  */
#line 2544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 27453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 101: /* master_def: MASTER_SSL_KEY_SYM '=' TEXT_STRING_sys  */
#line 2548 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 27461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 102: /* master_def: MASTER_SSL_VERIFY_SERVER_CERT_SYM '=' ulong_num  */
#line 2552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 103: /* master_def: MASTER_SSL_CRL_SYM '=' TEXT_STRING_sys  */
#line 2557 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 27478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 104: /* master_def: MASTER_SSL_CRLPATH_SYM '=' TEXT_STRING_sys  */
#line 2561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 27486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 105: /* master_def: MASTER_HEARTBEAT_PERIOD_SYM '=' NUM_literal  */
#line 2566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 106: /* master_def: IGNORE_SERVER_IDS_SYM '=' '(' ignore_server_id_list ')'  */
#line 2594 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 27526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 107: /* master_def: DO_DOMAIN_IDS_SYM '=' '(' do_domain_id_list ')'  */
#line 2598 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 108: /* master_def: IGNORE_DOMAIN_IDS_SYM '=' '(' ignore_domain_id_list ')'  */
#line 2602 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 113: /* ignore_server_id: ulong_num  */
#line 2617 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 27550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 117: /* do_domain_id: ulong_num  */
#line 2630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 27558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 121: /* ignore_domain_id: ulong_num  */
#line 2643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 27566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 122: /* master_file_def: MASTER_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2650 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 27574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 123: /* master_file_def: MASTER_LOG_POS_SYM '=' ulonglong_num  */
#line 2654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 27593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 124: /* master_file_def: RELAY_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2669 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 27601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 125: /* master_file_def: RELAY_LOG_POS_SYM '=' ulong_num  */
#line 2673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 27611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 126: /* master_file_def: MASTER_USE_GTID_SYM '=' CURRENT_POS_SYM  */
#line 2679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 27621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 127: /* master_file_def: MASTER_USE_GTID_SYM '=' SLAVE_POS_SYM  */
#line 2685 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 27631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 128: /* master_file_def: MASTER_USE_GTID_SYM '=' NO_SYM  */
#line 2691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 27641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 129: /* optional_connection_name: %empty  */
#line 2700 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 27650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 131: /* connection_name: TEXT_STRING_sys  */
#line 2709 "/home/buildbot/git/sql/sql_yacc.yy"
        {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 27662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 132: /* $@8: %empty  */
#line 2722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-3].num),
                                                     (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
               MYSQL_YYABORT;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 27690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 133: /* create: create_or_replace opt_temporary TABLE_SYM opt_if_not_exists table_ident $@8 create_body  */
#line 2746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 27700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 134: /* $@9: %empty  */
#line 2752 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           LEX *lex= thd->lex;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                           TL_OPTION_UPDATING,
                                                           TL_WRITE,
                                                           MDL_EXCLUSIVE)))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 27733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 135: /* create: create_or_replace opt_temporary SEQUENCE_SYM opt_if_not_exists table_ident $@9 opt_sequence opt_create_table_options  */
#line 2781 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->select_lex.table_list.first->db.str,
                       lex->select_lex.table_list.first->table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            lex->current_select= &lex->select_lex;
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 27761 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 136: /* $@10: %empty  */
#line 2807 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 137: /* create: create_or_replace opt_unique INDEX_SYM opt_if_not_exists ident opt_key_algorithm_clause ON table_ident $@10 '(' key_list ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2814 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { }
#line 27778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 138: /* $@11: %empty  */
#line 2817 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 139: /* create: create_or_replace fulltext INDEX_SYM opt_if_not_exists ident ON table_ident $@11 '(' key_list ')' opt_lock_wait_timeout fulltext_key_options opt_index_lock_algorithm  */
#line 2825 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { }
#line 27796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 140: /* $@12: %empty  */
#line 2828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 141: /* create: create_or_replace spatial INDEX_SYM opt_if_not_exists ident ON table_ident $@12 '(' key_list ')' opt_lock_wait_timeout spatial_key_options opt_index_lock_algorithm  */
#line 2836 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { }
#line 27814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 142: /* $@13: %empty  */
#line 2838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 27823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 143: /* create: create_or_replace DATABASE opt_if_not_exists ident $@13 opt_create_database_options  */
#line 2843 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 27835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 144: /* $@14: %empty  */
#line 2852 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                              DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid),
                                              (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 27846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 145: /* create: create_or_replace definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@14 view_list_opt AS view_select  */
#line 2859 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 146: /* $@15: %empty  */
#line 2862 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 27861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 147: /* create: create_or_replace view_algorithm definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@15 view_list_opt AS view_select  */
#line 2867 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 148: /* $@16: %empty  */
#line 2869 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 27873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 149: /* create: create_or_replace definer_opt TRIGGER_SYM $@16 trigger_tail  */
#line 2871 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 150: /* $@17: %empty  */
#line 2873 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 27885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 151: /* create: create_or_replace definer_opt PROCEDURE_SYM $@17 sp_tail  */
#line 2875 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 152: /* $@18: %empty  */
#line 2877 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 27897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 153: /* create: create_or_replace definer_opt EVENT_SYM $@18 event_tail  */
#line 2879 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 154: /* $@19: %empty  */
#line 2881 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 27911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 155: /* create: create_or_replace definer FUNCTION_SYM $@19 sf_tail_not_aggregate  */
#line 2885 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 156: /* $@20: %empty  */
#line 2887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 27925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 157: /* create: create_or_replace definer AGGREGATE_SYM FUNCTION_SYM $@20 sf_tail_aggregate  */
#line 2891 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 158: /* $@21: %empty  */
#line 2893 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 27937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 159: /* create: create_or_replace no_definer FUNCTION_SYM $@21 create_function_tail  */
#line 2895 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27943 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 160: /* $@22: %empty  */
#line 2897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 27951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 161: /* create: create_or_replace no_definer AGGREGATE_SYM FUNCTION_SYM $@22 create_aggregate_function_tail  */
#line 2901 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 27957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 162: /* create: create_or_replace USER_SYM opt_if_not_exists clear_privileges grant_list opt_require_clause opt_resource_options  */
#line 2904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-6].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 163: /* create: create_or_replace ROLE_SYM opt_if_not_exists clear_privileges role_list opt_with_admin  */
#line 2911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 164: /* create: CREATE LOGFILE_SYM GROUP_SYM logfile_group_info  */
#line 2917 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 27985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 165: /* create: CREATE TABLESPACE tablespace_info  */
#line 2921 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 27993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 166: /* $@23: %empty  */
#line 2924 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 27999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 167: /* create: create_or_replace $@23 server_def  */
#line 2926 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 28005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 168: /* sf_tail_not_aggregate: sf_tail  */
#line 2931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
          }
#line 28017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 169: /* sf_tail_aggregate: sf_tail  */
#line 2942 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR)))
            {
              my_yyabort_error((ER_INVALID_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(GROUP_AGGREGATE);
          }
#line 28029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 170: /* create_function_tail: sf_tail_not_aggregate  */
#line 2952 "/home/buildbot/git/sql/sql_yacc.yy"
                                { }
#line 28035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 171: /* create_function_tail: udf_tail  */
#line 2953 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->udf.type= UDFTYPE_FUNCTION; }
#line 28041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 172: /* create_aggregate_function_tail: sf_tail_aggregate  */
#line 2958 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 28047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 173: /* create_aggregate_function_tail: udf_tail  */
#line 2959 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->udf.type= UDFTYPE_AGGREGATE; }
#line 28053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 174: /* opt_sequence: %empty  */
#line 2962 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 28059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 178: /* sequence_def: MINVALUE_SYM opt_equal longlong_num  */
#line 2973 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 28068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 179: /* sequence_def: NO_SYM MINVALUE_SYM  */
#line 2978 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 28078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 180: /* sequence_def: NOMINVALUE_SYM  */
#line 2984 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 28088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 181: /* sequence_def: MAXVALUE_SYM opt_equal longlong_num  */
#line 2990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 28100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 182: /* sequence_def: NO_SYM MAXVALUE_SYM  */
#line 2998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 28110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 183: /* sequence_def: NOMAXVALUE_SYM  */
#line 3004 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 28120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 184: /* sequence_def: START_SYM opt_with longlong_num  */
#line 3010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 28132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 185: /* sequence_def: INCREMENT_SYM opt_by longlong_num  */
#line 3018 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 28144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 186: /* sequence_def: CACHE_SYM opt_equal longlong_num  */
#line 3026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 28156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 187: /* sequence_def: NOCACHE_SYM  */
#line 3034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 28168 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 188: /* sequence_def: CYCLE_SYM  */
#line 3042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 28180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 189: /* sequence_def: NOCYCLE_SYM  */
#line 3050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 28192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 190: /* sequence_def: RESTART_SYM  */
#line 3058 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 28208 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 191: /* sequence_def: RESTART_SYM opt_with longlong_num  */
#line 3070 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 28225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 192: /* force_lookahead: %empty  */
#line 3085 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 28231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 193: /* force_lookahead: FORCE_LOOKAHEAD  */
#line 3085 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 28237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 194: /* $@24: %empty  */
#line 3089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 28247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 195: /* server_def: SERVER_SYM opt_if_not_exists ident_or_text $@24 FOREIGN DATA_SYM WRAPPER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 3096 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 28253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 198: /* server_option: USER_SYM TEXT_STRING_sys  */
#line 3106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 28262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 199: /* server_option: HOST_SYM TEXT_STRING_sys  */
#line 3111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 28271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 200: /* server_option: DATABASE TEXT_STRING_sys  */
#line 3116 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 28280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 201: /* server_option: OWNER_SYM TEXT_STRING_sys  */
#line 3121 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 28289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 202: /* server_option: PASSWORD_SYM TEXT_STRING_sys  */
#line 3126 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 28298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 203: /* server_option: SOCKET_SYM TEXT_STRING_sys  */
#line 3131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 28307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 204: /* server_option: PORT_SYM ulong_num  */
#line 3136 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 28315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 205: /* $@25: %empty  */
#line 3143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 28336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 206: /* event_tail: remember_name opt_if_not_exists sp_name $@25 ON SCHEDULE_SYM ev_schedule_time opt_ev_on_completion opt_ev_status opt_ev_comment DO_SYM ev_sql_stmt  */
#line 3164 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 28348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 207: /* $@26: %empty  */
#line 3175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 28357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 209: /* ev_schedule_time: AT_SYM expr  */
#line 3182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 28365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 210: /* opt_ev_status: %empty  */
#line 3188 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 28371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 211: /* opt_ev_status: ENABLE_SYM  */
#line 3190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 28381 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 212: /* opt_ev_status: DISABLE_SYM ON SLAVE  */
#line 3196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 28391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 213: /* opt_ev_status: DISABLE_SYM  */
#line 3202 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 28401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 214: /* ev_starts: %empty  */
#line 3211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 28412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 215: /* ev_starts: STARTS_SYM expr  */
#line 3218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 28420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 217: /* ev_ends: ENDS_SYM expr  */
#line 3226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 28428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 218: /* opt_ev_on_completion: %empty  */
#line 3232 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 28434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 220: /* ev_on_completion: ON COMPLETION_SYM opt_not PRESERVE_SYM  */
#line 3238 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 28445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 221: /* opt_ev_comment: %empty  */
#line 3247 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 28451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 222: /* opt_ev_comment: COMMENT_SYM TEXT_STRING_sys  */
#line 3249 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 28460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 223: /* $@27: %empty  */
#line 3256 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 28496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 224: /* ev_sql_stmt: $@27 sp_proc_stmt force_lookahead  */
#line 3288 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->event_parse_data->body_changed= TRUE;
          }
#line 28510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 225: /* clear_privileges: %empty  */
#line 3301 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= null_clex_str;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
#line 28526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 226: /* sp_name: ident '.' ident  */
#line 3316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 227: /* sp_name: ident  */
#line 3321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 228: /* sp_a_chistics: %empty  */
#line 3328 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 28550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 229: /* sp_a_chistics: sp_a_chistics sp_chistic  */
#line 3329 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 28556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 230: /* sp_c_chistics: %empty  */
#line 3333 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 28562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 231: /* sp_c_chistics: sp_c_chistics sp_c_chistic  */
#line 3334 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 28568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 232: /* sp_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 3340 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 28574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 233: /* sp_chistic: LANGUAGE_SYM SQL_SYM  */
#line 3342 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Just parse it, we only have one language for now. */ }
#line 28580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 234: /* sp_chistic: NO_SYM SQL_SYM  */
#line 3344 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 28586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 235: /* sp_chistic: CONTAINS_SYM SQL_SYM  */
#line 3346 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 28592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 236: /* sp_chistic: READS_SYM SQL_SYM DATA_SYM  */
#line 3348 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 28598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 237: /* sp_chistic: MODIFIES_SYM SQL_SYM DATA_SYM  */
#line 3350 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 28604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 238: /* sp_chistic: sp_suid  */
#line 3352 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 28610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 239: /* sp_c_chistic: sp_chistic  */
#line 3357 "/home/buildbot/git/sql/sql_yacc.yy"
                                { }
#line 28616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 240: /* sp_c_chistic: opt_not DETERMINISTIC_SYM  */
#line 3358 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 28622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 241: /* sp_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 3363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 28630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 242: /* sp_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 3367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 28638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 243: /* $@28: %empty  */
#line 3374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 244: /* call: CALL_SYM ident $@28 opt_sp_cparam_list  */
#line 3379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 28656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 245: /* $@29: %empty  */
#line 3384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 246: /* call: CALL_SYM ident '.' ident $@29 opt_sp_cparam_list  */
#line 3389 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 28674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 247: /* $@30: %empty  */
#line 3394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 248: /* call: CALL_SYM ident '.' ident '.' ident $@30 opt_sp_cparam_list  */
#line 3399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 28692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 253: /* sp_cparams: sp_cparams ',' expr  */
#line 3418 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 28700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 254: /* sp_cparams: expr  */
#line 3422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 28708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 259: /* sp_param_name: ident  */
#line 3440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 260: /* sp_param_name_and_type: sp_param_name field_type  */
#line 3448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 28726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 261: /* sp_param_name_and_type: sp_param_name TYPE_SYM OF_SYM ident '.' ident  */
#line 3453 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd,
                                                                (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-2].ident_sys),
                                                                (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 262: /* sp_param_name_and_type: sp_param_name TYPE_SYM OF_SYM ident '.' ident '.' ident  */
#line 3460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar),
                                                                (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 263: /* sp_param_name_and_type: sp_param_name ROW_SYM TYPE_SYM OF_SYM ident  */
#line 3466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-4].spvar), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 264: /* sp_param_name_and_type: sp_param_name ROW_SYM TYPE_SYM OF_SYM ident '.' ident  */
#line 3471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-6].spvar), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 265: /* sp_param_name_and_type: sp_param_name ROW_SYM row_type_body  */
#line 3476 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 28774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 270: /* sp_pdparam: sp_opt_inout sp_param_name_and_type  */
#line 3494 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyvsp[0].spvar)->mode=(yyvsp[-1].spvar_mode); }
#line 28780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 271: /* sp_opt_inout: %empty  */
#line 3498 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 28786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 272: /* sp_opt_inout: IN_SYM  */
#line 3499 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 28792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 273: /* sp_opt_inout: OUT_SYM  */
#line 3500 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 28798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 274: /* sp_opt_inout: INOUT_SYM  */
#line 3501 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 28804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 275: /* $@31: %empty  */
#line 3506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 28812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 276: /* sp_parenthesized_fdparam_list: '(' $@31 sp_fdparam_list ')'  */
#line 3511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 28820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 277: /* $@32: %empty  */
#line 3518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 28828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 278: /* sp_parenthesized_pdparam_list: '(' $@32 sp_pdparam_list ')'  */
#line 3523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 28836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 279: /* sp_proc_stmts: %empty  */
#line 3529 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 28842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 281: /* sp_proc_stmts1: sp_proc_stmt ';'  */
#line 3534 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 28848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 283: /* sp_decls: %empty  */
#line 3540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).init();
          }
#line 28856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 284: /* sp_decls: sp_decls sp_decl ';'  */
#line 3544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (unlikely(Lex->sp_declarations_join(&(yyval.spblock), (yyvsp[-2].spblock), (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 28869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 285: /* sp_decl: DECLARE_MARIADB_SYM sp_decl_body  */
#line 3555 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.spblock)= (yyvsp[0].spblock); }
#line 28875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 286: /* optionally_qualified_column_ident: sp_decl_ident  */
#line 3561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 287: /* optionally_qualified_column_ident: sp_decl_ident '.' ident  */
#line 3567 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28895 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 288: /* optionally_qualified_column_ident: sp_decl_ident '.' ident '.' ident  */
#line 3573 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 289: /* row_field_name: ident  */
#line 3582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!((yyval.spvar_definition)= new (thd->mem_root) Spvar_definition())))
              MYSQL_YYABORT;
            Lex->init_last_field((yyval.spvar_definition), &(yyvsp[0].ident_sys), thd->variables.collation_database);
          }
#line 28918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 291: /* row_field_definition_list: row_field_definition  */
#line 3598 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spvar_definition_list)= new (thd->mem_root) Row_definition_list())) ||
                unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 292: /* row_field_definition_list: row_field_definition_list ',' row_field_definition  */
#line 3604 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint unused;
            if (unlikely((yyvsp[-2].spvar_definition_list)->find_row_field_by_name(&(yyvsp[0].spvar_definition)->field_name, &unused)))
              my_yyabort_error((ER_DUP_FIELDNAME, MYF(0), (yyvsp[0].spvar_definition)->field_name.str));
            (yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list);
            if (unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 293: /* row_type_body: '(' row_field_definition_list ')'  */
#line 3615 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 28947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 294: /* sp_decl_idents_init_vars: sp_decl_idents  */
#line 3620 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 28955 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 295: /* sp_decl_variable_list: sp_decl_idents_init_vars field_type sp_opt_default  */
#line 3629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 28967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 296: /* sp_decl_variable_list: sp_decl_idents_init_vars TYPE_SYM OF_SYM optionally_qualified_column_ident sp_opt_default  */
#line 3639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 28977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 297: /* sp_decl_variable_list: sp_decl_idents_init_vars ROW_SYM TYPE_SYM OF_SYM optionally_qualified_column_ident sp_opt_default  */
#line 3647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-5].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-5].num));
          }
#line 28987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 298: /* sp_decl_variable_list: sp_decl_idents_init_vars ROW_SYM row_type_body sp_opt_default  */
#line 3655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 28997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 300: /* sp_decl_body: sp_decl_ident CONDITION_SYM FOR_SYM sp_cond  */
#line 3665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 29008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 302: /* $@33: %empty  */
#line 3673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 29016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 303: /* sp_decl_body: sp_decl_ident CURSOR_SYM $@33 opt_parenthesized_cursor_formal_parameters FOR_SYM sp_cursor_stmt  */
#line 3678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-5].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, true)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 29030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 304: /* $@34: %empty  */
#line 3691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 29039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 305: /* sp_decl_handler: sp_handler_type HANDLER_SYM FOR_SYM $@34 sp_hcond_list sp_proc_stmt  */
#line 3696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 29050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 308: /* sp_cursor_stmt_lex: %empty  */
#line 3711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 29061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 309: /* $@35: %empty  */
#line 3721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 29070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 310: /* sp_cursor_stmt: sp_cursor_stmt_lex $@35 select  */
#line 3726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 29082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 311: /* sp_handler_type: EXIT_MARIADB_SYM  */
#line 3736 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::EXIT; }
#line 29088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 312: /* sp_handler_type: CONTINUE_MARIADB_SYM  */
#line 3737 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::CONTINUE; }
#line 29094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 313: /* sp_handler_type: EXIT_ORACLE_SYM  */
#line 3738 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::EXIT; }
#line 29100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 314: /* sp_handler_type: CONTINUE_ORACLE_SYM  */
#line 3739 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::CONTINUE; }
#line 29106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 315: /* sp_hcond_list: sp_hcond_element  */
#line 3745 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 29112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 316: /* sp_hcond_list: sp_hcond_list ',' sp_hcond_element  */
#line 3747 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)+= 1; }
#line 29118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 317: /* sp_hcond_element: sp_hcond  */
#line 3752 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 29134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 318: /* sp_cond: ulong_num  */
#line 3767 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 29146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 320: /* sqlstate: SQLSTATE_SYM opt_value TEXT_STRING_literal  */
#line 3779 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 29167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 321: /* opt_value: %empty  */
#line 3798 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 29173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 322: /* opt_value: VALUE_SYM  */
#line 3799 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 29179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 323: /* sp_hcond: sp_cond  */
#line 3804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 29187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 324: /* sp_hcond: ident  */
#line 3808 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 29197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 325: /* sp_hcond: SQLWARNING_SYM  */
#line 3814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 29207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 326: /* sp_hcond: not FOUND_SYM  */
#line 3820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 29217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 327: /* sp_hcond: SQLEXCEPTION_SYM  */
#line 3826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 29227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 328: /* sp_hcond: OTHERS_ORACLE_SYM  */
#line 3832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 29237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 329: /* raise_stmt_oracle: RAISE_ORACLE_SYM opt_set_signal_information  */
#line 3842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 29246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 330: /* raise_stmt_oracle: RAISE_ORACLE_SYM signal_value opt_set_signal_information  */
#line 3847 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 29255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 331: /* signal_stmt: SIGNAL_SYM signal_value opt_set_signal_information  */
#line 3855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 29264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 332: /* signal_value: ident  */
#line 3863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(cond->type != sp_condition_value::SQLSTATE))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 29283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 333: /* signal_value: sqlstate  */
#line 3878 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 29289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 334: /* opt_signal_value: %empty  */
#line 3883 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= NULL; }
#line 29295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 335: /* opt_signal_value: signal_value  */
#line 3885 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 29301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 336: /* opt_set_signal_information: %empty  */
#line 3890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 29309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 338: /* signal_information_item_list: signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3898 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 29321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 339: /* signal_information_item_list: signal_information_item_list ',' signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 29335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 340: /* signal_allowed_expr: literal  */
#line 3923 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 29341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 341: /* signal_allowed_expr: variable  */
#line 3925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 29363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 342: /* signal_allowed_expr: simple_ident  */
#line 3943 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 29369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 343: /* signal_condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3949 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 29375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 344: /* signal_condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3951 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 29381 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 345: /* signal_condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3953 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 29387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 346: /* signal_condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3955 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 29393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 347: /* signal_condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3957 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 29399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 348: /* signal_condition_information_item_name: CATALOG_NAME_SYM  */
#line 3959 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 29405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 349: /* signal_condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3961 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 29411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 350: /* signal_condition_information_item_name: TABLE_NAME_SYM  */
#line 3963 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 29417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 351: /* signal_condition_information_item_name: COLUMN_NAME_SYM  */
#line 3965 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 29423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 352: /* signal_condition_information_item_name: CURSOR_NAME_SYM  */
#line 3967 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 29429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 353: /* signal_condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3969 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 29435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 354: /* signal_condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3971 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 29441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 355: /* resignal_stmt: RESIGNAL_SYM opt_signal_value opt_set_signal_information  */
#line 3976 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 29450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 356: /* get_diagnostics: GET_SYM which_area DIAGNOSTICS_SYM diagnostics_information  */
#line 3984 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 29466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 357: /* which_area: %empty  */
#line 3999 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 358: /* which_area: CURRENT_SYM  */
#line 4001 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 359: /* diagnostics_information: statement_information  */
#line 4006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 29488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 360: /* diagnostics_information: CONDITION_SYM condition_number condition_information  */
#line 4012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 29498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 361: /* statement_information: statement_information_item  */
#line 4021 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 29509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 362: /* statement_information: statement_information ',' statement_information_item  */
#line 4028 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 29519 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 363: /* statement_information_item: simple_target_specification '=' statement_information_item_name  */
#line 4037 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 29529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 364: /* simple_target_specification: ident_cli  */
#line 4046 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 29538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 365: /* simple_target_specification: '@' ident_or_text  */
#line 4051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 29548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 366: /* statement_information_item_name: NUMBER_MARIADB_SYM  */
#line 4060 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 29554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 367: /* statement_information_item_name: NUMBER_ORACLE_SYM  */
#line 4062 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 29560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 368: /* statement_information_item_name: ROW_COUNT_SYM  */
#line 4064 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 29566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 369: /* condition_number: signal_allowed_expr  */
#line 4073 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 29572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 370: /* condition_information: condition_information_item  */
#line 4078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 29583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 371: /* condition_information: condition_information ',' condition_information_item  */
#line 4085 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 29593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 372: /* condition_information_item: simple_target_specification '=' condition_information_item_name  */
#line 4094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 29603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 373: /* condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 4103 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 29609 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 374: /* condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 4105 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 29615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 375: /* condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 4107 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 29621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 376: /* condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 4109 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 29627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 377: /* condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 4111 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 29633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 378: /* condition_information_item_name: CATALOG_NAME_SYM  */
#line 4113 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 29639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 379: /* condition_information_item_name: SCHEMA_NAME_SYM  */
#line 4115 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 29645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 380: /* condition_information_item_name: TABLE_NAME_SYM  */
#line 4117 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 29651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 381: /* condition_information_item_name: COLUMN_NAME_SYM  */
#line 4119 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 29657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 382: /* condition_information_item_name: CURSOR_NAME_SYM  */
#line 4121 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 29663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 383: /* condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 4123 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 29669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 384: /* condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 4125 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 29675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 385: /* condition_information_item_name: RETURNED_SQLSTATE_SYM  */
#line 4127 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 29681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 387: /* sp_decl_ident: keyword_sp_decl  */
#line 4133 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 29690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 388: /* sp_decl_idents: sp_decl_ident  */
#line 4141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 29706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 389: /* sp_decl_idents: sp_decl_idents ',' ident  */
#line 4153 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 29722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 390: /* sp_opt_default: %empty  */
#line 4167 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item) = NULL; }
#line 29728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 391: /* sp_opt_default: DEFAULT expr  */
#line 4168 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item); }
#line 29734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 411: /* $@36: %empty  */
#line 4210 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 29744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 412: /* sp_proc_stmt_if: IF_SYM $@36 sp_if END IF_SYM  */
#line 4216 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->do_cont_backpatch(); }
#line 29750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 413: /* $@37: %empty  */
#line 4220 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 29762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 414: /* sp_proc_stmt_statement: $@37 statement  */
#line 4228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            /* "USE db" doesn't work in a procedure */
            if (unlikely(lex->sql_command == SQLCOM_CHANGE_DB))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "USE"));
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new (thd->mem_root)
                sp_instr_stmt(sp->instructions(), lex->spcont, lex);
              if (unlikely(i == NULL))
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;;
              if (unlikely(!(i->m_query.str= strmake_root(thd->mem_root,
                                                          sp->m_tmp_query,
                                                          i->m_query.length))) ||
                  unlikely(sp->add_instr(i)))
                MYSQL_YYABORT;
            }
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 417: /* $@38: %empty  */
#line 4279 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->reset_lex(thd); }
#line 29814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 418: /* sp_proc_stmt_return: RETURN_ALLMODES_SYM $@38 expr  */
#line 4281 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 419: /* sp_proc_stmt_return: RETURN_ORACLE_SYM  */
#line 4292 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 29843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 420: /* $@39: %empty  */
#line 4304 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->reset_lex(thd); }
#line 29849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 421: /* reset_lex_expr: $@39 expr  */
#line 4304 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.item)= (yyvsp[0].item); }
#line 29855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 422: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM  */
#line 4309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 29864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 423: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident  */
#line 4314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 29873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 424: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM WHEN_SYM reset_lex_expr  */
#line 4319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 425: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident WHEN_SYM reset_lex_expr  */
#line 4325 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 426: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM  */
#line 4334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 29902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 427: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident  */
#line 4339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 29911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 428: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM WHEN_SYM reset_lex_expr  */
#line 4344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 429: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident WHEN_SYM reset_lex_expr  */
#line 4350 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 430: /* sp_proc_stmt_leave: LEAVE_SYM label_ident  */
#line 4360 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 431: /* sp_proc_stmt_iterate: ITERATE_SYM label_ident  */
#line 4368 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 432: /* sp_proc_stmt_goto_oracle: GOTO_ORACLE_SYM label_ident  */
#line 4376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 433: /* assignment_source_lex: %empty  */
#line 4383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 29969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 434: /* $@40: %empty  */
#line 4393 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 29978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 435: /* assignment_source_expr: assignment_source_lex $@40 expr  */
#line 4398 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 436: /* $@41: %empty  */
#line 4411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 30000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 437: /* for_loop_bound_expr: assignment_source_lex $@41 expr  */
#line 4415 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 30013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 438: /* cursor_actual_parameters: assignment_source_expr  */
#line 4427 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 30023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 439: /* cursor_actual_parameters: cursor_actual_parameters ',' assignment_source_expr  */
#line 4433 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 30032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 440: /* opt_parenthesized_cursor_actual_parameters: %empty  */
#line 4440 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= NULL; }
#line 30038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 441: /* opt_parenthesized_cursor_actual_parameters: '(' cursor_actual_parameters ')'  */
#line 4441 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 30044 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 442: /* sp_proc_stmt_open: OPEN_SYM ident opt_parenthesized_cursor_actual_parameters  */
#line 4446 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 30053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 443: /* sp_proc_stmt_fetch_head: FETCH_SYM ident INTO  */
#line 4454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 444: /* sp_proc_stmt_fetch_head: FETCH_SYM FROM ident INTO  */
#line 4459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 445: /* sp_proc_stmt_fetch_head: FETCH_SYM NEXT_SYM FROM ident INTO  */
#line 4464 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30080 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 446: /* sp_proc_stmt_fetch: sp_proc_stmt_fetch_head sp_fetch_list  */
#line 4471 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 30086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 447: /* sp_proc_stmt_fetch: FETCH_SYM GROUP_SYM NEXT_SYM ROW_SYM  */
#line 4473 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            lex->sphead->m_flags|= sp_head::HAS_AGGREGATE_INSTR;
            sp_instr_agg_cfetch *i=
              new (thd->mem_root) sp_instr_agg_cfetch(sp->instructions(),
                                                      lex->spcont);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
         }
#line 30102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 448: /* sp_proc_stmt_close: CLOSE_SYM ident  */
#line 4488 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 30121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 449: /* sp_fetch_list: ident  */
#line 4506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 30141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 450: /* sp_fetch_list: sp_fetch_list ',' ident  */
#line 4522 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 30161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 451: /* $@42: %empty  */
#line 4540 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->reset_lex(thd); }
#line 30167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 452: /* $@43: %empty  */
#line 4542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 30187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 453: /* $@44: %empty  */
#line 4558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 30203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 454: /* sp_if: $@42 expr THEN_SYM $@43 sp_proc_stmts1 $@44 sp_elseifs  */
#line 4570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 30213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 458: /* $@45: %empty  */
#line 4585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 30267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 459: /* case_stmt_specification: CASE_SYM $@45 case_stmt_body else_clause_opt END CASE_SYM  */
#line 4638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 30285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 460: /* $@46: %empty  */
#line 4654 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 30291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 461: /* $@47: %empty  */
#line 4656 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 30302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 462: /* case_stmt_body: $@46 expr $@47 simple_when_clause_list  */
#line 4663 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 30308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 463: /* case_stmt_body: searched_when_clause_list  */
#line 4665 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 30314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 468: /* $@48: %empty  */
#line 4680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 30322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 469: /* $@49: %empty  */
#line 4684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 30337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 470: /* simple_when_clause: WHEN_SYM $@48 expr $@49 THEN_SYM sp_proc_stmts1  */
#line 4696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 30346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 471: /* $@50: %empty  */
#line 4704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 30354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 472: /* $@51: %empty  */
#line 4708 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 30367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 473: /* searched_when_clause: WHEN_SYM $@50 expr $@51 THEN_SYM sp_proc_stmts1  */
#line 4718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 30376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 474: /* else_clause_opt: %empty  */
#line 4726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 30391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 476: /* sp_label: label_ident ':'  */
#line 4740 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)= (yyvsp[-1].ident_sys); }
#line 30397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 477: /* sp_opt_label: %empty  */
#line 4744 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= null_clex_str; }
#line 30403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 478: /* sp_opt_label: label_ident  */
#line 4745 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 30409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 479: /* sp_block_label: sp_label  */
#line 4750 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 30419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 480: /* $@52: %empty  */
#line 4760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 30427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 481: /* sp_labeled_block: sp_block_label BEGIN_MARIADB_SYM $@52 sp_decls sp_proc_stmts END sp_opt_label  */
#line 4767 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 30436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 482: /* $@53: %empty  */
#line 4775 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 30444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 483: /* sp_unlabeled_block: BEGIN_MARIADB_SYM $@53 sp_decls sp_proc_stmts END  */
#line 4781 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 30453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 484: /* $@54: %empty  */
#line 4789 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 30463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 485: /* sp_unlabeled_block_not_atomic: BEGIN_MARIADB_SYM not ATOMIC_SYM $@54 sp_decls sp_proc_stmts END  */
#line 4797 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 30472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 486: /* opt_sp_for_loop_direction: %empty  */
#line 4805 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 30478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 487: /* opt_sp_for_loop_direction: REVERSE_SYM  */
#line 4806 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= -1; }
#line 30484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 488: /* sp_for_loop_index_and_bounds: ident sp_for_loop_bounds  */
#line 4811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 30493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 489: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr DOT_DOT_SYM for_loop_bound_expr  */
#line 4820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 30501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 490: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr  */
#line 4824 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 30512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 491: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction '(' sp_cursor_stmt ')'  */
#line 4831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 30522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 492: /* loop_body: sp_proc_stmts1 END LOOP_SYM  */
#line 4840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 30537 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 493: /* $@55: %empty  */
#line 4854 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 30549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 494: /* while_body: expr DO_SYM $@55 sp_proc_stmts1 END WHILE_SYM  */
#line 4862 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 30558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 495: /* $@56: %empty  */
#line 4870 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->reset_lex(thd); }
#line 30564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 496: /* repeat_body: sp_proc_stmts1 UNTIL_SYM $@56 expr END REPEAT_SYM  */
#line 4872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 30583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 497: /* pop_sp_loop_label: sp_opt_label  */
#line 4890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 30592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 498: /* $@57: %empty  */
#line 4898 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 30601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 499: /* sp_labeled_control: sp_label LOOP_SYM $@57 loop_body pop_sp_loop_label  */
#line 4903 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 30607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 500: /* $@58: %empty  */
#line 4905 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 30617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 501: /* sp_labeled_control: sp_label WHILE_SYM $@58 while_body pop_sp_loop_label  */
#line 4911 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 30623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 502: /* $@59: %empty  */
#line 4913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 30632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 503: /* $@60: %empty  */
#line 4918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 30643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 504: /* $@61: %empty  */
#line 4927 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 30652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 505: /* sp_labeled_control: sp_label FOR_SYM $@59 sp_for_loop_index_and_bounds $@60 DO_SYM sp_proc_stmts1 END FOR_SYM $@61 pop_sp_loop_label  */
#line 4932 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 30661 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 506: /* $@62: %empty  */
#line 4937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 30670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 507: /* sp_labeled_control: sp_label REPEAT_SYM $@62 repeat_body pop_sp_loop_label  */
#line 4942 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 30676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 508: /* $@63: %empty  */
#line 4947 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 30685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 509: /* sp_unlabeled_control: LOOP_SYM $@63 loop_body  */
#line 4952 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 30693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 510: /* $@64: %empty  */
#line 4956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 30703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 511: /* sp_unlabeled_control: WHILE_SYM $@64 while_body  */
#line 4962 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 30711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 512: /* $@65: %empty  */
#line 4966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 30722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 513: /* $@66: %empty  */
#line 4973 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 30733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 514: /* sp_unlabeled_control: FOR_SYM $@65 sp_for_loop_index_and_bounds $@66 DO_SYM sp_proc_stmts1 END FOR_SYM  */
#line 4982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 30745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 515: /* $@67: %empty  */
#line 4990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 30754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 516: /* sp_unlabeled_control: REPEAT_SYM $@67 repeat_body  */
#line 4995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 30762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 517: /* trg_action_time: BEFORE_SYM  */
#line 5002 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 30768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 518: /* trg_action_time: AFTER_SYM  */
#line 5004 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 30774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 519: /* trg_event: INSERT  */
#line 5009 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 30780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 520: /* trg_event: UPDATE_SYM  */
#line 5011 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 30786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 521: /* trg_event: DELETE_SYM  */
#line 5013 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 30792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 525: /* opt_logfile_group_name: %empty  */
#line 5047 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 526: /* opt_logfile_group_name: USE_SYM LOGFILE_SYM GROUP_SYM ident  */
#line 5049 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 30807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 527: /* alter_tablespace_info: tablespace_name ADD ts_datafile alter_tablespace_option_list  */
#line 5059 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 30815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 528: /* alter_tablespace_info: tablespace_name DROP ts_datafile alter_tablespace_option_list  */
#line 5065 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 30823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 533: /* $@68: %empty  */
#line 5088 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 580: /* ts_datafile: DATAFILE_SYM TEXT_STRING_sys  */
#line 5182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 30838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 581: /* lg_undofile: UNDOFILE_SYM TEXT_STRING_sys  */
#line 5190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 30847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 582: /* lg_redofile: REDOFILE_SYM TEXT_STRING_sys  */
#line 5198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 30856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 583: /* tablespace_name: ident  */
#line 5206 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 584: /* logfile_group_name: ident  */
#line 5219 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 585: /* ts_access_mode: READ_ONLY_SYM  */
#line 5232 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 30893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 586: /* ts_access_mode: READ_WRITE_SYM  */
#line 5237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 30902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 587: /* ts_access_mode: NOT_SYM ACCESSIBLE_SYM  */
#line 5242 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 30911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 588: /* opt_ts_initial_size: INITIAL_SIZE_SYM opt_equal size_number  */
#line 5250 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 30920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 589: /* opt_ts_autoextend_size: AUTOEXTEND_SIZE_SYM opt_equal size_number  */
#line 5258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 30929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 590: /* opt_ts_max_size: MAX_SIZE_SYM opt_equal size_number  */
#line 5266 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 30938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 591: /* opt_ts_extent_size: EXTENT_SIZE_SYM opt_equal size_number  */
#line 5274 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 30947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 592: /* opt_ts_undo_buffer_size: UNDO_BUFFER_SIZE_SYM opt_equal size_number  */
#line 5282 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 30956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 593: /* opt_ts_redo_buffer_size: REDO_BUFFER_SIZE_SYM opt_equal size_number  */
#line 5290 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 30965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 594: /* opt_ts_nodegroup: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 30976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 595: /* opt_ts_comment: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5308 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 30987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 596: /* opt_ts_engine: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 5318 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 30999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 599: /* ts_wait: WAIT_SYM  */
#line 5334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 31008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 600: /* ts_wait: NO_WAIT_SYM  */
#line 5339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 31019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 601: /* size_number: real_ulonglong_num  */
#line 5348 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 31025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 602: /* size_number: IDENT_sys  */
#line 5350 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 31034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 603: /* $@69: %empty  */
#line 5362 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.option_list= NULL; }
#line 31040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 604: /* create_body: '(' create_field_list ')' $@69 opt_create_table_options opt_create_partitioning opt_create_select  */
#line 5363 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 31046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 605: /* create_body: opt_create_table_options opt_create_partitioning opt_create_select  */
#line 5364 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 31052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 607: /* $@70: %empty  */
#line 5372 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->set_braces(1);}
#line 31058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 608: /* create_body: '(' create_select_query_specification ')' $@70 union_list  */
#line 5372 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 31064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 609: /* $@71: %empty  */
#line 5374 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->set_braces(1);}
#line 31070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 610: /* create_body: '(' create_select_query_specification ')' $@71 union_order_or_limit  */
#line 5374 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         {}
#line 31076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 611: /* create_body: create_like  */
#line 5376 "/home/buildbot/git/sql/sql_yacc.yy"
          {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->select_lex.add_table_to_list(thd,
                                        (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 31091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 612: /* create_like: LIKE table_ident  */
#line 5389 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[0].table); }
#line 31097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 613: /* create_like: '(' LIKE table_ident ')'  */
#line 5390 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[-1].table); }
#line 31103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 614: /* opt_create_select: %empty  */
#line 5394 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 615: /* opt_create_select: opt_duplicate opt_as create_select_query_expression opt_versioning_option  */
#line 5397 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 31118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 616: /* $@72: %empty  */
#line 5406 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Select->set_braces(0);
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 31127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 618: /* create_select_query_expression: opt_with_clause SELECT_SYM create_select_part2 create_select_part3_union_not_ready create_select_part4  */
#line 5413 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 31135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 620: /* $@73: %empty  */
#line 5418 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->set_braces(1);}
#line 31141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 621: /* create_select_query_expression: '(' create_select_query_specification ')' $@73 union_list  */
#line 5418 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 31147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 622: /* $@74: %empty  */
#line 5420 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->set_braces(1);}
#line 31153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 623: /* create_select_query_expression: '(' create_select_query_specification ')' $@74 union_order_or_limit  */
#line 5420 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         {}
#line 31159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 624: /* opt_create_partitioning: opt_partitioning  */
#line 5425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 31173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 625: /* opt_partitioning: %empty  */
#line 5461 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 627: /* $@75: %empty  */
#line 5467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 31194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 629: /* have_partitioning: %empty  */
#line 5482 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 31210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 630: /* $@76: %empty  */
#line 5497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 31227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 631: /* partition_entry: PARTITION_SYM $@76 partition  */
#line 5509 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 31233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 632: /* $@77: %empty  */
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->safe_to_cache_query= 1; }
#line 31239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 634: /* part_type_def: opt_linear KEY_SYM opt_key_algo '(' part_field_list ')'  */
#line 5520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 31250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 635: /* $@78: %empty  */
#line 5527 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= HASH_PARTITION; }
#line 31256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 636: /* part_type_def: opt_linear HASH_SYM $@78 part_func  */
#line 5528 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 31262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 637: /* part_type_def: RANGE_SYM part_func  */
#line 5530 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 31268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 638: /* part_type_def: RANGE_SYM part_column_list  */
#line 5532 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 31274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 639: /* $@79: %empty  */
#line 5534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 31282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 640: /* part_type_def: LIST_SYM $@79 part_func  */
#line 5538 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 31291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 641: /* part_type_def: LIST_SYM part_column_list  */
#line 5543 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= LIST_PARTITION; }
#line 31297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 642: /* $@80: %empty  */
#line 5545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 31306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 644: /* opt_linear: %empty  */
#line 5553 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 645: /* opt_linear: LINEAR_SYM  */
#line 5555 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->linear_hash_ind= TRUE;}
#line 31318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 646: /* opt_key_algo: %empty  */
#line 5560 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 31324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 647: /* opt_key_algo: ALGORITHM_SYM '=' real_ulong_num  */
#line 5562 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 31342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 648: /* part_field_list: %empty  */
#line 5578 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 649: /* part_field_list: part_field_item_list  */
#line 5579 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 31354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 650: /* part_field_item_list: part_field_item  */
#line 5583 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 31360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 651: /* part_field_item_list: part_field_item_list ',' part_field_item  */
#line 5584 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 31366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 652: /* part_field_item: ident  */
#line 5589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 31381 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 653: /* part_column_list: COLUMNS '(' part_field_list ')'  */
#line 5603 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 31391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 654: /* part_func: '(' part_func_expr ')'  */
#line 5613 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 31403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 655: /* sub_part_func: '(' part_func_expr ')'  */
#line 5624 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 31412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 656: /* opt_num_parts: %empty  */
#line 5632 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 657: /* opt_num_parts: PARTITIONS_SYM real_ulong_num  */
#line 5634 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 31432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 658: /* opt_sub_part: %empty  */
#line 5646 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 659: /* $@81: %empty  */
#line 5648 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 31444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 660: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear HASH_SYM sub_part_func $@81 opt_num_subparts  */
#line 5649 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 31450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 661: /* $@82: %empty  */
#line 5652 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 31460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 662: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear KEY_SYM opt_key_algo '(' sub_part_field_list ')' $@82 opt_num_subparts  */
#line 5657 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 31466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 663: /* sub_part_field_list: sub_part_field_item  */
#line 5661 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 31472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 664: /* sub_part_field_list: sub_part_field_list ',' sub_part_field_item  */
#line 5662 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 31478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 665: /* sub_part_field_item: ident  */
#line 5667 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 31493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 666: /* part_func_expr: bit_expr  */
#line 5681 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 31506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 667: /* opt_num_subparts: %empty  */
#line 5692 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 668: /* opt_num_subparts: SUBPARTITIONS_SYM real_ulong_num  */
#line 5694 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 31525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 669: /* part_defs: %empty  */
#line 5706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 31539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 670: /* part_defs: '(' part_def_list ')'  */
#line 5716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 31562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 671: /* part_def_list: part_definition  */
#line 5737 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 31568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 672: /* part_def_list: part_def_list ',' part_definition  */
#line 5738 "/home/buildbot/git/sql/sql_yacc.yy"
                                            {}
#line 31574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 673: /* $@83: %empty  */
#line 5743 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 31594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 674: /* part_definition: PARTITION_SYM $@83 part_name opt_part_values opt_part_options opt_sub_partition  */
#line 5762 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 31600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 675: /* part_name: ident  */
#line 5767 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 31612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 676: /* opt_part_values: %empty  */
#line 5778 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 31632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 677: /* $@84: %empty  */
#line 5794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 31649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 678: /* opt_part_values: VALUES_LESS_SYM THAN_SYM $@84 part_func_max  */
#line 5806 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 31655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 679: /* $@85: %empty  */
#line 5808 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 31672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 680: /* opt_part_values: VALUES_IN_SYM $@85 part_values_in  */
#line 5820 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 31678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 681: /* opt_part_values: CURRENT_SYM  */
#line 5822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 31687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 682: /* opt_part_values: HISTORY_SYM  */
#line 5827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 31696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 683: /* opt_part_values: DEFAULT  */
#line 5832 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 31717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 684: /* part_func_max: MAXVALUE_SYM  */
#line 5852 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 31739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 685: /* part_func_max: part_value_item  */
#line 5869 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 31745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 686: /* part_values_in: part_value_item  */
#line 5874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 31776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 687: /* part_values_in: '(' part_value_list ')'  */
#line 5901 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 31789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 688: /* part_value_list: part_value_item  */
#line 5912 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 31795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 689: /* part_value_list: part_value_list ',' part_value_item  */
#line 5913 "/home/buildbot/git/sql/sql_yacc.yy"
                                              {}
#line 31801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 690: /* $@86: %empty  */
#line 5918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 31815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 691: /* $@87: %empty  */
#line 5927 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 31821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 692: /* part_value_item: '(' $@86 part_value_item_list $@87 ')'  */
#line 5929 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 31846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 693: /* part_value_item_list: part_value_expr_item  */
#line 5952 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 31852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 694: /* part_value_item_list: part_value_item_list ',' part_value_expr_item  */
#line 5953 "/home/buildbot/git/sql/sql_yacc.yy"
                                                        {}
#line 31858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 695: /* part_value_expr_item: MAXVALUE_SYM  */
#line 5958 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 31873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 696: /* part_value_expr_item: bit_expr  */
#line 5969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 31891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 697: /* opt_sub_partition: %empty  */
#line 5987 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 31909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 698: /* opt_sub_partition: '(' sub_part_list ')'  */
#line 6001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 31936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 699: /* sub_part_list: sub_part_definition  */
#line 6026 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 31942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 700: /* sub_part_list: sub_part_list ',' sub_part_definition  */
#line 6027 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 31948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 701: /* $@88: %empty  */
#line 6032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 31985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 702: /* sub_part_definition: SUBPARTITION_SYM $@88 sub_name opt_part_options  */
#line 6064 "/home/buildbot/git/sql/sql_yacc.yy"
                                    {}
#line 31991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 703: /* sub_name: ident_or_text  */
#line 6069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 32001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 704: /* opt_part_options: %empty  */
#line 6077 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 32007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 705: /* opt_part_options: opt_part_option_list  */
#line 6078 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 32013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 706: /* opt_part_option_list: opt_part_option_list opt_part_option  */
#line 6082 "/home/buildbot/git/sql/sql_yacc.yy"
                                              {}
#line 32019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 707: /* opt_part_option_list: opt_part_option  */
#line 6083 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 32025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 708: /* opt_part_option: TABLESPACE opt_equal ident_or_text  */
#line 6088 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 32031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 709: /* opt_part_option: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 6090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 32041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 710: /* opt_part_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 6096 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 32051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 711: /* opt_part_option: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 6102 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 32057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 712: /* opt_part_option: MAX_ROWS opt_equal real_ulonglong_num  */
#line 6104 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 32063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 713: /* opt_part_option: MIN_ROWS opt_equal real_ulonglong_num  */
#line 6106 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 32069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 714: /* opt_part_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6108 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 32075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 715: /* opt_part_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6110 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 32081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 716: /* opt_part_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 6112 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 32087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 717: /* opt_versioning_rotation: %empty  */
#line 6116 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 32093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 718: /* $@89: %empty  */
#line 6117 "/home/buildbot/git/sql/sql_yacc.yy"
         { Lex->expr_allows_subselect= false; }
#line 32099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 719: /* opt_versioning_rotation: $@89 INTERVAL_SYM expr interval opt_versioning_interval_start  */
#line 6119 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 32109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 720: /* opt_versioning_rotation: LIMIT ulonglong_num  */
#line 6125 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 32124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 721: /* opt_versioning_interval_start: %empty  */
#line 6140 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.ulong_num)= thd->query_start();
         }
#line 32132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 722: /* opt_versioning_interval_start: STARTS_SYM ulong_num  */
#line 6144 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 32146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 723: /* create_select_query_specification: opt_with_clause SELECT_SYM create_select_part2 create_select_part3 create_select_part4  */
#line 6162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_with_clause((yyvsp[-4].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 32156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 724: /* $@90: %empty  */
#line 6170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 32175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 725: /* create_select_part2: $@90 select_options select_item_list  */
#line 6185 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 32183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 730: /* create_select_part4: opt_select_lock_type  */
#line 6202 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 32195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 731: /* opt_as: %empty  */
#line 6212 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 732: /* opt_as: AS  */
#line 6213 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 32207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 733: /* opt_create_database_options: %empty  */
#line 6217 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 734: /* opt_create_database_options: create_database_options  */
#line 6218 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 32219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 735: /* create_database_options: create_database_option  */
#line 6222 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 32225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 736: /* create_database_options: create_database_options create_database_option  */
#line 6223 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         {}
#line 32231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 737: /* create_database_option: default_collation  */
#line 6227 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 32237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 738: /* create_database_option: default_charset  */
#line 6228 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 32243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 739: /* opt_if_not_exists_table_element: %empty  */
#line 6233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= FALSE;
          }
#line 32251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 740: /* opt_if_not_exists_table_element: IF_SYM not EXISTS  */
#line 6237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= TRUE;
          }
#line 32259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 741: /* opt_if_not_exists: %empty  */
#line 6244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 32267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 742: /* opt_if_not_exists: IF_SYM not EXISTS  */
#line 6248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 32275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 743: /* create_or_replace: CREATE  */
#line 6255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 32283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 744: /* create_or_replace: CREATE OR_SYM REPLACE  */
#line 6259 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 32291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 752: /* create_table_option: ENGINE_SYM opt_equal ident_or_text  */
#line 6282 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 32310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 753: /* create_table_option: MAX_ROWS opt_equal ulonglong_num  */
#line 6297 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 32319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 754: /* create_table_option: MIN_ROWS opt_equal ulonglong_num  */
#line 6302 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 32328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 755: /* create_table_option: AVG_ROW_LENGTH opt_equal ulong_num  */
#line 6307 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 32337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 756: /* create_table_option: PASSWORD_SYM opt_equal TEXT_STRING_sys  */
#line 6312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 32346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 757: /* create_table_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 6317 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 32355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 758: /* create_table_option: AUTO_INC opt_equal ulonglong_num  */
#line 6322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 32364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 759: /* create_table_option: PACK_KEYS_SYM opt_equal ulong_num  */
#line 6327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 32383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 760: /* create_table_option: PACK_KEYS_SYM opt_equal DEFAULT  */
#line 6342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 32393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 761: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal ulong_num  */
#line 6348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 32412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 762: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal DEFAULT  */
#line 6363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 32421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 763: /* create_table_option: STATS_PERSISTENT_SYM opt_equal ulong_num  */
#line 6368 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 32440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 764: /* create_table_option: STATS_PERSISTENT_SYM opt_equal DEFAULT  */
#line 6383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 32450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 765: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal ulong_num  */
#line 6389 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 32472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 766: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal DEFAULT  */
#line 6407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 32481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 767: /* create_table_option: CHECKSUM_SYM opt_equal ulong_num  */
#line 6412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 32490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 768: /* create_table_option: TABLE_CHECKSUM_SYM opt_equal ulong_num  */
#line 6417 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 32499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 769: /* create_table_option: PAGE_CHECKSUM_SYM opt_equal choice  */
#line 6422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 32508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 770: /* create_table_option: DELAY_KEY_WRITE_SYM opt_equal ulong_num  */
#line 6427 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 32517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 771: /* create_table_option: ROW_FORMAT_SYM opt_equal row_types  */
#line 6432 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 32526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 772: /* $@91: %empty  */
#line 6437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 32534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 773: /* create_table_option: UNION_SYM opt_equal $@91 '(' opt_table_list ')'  */
#line 6441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list.first;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 32560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 776: /* create_table_option: INSERT_METHOD opt_equal merge_insert_types  */
#line 6465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 32569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 777: /* create_table_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 32578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 778: /* create_table_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 32587 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 779: /* create_table_option: TABLESPACE ident  */
#line 6480 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 32593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 780: /* create_table_option: STORAGE_SYM DISK_SYM  */
#line 6482 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_DISK;}
#line 32599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 781: /* create_table_option: STORAGE_SYM MEMORY_SYM  */
#line 6484 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 32605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 782: /* create_table_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 6486 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 32615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 783: /* create_table_option: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 6492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 32624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 784: /* create_table_option: TRANSACTIONAL_SYM opt_equal choice  */
#line 6497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 32633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 785: /* create_table_option: IDENT_sys equal TEXT_STRING_sys  */
#line 6502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 32646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 786: /* create_table_option: IDENT_sys equal ident  */
#line 6511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 32659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 787: /* create_table_option: IDENT_sys equal real_ulonglong_num  */
#line 6520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 32669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 788: /* create_table_option: IDENT_sys equal DEFAULT  */
#line 6526 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 32679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 789: /* create_table_option: SEQUENCE_SYM opt_equal choice  */
#line 6532 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 32688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 793: /* versioning_option: WITH_SYSTEM_SYM VERSIONING_SYM  */
#line 6546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_TEMPORARY, MYF(0));
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 32708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 794: /* default_charset: opt_default charset opt_equal charset_name_or_default  */
#line 6565 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 32717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 795: /* default_collation: opt_default COLLATE_SYM opt_equal collation_name_or_default  */
#line 6573 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 32733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 796: /* storage_engines: ident_or_text  */
#line 6588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 32744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 797: /* known_storage_engines: ident_or_text  */
#line 6598 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 798: /* row_types: DEFAULT  */
#line 6608 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 32762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 799: /* row_types: FIXED_SYM  */
#line 6609 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 32768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 800: /* row_types: DYNAMIC_SYM  */
#line 6610 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 32774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 801: /* row_types: COMPRESSED_SYM  */
#line 6611 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 32780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 802: /* row_types: REDUNDANT_SYM  */
#line 6612 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 32786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 803: /* row_types: COMPACT_SYM  */
#line 6613 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 32792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 804: /* row_types: PAGE_SYM  */
#line 6614 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 32798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 805: /* merge_insert_types: NO_SYM  */
#line 6618 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 32804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 806: /* merge_insert_types: FIRST_SYM  */
#line 6619 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 32810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 807: /* merge_insert_types: LAST_SYM  */
#line 6620 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 32816 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 808: /* udf_type: STRING_SYM  */
#line 6624 "/home/buildbot/git/sql/sql_yacc.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 32822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 809: /* udf_type: REAL  */
#line 6625 "/home/buildbot/git/sql/sql_yacc.yy"
               {(yyval.num) = (int) REAL_RESULT; }
#line 32828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 810: /* udf_type: DECIMAL_SYM  */
#line 6626 "/home/buildbot/git/sql/sql_yacc.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 32834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 811: /* udf_type: INT_SYM  */
#line 6627 "/home/buildbot/git/sql/sql_yacc.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 32840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 812: /* create_field_list: field_list  */
#line 6633 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 32848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 815: /* field_list_item: column_def  */
#line 6644 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 32854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 819: /* column_def: field_spec  */
#line 6652 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.create_field)= (yyvsp[0].create_field); }
#line 32860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 820: /* column_def: field_spec references  */
#line 6654 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 32866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 821: /* $@92: %empty  */
#line 6659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 822: /* key_def: key_or_index opt_if_not_exists opt_ident opt_USING_key_algorithm $@92 '(' key_list ')' normal_key_options  */
#line 6664 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 32882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 823: /* $@93: %empty  */
#line 6666 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 824: /* key_def: key_or_index opt_if_not_exists ident TYPE_SYM btree_or_rtree $@93 '(' key_list ')' normal_key_options  */
#line 6671 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 32898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 825: /* $@94: %empty  */
#line 6673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 826: /* key_def: fulltext opt_key_or_index opt_if_not_exists opt_ident $@94 '(' key_list ')' fulltext_key_options  */
#line 6678 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { }
#line 32914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 827: /* $@95: %empty  */
#line 6680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 828: /* key_def: spatial opt_key_or_index opt_if_not_exists opt_ident $@95 '(' key_list ')' spatial_key_options  */
#line 6685 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 32930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 829: /* $@96: %empty  */
#line 6689 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 830: /* key_def: opt_constraint constraint_key_type opt_if_not_exists opt_ident opt_USING_key_algorithm $@96 '(' key_list ')' normal_key_options  */
#line 6694 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 32946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 831: /* $@97: %empty  */
#line 6697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 832: /* key_def: opt_constraint constraint_key_type opt_if_not_exists ident TYPE_SYM btree_or_rtree $@97 '(' key_list ')' normal_key_options  */
#line 6702 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 32962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 833: /* $@98: %empty  */
#line 6704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 32976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 834: /* key_def: opt_constraint FOREIGN KEY_SYM opt_if_not_exists opt_ident $@98 '(' key_list ')' references  */
#line 6714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 33006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 835: /* constraint_def: opt_constraint check_constraint  */
#line 6743 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 33014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 836: /* period_for_system_time: PERIOD_SYM FOR_SYSTEM_TIME_SYM '(' ident ',' ident ')'  */
#line 6751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_system_time((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 33023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 837: /* opt_check_constraint: %empty  */
#line 6758 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 33029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 838: /* opt_check_constraint: check_constraint  */
#line 6759 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 33035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 839: /* check_constraint: CHECK_SYM '(' expr ')'  */
#line 6764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 33046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 840: /* opt_constraint_no_id: %empty  */
#line 6773 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 33052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 841: /* opt_constraint_no_id: CONSTRAINT  */
#line 6774 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 33058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 842: /* opt_constraint: %empty  */
#line 6778 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 33064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 843: /* opt_constraint: constraint  */
#line 6779 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 33070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 844: /* constraint: CONSTRAINT opt_ident  */
#line 6783 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 33076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 845: /* @99: %empty  */
#line 6788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 33096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 846: /* field_spec: field_ident @99 field_type_or_serial opt_check_constraint  */
#line 6804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 33119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 847: /* $@100: %empty  */
#line 6825 "/home/buildbot/git/sql/sql_yacc.yy"
                                { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 33125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 849: /* $@101: %empty  */
#line 6828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 851: /* opt_serial_attribute: %empty  */
#line 6838 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 852: /* opt_serial_attribute: opt_serial_attribute_list  */
#line 6839 "/home/buildbot/git/sql/sql_yacc.yy"
                                    {}
#line 33148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 853: /* opt_serial_attribute_list: opt_serial_attribute_list serial_attribute  */
#line 6843 "/home/buildbot/git/sql/sql_yacc.yy"
                                                     {}
#line 33154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 855: /* opt_asrow_attribute: %empty  */
#line 6848 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 856: /* opt_asrow_attribute: opt_asrow_attribute_list  */
#line 6849 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 33166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 857: /* opt_asrow_attribute_list: opt_asrow_attribute_list asrow_attribute  */
#line 6853 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 33172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 859: /* field_def: %empty  */
#line 6858 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 33178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 863: /* $@102: %empty  */
#line 6863 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 33187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 865: /* field_def: opt_generated_always AS ROW_SYM START_SYM opt_asrow_attribute  */
#line 6869 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 33196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 866: /* field_def: opt_generated_always AS ROW_SYM END opt_asrow_attribute  */
#line 6874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 33205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 867: /* opt_generated_always: %empty  */
#line 6881 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 868: /* opt_generated_always: GENERATED_SYM ALWAYS_SYM  */
#line 6882 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 33217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 869: /* vcol_opt_specifier: %empty  */
#line 6887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 33225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 870: /* vcol_opt_specifier: VIRTUAL_SYM  */
#line 6891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 33233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 871: /* vcol_opt_specifier: PERSISTENT_SYM  */
#line 6895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 33241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 872: /* vcol_opt_specifier: STORED_SYM  */
#line 6899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 33249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 873: /* vcol_opt_attribute: %empty  */
#line 6905 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 874: /* vcol_opt_attribute: vcol_opt_attribute_list  */
#line 6906 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 33261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 875: /* vcol_opt_attribute_list: vcol_opt_attribute_list vcol_attribute  */
#line 6910 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 {}
#line 33267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 877: /* vcol_attribute: UNIQUE_SYM  */
#line 6916 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 878: /* vcol_attribute: UNIQUE_SYM KEY_SYM  */
#line 6922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 879: /* vcol_attribute: COMMENT_SYM TEXT_STRING_sys  */
#line 6927 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 33293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 880: /* vcol_attribute: INVISIBLE_SYM  */
#line 6929 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 33301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 881: /* $@103: %empty  */
#line 6936 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
          }
#line 33314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 882: /* parse_vcol_expr: PARSE_VCOL_EXPR_SYM $@103 expr  */
#line 6945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
          }
#line 33325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 883: /* parenthesized_expr: subselect  */
#line 6955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 33335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 885: /* parenthesized_expr: expr ',' expr_list  */
#line 6962 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 33346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 886: /* virtual_column_func: '(' parenthesized_expr ')'  */
#line 6972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 33358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 890: /* column_default_expr: expr_or_literal  */
#line 6986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 33367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 891: /* field_type: field_type_all  */
#line 6993 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 33376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 892: /* qualified_field_type: field_type_all  */
#line 7001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 33384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 893: /* qualified_field_type: sp_decl_ident '.' field_type_all  */
#line 7005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 33393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 899: /* field_type_numeric: int_type opt_field_length field_options  */
#line 7020 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 33399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 900: /* field_type_numeric: real_type opt_precision field_options  */
#line 7021 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 33405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 901: /* field_type_numeric: FLOAT_SYM float_options field_options  */
#line 7023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 33425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 902: /* field_type_numeric: BIT_SYM opt_field_length_default_1  */
#line 7039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 33433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 903: /* field_type_numeric: BOOL_SYM  */
#line 7043 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 33441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 904: /* field_type_numeric: BOOLEAN_SYM  */
#line 7047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 33449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 905: /* field_type_numeric: DECIMAL_SYM float_options field_options  */
#line 7051 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 33455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 906: /* field_type_numeric: NUMBER_ORACLE_SYM float_options field_options  */
#line 7053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 33466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 907: /* field_type_numeric: NUMERIC_SYM float_options field_options  */
#line 7060 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 33472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 908: /* field_type_numeric: FIXED_SYM float_options field_options  */
#line 7062 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 33478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 913: /* field_type_string: char opt_field_length_default_1 opt_binary  */
#line 7075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 33486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 914: /* field_type_string: nchar opt_field_length_default_1 opt_bin_mod  */
#line 7079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 33495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 915: /* field_type_string: BINARY opt_field_length_default_1  */
#line 7084 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 33504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 916: /* field_type_string: varchar field_length opt_binary_and_compression  */
#line 7089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 33512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 917: /* field_type_string: VARCHAR2_ORACLE_SYM field_length opt_binary_and_compression  */
#line 7093 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 33520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 918: /* field_type_string: nvarchar field_length opt_compressed opt_bin_mod  */
#line 7097 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 33529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 919: /* field_type_string: VARBINARY field_length opt_compressed  */
#line 7102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 33538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 920: /* field_type_string: RAW_ORACLE_SYM field_length opt_compressed  */
#line 7107 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 33547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 921: /* field_type_temporal: YEAR_SYM opt_field_length field_options  */
#line 7115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 33569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 922: /* field_type_temporal: DATE_SYM  */
#line 7132 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 33575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 923: /* field_type_temporal: TIME_SYM opt_field_length  */
#line 7134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 33586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 924: /* field_type_temporal: TIMESTAMP opt_field_length  */
#line 7141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 33597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 925: /* field_type_temporal: DATETIME opt_field_length  */
#line 7148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 33605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 926: /* field_type_lob: TINYBLOB opt_compressed  */
#line 7156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 33614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 927: /* field_type_lob: BLOB_MARIADB_SYM opt_field_length opt_compressed  */
#line 7161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 33623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 928: /* field_type_lob: BLOB_ORACLE_SYM field_length opt_compressed  */
#line 7166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 33632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 929: /* field_type_lob: BLOB_ORACLE_SYM opt_compressed  */
#line 7171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 33641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 930: /* field_type_lob: spatial_type float_options srid_option  */
#line 7176 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 33656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 931: /* field_type_lob: MEDIUMBLOB opt_compressed  */
#line 7187 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 33665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 932: /* field_type_lob: LONGBLOB opt_compressed  */
#line 7192 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 33674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 933: /* field_type_lob: LONG_SYM VARBINARY opt_compressed  */
#line 7197 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 33683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 934: /* field_type_lob: LONG_SYM varchar opt_binary_and_compression  */
#line 7202 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 33689 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 935: /* field_type_lob: TINYTEXT opt_binary_and_compression  */
#line 7204 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 33695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 936: /* field_type_lob: TEXT_SYM opt_field_length opt_binary_and_compression  */
#line 7206 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 33701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 937: /* field_type_lob: MEDIUMTEXT opt_binary_and_compression  */
#line 7208 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 33707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 938: /* field_type_lob: LONGTEXT opt_binary_and_compression  */
#line 7210 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 33713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 939: /* field_type_lob: CLOB_ORACLE_SYM opt_binary_and_compression  */
#line 7212 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 33719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 940: /* field_type_lob: LONG_SYM opt_binary_and_compression  */
#line 7214 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 33725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 941: /* field_type_lob: JSON_SYM opt_compressed  */
#line 7216 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 33734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 942: /* field_type_misc: ENUM '(' string_list ')' opt_binary  */
#line 7224 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 33740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 943: /* field_type_misc: SET '(' string_list ')' opt_binary  */
#line 7226 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_set); }
#line 33746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 944: /* spatial_type: GEOMETRY_SYM  */
#line 7230 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 33752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 945: /* spatial_type: GEOMETRYCOLLECTION  */
#line 7231 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 33758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 946: /* spatial_type: POINT_SYM  */
#line 7232 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_POINT; }
#line 33764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 947: /* spatial_type: MULTIPOINT  */
#line 7233 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 33770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 948: /* spatial_type: LINESTRING  */
#line 7234 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 33776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 949: /* spatial_type: MULTILINESTRING  */
#line 7235 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 33782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 950: /* spatial_type: POLYGON  */
#line 7236 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 33788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 951: /* spatial_type: MULTIPOLYGON  */
#line 7237 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 33794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 952: /* char: CHAR_SYM  */
#line 7241 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 33800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 953: /* nchar: NCHAR_SYM  */
#line 7245 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 33806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 954: /* nchar: NATIONAL_SYM CHAR_SYM  */
#line 7246 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 33812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 955: /* varchar: char VARYING  */
#line 7250 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 33818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 956: /* varchar: VARCHAR  */
#line 7251 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 33824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 957: /* nvarchar: NATIONAL_SYM VARCHAR  */
#line 7255 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 33830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 958: /* nvarchar: NVARCHAR_SYM  */
#line 7256 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 33836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 959: /* nvarchar: NCHAR_SYM VARCHAR  */
#line 7257 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 33842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 960: /* nvarchar: NATIONAL_SYM CHAR_SYM VARYING  */
#line 7258 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 33848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 961: /* nvarchar: NCHAR_SYM VARYING  */
#line 7259 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 33854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 962: /* int_type: INT_SYM  */
#line 7263 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_long; }
#line 33860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 963: /* int_type: TINYINT  */
#line 7264 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_tiny; }
#line 33866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 964: /* int_type: SMALLINT  */
#line 7265 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_short; }
#line 33872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 965: /* int_type: MEDIUMINT  */
#line 7266 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_int24; }
#line 33878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 966: /* int_type: BIGINT  */
#line 7267 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_longlong; }
#line 33884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 967: /* real_type: REAL  */
#line 7272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 33894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 968: /* real_type: DOUBLE_SYM  */
#line 7277 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 33900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 969: /* real_type: DOUBLE_SYM PRECISION  */
#line 7278 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 33906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 970: /* srid_option: %empty  */
#line 7283 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->srid= 0; }
#line 33912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 971: /* srid_option: REF_SYSTEM_ID_SYM '=' NUM  */
#line 7286 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 33920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 972: /* float_options: %empty  */
#line 7292 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 33926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 973: /* float_options: field_length  */
#line 7293 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 33932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 974: /* float_options: precision  */
#line 7294 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 33938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 975: /* precision: '(' NUM ',' NUM ')'  */
#line 7298 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 33944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 976: /* field_options: %empty  */
#line 7302 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 977: /* field_options: SIGNED_SYM  */
#line 7303 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 978: /* field_options: UNSIGNED  */
#line 7304 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 33962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 979: /* field_options: ZEROFILL  */
#line 7305 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 980: /* field_options: UNSIGNED ZEROFILL  */
#line 7306 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 981: /* field_options: ZEROFILL UNSIGNED  */
#line 7307 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 982: /* field_length: '(' LONG_NUM ')'  */
#line 7311 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 983: /* field_length: '(' ULONGLONG_NUM ')'  */
#line 7312 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 984: /* field_length: '(' DECIMAL_NUM ')'  */
#line 7313 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 985: /* field_length: '(' NUM ')'  */
#line 7314 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 34004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 986: /* opt_field_length: %empty  */
#line 7318 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 34010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 987: /* opt_field_length: field_length  */
#line 7319 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 34016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 988: /* opt_field_length_default_1: %empty  */
#line 7323 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.const_simple_string)= (char*) "1"; }
#line 34022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 989: /* opt_field_length_default_1: field_length  */
#line 7324 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 34028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 990: /* opt_precision: %empty  */
#line 7328 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec).set(0, 0); }
#line 34034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 991: /* opt_precision: precision  */
#line 7329 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 34040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 992: /* attribute_list: attribute_list attribute  */
#line 7334 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 34046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 994: /* attribute: NULL_SYM  */
#line 7339 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 34052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 995: /* attribute: DEFAULT column_default_expr  */
#line 7340 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 34058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 996: /* attribute: ON UPDATE_SYM NOW_SYM opt_default_time_precision  */
#line 7342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 34069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 997: /* attribute: AUTO_INC  */
#line 7348 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 34075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 998: /* attribute: SERIAL_SYM DEFAULT VALUE_SYM  */
#line 7350 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 999: /* attribute: COLLATE_SYM collation_name  */
#line 7356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 34096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1001: /* opt_compression_method: %empty  */
#line 7366 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= NULL; }
#line 34102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1002: /* opt_compression_method: equal ident  */
#line 7367 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 34108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1003: /* opt_compressed: %empty  */
#line 7371 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1004: /* opt_compressed: compressed  */
#line 7372 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 34120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1005: /* compressed: COMPRESSED_SYM opt_compression_method  */
#line 7377 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 34129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1006: /* compressed_deprecated_data_type_attribute: COMPRESSED_SYM opt_compression_method  */
#line 7385 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 34138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1007: /* compressed_deprecated_column_attribute: COMPRESSED_SYM opt_compression_method  */
#line 7393 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 34148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1008: /* asrow_attribute: not NULL_SYM  */
#line 7402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 34156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1009: /* asrow_attribute: opt_primary KEY_SYM  */
#line 7406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1012: /* serial_attribute: IDENT_sys equal TEXT_STRING_sys  */
#line 7417 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 34179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1013: /* serial_attribute: IDENT_sys equal ident  */
#line 7426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 34192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1014: /* serial_attribute: IDENT_sys equal real_ulonglong_num  */
#line 7435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 34202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1015: /* serial_attribute: IDENT_sys equal DEFAULT  */
#line 7441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 34212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1016: /* serial_attribute: with_or_without_system VERSIONING_SYM  */
#line 7447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 34226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1017: /* with_or_without_system: WITH_SYSTEM_SYM  */
#line 7460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 34236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1018: /* with_or_without_system: WITHOUT SYSTEM  */
#line 7466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 34246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1019: /* charset: CHAR_SYM SET  */
#line 7475 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 34252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1020: /* charset: CHARSET  */
#line 7476 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 34258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1021: /* charset_name: ident_or_text  */
#line 7481 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 34267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1022: /* charset_name: BINARY  */
#line 7485 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 34273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1023: /* charset_name_or_default: charset_name  */
#line 7489 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.charset)=(yyvsp[0].charset);   }
#line 34279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1024: /* charset_name_or_default: DEFAULT  */
#line 7490 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 34285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1025: /* opt_load_data_charset: %empty  */
#line 7494 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.charset)= NULL; }
#line 34291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1026: /* opt_load_data_charset: charset charset_name_or_default  */
#line 7495 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.charset)= (yyvsp[0].charset); }
#line 34297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1027: /* old_or_new_charset_name: ident_or_text  */
#line 7500 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 34308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1028: /* old_or_new_charset_name: BINARY  */
#line 7506 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 34314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1029: /* old_or_new_charset_name_or_default: old_or_new_charset_name  */
#line 7510 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.charset)=(yyvsp[0].charset);   }
#line 34320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1030: /* old_or_new_charset_name_or_default: DEFAULT  */
#line 7511 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 34326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1031: /* collation_name: ident_or_text  */
#line 7516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 34335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1032: /* opt_collate: %empty  */
#line 7523 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.charset)=NULL; }
#line 34341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1033: /* opt_collate: COLLATE_SYM collation_name_or_default  */
#line 7524 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.charset)=(yyvsp[0].charset); }
#line 34347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1034: /* collation_name_or_default: collation_name  */
#line 7528 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.charset)=(yyvsp[0].charset); }
#line 34353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1035: /* collation_name_or_default: DEFAULT  */
#line 7529 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 34359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1036: /* opt_default: %empty  */
#line 7533 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1037: /* opt_default: DEFAULT  */
#line 7534 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 34371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1038: /* charset_or_alias: charset charset_name  */
#line 7538 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.charset)= (yyvsp[0].charset); }
#line 34377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1039: /* charset_or_alias: ASCII_SYM  */
#line 7539 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.charset)= &my_charset_latin1; }
#line 34383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1040: /* charset_or_alias: UNICODE_SYM  */
#line 7541 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 34392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1041: /* collate: COLLATE_SYM collation_name_or_default  */
#line 7547 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { (yyval.charset)= (yyvsp[0].charset); }
#line 34398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1042: /* opt_binary: %empty  */
#line 7551 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { bincmp_collation(NULL, false); }
#line 34404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1043: /* opt_binary: binary  */
#line 7552 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 34410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1044: /* binary: BYTE_SYM  */
#line 7556 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { bincmp_collation(&my_charset_bin, false); }
#line 34416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1045: /* binary: charset_or_alias opt_bin_mod  */
#line 7557 "/home/buildbot/git/sql/sql_yacc.yy"
                                       { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 34422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1046: /* binary: BINARY  */
#line 7558 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { bincmp_collation(NULL, true); }
#line 34428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1047: /* binary: BINARY charset_or_alias  */
#line 7559 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { bincmp_collation((yyvsp[0].charset), true); }
#line 34434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1048: /* binary: charset_or_alias collate  */
#line 7561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].charset))
              Lex->charset= (yyvsp[-1].charset); // CHARACTER SET cs COLLATE DEFAULT
            else
            {
              if (!my_charset_same((yyvsp[0].charset), (yyvsp[-1].charset)))
                my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                  (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
              Lex->charset= (yyvsp[0].charset);
            }
          }
#line 34450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1049: /* binary: collate  */
#line 7572 "/home/buildbot/git/sql/sql_yacc.yy"
                  { Lex->charset= (yyvsp[0].charset); }
#line 34456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1050: /* opt_bin_mod: %empty  */
#line 7576 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= false; }
#line 34462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1051: /* opt_bin_mod: BINARY  */
#line 7577 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= true; }
#line 34468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1052: /* $@104: %empty  */
#line 7582 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 34480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1053: /* ws_nweights: '(' real_ulong_num $@104 ')'  */
#line 7590 "/home/buildbot/git/sql/sql_yacc.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 34486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1054: /* ws_level_flag_desc: ASC  */
#line 7594 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.ulong_num)= 0; }
#line 34492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1055: /* ws_level_flag_desc: DESC  */
#line 7595 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 34498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1056: /* ws_level_flag_reverse: REVERSE_SYM  */
#line 7599 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 34504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1057: /* ws_level_flags: %empty  */
#line 7602 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 34510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1058: /* ws_level_flags: ws_level_flag_desc  */
#line 7603 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 34516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1059: /* ws_level_flags: ws_level_flag_desc ws_level_flag_reverse  */
#line 7604 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 34522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1060: /* ws_level_flags: ws_level_flag_reverse  */
#line 7605 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 34528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1061: /* ws_level_number: real_ulong_num  */
#line 7610 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 34537 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1062: /* ws_level_list_item: ws_level_number ws_level_flags  */
#line 7618 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 34545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1063: /* ws_level_list: ws_level_list_item  */
#line 7624 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 34551 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1064: /* ws_level_list: ws_level_list ',' ws_level_list_item  */
#line 7625 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 34557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1065: /* ws_level_range: ws_level_number '-' ws_level_number  */
#line 7630 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 34568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1066: /* ws_level_list_or_range: ws_level_list  */
#line 7639 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 34574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1067: /* ws_level_list_or_range: ws_level_range  */
#line 7640 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 34580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1068: /* opt_ws_levels: %empty  */
#line 7644 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.ulong_num)= 0; }
#line 34586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1069: /* opt_ws_levels: LEVEL_SYM ws_level_list_or_range  */
#line 7645 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 34592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1072: /* references: REFERENCES table_ident opt_ref_list opt_match_clause opt_on_update_delete  */
#line 7659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 34600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1073: /* opt_ref_list: %empty  */
#line 7666 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->ref_list.empty(); }
#line 34606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1075: /* ref_list: ref_list ',' ident  */
#line 7672 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 34617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1076: /* ref_list: ident  */
#line 7679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 34630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1077: /* opt_match_clause: %empty  */
#line 7691 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 34636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1078: /* opt_match_clause: MATCH FULL  */
#line 7693 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 34642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1079: /* opt_match_clause: MATCH PARTIAL  */
#line 7695 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 34648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1080: /* opt_match_clause: MATCH SIMPLE_SYM  */
#line 7697 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 34654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1081: /* opt_on_update_delete: %empty  */
#line 7702 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 34664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1082: /* opt_on_update_delete: ON UPDATE_SYM delete_option  */
#line 7708 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 34674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1083: /* opt_on_update_delete: ON DELETE_SYM delete_option  */
#line 7714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 34684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1084: /* opt_on_update_delete: ON UPDATE_SYM delete_option ON DELETE_SYM delete_option  */
#line 7721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 34694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1085: /* opt_on_update_delete: ON DELETE_SYM delete_option ON UPDATE_SYM delete_option  */
#line 7728 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 34704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1086: /* delete_option: RESTRICT  */
#line 7736 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 34710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1087: /* delete_option: CASCADE  */
#line 7737 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 34716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1088: /* delete_option: SET NULL_SYM  */
#line 7738 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 34722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1089: /* delete_option: NO_SYM ACTION  */
#line 7739 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 34728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1090: /* delete_option: SET DEFAULT  */
#line 7740 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 34734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1091: /* constraint_key_type: PRIMARY_SYM KEY_SYM  */
#line 7744 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.key_type)= Key::PRIMARY; }
#line 34740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1092: /* constraint_key_type: UNIQUE_SYM opt_key_or_index  */
#line 7745 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.key_type)= Key::UNIQUE; }
#line 34746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1093: /* key_or_index: KEY_SYM  */
#line 7749 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 34752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1094: /* key_or_index: INDEX_SYM  */
#line 7750 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 34758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1095: /* opt_key_or_index: %empty  */
#line 7754 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1097: /* keys_or_index: KEYS  */
#line 7759 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 34770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1098: /* keys_or_index: INDEX_SYM  */
#line 7760 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 34776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1099: /* keys_or_index: INDEXES  */
#line 7761 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 34782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1100: /* opt_unique: %empty  */
#line 7765 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.key_type)= Key::MULTIPLE; }
#line 34788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1101: /* opt_unique: UNIQUE_SYM  */
#line 7766 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.key_type)= Key::UNIQUE; }
#line 34794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1102: /* fulltext: FULLTEXT_SYM  */
#line 7770 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.key_type)= Key::FULLTEXT;}
#line 34800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1103: /* spatial: SPATIAL_SYM  */
#line 7775 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 34813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1104: /* normal_key_options: %empty  */
#line 7786 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1105: /* normal_key_options: normal_key_opts  */
#line 7787 "/home/buildbot/git/sql/sql_yacc.yy"
                          { Lex->last_key->option_list= Lex->option_list; }
#line 34825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1106: /* fulltext_key_options: %empty  */
#line 7791 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1107: /* fulltext_key_options: fulltext_key_opts  */
#line 7792 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->last_key->option_list= Lex->option_list; }
#line 34837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1108: /* spatial_key_options: %empty  */
#line 7796 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1109: /* spatial_key_options: spatial_key_opts  */
#line 7797 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->last_key->option_list= Lex->option_list; }
#line 34849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1116: /* opt_USING_key_algorithm: %empty  */
#line 7816 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 34855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1117: /* opt_USING_key_algorithm: USING btree_or_rtree  */
#line 7817 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1118: /* opt_key_algorithm_clause: %empty  */
#line 7822 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 34867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1119: /* opt_key_algorithm_clause: USING btree_or_rtree  */
#line 7823 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1120: /* opt_key_algorithm_clause: TYPE_SYM btree_or_rtree  */
#line 7824 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1121: /* key_using_alg: USING btree_or_rtree  */
#line 7829 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 34885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1122: /* key_using_alg: TYPE_SYM btree_or_rtree  */
#line 7831 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 34891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1123: /* all_key_opt: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 7836 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 34900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1124: /* all_key_opt: COMMENT_SYM TEXT_STRING_sys  */
#line 7841 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 34906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1125: /* all_key_opt: IDENT_sys equal TEXT_STRING_sys  */
#line 7843 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1126: /* all_key_opt: IDENT_sys equal ident  */
#line 7851 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1127: /* all_key_opt: IDENT_sys equal real_ulonglong_num  */
#line 7859 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 34940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1128: /* all_key_opt: IDENT_sys equal DEFAULT  */
#line 7865 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1133: /* fulltext_key_opt: WITH PARSER_SYM IDENT_sys  */
#line 7884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1134: /* btree_or_rtree: BTREE_SYM  */
#line 7893 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 34967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1135: /* btree_or_rtree: RTREE_SYM  */
#line 7894 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 34973 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1136: /* btree_or_rtree: HASH_SYM  */
#line 7895 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 34979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1137: /* key_list: key_list ',' key_part order_dir  */
#line 7900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1138: /* key_list: key_part order_dir  */
#line 7904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1139: /* key_part: ident  */
#line 7911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 35005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1140: /* key_part: ident '(' NUM ')'  */
#line 7917 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 35018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1141: /* opt_ident: %empty  */
#line 7928 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 35024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1142: /* opt_ident: field_ident  */
#line 7929 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 35030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1143: /* string_list: text_string  */
#line 7934 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 35036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1144: /* string_list: string_list ',' text_string  */
#line 7936 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 35042 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1145: /* $@105: %empty  */
#line 7945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR; 
            Lex->select_lex.init_order();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 35060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1146: /* $@106: %empty  */
#line 7959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->select_lex.db= (Lex->select_lex.table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 35075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1147: /* alter: ALTER $@105 alter_options TABLE_SYM table_ident opt_lock_wait_timeout $@106 alter_commands  */
#line 7970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
          }
#line 35089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1148: /* $@107: %empty  */
#line 7980 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 35098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1149: /* alter: ALTER DATABASE ident_or_empty $@107 create_database_options  */
#line 7985 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 35111 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1150: /* alter: ALTER DATABASE ident UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM  */
#line 7994 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 35123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1151: /* $@108: %empty  */
#line 8002 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->sp_chistics.init();
          }
#line 35135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1152: /* alter: ALTER PROCEDURE_SYM sp_name $@108 sp_a_chistics  */
#line 8010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 35146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1153: /* $@109: %empty  */
#line 8017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->sp_chistics.init();
          }
#line 35158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1154: /* alter: ALTER FUNCTION_SYM sp_name $@109 sp_a_chistics  */
#line 8025 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 35169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1155: /* $@110: %empty  */
#line 8032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 35178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1156: /* alter: ALTER view_algorithm definer_opt opt_view_suid VIEW_SYM table_ident $@110 view_list_opt AS view_select  */
#line 8037 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 35184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1157: /* $@111: %empty  */
#line 8044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 35193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1158: /* alter: ALTER definer_opt opt_view_suid VIEW_SYM table_ident $@111 view_list_opt AS view_select  */
#line 8049 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 35199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1159: /* $@112: %empty  */
#line 8051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 35220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1160: /* alter: ALTER definer_opt remember_name EVENT_SYM sp_name $@112 ev_alter_on_schedule_completion opt_ev_rename_to opt_ev_status opt_ev_comment opt_ev_sql_stmt  */
#line 8072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
          }
#line 35238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1161: /* alter: ALTER TABLESPACE alter_tablespace_info  */
#line 8086 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 35247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1162: /* alter: ALTER LOGFILE_SYM GROUP_SYM alter_logfile_group_info  */
#line 8091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 35256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1163: /* alter: ALTER TABLESPACE change_tablespace_info  */
#line 8096 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 35265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1164: /* alter: ALTER TABLESPACE change_tablespace_access  */
#line 8101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 35274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1165: /* $@113: %empty  */
#line 8106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 35284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1166: /* alter: ALTER SERVER_SYM ident_or_text $@113 OPTIONS_SYM '(' server_options_list ')'  */
#line 8110 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    { }
#line 35290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1167: /* alter: ALTER USER_SYM opt_if_exists clear_privileges grant_list opt_require_clause opt_resource_options  */
#line 8114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-4].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 35299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1168: /* $@114: %empty  */
#line 8119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
#line 35313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1169: /* $@115: %empty  */
#line 8129 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!(lex->create_info.seq_create_info=
                           new (thd->mem_root) sequence_definition())) ||
                unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_SEQUENCE,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 35328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1170: /* alter: ALTER SEQUENCE_SYM opt_if_exists $@114 table_ident $@115 sequence_defs  */
#line 8140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1171: /* ev_alter_on_schedule_completion: %empty  */
#line 8149 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 35345 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1172: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time  */
#line 8150 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.num)= 1; }
#line 35351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1173: /* ev_alter_on_schedule_completion: ev_on_completion  */
#line 8151 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.num)= 1; }
#line 35357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1174: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time ev_on_completion  */
#line 8152 "/home/buildbot/git/sql/sql_yacc.yy"
                                                            { (yyval.num)= 1; }
#line 35363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1175: /* opt_ev_rename_to: %empty  */
#line 8156 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 35369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1176: /* opt_ev_rename_to: RENAME TO_SYM sp_name  */
#line 8158 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 35382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1177: /* opt_ev_sql_stmt: %empty  */
#line 8169 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= 0;}
#line 35388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1178: /* opt_ev_sql_stmt: DO_SYM ev_sql_stmt  */
#line 8170 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 35394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1179: /* ident_or_empty: %empty  */
#line 8174 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.ident_sys)= Lex_ident_sys(); }
#line 35400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1182: /* alter_commands: DISCARD TABLESPACE  */
#line 8181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1183: /* alter_commands: IMPORT TABLESPACE  */
#line 8189 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1189: /* alter_commands: DROP PARTITION_SYM opt_if_exists alt_part_name_list  */
#line 8211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 35434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1190: /* alter_commands: REBUILD_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 8218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 35444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1191: /* $@116: %empty  */
#line 8225 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1193: /* alter_commands: ANALYZE_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 8238 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 35474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1194: /* $@117: %empty  */
#line 8249 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1196: /* $@118: %empty  */
#line 8261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1198: /* alter_commands: COALESCE PARTITION_SYM opt_no_write_to_binlog real_ulong_num  */
#line 8273 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 35514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1199: /* alter_commands: TRUNCATE_SYM PARTITION_SYM all_or_alt_part_name_list  */
#line 8280 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1201: /* alter_commands: EXCHANGE_SYM PARTITION_SYM alt_part_name_item WITH TABLE_SYM table_ident have_partitioning  */
#line 8292 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->select_lex.db= (yyvsp[-1].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.partition_flags|= ALTER_PARTITION_EXCHANGE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35552 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1202: /* remove_partitioning: REMOVE_SYM PARTITIONING_SYM  */
#line 8315 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 35560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1203: /* all_or_alt_part_name_list: ALL  */
#line 8322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 35568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1205: /* $@119: %empty  */
#line 8331 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 35584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1206: /* add_partition_rule: ADD PARTITION_SYM opt_if_not_exists opt_no_write_to_binlog $@119 add_part_extra  */
#line 8343 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 35590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1208: /* add_part_extra: '(' part_def_list ')'  */
#line 8349 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 35599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1209: /* add_part_extra: PARTITIONS_SYM real_ulong_num  */
#line 8354 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 35607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1210: /* $@120: %empty  */
#line 8361 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 35620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1212: /* reorg_parts_rule: %empty  */
#line 8374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 35628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1213: /* $@121: %empty  */
#line 8378 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 35636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1214: /* reorg_parts_rule: alt_part_name_list $@121 INTO '(' part_def_list ')'  */
#line 8382 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 35645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1215: /* alt_part_name_list: alt_part_name_item  */
#line 8389 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 35651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1216: /* alt_part_name_list: alt_part_name_list ',' alt_part_name_item  */
#line 8390 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    {}
#line 35657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1217: /* alt_part_name_item: ident  */
#line 8395 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1221: /* alter_list_item: add_column column_def opt_place  */
#line 8417 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 35678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1222: /* alter_list_item: ADD key_def  */
#line 8424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 35687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1223: /* alter_list_item: ADD period_for_system_time  */
#line 8429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 35695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1224: /* alter_list_item: add_column '(' create_field_list ')'  */
#line 8433 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 35706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1225: /* alter_list_item: ADD constraint_def  */
#line 8440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 35714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1226: /* alter_list_item: ADD CONSTRAINT IF_SYM not EXISTS field_ident check_constraint  */
#line 8444 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 35723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1227: /* alter_list_item: CHANGE opt_column opt_if_exists_table_element field_ident field_spec opt_place  */
#line 8450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 35734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1228: /* alter_list_item: MODIFY_SYM opt_column opt_if_exists_table_element field_spec opt_place  */
#line 8458 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 35745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1229: /* alter_list_item: DROP opt_column opt_if_exists_table_element field_ident opt_restrict  */
#line 8465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 35759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1230: /* alter_list_item: DROP CONSTRAINT opt_if_exists_table_element field_ident  */
#line 8475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 35774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1231: /* alter_list_item: DROP FOREIGN KEY_SYM opt_if_exists_table_element field_ident  */
#line 8486 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 35788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1232: /* alter_list_item: DROP opt_constraint_no_id PRIMARY_SYM KEY_SYM  */
#line 8496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 35803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1233: /* alter_list_item: DROP key_or_index opt_if_exists_table_element field_ident  */
#line 8507 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 35817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1234: /* alter_list_item: DISABLE_SYM KEYS  */
#line 8517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 35827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1235: /* alter_list_item: ENABLE_SYM KEYS  */
#line 8523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 35837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1236: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident SET DEFAULT column_default_expr  */
#line 8529 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 35848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1237: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident DROP DEFAULT  */
#line 8536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 35858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1238: /* alter_list_item: RENAME opt_to table_ident  */
#line 8542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->select_lex.db= (yyvsp[0].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 35876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1239: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default opt_collate  */
#line 8556 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 35894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1240: /* alter_list_item: create_table_options_space_separated  */
#line 8570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 35903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1241: /* alter_list_item: FORCE_SYM  */
#line 8575 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 35911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1242: /* alter_list_item: alter_order_clause  */
#line 8579 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 35920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1245: /* alter_list_item: ADD SYSTEM VERSIONING_SYM  */
#line 8586 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 35929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1246: /* alter_list_item: DROP SYSTEM VERSIONING_SYM  */
#line 8591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 35938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1247: /* alter_list_item: DROP PERIOD_SYM FOR_SYSTEM_TIME_SYM  */
#line 8596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 35946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1253: /* alter_algorithm_option: ALGORITHM_SYM opt_equal DEFAULT  */
#line 8611 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 35955 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1254: /* alter_algorithm_option: ALGORITHM_SYM opt_equal ident  */
#line 8616 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 35964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1255: /* alter_lock_option: LOCK_SYM opt_equal DEFAULT  */
#line 8624 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 35973 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1256: /* alter_lock_option: LOCK_SYM opt_equal ident  */
#line 8629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 35982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1257: /* opt_column: %empty  */
#line 8636 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1258: /* opt_column: COLUMN_SYM  */
#line 8637 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 35994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1259: /* opt_ignore: %empty  */
#line 8641 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->ignore= 0;}
#line 36000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1260: /* opt_ignore: IGNORE_SYM  */
#line 8642 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 36006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1261: /* $@122: %empty  */
#line 8646 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->ignore= 0;}
#line 36012 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1267: /* alter_option: IGNORE_SYM  */
#line 8660 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 36018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1268: /* alter_option: ONLINE_SYM  */
#line 8662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 36027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1269: /* opt_restrict: %empty  */
#line 8670 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_DEFAULT; }
#line 36033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1270: /* opt_restrict: RESTRICT  */
#line 8671 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_RESTRICT; }
#line 36039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1271: /* opt_restrict: CASCADE  */
#line 8672 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_CASCADE; }
#line 36045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1272: /* opt_place: %empty  */
#line 8676 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)= null_clex_str; }
#line 36051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1273: /* opt_place: AFTER_SYM ident  */
#line 8678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 36060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1274: /* opt_place: FIRST_SYM  */
#line 8683 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 36070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1275: /* opt_to: %empty  */
#line 8691 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1276: /* opt_to: TO_SYM  */
#line 8692 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 36082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1277: /* opt_to: '='  */
#line 8693 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 36088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1278: /* opt_to: AS  */
#line 8694 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 36094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1279: /* $@123: %empty  */
#line 8699 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 36105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1280: /* slave: START_SYM SLAVE optional_connection_name slave_thread_opts $@123 slave_until  */
#line 8706 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36111 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1281: /* $@124: %empty  */
#line 8708 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 36122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1282: /* slave: START_SYM ALL SLAVES slave_thread_opts $@124  */
#line 8714 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1283: /* slave: STOP_SYM SLAVE optional_connection_name slave_thread_opts  */
#line 8716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 36139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1284: /* slave: STOP_SYM ALL SLAVES slave_thread_opts  */
#line 8723 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 36150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1285: /* start: START_SYM TRANSACTION_SYM opt_start_transaction_option_list  */
#line 8733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 36167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1286: /* opt_start_transaction_option_list: %empty  */
#line 8749 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 36175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1287: /* opt_start_transaction_option_list: start_transaction_option_list  */
#line 8753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 36183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1288: /* start_transaction_option_list: start_transaction_option  */
#line 8760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 36191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1289: /* start_transaction_option_list: start_transaction_option_list ',' start_transaction_option  */
#line 8764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 36199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1290: /* start_transaction_option: WITH CONSISTENT_SYM SNAPSHOT_SYM  */
#line 8771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 36207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1291: /* start_transaction_option: READ_SYM ONLY_SYM  */
#line 8775 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 36215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1292: /* start_transaction_option: READ_SYM WRITE_SYM  */
#line 8779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 36223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1293: /* $@125: %empty  */
#line 8785 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->slave_thd_opt= 0; }
#line 36229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1294: /* slave_thread_opts: $@125 slave_thread_opt_list  */
#line 8787 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1297: /* slave_thread_opt: %empty  */
#line 8796 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 36241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1298: /* slave_thread_opt: SQL_THREAD  */
#line 8797 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 36247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1299: /* slave_thread_opt: RELAY_THREAD  */
#line 8798 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_IO; }
#line 36253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1300: /* slave_until: %empty  */
#line 8802 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 36259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1301: /* slave_until: UNTIL_SYM slave_until_opts  */
#line 8804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 36272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1302: /* slave_until: UNTIL_SYM MASTER_GTID_POS_SYM '=' TEXT_STRING_sys  */
#line 8813 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 36280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1305: /* $@126: %empty  */
#line 8825 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 36291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1306: /* checksum: CHECKSUM_SYM table_or_tables $@126 table_list opt_checksum_type  */
#line 8832 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1307: /* opt_checksum_type: %empty  */
#line 8836 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= 0; }
#line 36303 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1308: /* opt_checksum_type: QUICK  */
#line 8837 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_QUICK; }
#line 36309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1309: /* opt_checksum_type: EXTENDED_SYM  */
#line 8838 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_EXTEND; }
#line 36315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1311: /* $@127: %empty  */
#line 8844 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 36321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1313: /* $@128: %empty  */
#line 8850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 36335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1314: /* repair: REPAIR opt_no_write_to_binlog $@128 repair_table_or_view  */
#line 8860 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1315: /* opt_mi_repair_type: %empty  */
#line 8870 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 36353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1316: /* opt_mi_repair_type: mi_repair_types  */
#line 8871 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 36359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1317: /* mi_repair_types: mi_repair_type  */
#line 8875 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 36365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1318: /* mi_repair_types: mi_repair_type mi_repair_types  */
#line 8876 "/home/buildbot/git/sql/sql_yacc.yy"
                                         {}
#line 36371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1319: /* mi_repair_type: QUICK  */
#line 8880 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_QUICK; }
#line 36377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1320: /* mi_repair_type: EXTENDED_SYM  */
#line 8881 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_EXTEND; }
#line 36383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1321: /* mi_repair_type: USE_FRM  */
#line 8882 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 36389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1322: /* opt_view_repair_type: %empty  */
#line 8886 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 36395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1323: /* opt_view_repair_type: FROM MYSQL_SYM  */
#line 8887 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 36401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1324: /* $@129: %empty  */
#line 8892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 36415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1325: /* analyze: ANALYZE_SYM opt_no_write_to_binlog table_or_tables $@129 analyze_table_list  */
#line 8902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1329: /* opt_persistent_stat_clause: %empty  */
#line 8922 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1330: /* opt_persistent_stat_clause: PERSISTENT_SYM FOR_SYM persistent_stat_spec  */
#line 8924 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 36441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1331: /* persistent_stat_spec: ALL  */
#line 8931 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1332: /* persistent_stat_spec: COLUMNS persistent_column_stat_spec INDEXES persistent_index_stat_spec  */
#line 8933 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1333: /* persistent_column_stat_spec: ALL  */
#line 8937 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 36459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1334: /* $@130: %empty  */
#line 8939 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 36470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1336: /* persistent_index_stat_spec: ALL  */
#line 8950 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 36476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1337: /* $@131: %empty  */
#line 8952 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 36487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1339: /* table_column_list: %empty  */
#line 8964 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1340: /* table_column_list: ident  */
#line 8966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 36502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1341: /* table_column_list: table_column_list ',' ident  */
#line 8971 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 36511 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1342: /* table_index_list: %empty  */
#line 8979 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1345: /* table_index_name: ident  */
#line 8986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 36527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1346: /* table_index_name: PRIMARY_SYM  */
#line 8993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 36538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1347: /* binlog_base64_event: BINLOG_SYM TEXT_STRING_sys  */
#line 9003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 36549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1348: /* binlog_base64_event: BINLOG_SYM '@' ident_or_text ',' '@' ident_or_text  */
#line 9011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 36559 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1350: /* $@132: %empty  */
#line 9021 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 36565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1352: /* $@133: %empty  */
#line 9026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 36579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1353: /* check: CHECK_SYM $@133 check_view_or_table  */
#line 9036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1354: /* opt_mi_check_type: %empty  */
#line 9048 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 36599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1355: /* opt_mi_check_type: mi_check_types  */
#line 9049 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 36605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1356: /* mi_check_types: mi_check_type  */
#line 9053 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 36611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1357: /* mi_check_types: mi_check_type mi_check_types  */
#line 9054 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 36617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1358: /* mi_check_type: QUICK  */
#line 9058 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_QUICK; }
#line 36623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1359: /* mi_check_type: FAST_SYM  */
#line 9059 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_FAST; }
#line 36629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1360: /* mi_check_type: MEDIUM_SYM  */
#line 9060 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_MEDIUM; }
#line 36635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1361: /* mi_check_type: EXTENDED_SYM  */
#line 9061 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_EXTEND; }
#line 36641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1362: /* mi_check_type: CHANGED  */
#line 9062 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 36647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1363: /* mi_check_type: FOR_SYM UPGRADE_SYM  */
#line 9063 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 36653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1364: /* opt_view_check_type: %empty  */
#line 9067 "/home/buildbot/git/sql/sql_yacc.yy"
                              { }
#line 36659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1365: /* opt_view_check_type: FOR_SYM UPGRADE_SYM  */
#line 9068 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 36665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1366: /* $@134: %empty  */
#line 9073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 36679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1367: /* optimize: OPTIMIZE opt_no_write_to_binlog table_or_tables $@134 table_list opt_lock_wait_timeout  */
#line 9083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1368: /* opt_no_write_to_binlog: %empty  */
#line 9093 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 36697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1369: /* opt_no_write_to_binlog: NO_WRITE_TO_BINLOG  */
#line 9094 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 36703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1370: /* opt_no_write_to_binlog: LOCAL_SYM  */
#line 9095 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 36709 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1371: /* $@135: %empty  */
#line 9100 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 36717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1372: /* rename: RENAME table_or_tables $@135 table_to_table_list  */
#line 9104 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1373: /* rename: RENAME USER_SYM clear_privileges rename_list  */
#line 9106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 36731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1374: /* rename_list: user TO_SYM user  */
#line 9113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 36741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1375: /* rename_list: rename_list ',' user TO_SYM user  */
#line 9119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 36751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1378: /* table_to_table: table_ident opt_lock_wait_timeout TO_SYM table_ident  */
#line 9133 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 36767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1379: /* $@136: %empty  */
#line 9148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.reset();
          }
#line 36775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1380: /* keycache: CACHE_SYM INDEX_SYM $@136 keycache_list_or_parts IN_SYM key_cache_name  */
#line 9152 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 36785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1385: /* assign_to_keycache: table_ident cache_keys_spec  */
#line 9171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1386: /* assign_to_keycache_parts: table_ident adm_partition cache_keys_spec  */
#line 9182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1387: /* key_cache_name: ident  */
#line 9192 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 36815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1388: /* key_cache_name: DEFAULT  */
#line 9193 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str) = default_key_cache_base; }
#line 36821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1389: /* $@137: %empty  */
#line 9198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 36831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1390: /* preload: LOAD INDEX_SYM INTO CACHE_SYM $@137 preload_list_or_parts  */
#line 9204 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 36837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1395: /* preload_keys: table_ident cache_keys_spec opt_ignore_leaves  */
#line 9219 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1396: /* preload_keys_parts: table_ident adm_partition cache_keys_spec opt_ignore_leaves  */
#line 9230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1397: /* $@138: %empty  */
#line 9241 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 36869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1399: /* $@139: %empty  */
#line 9248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->select_lex.alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        INDEX_HINT_MASK_ALL);
          }
#line 36879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1401: /* cache_key_list_or_empty: %empty  */
#line 9257 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 36885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1403: /* opt_ignore_leaves: %empty  */
#line 9263 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 36891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1404: /* opt_ignore_leaves: IGNORE_SYM LEAVES  */
#line 9264 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 36897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1405: /* select: opt_with_clause select_init  */
#line 9274 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->current_select->set_with_clause((yyvsp[-1].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 36909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1420: /* $@140: %empty  */
#line 9304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->set_braces(true);
          }
#line 36917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1421: /* select_paren: $@140 table_value_constructor select_part3  */
#line 9308 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1422: /* $@141: %empty  */
#line 9312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 36937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1423: /* select_paren: $@141 SELECT_SYM select_options_and_item_list select_part3 opt_select_lock_type  */
#line 9321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1427: /* $@142: %empty  */
#line 9334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 36957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1428: /* select_paren_union_query_term: $@142 select_parent_union_query_term_proper  */
#line 9342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1432: /* $@143: %empty  */
#line 9355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 36977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1433: /* select_paren_view: $@143 select_parent_view_proper  */
#line 9363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1435: /* $@144: %empty  */
#line 9371 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->set_braces(true);
          }
#line 36993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1436: /* select_paren_derived: $@144 table_value_constructor  */
#line 9375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 37002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1437: /* $@145: %empty  */
#line 9380 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->set_braces(true);
          }
#line 37010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1438: /* select_paren_derived: $@145 SELECT_SYM select_part2_derived opt_table_expression opt_order_clause opt_limit_clause opt_select_lock_type  */
#line 9388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 37019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1439: /* select_paren_derived: '(' select_paren_derived ')'  */
#line 9392 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 37025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1440: /* $@146: %empty  */
#line 9398 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 37034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1442: /* select_init3: select_part3_union_not_ready opt_select_lock_type  */
#line 9405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 37043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1443: /* $@147: %empty  */
#line 9415 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 37052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1445: /* select_init3_union_query_term: select_part3_union_not_ready_noproc opt_select_lock_type  */
#line 9422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 37061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1446: /* select_init3_view: opt_table_expression opt_select_lock_type  */
#line 9431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 37069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1447: /* $@148: %empty  */
#line 9435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 37077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1449: /* select_init3_view: order_or_limit opt_select_lock_type  */
#line 9440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 37085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1450: /* select_init3_view: table_expression order_or_limit opt_select_lock_type  */
#line 9444 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 37093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1466: /* $@149: %empty  */
#line 9484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 37105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1467: /* select_options_and_item_list: $@149 select_options select_item_list  */
#line 9492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 37113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1472: /* table_reference_list: join_table_list  */
#line 9520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 37123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1475: /* select_options: select_option_list  */
#line 9535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 37133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1476: /* opt_history_unit: %empty  */
#line 9544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 37141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1477: /* opt_history_unit: TRANSACTION_SYM  */
#line 9548 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 37149 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1478: /* opt_history_unit: TIMESTAMP  */
#line 9552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 37157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1479: /* history_point: TIMESTAMP TEXT_STRING  */
#line 9559 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                                MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 37169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1480: /* history_point: function_call_keyword_timestamp  */
#line 9567 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 37177 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1481: /* history_point: opt_history_unit bit_expr  */
#line 9571 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 37185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1482: /* opt_for_system_time_clause: %empty  */
#line 9578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 37193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1483: /* opt_for_system_time_clause: FOR_SYSTEM_TIME_SYM system_time_expr  */
#line 9582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 37201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1484: /* system_time_expr: AS OF_SYM history_point  */
#line 9589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 37209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1485: /* system_time_expr: ALL  */
#line 9593 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 37217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1486: /* system_time_expr: FROM history_point TO_SYM history_point  */
#line 9597 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 37225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1487: /* system_time_expr: BETWEEN_SYM history_point AND_SYM history_point  */
#line 9601 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 37233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1491: /* select_option: SQL_NO_CACHE_SYM  */
#line 9614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));

            Lex->safe_to_cache_query=0;
            Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
#line 37254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1492: /* select_option: SQL_CACHE_SYM  */
#line 9631 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));

            Lex->safe_to_cache_query=1;
            Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
          }
#line 37275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1494: /* opt_select_lock_type: FOR_SYM UPDATE_SYM opt_lock_wait_timeout  */
#line 9652 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_WRITE;
            lex->current_select->set_lock_for_tables(TL_WRITE, false);
            lex->safe_to_cache_query=0;
          }
#line 37286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1495: /* opt_select_lock_type: LOCK_SYM IN_SYM SHARE_SYM MODE_SYM opt_lock_wait_timeout  */
#line 9659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_READ_WITH_SHARED_LOCKS;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS, false);
            lex->safe_to_cache_query=0;
          }
#line 37298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1498: /* select_item_list: '*'  */
#line 9672 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 37313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1499: /* select_item: remember_name select_sublist_qualified_asterisk remember_end  */
#line 9686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 37322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1500: /* select_item: remember_name expr remember_end select_alias  */
#line 9691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 37345 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1501: /* remember_tok_start: %empty  */
#line 9712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 37353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1502: /* remember_tok_end: %empty  */
#line 9718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_end();
          }
#line 37361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1503: /* remember_name: %empty  */
#line 9724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 37369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1504: /* remember_end: %empty  */
#line 9730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 37377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1505: /* select_alias: %empty  */
#line 9736 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)=null_clex_str;}
#line 37383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1506: /* select_alias: AS ident  */
#line 9737 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 37389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1507: /* select_alias: AS TEXT_STRING_sys  */
#line 9738 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 37395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1508: /* select_alias: ident  */
#line 9739 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 37401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1509: /* select_alias: TEXT_STRING_sys  */
#line 9740 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 37407 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1510: /* opt_default_time_precision: %empty  */
#line 9744 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 37413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1511: /* opt_default_time_precision: '(' ')'  */
#line 9745 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 37419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1512: /* opt_default_time_precision: '(' real_ulong_num ')'  */
#line 9746 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 37425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1513: /* opt_time_precision: %empty  */
#line 9750 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 37431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1514: /* opt_time_precision: '(' ')'  */
#line 9751 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 37437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1515: /* opt_time_precision: '(' real_ulong_num ')'  */
#line 9752 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 37443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1516: /* optional_braces: %empty  */
#line 9756 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1517: /* optional_braces: '(' ')'  */
#line 9757 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 37455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1518: /* expr: expr or expr  */
#line 9763 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 37510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1519: /* expr: expr XOR expr  */
#line 9814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1520: /* expr: expr and expr  */
#line 9821 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 37568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1521: /* expr: NOT_SYM expr  */
#line 9864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1523: /* boolean_test: boolean_test IS TRUE_SYM  */
#line 9874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1524: /* boolean_test: boolean_test IS not TRUE_SYM  */
#line 9880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1525: /* boolean_test: boolean_test IS FALSE_SYM  */
#line 9886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1526: /* boolean_test: boolean_test IS not FALSE_SYM  */
#line 9892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1527: /* boolean_test: boolean_test IS UNKNOWN_SYM  */
#line 9898 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1528: /* boolean_test: boolean_test IS not UNKNOWN_SYM  */
#line 9904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1529: /* boolean_test: boolean_test IS NULL_SYM  */
#line 9910 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1530: /* boolean_test: boolean_test IS not NULL_SYM  */
#line 9916 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1531: /* boolean_test: boolean_test EQUAL_SYM predicate  */
#line 9922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1532: /* boolean_test: boolean_test comp_op predicate  */
#line 9928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1533: /* boolean_test: boolean_test comp_op all_or_any '(' subselect ')'  */
#line 9934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1535: /* predicate: predicate IN_SYM '(' subselect ')'  */
#line 9944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-4].item), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1536: /* predicate: predicate not IN_SYM '(' subselect ')'  */
#line 9950 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1537: /* predicate: predicate IN_SYM '(' expr ')'  */
#line 9959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1538: /* predicate: predicate IN_SYM '(' expr ',' expr_list ')'  */
#line 9965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1539: /* predicate: predicate not IN_SYM '(' expr ')'  */
#line 9973 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1540: /* predicate: predicate not IN_SYM '(' expr ',' expr_list ')'  */
#line 9979 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1541: /* predicate: predicate BETWEEN_SYM predicate AND_SYM predicate  */
#line 9988 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1542: /* predicate: predicate not BETWEEN_SYM predicate AND_SYM predicate  */
#line 9994 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1543: /* predicate: predicate SOUNDS_SYM LIKE predicate  */
#line 10002 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1544: /* predicate: predicate LIKE predicate  */
#line 10012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1545: /* predicate: predicate LIKE predicate ESCAPE_SYM predicate  */
#line 10018 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1546: /* predicate: predicate not LIKE predicate  */
#line 10025 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1547: /* predicate: predicate not LIKE predicate ESCAPE_SYM predicate  */
#line 10032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1548: /* predicate: predicate REGEXP predicate  */
#line 10040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1549: /* predicate: predicate not REGEXP predicate  */
#line 10046 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1551: /* bit_expr: bit_expr '|' bit_expr  */
#line 10059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1552: /* bit_expr: bit_expr '&' bit_expr  */
#line 10065 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1553: /* bit_expr: bit_expr SHIFT_LEFT bit_expr  */
#line 10071 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37889 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1554: /* bit_expr: bit_expr SHIFT_RIGHT bit_expr  */
#line 10077 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1555: /* bit_expr: bit_expr ORACLE_CONCAT_SYM bit_expr  */
#line 10083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1556: /* bit_expr: bit_expr '+' bit_expr  */
#line 10090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1557: /* bit_expr: bit_expr '-' bit_expr  */
#line 10096 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1558: /* bit_expr: bit_expr '+' INTERVAL_SYM expr interval  */
#line 10102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1559: /* bit_expr: bit_expr '-' INTERVAL_SYM expr interval  */
#line 10108 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1560: /* bit_expr: INTERVAL_SYM expr interval '+' expr  */
#line 10115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1561: /* bit_expr: '+' INTERVAL_SYM expr interval '+' expr  */
#line 10121 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1562: /* bit_expr: '-' INTERVAL_SYM expr interval '+' expr  */
#line 10127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1563: /* bit_expr: bit_expr '*' bit_expr  */
#line 10133 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1564: /* bit_expr: bit_expr '/' bit_expr  */
#line 10139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1565: /* bit_expr: bit_expr '%' bit_expr  */
#line 10145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1566: /* bit_expr: bit_expr DIV_SYM bit_expr  */
#line 10151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1567: /* bit_expr: bit_expr MOD_SYM bit_expr  */
#line 10157 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1568: /* bit_expr: bit_expr '^' bit_expr  */
#line 10163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1578: /* comp_op: '='  */
#line 10192 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 38046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1579: /* comp_op: GE  */
#line 10193 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 38052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1580: /* comp_op: '>'  */
#line 10194 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 38058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1581: /* comp_op: LE  */
#line 10195 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 38064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1582: /* comp_op: '<'  */
#line 10196 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 38070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1583: /* comp_op: NE  */
#line 10197 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 38076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1584: /* all_or_any: ALL  */
#line 10201 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 1; }
#line 38082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1585: /* all_or_any: ANY_SYM  */
#line 10202 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 0; }
#line 38088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1586: /* opt_dyncol_type: %empty  */
#line 10207 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 38097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1587: /* opt_dyncol_type: AS dyncol_type  */
#line 10211 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 38103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1588: /* dyncol_type: numeric_dyncol_type  */
#line 10215 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 38109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1589: /* dyncol_type: temporal_dyncol_type  */
#line 10216 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 38115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1590: /* dyncol_type: string_dyncol_type  */
#line 10217 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 38121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1591: /* numeric_dyncol_type: INT_SYM  */
#line 10221 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 38127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1592: /* numeric_dyncol_type: UNSIGNED INT_SYM  */
#line 10222 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 38133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1593: /* numeric_dyncol_type: DOUBLE_SYM  */
#line 10223 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 38139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1594: /* numeric_dyncol_type: REAL  */
#line 10224 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 38145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1595: /* numeric_dyncol_type: FLOAT_SYM  */
#line 10225 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 38151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1596: /* numeric_dyncol_type: DECIMAL_SYM float_options  */
#line 10226 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 38157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1597: /* temporal_dyncol_type: DATE_SYM  */
#line 10230 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 38163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1598: /* temporal_dyncol_type: TIME_SYM opt_field_length  */
#line 10231 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 38169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1599: /* temporal_dyncol_type: DATETIME opt_field_length  */
#line 10232 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 38175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1600: /* $@150: %empty  */
#line 10237 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 38181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1601: /* string_dyncol_type: char $@150 opt_binary  */
#line 10239 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 38189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1602: /* string_dyncol_type: nchar  */
#line 10243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 38198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1603: /* dyncall_create_element: expr ',' expr opt_dyncol_type  */
#line 10251 "/home/buildbot/git/sql/sql_yacc.yy"
   {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 38222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1604: /* dyncall_create_list: dyncall_create_element  */
#line 10274 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 38233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1605: /* dyncall_create_list: dyncall_create_list ',' dyncall_create_element  */
#line 10281 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 38242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1606: /* plsql_cursor_attr: ISOPEN_SYM  */
#line 10289 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 38248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1607: /* plsql_cursor_attr: FOUND_SYM  */
#line 10290 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 38254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1608: /* plsql_cursor_attr: NOTFOUND_SYM  */
#line 10291 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 38260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1609: /* plsql_cursor_attr: ROWCOUNT_SYM  */
#line 10292 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 38266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1610: /* explicit_cursor_attr: ident PERCENT_ORACLE_SYM plsql_cursor_attr  */
#line 10297 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 38275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1611: /* trim_operands: expr  */
#line 10305 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 38281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1612: /* trim_operands: LEADING expr FROM expr  */
#line 10306 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 38287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1613: /* trim_operands: TRAILING expr FROM expr  */
#line 10307 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 38293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1614: /* trim_operands: BOTH expr FROM expr  */
#line 10308 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 38299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1615: /* trim_operands: LEADING FROM expr  */
#line 10309 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 38305 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1616: /* trim_operands: TRAILING FROM expr  */
#line 10310 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 38311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1617: /* trim_operands: BOTH FROM expr  */
#line 10311 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 38317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1618: /* trim_operands: expr FROM expr  */
#line 10312 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 38323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1625: /* column_default_non_parenthesized_expr: param_marker  */
#line 10350 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item_param); }
#line 38329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1630: /* column_default_non_parenthesized_expr: ROW_SYM '(' expr ',' expr_list ')'  */
#line 10356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1631: /* column_default_non_parenthesized_expr: EXISTS '(' subselect ')'  */
#line 10363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1632: /* column_default_non_parenthesized_expr: '{' ident expr '}'  */
#line 10369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 38359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1633: /* column_default_non_parenthesized_expr: MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')'  */
#line 10374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 38373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1634: /* column_default_non_parenthesized_expr: CAST_SYM '(' expr AS cast_type ')'  */
#line 10384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 38382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1635: /* column_default_non_parenthesized_expr: CASE_SYM when_list_opt_else END  */
#line 10389 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1636: /* column_default_non_parenthesized_expr: CASE_SYM expr when_list_opt_else END  */
#line 10394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1637: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr ',' cast_type ')'  */
#line 10400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 38410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1638: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr USING charset_name ')'  */
#line 10405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1639: /* column_default_non_parenthesized_expr: DEFAULT '(' simple_ident ')'  */
#line 10411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 38435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1640: /* column_default_non_parenthesized_expr: VALUE_SYM '(' simple_ident_nospvar ')'  */
#line 10422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1641: /* column_default_non_parenthesized_expr: NEXT_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 38455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1642: /* column_default_non_parenthesized_expr: NEXTVAL_SYM '(' table_ident ')'  */
#line 10434 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 38464 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1643: /* column_default_non_parenthesized_expr: PREVIOUS_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10439 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 38473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1644: /* column_default_non_parenthesized_expr: LASTVAL_SYM '(' table_ident ')'  */
#line 10444 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 38482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1645: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ')'  */
#line 10449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 38491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1646: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ')'  */
#line 10454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 38500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1647: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ',' ulonglong_num ')'  */
#line 10459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 38509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1650: /* primary_expr: '(' parenthesized_expr ')'  */
#line 10468 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { (yyval.item)= (yyvsp[-1].item); }
#line 38515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1652: /* string_factor_expr: string_factor_expr COLLATE_SYM collation_name  */
#line 10474 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 38524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1654: /* simple_expr: BINARY simple_expr  */
#line 10483 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 38534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1655: /* simple_expr: '+' simple_expr  */
#line 10489 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1656: /* simple_expr: '-' simple_expr  */
#line 10493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38552 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1657: /* simple_expr: '~' simple_expr  */
#line 10499 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1658: /* simple_expr: not2 simple_expr  */
#line 10505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1660: /* mysql_concatenation_expr: mysql_concatenation_expr MYSQL_CONCAT_SYM simple_expr  */
#line 10515 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1661: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ')'  */
#line 10524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1662: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ',' expr ')'  */
#line 10531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_add_time(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1663: /* function_call_keyword: CHAR_SYM '(' expr_list ')'  */
#line 10545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38613 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1664: /* function_call_keyword: CHAR_SYM '(' expr_list USING charset_name ')'  */
#line 10551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1665: /* function_call_keyword: CURRENT_USER optional_braces  */
#line 10557 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1666: /* function_call_keyword: CURRENT_ROLE optional_braces  */
#line 10566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1667: /* function_call_keyword: DATE_SYM '(' expr ')'  */
#line 10575 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1668: /* function_call_keyword: DAY_SYM '(' expr ')'  */
#line 10581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1669: /* function_call_keyword: HOUR_SYM '(' expr ')'  */
#line 10587 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1670: /* function_call_keyword: INSERT '(' expr ',' expr ',' expr ',' expr ')'  */
#line 10593 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38689 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1671: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ')'  */
#line 10599 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1672: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ',' expr_list ')'  */
#line 10614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1673: /* function_call_keyword: LEFT '(' expr ',' expr ')'  */
#line 10625 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1674: /* function_call_keyword: MINUTE_SYM '(' expr ')'  */
#line 10631 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1675: /* function_call_keyword: MONTH_SYM '(' expr ')'  */
#line 10637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1676: /* function_call_keyword: RIGHT '(' expr ',' expr ')'  */
#line 10643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38763 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1677: /* function_call_keyword: SECOND_SYM '(' expr ')'  */
#line 10649 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1678: /* function_call_keyword: SQL_SYM PERCENT_ORACLE_SYM ROWCOUNT_SYM  */
#line 10655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1679: /* function_call_keyword: TIME_SYM '(' expr ')'  */
#line 10663 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1680: /* function_call_keyword: function_call_keyword_timestamp  */
#line 10670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1681: /* function_call_keyword: TRIM '(' trim_operands ')'  */
#line 10674 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 38813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1682: /* function_call_keyword: USER_SYM '(' ')'  */
#line 10679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 38825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1683: /* function_call_keyword: YEAR_SYM '(' expr ')'  */
#line 10687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1684: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' expr ')'  */
#line 10708 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1685: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10715 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1686: /* function_call_nonkeyword: CURDATE optional_braces  */
#line 10721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1687: /* function_call_nonkeyword: CURTIME opt_time_precision  */
#line 10728 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1688: /* function_call_nonkeyword: DATE_ADD_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10735 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1689: /* function_call_nonkeyword: DATE_SUB_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1690: /* function_call_nonkeyword: DATE_FORMAT_SYM '(' expr ',' expr ')'  */
#line 10747 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1691: /* function_call_nonkeyword: DATE_FORMAT_SYM '(' expr ',' expr ',' expr ')'  */
#line 10753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1692: /* function_call_nonkeyword: DECODE_MARIADB_SYM '(' expr ',' expr ')'  */
#line 10759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1693: /* function_call_nonkeyword: DECODE_ORACLE_SYM '(' expr ',' decode_when_list_oracle ')'  */
#line 10765 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1694: /* function_call_nonkeyword: EXTRACT_SYM '(' interval FROM expr ')'  */
#line 10771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1695: /* function_call_nonkeyword: GET_FORMAT '(' date_time_type ',' expr ')'  */
#line 10777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1696: /* function_call_nonkeyword: NOW_SYM opt_time_precision  */
#line 10783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1697: /* function_call_nonkeyword: POSITION_SYM '(' bit_expr IN_SYM expr ')'  */
#line 10790 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1698: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' expr ')'  */
#line 10796 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1699: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10803 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1700: /* function_call_nonkeyword: SUBSTRING '(' expr ',' expr ',' expr ')'  */
#line 10809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 39009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1701: /* function_call_nonkeyword: SUBSTRING '(' expr ',' expr ')'  */
#line 10814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 39018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1702: /* function_call_nonkeyword: SUBSTRING '(' expr FROM expr FOR_SYM expr ')'  */
#line 10819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 39027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1703: /* function_call_nonkeyword: SUBSTRING '(' expr FROM expr ')'  */
#line 10824 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 39036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1704: /* function_call_nonkeyword: SYSDATE opt_time_precision  */
#line 10829 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 39058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1705: /* function_call_nonkeyword: TIMESTAMP_ADD '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10847 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1706: /* function_call_nonkeyword: TIMESTAMP_DIFF '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1707: /* function_call_nonkeyword: TRIM_ORACLE '(' trim_operands ')'  */
#line 10859 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 39087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1708: /* function_call_nonkeyword: UTC_DATE_SYM optional_braces  */
#line 10864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 39098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1709: /* function_call_nonkeyword: UTC_TIME_SYM opt_time_precision  */
#line 10871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 39109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1710: /* function_call_nonkeyword: UTC_TIMESTAMP_SYM opt_time_precision  */
#line 10878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 39120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1711: /* function_call_nonkeyword: COLUMN_ADD_SYM '(' expr ',' dyncall_create_list ')'  */
#line 10886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1712: /* function_call_nonkeyword: COLUMN_DELETE_SYM '(' expr ',' expr_list ')'  */
#line 10893 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1713: /* function_call_nonkeyword: COLUMN_CHECK_SYM '(' expr ')'  */
#line 10900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1714: /* function_call_nonkeyword: COLUMN_CREATE_SYM '(' dyncall_create_list ')'  */
#line 10907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1715: /* function_call_nonkeyword: COLUMN_GET_SYM '(' expr ',' expr AS cast_type ')'  */
#line 10914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1716: /* function_call_conflict: ASCII_SYM '(' expr ')'  */
#line 10931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1717: /* function_call_conflict: CHARSET '(' expr ')'  */
#line 10937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1718: /* function_call_conflict: COALESCE '(' expr_list ')'  */
#line 10943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1719: /* function_call_conflict: COLLATION_SYM '(' expr ')'  */
#line 10949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1720: /* function_call_conflict: DATABASE '(' ')'  */
#line 10955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 39224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1721: /* function_call_conflict: IF_SYM '(' expr ',' expr ',' expr ')'  */
#line 10962 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1722: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ')'  */
#line 10968 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1723: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ',' expr ')'  */
#line 10974 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1724: /* function_call_conflict: LAST_VALUE '(' expr ')'  */
#line 10983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1725: /* function_call_conflict: LAST_VALUE '(' expr_list ',' expr ')'  */
#line 10994 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1726: /* function_call_conflict: MICROSECOND_SYM '(' expr ')'  */
#line 11001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1727: /* function_call_conflict: MOD_SYM '(' expr ',' expr ')'  */
#line 11007 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1728: /* function_call_conflict: OLD_PASSWORD_SYM '(' expr ')'  */
#line 11013 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1729: /* function_call_conflict: PASSWORD_SYM '(' expr ')'  */
#line 11020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 39323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1730: /* function_call_conflict: QUARTER_SYM '(' expr ')'  */
#line 11028 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1731: /* function_call_conflict: REPEAT_SYM '(' expr ',' expr ')'  */
#line 11034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1732: /* function_call_conflict: REPLACE '(' expr ',' expr ',' expr ')'  */
#line 11040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 39352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1733: /* function_call_conflict: REVERSE_SYM '(' expr ')'  */
#line 11045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1734: /* function_call_conflict: ROW_COUNT_SYM '(' ')'  */
#line 11051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 39374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1735: /* function_call_conflict: TRUNCATE_SYM '(' expr ',' expr ')'  */
#line 11059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1736: /* function_call_conflict: WEEK_SYM '(' expr ')'  */
#line 11065 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1737: /* function_call_conflict: WEEK_SYM '(' expr ',' expr ')'  */
#line 11071 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1738: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr opt_ws_levels ')'  */
#line 11077 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1739: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS CHAR_SYM ws_nweights opt_ws_levels ')'  */
#line 11083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1740: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS BINARY ws_nweights ')'  */
#line 11091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1741: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ',' ulong_num ',' ulong_num ',' ulong_num ')'  */
#line 11103 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1742: /* function_call_conflict: geometry_function  */
#line 11110 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 39469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1743: /* geometry_function: CONTAINS_SYM '(' expr ',' expr ')'  */
#line 11125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 39479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1744: /* geometry_function: GEOMETRYCOLLECTION '(' expr_list ')'  */
#line 11131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 39490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1745: /* geometry_function: LINESTRING '(' expr_list ')'  */
#line 11138 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 39501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1746: /* geometry_function: MULTILINESTRING '(' expr_list ')'  */
#line 11145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 39512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1747: /* geometry_function: MULTIPOINT '(' expr_list ')'  */
#line 11152 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 39523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1748: /* geometry_function: MULTIPOLYGON '(' expr_list ')'  */
#line 11159 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 39534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1749: /* geometry_function: POINT_SYM '(' expr ',' expr ')'  */
#line 11166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 39542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1750: /* geometry_function: POLYGON '(' expr_list ')'  */
#line 11170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 39553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1751: /* geometry_function: WITHIN '(' expr ',' expr ')'  */
#line 11177 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 39562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1752: /* @151: %empty  */
#line 11194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 39585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1753: /* function_call_generic: IDENT_sys '(' @151 opt_udf_expr_list ')'  */
#line 11213 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 39638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1754: /* function_call_generic: ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11262 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 39647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1755: /* function_call_generic: ident_cli '.' ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11267 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 39656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1756: /* fulltext_options: opt_natural_language_mode opt_query_expansion  */
#line 11275 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 39662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1757: /* fulltext_options: IN_SYM BOOLEAN_SYM MODE_SYM  */
#line 11277 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= FT_BOOL; }
#line 39668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1758: /* opt_natural_language_mode: %empty  */
#line 11281 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 39674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1759: /* opt_natural_language_mode: IN_SYM NATURAL LANGUAGE_SYM MODE_SYM  */
#line 11282 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 39680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1760: /* opt_query_expansion: %empty  */
#line 11286 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 0;         }
#line 39686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1761: /* opt_query_expansion: WITH QUERY_SYM EXPANSION_SYM  */
#line 11287 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 39692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1762: /* opt_udf_expr_list: %empty  */
#line 11291 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= NULL; }
#line 39698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1763: /* opt_udf_expr_list: udf_expr_list  */
#line 11292 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1764: /* udf_expr_list: udf_expr  */
#line 11297 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 39715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1765: /* udf_expr_list: udf_expr_list ',' udf_expr  */
#line 11304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39724 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1766: /* udf_expr: remember_name expr remember_end select_alias  */
#line 11312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 39752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1767: /* sum_expr: AVG_SYM '(' in_sum_expr ')'  */
#line 11339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1768: /* sum_expr: AVG_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11345 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1769: /* sum_expr: BIT_AND '(' in_sum_expr ')'  */
#line 11351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1770: /* sum_expr: BIT_OR '(' in_sum_expr ')'  */
#line 11357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1771: /* sum_expr: BIT_XOR '(' in_sum_expr ')'  */
#line 11363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1772: /* sum_expr: COUNT_SYM '(' opt_all '*' ')'  */
#line 11369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1773: /* sum_expr: COUNT_SYM '(' in_sum_expr ')'  */
#line 11378 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1774: /* $@152: %empty  */
#line 11384 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 39831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1775: /* $@153: %empty  */
#line 11386 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr--; }
#line 39837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1776: /* sum_expr: COUNT_SYM '(' DISTINCT $@152 expr_list $@153 ')'  */
#line 11388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1777: /* sum_expr: MIN_SYM '(' in_sum_expr ')'  */
#line 11394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1778: /* sum_expr: MIN_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1779: /* sum_expr: MAX_SYM '(' in_sum_expr ')'  */
#line 11411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1780: /* sum_expr: MAX_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11417 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1781: /* sum_expr: STD_SYM '(' in_sum_expr ')'  */
#line 11423 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1782: /* sum_expr: VARIANCE_SYM '(' in_sum_expr ')'  */
#line 11429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1783: /* sum_expr: STDDEV_SAMP_SYM '(' in_sum_expr ')'  */
#line 11435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1784: /* sum_expr: VAR_SAMP_SYM '(' in_sum_expr ')'  */
#line 11441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1785: /* sum_expr: SUM_SYM '(' in_sum_expr ')'  */
#line 11447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1786: /* sum_expr: SUM_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11453 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1787: /* $@154: %empty  */
#line 11459 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 39953 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1788: /* sum_expr: GROUP_CONCAT_SYM '(' opt_distinct $@154 expr_list opt_gorder_clause opt_gconcat_separator opt_glimit_clause ')'  */
#line 11463 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 39975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1789: /* window_func_expr: window_func OVER_SYM window_name  */
#line 11484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1790: /* window_func_expr: window_func OVER_SYM window_spec  */
#line 11493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 40006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1793: /* simple_window_func: ROW_NUMBER_SYM '(' ')'  */
#line 11517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1794: /* simple_window_func: RANK_SYM '(' ')'  */
#line 11524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1795: /* simple_window_func: DENSE_RANK_SYM '(' ')'  */
#line 11531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1796: /* simple_window_func: PERCENT_RANK_SYM '(' ')'  */
#line 11538 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1797: /* simple_window_func: CUME_DIST_SYM '(' ')'  */
#line 11545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40056 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1798: /* simple_window_func: NTILE_SYM '(' expr ')'  */
#line 11552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1799: /* simple_window_func: FIRST_VALUE_SYM '(' expr ')'  */
#line 11559 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1800: /* simple_window_func: LAST_VALUE '(' expr ')'  */
#line 11566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1801: /* simple_window_func: NTH_VALUE_SYM '(' expr ',' expr ')'  */
#line 11573 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1802: /* simple_window_func: LEAD_SYM '(' expr ')'  */
#line 11580 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1803: /* simple_window_func: LEAD_SYM '(' expr ',' expr ')'  */
#line 11591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1804: /* simple_window_func: LAG_SYM '(' expr ')'  */
#line 11598 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1805: /* simple_window_func: LAG_SYM '(' expr ',' expr ')'  */
#line 11609 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1806: /* inverse_distribution_function: percentile_function OVER_SYM '(' opt_window_partition_clause ')'  */
#line 11621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 40163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1807: /* $@155: %empty  */
#line 11639 "/home/buildbot/git/sql/sql_yacc.yy"
           { Select->prepare_add_window_spec(thd); }
#line 40169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1808: /* percentile_function: inverse_distribution_function_def WITHIN GROUP_SYM '(' $@155 order_by_single_element_list ')'  */
#line 11641 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 40177 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1809: /* percentile_function: MEDIAN_SYM '(' expr ')'  */
#line 11645 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1810: /* inverse_distribution_function_def: PERCENTILE_CONT_SYM '(' expr ')'  */
#line 11662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1811: /* inverse_distribution_function_def: PERCENTILE_DISC_SYM '(' expr ')'  */
#line 11668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1812: /* order_by_single_element_list: ORDER_SYM BY order_ident order_dir  */
#line 11677 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 40224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1813: /* window_name: ident  */
#line 11686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 40234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1814: /* $@156: %empty  */
#line 11695 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 40243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1815: /* variable: '@' $@156 variable_aux  */
#line 11700 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 40251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1816: /* variable_aux: ident_or_text SET_VAR expr  */
#line 11707 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 40265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1817: /* variable_aux: ident_or_text  */
#line 11717 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 40277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1818: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name  */
#line 11725 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 40286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1819: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name '.' ident  */
#line 11730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 40295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1820: /* opt_distinct: %empty  */
#line 11737 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 40301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1821: /* opt_distinct: DISTINCT  */
#line 11738 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 1; }
#line 40307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1822: /* opt_gconcat_separator: %empty  */
#line 11743 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 40317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1823: /* opt_gconcat_separator: SEPARATOR_SYM text_string  */
#line 11748 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 40323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1826: /* gorder_list: gorder_list ',' order_ident order_dir  */
#line 11758 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1827: /* gorder_list: order_ident order_dir  */
#line 11763 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1828: /* opt_glimit_clause: %empty  */
#line 11770 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 40347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1829: /* opt_glimit_clause: glimit_clause  */
#line 11771 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num) = 1; }
#line 40353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1830: /* glimit_clause_init: LIMIT  */
#line 11775 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 40359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1831: /* glimit_clause: glimit_clause_init glimit_options  */
#line 11780 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1832: /* glimit_options: limit_option  */
#line 11787 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 40378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1833: /* glimit_options: limit_option ',' limit_option  */
#line 11794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 40389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1834: /* glimit_options: limit_option OFFSET_SYM limit_option  */
#line 11801 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 40400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1835: /* $@157: %empty  */
#line 11813 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1836: /* in_sum_expr: opt_all $@157 expr  */
#line 11822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 40422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1837: /* cast_type: BINARY opt_field_length  */
#line 11830 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 40428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1838: /* $@158: %empty  */
#line 11832 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 40434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1839: /* cast_type: CHAR_SYM opt_field_length $@158 opt_binary  */
#line 11834 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 40440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1840: /* $@159: %empty  */
#line 11836 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 40446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1841: /* cast_type: VARCHAR field_length $@159 opt_binary  */
#line 11838 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 40452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1842: /* $@160: %empty  */
#line 11840 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 40458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1843: /* cast_type: VARCHAR2_ORACLE_SYM field_length $@160 opt_binary  */
#line 11842 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 40464 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1844: /* cast_type: NCHAR_SYM opt_field_length  */
#line 11844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 40473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1845: /* cast_type: cast_type_numeric  */
#line 11848 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 40479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1846: /* cast_type: cast_type_temporal  */
#line 11849 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 40485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1847: /* cast_type_numeric: INT_SYM  */
#line 11853 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 40491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1848: /* cast_type_numeric: SIGNED_SYM  */
#line 11854 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 40497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1849: /* cast_type_numeric: SIGNED_SYM INT_SYM  */
#line 11855 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 40503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1850: /* cast_type_numeric: UNSIGNED  */
#line 11856 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 40509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1851: /* cast_type_numeric: UNSIGNED INT_SYM  */
#line 11857 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 40515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1852: /* cast_type_numeric: DECIMAL_SYM float_options  */
#line 11858 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 40521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1853: /* cast_type_numeric: FLOAT_SYM  */
#line 11859 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 40527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1854: /* cast_type_numeric: DOUBLE_SYM opt_precision  */
#line 11860 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 40533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1855: /* cast_type_temporal: DATE_SYM  */
#line 11864 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 40539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1856: /* cast_type_temporal: TIME_SYM opt_field_length  */
#line 11865 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 40545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1857: /* cast_type_temporal: DATETIME opt_field_length  */
#line 11866 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 40551 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1858: /* opt_expr_list: %empty  */
#line 11870 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item_list)= NULL; }
#line 40557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1859: /* opt_expr_list: expr_list  */
#line 11871 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 40563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1860: /* expr_list: expr  */
#line 11876 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1861: /* expr_list: expr_list ',' expr  */
#line 11883 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 40583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1862: /* ident_list_arg: ident_list  */
#line 11890 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[0].item_list); }
#line 40589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1863: /* ident_list_arg: '(' ident_list ')'  */
#line 11891 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 40595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1864: /* ident_list: simple_ident  */
#line 11896 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1865: /* ident_list: ident_list ',' simple_ident  */
#line 11903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 40615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1866: /* when_list: WHEN_SYM expr THEN_SYM expr  */
#line 11911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1867: /* when_list: when_list WHEN_SYM expr THEN_SYM expr  */
#line 11920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 40639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1869: /* when_list_opt_else: when_list ELSE expr  */
#line 11931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 40649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1870: /* decode_when_list_oracle: expr ',' expr  */
#line 11940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 40662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1871: /* decode_when_list_oracle: decode_when_list_oracle ',' expr  */
#line 11949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1872: /* table_ref: table_factor  */
#line 11960 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1873: /* table_ref: join_table  */
#line 11962 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1874: /* join_table_list: derived_table_list  */
#line 11973 "/home/buildbot/git/sql/sql_yacc.yy"
                             { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 40697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1875: /* esc_table_ref: table_ref  */
#line 11984 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 40703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1876: /* esc_table_ref: '{' ident table_ref '}'  */
#line 11985 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 40709 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1877: /* derived_table_list: esc_table_ref  */
#line 11991 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.table_list)=(yyvsp[0].table_list); }
#line 40715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1878: /* derived_table_list: derived_table_list ',' esc_table_ref  */
#line 11993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 40723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1879: /* join_table: table_ref normal_join table_ref  */
#line 12011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));

            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 40734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1880: /* $@161: %empty  */
#line 12019 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1881: /* join_table: table_ref normal_join table_ref ON $@161 expr  */
#line 12027 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 40757 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1882: /* $@162: %empty  */
#line 12035 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 40765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1883: /* join_table: table_ref normal_join table_ref USING $@162 '(' using_list ')'  */
#line 12039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 40775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1884: /* join_table: table_ref NATURAL inner_join table_factor  */
#line 12045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 40785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1885: /* $@163: %empty  */
#line 12054 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1886: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_ref ON $@163 expr  */
#line 12062 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 40809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1887: /* $@164: %empty  */
#line 12070 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 40817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1888: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_factor $@164 USING '(' using_list ')'  */
#line 12074 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 40827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1889: /* join_table: table_ref NATURAL LEFT opt_outer JOIN_SYM table_factor  */
#line 12080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 40838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1890: /* $@165: %empty  */
#line 12090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1891: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_ref ON $@165 expr  */
#line 12098 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 40863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1892: /* $@166: %empty  */
#line 12107 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 40871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1893: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_factor $@166 USING '(' using_list ')'  */
#line 12111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 40882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1894: /* join_table: table_ref NATURAL RIGHT opt_outer JOIN_SYM table_factor  */
#line 12118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 40894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1895: /* inner_join: JOIN_SYM  */
#line 12129 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 40900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1896: /* inner_join: INNER_SYM JOIN_SYM  */
#line 12130 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 40906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1897: /* inner_join: STRAIGHT_JOIN  */
#line 12131 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 1; }
#line 40912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1898: /* normal_join: inner_join  */
#line 12135 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = (yyvsp[0].num); }
#line 40918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1899: /* normal_join: CROSS JOIN_SYM  */
#line 12136 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 40924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1900: /* opt_use_partition: %empty  */
#line 12144 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.string_list)= 0;}
#line 40930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1902: /* use_partition: PARTITION_SYM '(' using_list ')' have_partitioning  */
#line 12150 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 40938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1905: /* $@167: %empty  */
#line 12169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Select);
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 40948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1906: /* table_primary_ident: $@167 table_ident opt_use_partition opt_for_system_time_clause opt_table_alias opt_key_definition  */
#line 12175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                         Select->get_table_join_options(),
                                                         YYPS->m_lock_type,
                                                         YYPS->m_mdl_type,
                                                         Select->
                                                         pop_index_hints(),
                                                         (yyvsp[-3].string_list)))))
              MYSQL_YYABORT;
            TABLE_LIST *tl= (yyval.table_list);
            Select->add_joined_table(tl);
            if ((yyvsp[-2].num))
              tl->vers_conditions= Lex->vers_conditions;
          }
#line 40967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1907: /* table_primary_derived: '(' get_select_lex select_derived_union ')' opt_for_system_time_clause opt_table_alias  */
#line 12211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
                !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-3].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              lex->check_automatic_up(UNSPECIFIED_TYPE);
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new (thd->mem_root) Table_ident(unit);
              if (unlikely(ti == NULL))
                MYSQL_YYABORT;
              if (unlikely(!((yyval.table_list)= sel->add_table_to_list(thd,
                                                        ti, (yyvsp[0].lex_str_ptr), 0,
                                                        TL_READ,
                                                        MDL_SHARED_READ))))
                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (unlikely((yyvsp[0].lex_str_ptr) != NULL))
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-3].table_list);
            }
            /*
              Fields in derived table can be used in upper select in
              case of merge. We do not add HAVING fields because we do
              not merge such derived. We do not add union because
              also do not merge them
            */
            if ((yyval.table_list) && (yyval.table_list)->derived &&
                !(yyval.table_list)->derived->first_select()->next_select())
              (yyval.table_list)->select_lex->add_where_field((yyval.table_list)->derived->first_select());
            if ((yyvsp[-1].num))
            {
              MYSQL_YYABORT_UNLESS(!(yyvsp[-3].table_list));
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
            }
          }
#line 41036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1908: /* table_primary_derived: '(' get_select_lex subselect_start with_clause query_expression_body subselect_end ')' opt_for_system_time_clause opt_table_alias  */
#line 12279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sel= (yyvsp[-7].select_lex);
            SELECT_LEX_UNIT *unit= (yyvsp[-4].select_lex)->master_unit();
            Table_ident *ti= new (thd->mem_root) Table_ident(unit);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            (yyvsp[-4].select_lex)->set_with_clause((yyvsp[-5].with_clause));
            lex->current_select= sel;
            if (unlikely(!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                                      ti, (yyvsp[0].lex_str_ptr), 0,
                                                      TL_READ,
                                                      MDL_SHARED_READ))))
              MYSQL_YYABORT;
            sel->add_joined_table((yyval.table_list));
            if ((yyvsp[-1].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 41059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1910: /* select_derived_union: select_derived union_order_or_limit  */
#line 12321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 41071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1911: /* $@168: %empty  */
#line 12329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 41083 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1916: /* union_list_derived_part2: query_term_union_not_ready  */
#line 12343 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->pop_context(); }
#line 41089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1917: /* union_list_derived_part2: query_term_union_ready  */
#line 12344 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->pop_context(); }
#line 41095 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1918: /* $@169: %empty  */
#line 12345 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->pop_context(); }
#line 41101 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1921: /* select_init2_derived: select_part2_derived  */
#line 12356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_braces(0);
          }
#line 41109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1922: /* $@170: %empty  */
#line 12363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 41121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1923: /* select_part2_derived: $@170 opt_query_expression_options select_item_list  */
#line 12371 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 41129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1924: /* select_derived: get_select_lex_derived derived_table_list  */
#line 12379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            /* for normal joins, $2 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (unlikely(!((yyval.table_list)= (yyvsp[-1].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list)))
              MYSQL_YYABORT;
            if (unlikely(!(yyvsp[0].table_list) && (yyval.table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 41147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1925: /* derived_simple_table: derived_query_specification  */
#line 12395 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 41153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1926: /* derived_simple_table: derived_table_value_constructor  */
#line 12396 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 41159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1927: /* derived_query_specification: SELECT_SYM select_derived_init select_derived2  */
#line 12405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].num))
              Select->set_braces(1);
            (yyval.table_list)= NULL;
          }
#line 41169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1928: /* $@171: %empty  */
#line 12414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->tvc_start_derived())
              MYSQL_YYABORT;
          }
#line 41178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1929: /* derived_table_value_constructor: VALUES $@171 values_list  */
#line 12419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->tvc_finalize_derived())
              MYSQL_YYABORT;
            (yyval.table_list)= NULL;
          }
#line 41188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1930: /* $@172: %empty  */
#line 12428 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                unlikely(mysql_new_select(lex, 1, NULL)))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 41209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1931: /* $@173: %empty  */
#line 12445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 41217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1933: /* get_select_lex: %empty  */
#line 12452 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.select_lex)= Select; }
#line 41223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1934: /* get_select_lex_derived: get_select_lex  */
#line 12457 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely((yyvsp[0].select_lex)->init_nested_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 41233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1935: /* select_derived_init: %empty  */
#line 12465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            TABLE_LIST *embedding= lex->current_select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 41246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1936: /* opt_outer: %empty  */
#line 12476 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 41252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1937: /* opt_outer: OUTER  */
#line 12477 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 41258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1938: /* index_hint_clause: %empty  */
#line 12482 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 41266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1939: /* index_hint_clause: FOR_SYM JOIN_SYM  */
#line 12485 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 41272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1940: /* index_hint_clause: FOR_SYM ORDER_SYM BY  */
#line 12486 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 41278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1941: /* index_hint_clause: FOR_SYM GROUP_SYM BY  */
#line 12487 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 41284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1942: /* index_hint_type: FORCE_SYM  */
#line 12491 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 41290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1943: /* index_hint_type: IGNORE_SYM  */
#line 12492 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 41296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1944: /* $@174: %empty  */
#line 12497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 41304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1946: /* $@175: %empty  */
#line 12502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 41312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1951: /* $@176: %empty  */
#line 12515 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->alloc_index_hints(thd); }
#line 41318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1953: /* $@177: %empty  */
#line 12519 "/home/buildbot/git/sql/sql_yacc.yy"
          {  Select->clear_index_hints(); }
#line 41324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1955: /* opt_key_usage_list: %empty  */
#line 12524 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Select->add_index_hint(thd, NULL, 0); }
#line 41330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1956: /* opt_key_usage_list: key_usage_list  */
#line 12525 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 41336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1957: /* key_usage_element: ident  */
#line 12530 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 41342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1958: /* key_usage_element: PRIMARY_SYM  */
#line 12532 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 41348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1961: /* using_list: ident  */
#line 12542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 41363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1962: /* using_list: using_list ',' ident  */
#line 12553 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 41378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1963: /* interval: interval_time_stamp  */
#line 12566 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 41384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1964: /* interval: DAY_HOUR_SYM  */
#line 12567 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 41390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1965: /* interval: DAY_MICROSECOND_SYM  */
#line 12568 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 41396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1966: /* interval: DAY_MINUTE_SYM  */
#line 12569 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 41402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1967: /* interval: DAY_SECOND_SYM  */
#line 12570 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 41408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1968: /* interval: HOUR_MICROSECOND_SYM  */
#line 12571 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 41414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1969: /* interval: HOUR_MINUTE_SYM  */
#line 12572 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 41420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1970: /* interval: HOUR_SECOND_SYM  */
#line 12573 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 41426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1971: /* interval: MINUTE_MICROSECOND_SYM  */
#line 12574 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 41432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1972: /* interval: MINUTE_SECOND_SYM  */
#line 12575 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 41438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1973: /* interval: SECOND_MICROSECOND_SYM  */
#line 12576 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 41444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1974: /* interval: YEAR_MONTH_SYM  */
#line 12577 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 41450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1975: /* interval_time_stamp: DAY_SYM  */
#line 12581 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 41456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1976: /* interval_time_stamp: WEEK_SYM  */
#line 12582 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 41462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1977: /* interval_time_stamp: HOUR_SYM  */
#line 12583 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 41468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1978: /* interval_time_stamp: MINUTE_SYM  */
#line 12584 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 41474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1979: /* interval_time_stamp: MONTH_SYM  */
#line 12585 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 41480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1980: /* interval_time_stamp: QUARTER_SYM  */
#line 12586 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 41486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1981: /* interval_time_stamp: SECOND_SYM  */
#line 12587 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 41492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1982: /* interval_time_stamp: MICROSECOND_SYM  */
#line 12588 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 41498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1983: /* interval_time_stamp: YEAR_SYM  */
#line 12589 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 41504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1984: /* date_time_type: DATE_SYM  */
#line 12593 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 41510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1985: /* date_time_type: TIME_SYM  */
#line 12594 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 41516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1986: /* date_time_type: DATETIME  */
#line 12595 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 41522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1987: /* date_time_type: TIMESTAMP  */
#line 12596 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 41528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1991: /* opt_table_alias: %empty  */
#line 12606 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str_ptr)=0; }
#line 41534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1992: /* opt_table_alias: table_alias ident_table_alias  */
#line 12608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 41544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1995: /* opt_where_clause: %empty  */
#line 12621 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->where= 0; }
#line 41550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1996: /* $@178: %empty  */
#line 12623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_WHERE;
          }
#line 41558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1997: /* opt_where_clause: WHERE $@178 expr  */
#line 12627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 41570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 1999: /* $@179: %empty  */
#line 12639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_HAVING;
          }
#line 41578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2000: /* opt_having_clause: HAVING $@179 expr  */
#line 12643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 41590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2003: /* group_list: group_list ',' order_ident order_dir  */
#line 12663 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 41599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2004: /* group_list: order_ident order_dir  */
#line 12668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 41608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2005: /* olap_opt: %empty  */
#line 12675 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 41614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2006: /* olap_opt: WITH_CUBE_SYM  */
#line 12677 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 41635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2007: /* olap_opt: WITH_ROLLUP_SYM  */
#line 12694 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 41654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2008: /* opt_window_clause: %empty  */
#line 12716 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 41660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2009: /* opt_window_clause: WINDOW_SYM window_def_list  */
#line 12719 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 41666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2012: /* window_def: window_name AS window_spec  */
#line 12729 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 41679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2013: /* $@180: %empty  */
#line 12741 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->prepare_add_window_spec(thd); }
#line 41685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2015: /* opt_window_ref: %empty  */
#line 12748 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 41691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2016: /* opt_window_ref: ident  */
#line 12750 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 41701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2017: /* opt_window_partition_clause: %empty  */
#line 12758 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 41707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2019: /* opt_window_order_clause: %empty  */
#line 12763 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 41713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2021: /* opt_window_frame_clause: %empty  */
#line 12768 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 41719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2022: /* opt_window_frame_clause: window_frame_units window_frame_extent opt_window_frame_exclusion  */
#line 12770 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 41734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2023: /* window_frame_units: ROWS_SYM  */
#line 12783 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 41740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2024: /* window_frame_units: RANGE_SYM  */
#line 12784 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 41746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2025: /* window_frame_extent: window_frame_start  */
#line 12789 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 41760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2026: /* window_frame_extent: BETWEEN_SYM window_frame_bound AND_SYM window_frame_bound  */
#line 12799 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 41770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2027: /* window_frame_start: UNBOUNDED_SYM PRECEDING_SYM  */
#line 12808 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41781 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2028: /* window_frame_start: CURRENT_SYM ROW_SYM  */
#line 12815 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2029: /* window_frame_start: literal PRECEDING_SYM  */
#line 12822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2030: /* window_frame_bound: window_frame_start  */
#line 12831 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 41809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2031: /* window_frame_bound: UNBOUNDED_SYM FOLLOWING_SYM  */
#line 12833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2032: /* window_frame_bound: literal FOLLOWING_SYM  */
#line 12840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2033: /* opt_window_frame_exclusion: %empty  */
#line 12849 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2034: /* opt_window_frame_exclusion: EXCLUDE_SYM CURRENT_SYM ROW_SYM  */
#line 12851 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 41843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2035: /* opt_window_frame_exclusion: EXCLUDE_SYM GROUP_SYM  */
#line 12853 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 41849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2036: /* opt_window_frame_exclusion: EXCLUDE_SYM TIES_SYM  */
#line 12855 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 41855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2037: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_MARIADB_SYM  */
#line 12857 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2038: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_ORACLE_SYM  */
#line 12859 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2042: /* alter_order_item: simple_ident_nospvar order_dir  */
#line 12877 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 41877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2045: /* $@181: %empty  */
#line 12895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (unlikely(sel->linkage != GLOBAL_OPTIONS_TYPE &&
                         sel->olap != UNSPECIFIED_OLAP_TYPE &&
                         (sel->linkage != UNION_TYPE || sel->braces)))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE &&
                !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been
                created yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (unlikely(!first_sl->next_select() && first_sl->tvc &&
                           unit->add_fake_select_lex(thd)))
                 MYSQL_YYABORT;
              else if (unlikely(!unit->is_unit_op() &&
                                (first_sl->order_list.elements ||
                                 first_sl->select_limit) &&
                                unit->add_fake_select_lex(thd)))
                MYSQL_YYABORT;
            }
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
               /*
                 At this point we don't know yet whether this is the last
                 select in union or not, but we move ORDER BY to
                 fake_select_lex anyway. If there would be one more select
                 in union mysql_new_select will correctly throw error.
               */
               DBUG_ASSERT(sel->master_unit()->fake_select_lex);
               lex->current_select= sel->master_unit()->fake_select_lex;
               lex->push_context(&sel->master_unit()->fake_select_lex->context, thd->mem_root);
             }
          }
#line 41928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2046: /* order_clause: ORDER_SYM BY $@181 order_list  */
#line 12942 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->current_select ==
                Lex->current_select->master_unit()->fake_select_lex)
            {
              Lex->pop_context();
            }
          }
#line 41940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2047: /* order_list: order_list ',' order_ident order_dir  */
#line 12953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 41949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2048: /* order_list: order_ident order_dir  */
#line 12958 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 41958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2049: /* order_dir: %empty  */
#line 12965 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) =  1; }
#line 41964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2050: /* order_dir: ASC  */
#line 12966 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num) =1; }
#line 41970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2051: /* order_dir: DESC  */
#line 12967 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num) =0; }
#line 41976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2052: /* opt_limit_clause: %empty  */
#line 12971 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 41982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2053: /* opt_limit_clause: limit_clause  */
#line 12972 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 41988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2054: /* limit_clause_init: LIMIT  */
#line 12977 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_unit_op() && !sel->braces &&
                sel->master_unit()->fake_select_lex)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->current_select= sel->master_unit()->fake_select_lex;
              DBUG_ASSERT(Select);
            }
          }
#line 42003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2055: /* limit_clause: limit_clause_init limit_options  */
#line 12991 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            if (!sel->select_limit->basic_const_item() ||
                sel->select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 42014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2056: /* limit_clause: limit_clause_init limit_options ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12999 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 42022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2057: /* limit_clause: limit_clause_init ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 13003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 42030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2058: /* limit_options: limit_option  */
#line 13010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 42041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2059: /* limit_options: limit_option ',' limit_option  */
#line 13017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 42052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2060: /* limit_options: limit_option OFFSET_SYM limit_option  */
#line 13024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 42063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2061: /* limit_option: ident_cli  */
#line 13034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 42072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2062: /* limit_option: ident_cli '.' ident_cli  */
#line 13039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 42081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2063: /* limit_option: param_marker  */
#line 13044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 42089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2064: /* limit_option: ULONGLONG_NUM  */
#line 13048 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2065: /* limit_option: LONG_NUM  */
#line 13054 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2066: /* limit_option: NUM  */
#line 13060 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2067: /* limit_rows_option: limit_option  */
#line 13069 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 42128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2068: /* delete_limit_clause: %empty  */
#line 13077 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 42137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2069: /* delete_limit_clause: LIMIT limit_option  */
#line 13082 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 42148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2070: /* delete_limit_clause: LIMIT ROWS_SYM EXAMINED_SYM  */
#line 13088 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { thd->parse_error(); MYSQL_YYABORT; }
#line 42154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2071: /* delete_limit_clause: LIMIT limit_option ROWS_SYM EXAMINED_SYM  */
#line 13089 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { thd->parse_error(); MYSQL_YYABORT; }
#line 42160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2074: /* int_num: opt_plus NUM  */
#line 13098 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2075: /* int_num: '-' NUM  */
#line 13099 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2076: /* ulong_num: opt_plus NUM  */
#line 13103 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2077: /* ulong_num: HEX_NUM  */
#line 13104 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 42184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2078: /* ulong_num: opt_plus LONG_NUM  */
#line 13105 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2079: /* ulong_num: opt_plus ULONGLONG_NUM  */
#line 13106 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2080: /* ulong_num: opt_plus DECIMAL_NUM  */
#line 13107 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2081: /* ulong_num: opt_plus FLOAT_NUM  */
#line 13108 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42208 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2082: /* real_ulong_num: NUM  */
#line 13112 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42214 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2083: /* real_ulong_num: HEX_NUM  */
#line 13113 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 42220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2084: /* real_ulong_num: LONG_NUM  */
#line 13114 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2085: /* real_ulong_num: ULONGLONG_NUM  */
#line 13115 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2086: /* real_ulong_num: dec_num_error  */
#line 13116 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 42238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2087: /* longlong_num: opt_plus NUM  */
#line 13120 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2088: /* longlong_num: LONG_NUM  */
#line 13121 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2089: /* longlong_num: '-' NUM  */
#line 13122 "/home/buildbot/git/sql/sql_yacc.yy"
                          { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2090: /* longlong_num: '-' LONG_NUM  */
#line 13123 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2091: /* ulonglong_num: opt_plus NUM  */
#line 13127 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2092: /* ulonglong_num: opt_plus ULONGLONG_NUM  */
#line 13128 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2093: /* ulonglong_num: opt_plus LONG_NUM  */
#line 13129 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2094: /* ulonglong_num: opt_plus DECIMAL_NUM  */
#line 13130 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2095: /* ulonglong_num: opt_plus FLOAT_NUM  */
#line 13131 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42292 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2096: /* real_ulonglong_num: NUM  */
#line 13135 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2097: /* real_ulonglong_num: ULONGLONG_NUM  */
#line 13136 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2098: /* real_ulonglong_num: HEX_NUM  */
#line 13137 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 42310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2099: /* real_ulonglong_num: LONG_NUM  */
#line 13138 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 42316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2100: /* real_ulonglong_num: dec_num_error  */
#line 13139 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 42322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2101: /* dec_num_error: dec_num  */
#line 13144 "/home/buildbot/git/sql/sql_yacc.yy"
          { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 42328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2104: /* choice: ulong_num  */
#line 13153 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 42334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2105: /* choice: DEFAULT  */
#line 13154 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 42340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2106: /* bool: ulong_num  */
#line 13158 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 42346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2107: /* bool: TRUE_SYM  */
#line 13159 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1; }
#line 42352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2108: /* bool: FALSE_SYM  */
#line 13160 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 42358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2109: /* $@182: %empty  */
#line 13165 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            DBUG_ASSERT(&lex->select_lex == lex->current_select);

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so set expr_allows_subselect as false to disallow any subqueries
              further. Reset expr_allows_subselect back to true once the
              parameters are reduced.
            */
            Lex->expr_allows_subselect= false;
          }
#line 42388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2110: /* procedure_clause: PROCEDURE_SYM ident $@182 '(' procedure_list ')'  */
#line 13191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Subqueries are allowed from now.*/
            Lex->expr_allows_subselect= true;
          }
#line 42397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2111: /* procedure_list: %empty  */
#line 13198 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 42403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2112: /* procedure_list: procedure_list2  */
#line 13199 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 42409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2115: /* procedure_item: remember_name expr remember_end  */
#line 13209 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 42420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2116: /* $@183: %empty  */
#line 13218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 42432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2117: /* select_var_list_init: $@183 select_var_list  */
#line 13226 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2119: /* select_var_list: select_var_ident  */
#line 13231 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 42444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2120: /* select_var_ident: select_outvar  */
#line 13235 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 42465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2121: /* select_outvar: '@' ident_or_text  */
#line 13255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 42473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2122: /* select_outvar: ident_or_text  */
#line 13259 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 42482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2123: /* select_outvar: ident '.' ident  */
#line 13264 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 42491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2125: /* $@184: %empty  */
#line 13276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 42506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2126: /* $@185: %empty  */
#line 13287 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 42512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2128: /* into_destination: DUMPFILE TEXT_STRING_filesystem  */
#line 13290 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 42531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2129: /* into_destination: select_var_list_init  */
#line 13305 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 42539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2130: /* $@186: %empty  */
#line 13316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 42549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2131: /* do: DO_SYM $@186 expr_list  */
#line 13322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->insert_list= (yyvsp[0].item_list);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42559 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2132: /* $@187: %empty  */
#line 13335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2133: /* drop: DROP opt_temporary table_or_tables opt_if_exists $@187 table_list opt_lock_wait_timeout opt_restrict  */
#line 13342 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42576 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2134: /* drop: DROP INDEX_SYM opt_if_exists_table_element ident ON table_ident opt_lock_wait_timeout  */
#line 13344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
          }
#line 42597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2135: /* drop: DROP DATABASE opt_if_exists ident  */
#line 13361 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 42607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2136: /* drop: DROP FUNCTION_SYM opt_if_exists ident '.' ident  */
#line 13367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 42625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2137: /* drop: DROP FUNCTION_SYM opt_if_exists ident  */
#line 13381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 42644 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2138: /* drop: DROP PROCEDURE_SYM opt_if_exists sp_name  */
#line 13396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 42656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2139: /* drop: DROP USER_SYM opt_if_exists clear_privileges user_list  */
#line 13404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 42664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2140: /* drop: DROP ROLE_SYM opt_if_exists clear_privileges role_list  */
#line 13408 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 42672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2141: /* $@188: %empty  */
#line 13412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2142: /* drop: DROP VIEW_SYM opt_if_exists $@188 table_list opt_restrict  */
#line 13419 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42689 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2143: /* drop: DROP EVENT_SYM opt_if_exists sp_name  */
#line 13421 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 42698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2144: /* drop: DROP TRIGGER_SYM opt_if_exists sp_name  */
#line 13426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 42708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2145: /* drop: DROP TABLESPACE tablespace_name opt_ts_engine opt_ts_wait  */
#line 13432 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 42717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2146: /* drop: DROP LOGFILE_SYM GROUP_SYM logfile_group_name opt_ts_engine opt_ts_wait  */
#line 13437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 42726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2147: /* drop: DROP SERVER_SYM opt_if_exists ident_or_text  */
#line 13442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 42735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2148: /* $@189: %empty  */
#line 13448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2149: /* drop: DROP opt_temporary SEQUENCE_SYM opt_if_exists $@189 table_list  */
#line 13456 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2152: /* table_name: table_ident  */
#line 13466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2153: /* table_name_with_opt_use_partition: table_ident opt_use_partition  */
#line 13477 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 42779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2156: /* table_alias_ref: table_ident_opt_wild  */
#line 13495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2157: /* opt_if_exists_table_element: %empty  */
#line 13508 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 42802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2158: /* opt_if_exists_table_element: IF_SYM EXISTS  */
#line 13513 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 42811 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2159: /* opt_if_exists: %empty  */
#line 13521 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 42819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2160: /* opt_if_exists: IF_SYM EXISTS  */
#line 13525 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 42827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2161: /* opt_temporary: %empty  */
#line 13531 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 42833 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2162: /* opt_temporary: TEMPORARY  */
#line 13532 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 42839 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2163: /* $@190: %empty  */
#line 13540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 42850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2164: /* $@191: %empty  */
#line 13548 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 42859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2165: /* insert: INSERT $@190 insert_lock_option opt_ignore insert2 $@191 insert_field_spec opt_insert_update  */
#line 13553 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 42869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2166: /* $@192: %empty  */
#line 13562 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 42880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2167: /* $@193: %empty  */
#line 13569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 42889 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2168: /* replace: REPLACE $@192 replace_lock_option insert2 $@193 insert_field_spec  */
#line 13574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 42899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2169: /* insert_lock_option: %empty  */
#line 13583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 42912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2170: /* insert_lock_option: LOW_PRIORITY  */
#line 13591 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2171: /* insert_lock_option: DELAYED_SYM  */
#line 13593 "/home/buildbot/git/sql/sql_yacc.yy"
        {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 42929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2172: /* insert_lock_option: HIGH_PRIORITY  */
#line 13599 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 42935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2173: /* replace_lock_option: opt_low_priority  */
#line 13603 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 42941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2174: /* replace_lock_option: DELAYED_SYM  */
#line 13605 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 42951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2175: /* insert2: INTO insert_table  */
#line 13613 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 42957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2176: /* insert2: insert_table  */
#line 13614 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 42963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2177: /* insert_table: table_name_with_opt_use_partition  */
#line 13619 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 42974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2178: /* insert_field_spec: insert_values  */
#line 13628 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 42980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2179: /* insert_field_spec: '(' ')' insert_values  */
#line 13629 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 42986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2180: /* insert_field_spec: '(' fields ')' insert_values  */
#line 13630 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 42992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2181: /* $@194: %empty  */
#line 13632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2183: /* fields: fields ',' insert_ident  */
#line 13644 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2184: /* fields: insert_ident  */
#line 13645 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2185: /* insert_values: VALUES values_list  */
#line 13649 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 43022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2186: /* insert_values: VALUE_SYM values_list  */
#line 13650 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 43028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2187: /* insert_values: create_select_query_expression  */
#line 13651 "/home/buildbot/git/sql/sql_yacc.yy"
                                         {}
#line 43034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2192: /* ident_eq_value: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13666 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2193: /* equal: '='  */
#line 13675 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 43051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2194: /* equal: SET_VAR  */
#line 13676 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 43057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2195: /* opt_equal: %empty  */
#line 13680 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2196: /* opt_equal: equal  */
#line 13681 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 43069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2197: /* opt_with: opt_equal  */
#line 13685 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 43075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2198: /* opt_with: WITH  */
#line 13686 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 43081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2199: /* opt_by: opt_equal  */
#line 13690 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 43087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2200: /* opt_by: BY  */
#line 13691 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 43093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2201: /* $@195: %empty  */
#line 13696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 43102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2202: /* no_braces: '(' $@195 opt_values ')'  */
#line 13701 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2203: /* $@196: %empty  */
#line 13711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 43122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2204: /* no_braces_with_names: '(' $@196 opt_values_with_names ')'  */
#line 13716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2205: /* opt_values: %empty  */
#line 13725 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2207: /* opt_values_with_names: %empty  */
#line 13730 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2209: /* values: values ',' expr_or_ignore_or_default  */
#line 13736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2210: /* values: expr_or_ignore_or_default  */
#line 13741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2211: /* values_with_names: values_with_names ',' remember_name expr_or_ignore_or_default remember_end  */
#line 13749 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 43175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2212: /* values_with_names: remember_name expr_or_ignore_or_default remember_end  */
#line 13757 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 43187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2213: /* expr_or_ignore: expr  */
#line 13767 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)= (yyvsp[0].item);}
#line 43193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2214: /* expr_or_ignore: IGNORE_SYM  */
#line 13769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2215: /* expr_or_ignore_or_default: expr_or_ignore  */
#line 13777 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.item)= (yyvsp[0].item);}
#line 43209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2216: /* expr_or_ignore_or_default: DEFAULT  */
#line 13779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2218: /* $@197: %empty  */
#line 13788 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->duplicates= DUP_UPDATE; }
#line 43225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2219: /* $@198: %empty  */
#line 13790 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 43233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2220: /* opt_insert_update: ON DUPLICATE_SYM $@197 KEY_SYM UPDATE_SYM $@198 insert_update_list  */
#line 13794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= NO_MATTER;
          }
#line 43241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2221: /* $@199: %empty  */
#line 13803 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 43252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2222: /* $@200: %empty  */
#line 13811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *slex= &Lex->select_lex;
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (unlikely(slex->get_table_list()->derived))
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 43275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2223: /* update: UPDATE_SYM $@199 opt_low_priority opt_ignore join_table_list SET update_list $@200 opt_where_clause opt_order_clause delete_limit_clause  */
#line 13830 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 43284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2226: /* update_elem: simple_ident_nospvar equal DEFAULT  */
#line 13843 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 43295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2227: /* update_elem: simple_ident_nospvar equal expr_or_ignore  */
#line 13850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 43304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2230: /* insert_update_elem: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2231: /* opt_low_priority: %empty  */
#line 13872 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 43321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2232: /* opt_low_priority: LOW_PRIORITY  */
#line 13873 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 43327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2233: /* $@201: %empty  */
#line 13880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 43342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2234: /* delete: DELETE_SYM $@201 delete_part2  */
#line 13891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 43351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2235: /* opt_delete_system_time: %empty  */
#line 13899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 43359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2236: /* opt_delete_system_time: BEFORE_SYM SYSTEM_TIME_SYM history_point  */
#line 13903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 43367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2237: /* delete_part2: opt_delete_options single_multi  */
#line 13909 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 43373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2238: /* delete_part2: HISTORY_SYM delete_single_table opt_delete_system_time  */
#line 13911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
          }
#line 43381 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2239: /* delete_single_table: FROM table_ident opt_use_partition  */
#line 13918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 43397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2240: /* single_multi: delete_single_table opt_where_clause opt_order_clause delete_limit_clause opt_select_expressions  */
#line 13936 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 43403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2241: /* $@202: %empty  */
#line 13938 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 43413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2242: /* single_multi: table_wild_list $@202 FROM join_table_list opt_where_clause  */
#line 13944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 43422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2243: /* $@203: %empty  */
#line 13949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 43432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2244: /* single_multi: FROM table_alias_ref_list $@203 USING join_table_list opt_where_clause  */
#line 13955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 43443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2249: /* table_wild_one: ident opt_wild  */
#line 13975 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 43462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2250: /* table_wild_one: ident '.' ident opt_wild  */
#line 13990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 43481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2251: /* opt_wild: %empty  */
#line 14007 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2252: /* opt_wild: '.' '*'  */
#line 14008 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 43493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2253: /* opt_delete_options: %empty  */
#line 14012 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2254: /* opt_delete_options: opt_delete_option opt_delete_options  */
#line 14013 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 43505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2255: /* opt_delete_option: QUICK  */
#line 14017 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->options|= OPTION_QUICK; }
#line 43511 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2256: /* opt_delete_option: LOW_PRIORITY  */
#line 14018 "/home/buildbot/git/sql/sql_yacc.yy"
                       { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 43517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2257: /* opt_delete_option: IGNORE_SYM  */
#line 14019 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->ignore= 1; }
#line 43523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2258: /* $@204: %empty  */
#line 14024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 43538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2259: /* truncate: TRUNCATE_SYM $@204 opt_table_sym table_name opt_lock_wait_timeout  */
#line 14035 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 43550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2266: /* profile_def: CPU_SYM  */
#line 14059 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 43558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2267: /* profile_def: MEMORY_SYM  */
#line 14063 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 43566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2268: /* profile_def: BLOCK_SYM IO_SYM  */
#line 14067 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 43574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2269: /* profile_def: CONTEXT_SYM SWITCHES_SYM  */
#line 14071 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 43582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2270: /* profile_def: PAGE_SYM FAULTS_SYM  */
#line 14075 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 43590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2271: /* profile_def: IPC_SYM  */
#line 14079 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 43598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2272: /* profile_def: SWAPS_SYM  */
#line 14083 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 43606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2273: /* profile_def: SOURCE_SYM  */
#line 14087 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 43614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2274: /* profile_def: ALL  */
#line 14091 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 43622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2275: /* opt_profile_args: %empty  */
#line 14098 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
#line 43630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2276: /* opt_profile_args: FOR_SYM QUERY_SYM NUM  */
#line 14102 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 43638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2277: /* $@205: %empty  */
#line 14111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 43651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2278: /* show: SHOW $@205 show_param  */
#line 14120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 43659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2279: /* show_param: DATABASES wild_and_where  */
#line 14127 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 43670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2280: /* show_param: opt_full TABLES opt_db wild_and_where  */
#line 14134 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES)))
               MYSQL_YYABORT;
           }
#line 43682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2281: /* show_param: opt_full TRIGGERS_SYM opt_db wild_and_where  */
#line 14142 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TRIGGERS)))
               MYSQL_YYABORT;
           }
#line 43694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2282: /* show_param: EVENTS_SYM opt_db wild_and_where  */
#line 14150 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_EVENTS)))
               MYSQL_YYABORT;
           }
#line 43706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2283: /* show_param: TABLE_SYM STATUS_SYM opt_db wild_and_where  */
#line 14158 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLES)))
               MYSQL_YYABORT;
           }
#line 43718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2284: /* show_param: OPEN_SYM TABLES opt_db wild_and_where  */
#line 14166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].lex_str);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES)))
              MYSQL_YYABORT;
          }
#line 43730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2285: /* show_param: PLUGINS_SYM  */
#line 14174 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2286: /* show_param: PLUGINS_SYM SONAME_SYM TEXT_STRING_sys  */
#line 14181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2287: /* show_param: PLUGINS_SYM SONAME_SYM wild_and_where  */
#line 14188 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2288: /* show_param: ENGINE_SYM known_storage_engines show_engine_param  */
#line 14194 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 43768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2289: /* show_param: ENGINE_SYM ALL show_engine_param  */
#line 14196 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= NULL; }
#line 43774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2290: /* show_param: opt_full COLUMNS from_or_in table_ident opt_db wild_and_where  */
#line 14198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 43787 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2291: /* show_param: master_or_binary LOGS_SYM  */
#line 14207 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 43795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2292: /* show_param: SLAVE HOSTS_SYM  */
#line 14211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 43803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2293: /* $@206: %empty  */
#line 14215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 43812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2295: /* $@207: %empty  */
#line 14221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 43821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2297: /* show_param: keys_or_index from_or_in table_ident opt_db opt_where_clause  */
#line 14226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 43834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2298: /* show_param: opt_storage ENGINES_SYM  */
#line 14235 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 43845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2299: /* show_param: AUTHORS_SYM  */
#line 14242 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 43854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2300: /* show_param: CONTRIBUTORS_SYM  */
#line 14247 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 43863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2301: /* show_param: PRIVILEGES  */
#line 14252 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 43872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2302: /* show_param: COUNT_SYM '(' '*' ')' WARNINGS  */
#line 14257 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 43881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2303: /* show_param: COUNT_SYM '(' '*' ')' ERRORS  */
#line 14262 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 43890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2304: /* show_param: WARNINGS opt_limit_clause  */
#line 14267 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 43896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2305: /* show_param: ERRORS opt_limit_clause  */
#line 14269 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 43902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2306: /* show_param: PROFILES_SYM  */
#line 14271 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 43908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2307: /* show_param: PROFILE_SYM opt_profile_defs opt_profile_args opt_limit_clause  */
#line 14273 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 43919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2308: /* show_param: opt_var_type STATUS_SYM wild_and_where  */
#line 14280 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 43931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2309: /* show_param: opt_full PROCESSLIST_SYM  */
#line 14288 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 43937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2310: /* show_param: opt_var_type VARIABLES wild_and_where  */
#line 14290 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 43949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2311: /* show_param: charset wild_and_where  */
#line 14298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 43960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2312: /* show_param: COLLATION_SYM wild_and_where  */
#line 14305 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 43971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2313: /* show_param: GRANTS  */
#line 14312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 43983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2314: /* show_param: GRANTS FOR_SYM user_or_role clear_privileges  */
#line 14320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 43993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2315: /* show_param: CREATE DATABASE opt_if_not_exists ident  */
#line 14326 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 44002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2316: /* show_param: CREATE TABLE_SYM table_ident  */
#line 14331 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,0)))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 44014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2317: /* show_param: CREATE VIEW_SYM table_ident  */
#line 14339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 44026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2318: /* show_param: CREATE SEQUENCE_SYM table_ident  */
#line 14347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 44038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2319: /* show_param: MASTER_SYM STATUS_SYM  */
#line 14355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 44046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2320: /* show_param: ALL SLAVES STATUS_SYM  */
#line 14359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 44055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2321: /* show_param: SLAVE STATUS_SYM  */
#line 14364 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 44066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2322: /* show_param: SLAVE connection_name STATUS_SYM  */
#line 14371 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 44075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2323: /* show_param: CREATE PROCEDURE_SYM sp_name  */
#line 14376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 44086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2324: /* show_param: CREATE FUNCTION_SYM sp_name  */
#line 14383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 44097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2325: /* show_param: CREATE PACKAGE_MARIADB_SYM sp_name  */
#line 14390 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 44107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2326: /* show_param: CREATE PACKAGE_MARIADB_SYM BODY_MARIADB_SYM sp_name  */
#line 14396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 44117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2327: /* show_param: CREATE TRIGGER_SYM sp_name  */
#line 14402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 44127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2328: /* show_param: CREATE USER_SYM  */
#line 14408 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 44139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2329: /* show_param: CREATE USER_SYM user  */
#line 14416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 44148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2330: /* show_param: PROCEDURE_SYM STATUS_SYM wild_and_where  */
#line 14421 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 44159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2331: /* show_param: FUNCTION_SYM STATUS_SYM wild_and_where  */
#line 14428 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 44170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2332: /* show_param: PACKAGE_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 44181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2333: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 44192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2334: /* show_param: PROCEDURE_SYM CODE_SYM sp_name  */
#line 14449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 44201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2335: /* show_param: FUNCTION_SYM CODE_SYM sp_name  */
#line 14454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 44210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2336: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM CODE_SYM sp_name  */
#line 14459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 44219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2337: /* show_param: CREATE EVENT_SYM sp_name  */
#line 14464 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 44228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2338: /* show_param: describe_command FOR_SYM expr  */
#line 14469 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 44239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2339: /* show_param: IDENT_sys remember_tok_start wild_and_where  */
#line 14476 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 44262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2340: /* show_engine_param: STATUS_SYM  */
#line 14498 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 44268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2341: /* show_engine_param: MUTEX_SYM  */
#line 14500 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 44274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2342: /* show_engine_param: LOGS_SYM  */
#line 14502 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 44280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2347: /* opt_db: %empty  */
#line 14516 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= null_clex_str; }
#line 44286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2348: /* opt_db: from_or_in ident  */
#line 14517 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 44292 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2349: /* opt_full: %empty  */
#line 14521 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=0; }
#line 44298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2350: /* opt_full: FULL  */
#line 14522 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=1; }
#line 44304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2353: /* binlog_in: %empty  */
#line 14531 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = 0; }
#line 44310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2354: /* binlog_in: IN_SYM TEXT_STRING_sys  */
#line 14532 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 44316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2355: /* binlog_from: %empty  */
#line 14536 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = 4; /* skip magic number */ }
#line 44322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2356: /* binlog_from: FROM ulonglong_num  */
#line 14537 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 44328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2357: /* wild_and_where: %empty  */
#line 14541 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.simple_string)= 0; }
#line 44334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2358: /* wild_and_where: LIKE remember_tok_start TEXT_STRING_sys  */
#line 14543 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 44346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2359: /* wild_and_where: WHERE remember_tok_start expr  */
#line 14551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 44357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2360: /* $@208: %empty  */
#line 14562 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 44372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2361: /* describe: describe_command table_ident $@208 opt_describe_column  */
#line 14573 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 44380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2362: /* $@209: %empty  */
#line 14577 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_NORMAL; }
#line 44386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2363: /* describe: describe_command opt_extended_describe $@209 explainable_command  */
#line 14579 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
#line 44395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2371: /* analyze_stmt_command: ANALYZE_SYM opt_format_json explainable_command  */
#line 14600 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->analyze_stmt= true;
          }
#line 44403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2372: /* opt_extended_describe: EXTENDED_SYM  */
#line 14606 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_EXTENDED; }
#line 44409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2373: /* opt_extended_describe: PARTITIONS_SYM  */
#line 14607 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 44415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2374: /* opt_extended_describe: opt_format_json  */
#line 14608 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 44421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2375: /* opt_format_json: %empty  */
#line 14612 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2376: /* opt_format_json: FORMAT_SYM '=' ident_or_text  */
#line 14614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 44441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2377: /* opt_describe_column: %empty  */
#line 14626 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2378: /* opt_describe_column: text_string  */
#line 14627 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->wild= (yyvsp[0].string); }
#line 44453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2379: /* opt_describe_column: ident  */
#line 14629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 44465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2380: /* $@210: %empty  */
#line 14643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 44476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2381: /* flush: FLUSH_SYM opt_no_write_to_binlog $@210 flush_options  */
#line 14650 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2382: /* $@211: %empty  */
#line 14655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 44496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2383: /* flush_options: table_or_tables $@211 opt_table_list opt_flush_lock  */
#line 14665 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2385: /* opt_flush_lock: %empty  */
#line 14670 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2386: /* opt_flush_lock: flush_lock  */
#line 14672 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 44524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2387: /* flush_lock: WITH READ_SYM LOCK_SYM optional_flush_tables_arguments  */
#line 14687 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 44530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2388: /* $@212: %empty  */
#line 14689 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 44544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2389: /* flush_lock: FOR_SYM $@212 EXPORT_SYM  */
#line 14697 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 44550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2391: /* flush_options_list: flush_option  */
#line 14703 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2392: /* flush_option: ERROR_SYM LOGS_SYM  */
#line 14708 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 44562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2393: /* flush_option: ENGINE_SYM LOGS_SYM  */
#line 14710 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 44568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2394: /* flush_option: GENERAL LOGS_SYM  */
#line 14712 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 44574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2395: /* flush_option: SLOW LOGS_SYM  */
#line 14714 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 44580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2396: /* flush_option: BINARY LOGS_SYM opt_delete_gtid_domain  */
#line 14716 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 44586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2397: /* flush_option: RELAY LOGS_SYM optional_connection_name  */
#line 14718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 44598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2398: /* flush_option: QUERY_SYM CACHE_SYM  */
#line 14726 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 44604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2399: /* flush_option: HOSTS_SYM  */
#line 14728 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_HOSTS; }
#line 44610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2400: /* flush_option: PRIVILEGES  */
#line 14730 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 44616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2401: /* flush_option: LOGS_SYM  */
#line 14732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 44625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2402: /* flush_option: STATUS_SYM  */
#line 14737 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_STATUS; }
#line 44631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2403: /* flush_option: SLAVE optional_connection_name  */
#line 14739 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 44643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2404: /* flush_option: MASTER_SYM  */
#line 14747 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_MASTER; }
#line 44649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2405: /* flush_option: DES_KEY_FILE  */
#line 14749 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 44655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2406: /* flush_option: RESOURCES  */
#line 14751 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 44661 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2407: /* flush_option: IDENT_sys remember_tok_start  */
#line 14753 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 44679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2408: /* opt_table_list: %empty  */
#line 14769 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 44685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2409: /* opt_table_list: table_list  */
#line 14770 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 44691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2410: /* opt_delete_gtid_domain: %empty  */
#line 14774 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2411: /* opt_delete_gtid_domain: DELETE_DOMAIN_ID_SYM '=' '(' delete_domain_id_list ')'  */
#line 14776 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2415: /* delete_domain_id: ulonglong_num  */
#line 14786 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 44720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2416: /* optional_flush_tables_arguments: %empty  */
#line 14801 "/home/buildbot/git/sql/sql_yacc.yy"
                             {(yyval.num)= 0;}
#line 44726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2417: /* optional_flush_tables_arguments: AND_SYM DISABLE_SYM CHECKPOINT_SYM  */
#line 14802 "/home/buildbot/git/sql/sql_yacc.yy"
                                             {(yyval.num)= REFRESH_CHECKPOINT; }
#line 44732 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2418: /* $@213: %empty  */
#line 14807 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 44741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2419: /* reset: RESET_SYM $@213 reset_options  */
#line 14812 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2422: /* $@214: %empty  */
#line 14821 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_SLAVE; }
#line 44753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2423: /* reset_option: SLAVE $@214 optional_connection_name slave_reset_options  */
#line 14823 "/home/buildbot/git/sql/sql_yacc.yy"
                              { }
#line 44759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2424: /* $@215: %empty  */
#line 14825 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 44768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2426: /* reset_option: QUERY_SYM CACHE_SYM  */
#line 14830 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_QUERY_CACHE;}
#line 44774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2427: /* slave_reset_options: %empty  */
#line 14834 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= false; }
#line 44780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2428: /* slave_reset_options: ALL  */
#line 14835 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= true; }
#line 44786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2429: /* master_reset_options: %empty  */
#line 14839 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2430: /* master_reset_options: TO_SYM ulong_num  */
#line 14841 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 44800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2431: /* $@216: %empty  */
#line 14848 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 44810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2432: /* purge: PURGE $@216 purge_options  */
#line 14854 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44816 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2434: /* purge_option: TO_SYM TEXT_STRING_sys  */
#line 14863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 44824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2435: /* purge_option: BEFORE_SYM expr  */
#line 14867 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 44835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2436: /* $@217: %empty  */
#line 14879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 44847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2437: /* kill: KILL_SYM $@217 kill_type kill_option  */
#line 14887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 44855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2438: /* kill_type: %empty  */
#line 14893 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 44861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2439: /* kill_type: HARD_SYM  */
#line 14894 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 44867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2440: /* kill_type: SOFT_SYM  */
#line 14895 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 44873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2441: /* kill_option: opt_connection kill_expr  */
#line 14899 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_CONNECTION; }
#line 44879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2442: /* kill_option: QUERY_SYM kill_expr  */
#line 14900 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_QUERY; }
#line 44885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2443: /* kill_option: QUERY_SYM ID_SYM expr  */
#line 14902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 44895 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2444: /* opt_connection: %empty  */
#line 14910 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 44901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2445: /* opt_connection: CONNECTION_SYM  */
#line 14911 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 44907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2446: /* kill_expr: expr  */
#line 14916 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 44915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2447: /* kill_expr: USER_SYM user  */
#line 14920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 44924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2448: /* shutdown: SHUTDOWN  */
#line 14927 "/home/buildbot/git/sql/sql_yacc.yy"
                 { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 44930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2449: /* use: USE_SYM ident  */
#line 14934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].ident_sys);
          }
#line 44940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2450: /* $@218: %empty  */
#line 14945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            mysql_init_select(lex);

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 44956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2451: /* $@219: %empty  */
#line 14957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 44971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2452: /* $@220: %empty  */
#line 14968 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 44988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2453: /* $@221: %empty  */
#line 14981 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 44994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2454: /* load: LOAD data_or_xml $@218 load_data_lock opt_local INFILE TEXT_STRING_filesystem $@219 opt_duplicate INTO TABLE_SYM table_ident opt_use_partition $@220 opt_load_data_charset $@221 opt_xml_rows_identified_by opt_field_term opt_line_term opt_ignore_lines opt_field_or_var_spec opt_load_data_set_spec  */
#line 14985 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 45004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2455: /* data_or_xml: DATA_SYM  */
#line 14993 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 45010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2456: /* data_or_xml: XML_SYM  */
#line 14994 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 45016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2457: /* opt_local: %empty  */
#line 14998 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=0;}
#line 45022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2458: /* opt_local: LOCAL_SYM  */
#line 14999 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1;}
#line 45028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2459: /* load_data_lock: %empty  */
#line 15003 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 45034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2460: /* load_data_lock: CONCURRENT  */
#line 15005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 45046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2461: /* load_data_lock: LOW_PRIORITY  */
#line 15012 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 45052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2462: /* opt_duplicate: %empty  */
#line 15016 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->duplicates=DUP_ERROR; }
#line 45058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2463: /* opt_duplicate: REPLACE  */
#line 15017 "/home/buildbot/git/sql/sql_yacc.yy"
                  { Lex->duplicates=DUP_REPLACE; }
#line 45064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2464: /* opt_duplicate: IGNORE_SYM  */
#line 15018 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1; }
#line 45070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2469: /* field_term: TERMINATED BY text_string  */
#line 15033 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 45079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2470: /* field_term: OPTIONALLY ENCLOSED BY text_string  */
#line 15038 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 45090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2471: /* field_term: ENCLOSED BY text_string  */
#line 15045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 45099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2472: /* field_term: ESCAPED BY text_string  */
#line 15050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 45108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2477: /* line_term: TERMINATED BY text_string  */
#line 15068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 45117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2478: /* line_term: STARTING BY text_string  */
#line 15073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 45126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2479: /* opt_xml_rows_identified_by: %empty  */
#line 15080 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 45132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2480: /* opt_xml_rows_identified_by: ROWS_SYM IDENTIFIED_SYM BY text_string  */
#line 15082 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->line_term = (yyvsp[0].string); }
#line 45138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2482: /* opt_ignore_lines: IGNORE_SYM NUM lines_or_rows  */
#line 15088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 45147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2483: /* lines_or_rows: LINES  */
#line 15095 "/home/buildbot/git/sql/sql_yacc.yy"
                { }
#line 45153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2484: /* lines_or_rows: ROWS_SYM  */
#line 15096 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 45159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2485: /* opt_field_or_var_spec: %empty  */
#line 15100 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2486: /* opt_field_or_var_spec: '(' fields_or_vars ')'  */
#line 15101 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 45171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2487: /* opt_field_or_var_spec: '(' ')'  */
#line 15102 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 45177 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2488: /* fields_or_vars: fields_or_vars ',' field_or_var  */
#line 15107 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 45183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2489: /* fields_or_vars: field_or_var  */
#line 15109 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 45189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2490: /* field_or_var: simple_ident_nospvar  */
#line 15113 "/home/buildbot/git/sql/sql_yacc.yy"
                               {(yyval.item)= (yyvsp[0].item);}
#line 45195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2491: /* field_or_var: '@' ident_or_text  */
#line 15115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2492: /* opt_load_data_set_spec: %empty  */
#line 15123 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2493: /* opt_load_data_set_spec: SET load_data_set_list  */
#line 15124 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 45217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2496: /* load_data_set_elem: simple_ident_nospvar equal remember_name expr_or_ignore_or_default remember_end  */
#line 15134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 45229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2497: /* text_literal: TEXT_STRING  */
#line 15147 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 45238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2498: /* text_literal: NCHAR_STRING  */
#line 15152 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 45247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2499: /* text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 15157 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 45256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2500: /* text_literal: text_literal TEXT_STRING_literal  */
#line 15162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 45265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2501: /* text_string: TEXT_STRING_literal  */
#line 15170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 45277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2502: /* text_string: hex_or_bin_String  */
#line 15177 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.string)= (yyvsp[0].string); }
#line 45283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2503: /* hex_or_bin_String: HEX_NUM  */
#line 15183 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 45300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2504: /* hex_or_bin_String: HEX_STRING  */
#line 15196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 45313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2505: /* hex_or_bin_String: BIN_NUM  */
#line 15205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 45330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2506: /* param_marker: PARAM_MARKER  */
#line 15221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 45341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2507: /* param_marker: COLON_ORACLE_SYM ident_cli  */
#line 15228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 45351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2508: /* param_marker: COLON_ORACLE_SYM NUM  */
#line 15234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 45362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2509: /* signed_literal: '+' NUM_literal  */
#line 15243 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item) = (yyvsp[0].item_num); }
#line 45368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2510: /* signed_literal: '-' NUM_literal  */
#line 15245 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 45377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2511: /* literal: text_literal  */
#line 15252 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 45383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2512: /* literal: NUM_literal  */
#line 15253 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item) = (yyvsp[0].item_num); }
#line 45389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2513: /* literal: temporal_literal  */
#line 15254 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item)= (yyvsp[0].item); }
#line 45395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2514: /* literal: NULL_SYM  */
#line 15256 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 45413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2515: /* literal: FALSE_SYM  */
#line 15270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2516: /* literal: TRUE_SYM  */
#line 15276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2517: /* literal: HEX_NUM  */
#line 15282 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2518: /* literal: HEX_STRING  */
#line 15288 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2519: /* literal: BIN_NUM  */
#line 15294 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2520: /* literal: UNDERSCORE_CHARSET hex_or_bin_String  */
#line 15300 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 45483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2521: /* NUM_literal: NUM  */
#line 15319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 45497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2522: /* NUM_literal: LONG_NUM  */
#line 15329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 45511 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2523: /* NUM_literal: ULONGLONG_NUM  */
#line 15339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 45521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2524: /* NUM_literal: DECIMAL_NUM  */
#line 15345 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 45532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2525: /* NUM_literal: FLOAT_NUM  */
#line 15352 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 45542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2526: /* temporal_literal: DATE_SYM TEXT_STRING  */
#line 15362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATE,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 45554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2527: /* temporal_literal: TIME_SYM TEXT_STRING  */
#line 15370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_TIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 45566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2528: /* temporal_literal: TIMESTAMP TEXT_STRING  */
#line 15378 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATETIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 45578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2529: /* opt_with_clause: %empty  */
#line 15389 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.with_clause)= 0; }
#line 45584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2530: /* opt_with_clause: with_clause  */
#line 15391 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= (yyvsp[0].with_clause);
          }
#line 45592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2531: /* $@222: %empty  */
#line 15399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             Lex->derived_tables|= DERIVED_WITH;
             Lex->with_cte_resolution= true;
             Lex->curr_with_clause= with_clause;
             with_clause->add_to_list(&Lex->with_clauses_list,
                                      Lex->with_clauses_list_last_next);
          }
#line 45608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2532: /* with_clause: WITH opt_recursive $@222 with_list  */
#line 15411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 45617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2533: /* opt_recursive: %empty  */
#line 15419 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 0; }
#line 45623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2534: /* opt_recursive: RECURSIVE_SYM  */
#line 15420 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 45629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2537: /* $@223: %empty  */
#line 15433 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 45640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2538: /* with_list_element: with_element_head opt_with_column_list $@223 AS '(' remember_tok_start subselect remember_tok_end ')'  */
#line 15440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            char *spec_start= (yyvsp[-3].simple_string) + 1;
            With_element *elem= new With_element((yyvsp[-8].with_element_head), *(yyvsp[-7].lex_str_list), (yyvsp[-2].select_lex)->master_unit());
	    if (unlikely(elem == NULL) ||
                unlikely(Lex->curr_with_clause->add_with_element(elem)))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].simple_string),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 45659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2539: /* opt_with_column_list: %empty  */
#line 15459 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.lex_str_list)= NULL; }
#line 45665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2540: /* opt_with_column_list: '(' with_column_list ')'  */
#line 15461 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.lex_str_list)= NULL; }
#line 45671 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2541: /* with_column_list: ident  */
#line 15467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 45680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2542: /* with_column_list: with_column_list ',' ident  */
#line 15472 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 45689 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2543: /* with_element_head: ident  */
#line 15481 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING *name=
              (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(name);
            if ((yyval.with_element_head) == NULL)
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 45704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2544: /* insert_ident: simple_ident_nospvar  */
#line 15500 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.item)=(yyvsp[0].item); }
#line 45710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2545: /* insert_ident: table_wild  */
#line 15501 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.item)=(yyvsp[0].item); }
#line 45716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2546: /* table_wild: ident '.' '*'  */
#line 15506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2547: /* table_wild: ident '.' ident '.' '*'  */
#line 15511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2548: /* select_sublist_qualified_asterisk: ident_cli '.' '*'  */
#line 15519 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2549: /* select_sublist_qualified_asterisk: ident_cli '.' ident_cli '.' '*'  */
#line 15524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2550: /* order_ident: expr  */
#line 15531 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 45758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2551: /* simple_ident: ident_cli  */
#line 15537 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2552: /* simple_ident: ident_cli '.' ident_cli  */
#line 15542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2553: /* simple_ident: '.' ident_cli '.' ident_cli  */
#line 15547 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2554: /* simple_ident: ident_cli '.' ident_cli '.' ident_cli  */
#line 15553 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2555: /* simple_ident: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2556: /* simple_ident_nospvar: ident  */
#line 15566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2557: /* simple_ident_nospvar: ident '.' ident  */
#line 15571 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2558: /* simple_ident_nospvar: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2559: /* simple_ident_nospvar: '.' ident '.' ident  */
#line 15581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2560: /* simple_ident_nospvar: ident '.' ident '.' ident  */
#line 15587 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2561: /* field_ident: ident  */
#line 15594 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2562: /* field_ident: ident '.' ident '.' ident  */
#line 15596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 45871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2563: /* field_ident: ident '.' ident  */
#line 15607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 45883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2564: /* field_ident: '.' ident  */
#line 15614 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45889 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2565: /* table_ident: ident  */
#line 15619 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2566: /* table_ident: ident '.' ident  */
#line 15625 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2567: /* table_ident: '.' ident  */
#line 15631 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2568: /* table_ident_opt_wild: ident opt_wild  */
#line 15641 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2569: /* table_ident_opt_wild: ident '.' ident opt_wild  */
#line 15647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2570: /* table_ident_nodb: ident  */
#line 15656 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2575: /* ident_cli: keyword_ident  */
#line 15672 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 45957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2576: /* IDENT_sys: IDENT_cli  */
#line 15677 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 45966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2577: /* TEXT_STRING_sys: TEXT_STRING  */
#line 15685 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2578: /* TEXT_STRING_literal: TEXT_STRING  */
#line 15693 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2579: /* TEXT_STRING_filesystem: TEXT_STRING  */
#line 15701 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2581: /* ident_table_alias: keyword_table_alias  */
#line 15710 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 46002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2583: /* ident_set_usual_case: keyword_set_usual_case  */
#line 15719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 46011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2585: /* ident_sysvar_name: keyword_sysvar_name  */
#line 15728 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 46020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2586: /* ident_sysvar_name: TEXT_STRING_sys  */
#line 15733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 46029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2588: /* ident: keyword_ident  */
#line 15743 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 46038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2590: /* label_ident: keyword_label  */
#line 15752 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 46047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2591: /* ident_or_text: ident  */
#line 15759 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 46053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2592: /* ident_or_text: TEXT_STRING_sys  */
#line 15760 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 46059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2593: /* ident_or_text: LEX_HOSTNAME  */
#line 15761 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 46065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2594: /* user_maybe_role: ident_or_text  */
#line 15766 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);
            (yyval.lex_user)->host= null_clex_str; // User or Role, see get_current_user()
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 46082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2595: /* user_maybe_role: ident_or_text '@' ident_or_text  */
#line 15779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 46116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2596: /* user_maybe_role: CURRENT_USER optional_braces  */
#line 15809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->plugin= empty_clex_str;
            (yyval.lex_user)->auth= empty_clex_str;
          }
#line 46128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 2599: /* user: user_maybe_role  */
#line 15821 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 46138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3073: /* $@224: %empty  */
#line 16427 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 46149 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3074: /* set: SET $@224 start_option_value_list  */
#line 16434 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 46158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3075: /* $@225: %empty  */
#line 16439 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_init();
          }
#line 46166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3076: /* $@226: %empty  */
#line 16443 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
          }
#line 46178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3077: /* set: SET STATEMENT_SYM $@225 set_stmt_option_value_following_option_type_list $@226 FOR_SYM verb_clause  */
#line 16451 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3080: /* $@227: %empty  */
#line 16467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3082: /* $@228: %empty  */
#line 16473 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= OPT_DEFAULT;
          }
#line 46201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3083: /* start_option_value_list: TRANSACTION_SYM $@228 transaction_characteristics  */
#line 16477 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3084: /* $@229: %empty  */
#line 16482 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 46218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3086: /* $@230: %empty  */
#line 16492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3088: /* start_option_value_list_following_option_type: TRANSACTION_SYM transaction_characteristics  */
#line 16498 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3091: /* $@231: %empty  */
#line 16512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 46244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3092: /* option_value_list: $@231 option_value  */
#line 16516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3093: /* $@232: %empty  */
#line 16521 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 46261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3094: /* option_value_list: option_value_list ',' $@232 option_value  */
#line 16525 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3095: /* $@233: %empty  */
#line 16534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 46278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3098: /* option_type: GLOBAL_SYM  */
#line 16542 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 46284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3099: /* option_type: LOCAL_SYM  */
#line 16543 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 46290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3100: /* option_type: SESSION_SYM  */
#line 16544 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 46296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3101: /* opt_var_type: %empty  */
#line 16548 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 46302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3102: /* opt_var_type: GLOBAL_SYM  */
#line 16549 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 46308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3103: /* opt_var_type: LOCAL_SYM  */
#line 16550 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 46314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3104: /* opt_var_type: SESSION_SYM  */
#line 16551 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 46320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3105: /* opt_var_ident_type: %empty  */
#line 16555 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 46326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3106: /* opt_var_ident_type: GLOBAL_SYM '.'  */
#line 16556 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 46332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3107: /* opt_var_ident_type: LOCAL_SYM '.'  */
#line 16557 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 46338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3108: /* opt_var_ident_type: SESSION_SYM '.'  */
#line 16558 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 46344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3109: /* option_value_following_option_type: ident equal set_expr_or_default  */
#line 16564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3110: /* option_value_following_option_type: ident '.' ident equal set_expr_or_default  */
#line 16569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3111: /* option_value_following_option_type: DEFAULT '.' ident equal set_expr_or_default  */
#line 16574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3112: /* option_value_no_option_type: ident_set_usual_case equal set_expr_or_default  */
#line 16583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3113: /* option_value_no_option_type: ident '.' ident equal set_expr_or_default  */
#line 16588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3114: /* option_value_no_option_type: DEFAULT '.' ident equal set_expr_or_default  */
#line 16593 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3115: /* option_value_no_option_type: '@' ident_or_text equal expr  */
#line 16598 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46407 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3116: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name equal set_expr_or_default  */
#line 16603 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3117: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name '.' ident equal set_expr_or_default  */
#line 16608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3118: /* option_value_no_option_type: '@' '@' opt_var_ident_type DEFAULT '.' ident equal set_expr_or_default  */
#line 16613 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3119: /* option_value_no_option_type: charset old_or_new_charset_name_or_default  */
#line 16618 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 46452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3120: /* option_value_no_option_type: NAMES_SYM equal expr  */
#line 16632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 46467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3121: /* option_value_no_option_type: NAMES_SYM charset_name_or_default opt_collate  */
#line 16643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3122: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role  */
#line 16662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 46512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3123: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role FOR_SYM user  */
#line 16680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 46528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3124: /* option_value_no_option_type: ROLE_SYM ident_or_text  */
#line 16692 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3125: /* option_value_no_option_type: ROLE_SYM equal set_expr_or_default  */
#line 16700 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 46549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3126: /* option_value_no_option_type: PASSWORD_SYM opt_for_user text_or_password  */
#line 16705 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 46565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3131: /* transaction_access_mode: transaction_access_mode_types  */
#line 16728 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3132: /* isolation_level: ISOLATION LEVEL_SYM isolation_types  */
#line 16747 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3133: /* transaction_access_mode_types: READ_SYM ONLY_SYM  */
#line 16764 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= true; }
#line 46610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3134: /* transaction_access_mode_types: READ_SYM WRITE_SYM  */
#line 16765 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= false; }
#line 46616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3135: /* isolation_types: READ_SYM UNCOMMITTED_SYM  */
#line 16769 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 46622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3136: /* isolation_types: READ_SYM COMMITTED_SYM  */
#line 16770 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 46628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3137: /* isolation_types: REPEATABLE_SYM READ_SYM  */
#line 16771 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 46634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3138: /* isolation_types: SERIALIZABLE_SYM  */
#line 16772 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 46640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3139: /* opt_for_user: equal  */
#line 16777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->plugin= empty_clex_str;
            lex->definer->auth=   empty_clex_str;
          }
#line 46659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3140: /* opt_for_user: FOR_SYM user equal  */
#line 16791 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->definer= (yyvsp[-1].lex_user); }
#line 46665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3141: /* text_or_password: TEXT_STRING  */
#line 16795 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->definer->pwhash= (yyvsp[0].lex_string_with_metadata);}
#line 46671 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3142: /* text_or_password: PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 16796 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata); }
#line 46677 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3143: /* text_or_password: OLD_PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 16798 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->pwhash.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->pwhash.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 46688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3144: /* set_expr_or_default: expr  */
#line 16807 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 46694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3145: /* set_expr_or_default: DEFAULT  */
#line 16808 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.item)=0; }
#line 46700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3146: /* set_expr_or_default: ON  */
#line 16810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3147: /* set_expr_or_default: ALL  */
#line 16816 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3148: /* set_expr_or_default: BINARY  */
#line 16822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3149: /* $@234: %empty  */
#line 16833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 46742 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3150: /* lock: LOCK_SYM table_or_tables $@234 table_lock_list opt_lock_wait_timeout  */
#line 16841 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3151: /* opt_lock_wait_timeout: %empty  */
#line 16846 "/home/buildbot/git/sql/sql_yacc.yy"
        {}
#line 46754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3152: /* opt_lock_wait_timeout: WAIT_SYM ulong_num  */
#line 16848 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 46764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3153: /* opt_lock_wait_timeout: NOWAIT_SYM  */
#line 16854 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 46774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3154: /* table_or_tables: TABLE_SYM  */
#line 16862 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 46780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3155: /* table_or_tables: TABLES  */
#line 16863 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 46786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3158: /* table_lock: table_ident opt_table_alias lock_option  */
#line 16873 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 46806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3159: /* lock_option: READ_SYM  */
#line 16891 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 46812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3160: /* lock_option: WRITE_SYM  */
#line 16892 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 46818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3161: /* lock_option: WRITE_SYM CONCURRENT  */
#line 16894 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 46826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3162: /* lock_option: LOW_PRIORITY WRITE_SYM  */
#line 16898 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 46832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3163: /* lock_option: READ_SYM LOCAL_SYM  */
#line 16899 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ; }
#line 46838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3164: /* $@235: %empty  */
#line 16904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 46850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3165: /* unlock: UNLOCK_SYM $@235 table_or_tables  */
#line 16912 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3166: /* handler: HANDLER_SYM table_ident OPEN_SYM opt_table_alias  */
#line 16921 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr),
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 46870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3167: /* handler: HANDLER_SYM table_ident_nodb CLOSE_SYM  */
#line 16931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 46884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3168: /* $@236: %empty  */
#line 16941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 46906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3169: /* handler: HANDLER_SYM table_ident_nodb READ_SYM $@236 handler_read_or_scan opt_where_clause opt_limit_clause  */
#line 16959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (unlikely(Lex->uses_stored_routines()))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 46921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3170: /* handler_read_or_scan: handler_scan_function  */
#line 16972 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= null_clex_str; }
#line 46927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3171: /* handler_read_or_scan: ident handler_rkey_function  */
#line 16973 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= (yyvsp[-1].ident_sys); }
#line 46933 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3172: /* handler_scan_function: FIRST_SYM  */
#line 16977 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 46939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3173: /* handler_scan_function: NEXT_SYM  */
#line 16978 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 46945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3174: /* handler_rkey_function: FIRST_SYM  */
#line 16982 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 46951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3175: /* handler_rkey_function: NEXT_SYM  */
#line 16983 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 46957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3176: /* handler_rkey_function: PREV_SYM  */
#line 16984 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RPREV;  }
#line 46963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3177: /* handler_rkey_function: LAST_SYM  */
#line 16985 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RLAST;  }
#line 46969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3178: /* $@237: %empty  */
#line 16987 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 46981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3179: /* handler_rkey_function: handler_rkey_mode $@237 '(' values ')'  */
#line 16995 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3180: /* handler_rkey_mode: '='  */
#line 16999 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 46993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3181: /* handler_rkey_mode: GE  */
#line 17000 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 46999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3182: /* handler_rkey_mode: LE  */
#line 17001 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 47005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3183: /* handler_rkey_mode: '>'  */
#line 17002 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 47011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3184: /* handler_rkey_mode: '<'  */
#line 17003 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 47017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3185: /* revoke: REVOKE clear_privileges revoke_command  */
#line 17010 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3186: /* revoke_command: grant_privileges ON opt_table grant_ident FROM user_and_role_list  */
#line 17015 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 47033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3187: /* revoke_command: grant_privileges ON FUNCTION_SYM grant_ident FROM user_and_role_list  */
#line 17021 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 47043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3188: /* revoke_command: grant_privileges ON PROCEDURE_SYM grant_ident FROM user_and_role_list  */
#line 17027 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 47053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3189: /* revoke_command: grant_privileges ON PACKAGE_ORACLE_SYM grant_ident FROM user_and_role_list  */
#line 17034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 47063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3190: /* revoke_command: grant_privileges ON PACKAGE_ORACLE_SYM BODY_ORACLE_SYM grant_ident FROM user_and_role_list  */
#line 17041 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 47073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3191: /* revoke_command: ALL opt_privileges ',' GRANT OPTION FROM user_and_role_list  */
#line 17047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 47081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3192: /* revoke_command: PROXY_SYM ON user FROM user_list  */
#line 17051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 47092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3193: /* revoke_command: admin_option_for_role FROM user_and_role_list  */
#line 17058 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3194: /* admin_option_for_role: ADMIN_SYM OPTION FOR_SYM grant_role  */
#line 17067 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 47108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3195: /* admin_option_for_role: grant_role  */
#line 17069 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 47114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3196: /* grant: GRANT clear_privileges grant_command  */
#line 17074 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3197: /* grant_command: grant_privileges ON opt_table grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 47130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3198: /* grant_command: grant_privileges ON FUNCTION_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17087 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 47140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3199: /* grant_command: grant_privileges ON PROCEDURE_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 47150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3200: /* grant_command: grant_privileges ON PACKAGE_ORACLE_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 47160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3201: /* grant_command: grant_privileges ON PACKAGE_ORACLE_SYM BODY_ORACLE_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17108 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 47170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3202: /* grant_command: PROXY_SYM ON user TO_SYM grant_list opt_grant_option  */
#line 17114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 47181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3203: /* grant_command: grant_role TO_SYM grant_list opt_with_admin_option  */
#line 17121 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3204: /* opt_with_admin: %empty  */
#line 17132 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = 0; }
#line 47199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3205: /* opt_with_admin: WITH ADMIN_SYM user_or_role  */
#line 17133 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = (yyvsp[0].lex_user); }
#line 47205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3206: /* opt_with_admin_option: %empty  */
#line 17137 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= false; }
#line 47211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3207: /* opt_with_admin_option: WITH ADMIN_SYM OPTION  */
#line 17138 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= true; }
#line 47217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3208: /* role_list: grant_role  */
#line 17143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3209: /* role_list: role_list ',' grant_role  */
#line 17148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3210: /* current_role: CURRENT_ROLE optional_braces  */
#line 17156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->reset_auth();
          }
#line 47246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3211: /* grant_role: ident_or_text  */
#line 17166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 47269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3215: /* grant_privileges: object_privilege_list  */
#line 17193 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 47275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3216: /* grant_privileges: ALL opt_privileges  */
#line 17195 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 47284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3221: /* $@238: %empty  */
#line 17213 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->which_columns = SELECT_ACL;}
#line 47290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3222: /* object_privilege: SELECT_SYM $@238 opt_column_list  */
#line 17214 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 47296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3223: /* $@239: %empty  */
#line 17216 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->which_columns = INSERT_ACL;}
#line 47302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3224: /* object_privilege: INSERT $@239 opt_column_list  */
#line 17217 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 47308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3225: /* $@240: %empty  */
#line 17219 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->which_columns = UPDATE_ACL; }
#line 47314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3226: /* object_privilege: UPDATE_SYM $@240 opt_column_list  */
#line 17220 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 47320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3227: /* $@241: %empty  */
#line 17222 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->which_columns = REFERENCES_ACL;}
#line 47326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3228: /* object_privilege: REFERENCES $@241 opt_column_list  */
#line 17223 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 47332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3229: /* object_privilege: DELETE_SYM  */
#line 17224 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= DELETE_ACL;}
#line 47338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3230: /* object_privilege: USAGE  */
#line 17225 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 47344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3231: /* object_privilege: INDEX_SYM  */
#line 17226 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= INDEX_ACL;}
#line 47350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3232: /* object_privilege: ALTER  */
#line 17227 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= ALTER_ACL;}
#line 47356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3233: /* object_privilege: CREATE  */
#line 17228 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= CREATE_ACL;}
#line 47362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3234: /* object_privilege: DROP  */
#line 17229 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= DROP_ACL;}
#line 47368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3235: /* object_privilege: EXECUTE_SYM  */
#line 17230 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= EXECUTE_ACL;}
#line 47374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3236: /* object_privilege: RELOAD  */
#line 17231 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= RELOAD_ACL;}
#line 47380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3237: /* object_privilege: SHUTDOWN  */
#line 17232 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= SHUTDOWN_ACL;}
#line 47386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3238: /* object_privilege: PROCESS  */
#line 17233 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= PROCESS_ACL;}
#line 47392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3239: /* object_privilege: FILE_SYM  */
#line 17234 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= FILE_ACL;}
#line 47398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3240: /* object_privilege: GRANT OPTION  */
#line 17235 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= GRANT_ACL;}
#line 47404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3241: /* object_privilege: SHOW DATABASES  */
#line 17236 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= SHOW_DB_ACL;}
#line 47410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3242: /* object_privilege: SUPER_SYM  */
#line 17237 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= SUPER_ACL;}
#line 47416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3243: /* object_privilege: CREATE TEMPORARY TABLES  */
#line 17238 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= CREATE_TMP_ACL;}
#line 47422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3244: /* object_privilege: LOCK_SYM TABLES  */
#line 17239 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= LOCK_TABLES_ACL; }
#line 47428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3245: /* object_privilege: REPLICATION SLAVE  */
#line 17240 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= REPL_SLAVE_ACL; }
#line 47434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3246: /* object_privilege: REPLICATION CLIENT_SYM  */
#line 17241 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= REPL_CLIENT_ACL; }
#line 47440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3247: /* object_privilege: CREATE VIEW_SYM  */
#line 17242 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= CREATE_VIEW_ACL; }
#line 47446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3248: /* object_privilege: SHOW VIEW_SYM  */
#line 17243 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= SHOW_VIEW_ACL; }
#line 47452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3249: /* object_privilege: CREATE ROUTINE_SYM  */
#line 17244 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= CREATE_PROC_ACL; }
#line 47458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3250: /* object_privilege: ALTER ROUTINE_SYM  */
#line 17245 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= ALTER_PROC_ACL; }
#line 47464 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3251: /* object_privilege: CREATE USER_SYM  */
#line 17246 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= CREATE_USER_ACL; }
#line 47470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3252: /* object_privilege: EVENT_SYM  */
#line 17247 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= EVENT_ACL;}
#line 47476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3253: /* object_privilege: TRIGGER_SYM  */
#line 17248 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= TRIGGER_ACL; }
#line 47482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3254: /* object_privilege: CREATE TABLESPACE  */
#line 17249 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 47488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3255: /* object_privilege: DELETE_SYM HISTORY_SYM  */
#line 17250 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Lex->grant |= DELETE_HISTORY_ACL; }
#line 47494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3256: /* opt_and: %empty  */
#line 17254 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3257: /* opt_and: AND_SYM  */
#line 17255 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 47506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3260: /* require_list_element: SUBJECT_SYM TEXT_STRING  */
#line 17265 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->x509_subject))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->x509_subject=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 47517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3261: /* require_list_element: ISSUER_SYM TEXT_STRING  */
#line 17272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->x509_issuer))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->x509_issuer=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 47528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3262: /* require_list_element: CIPHER_SYM TEXT_STRING  */
#line 17279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->ssl_cipher))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->ssl_cipher=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 47539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3263: /* grant_ident: '*'  */
#line 17289 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->current_select->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 47553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3264: /* grant_ident: ident '.' '*'  */
#line 17299 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->current_select->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 47566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3265: /* grant_ident: '*' '.' '*'  */
#line 17308 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->current_select->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 47579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3266: /* grant_ident: table_ident  */
#line 17317 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 47593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3267: /* user_list: user  */
#line 17330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3268: /* user_list: user_list ',' user  */
#line 17335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3269: /* grant_list: grant_user  */
#line 17343 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3270: /* grant_list: grant_list ',' grant_user  */
#line 17348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3271: /* user_and_role_list: user_or_role  */
#line 17356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3272: /* user_and_role_list: user_and_role_list ',' user_or_role  */
#line 17361 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3277: /* grant_user: user IDENTIFIED_SYM BY TEXT_STRING  */
#line 17372 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->pwtext= (yyvsp[0].lex_string_with_metadata);
            if (unlikely(Lex->sql_command == SQLCOM_REVOKE))
              MYSQL_YYABORT;
          }
#line 47658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3278: /* grant_user: user IDENTIFIED_SYM BY PASSWORD_SYM TEXT_STRING  */
#line 17379 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->pwhash= (yyvsp[0].lex_string_with_metadata);
          }
#line 47667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3279: /* grant_user: user IDENTIFIED_SYM via_or_with ident_or_text  */
#line 17384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_clex_str;
          }
#line 47677 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3280: /* grant_user: user IDENTIFIED_SYM via_or_with ident_or_text using_or_as TEXT_STRING_sys  */
#line 17390 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
          }
#line 47687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3281: /* grant_user: user_or_role  */
#line 17396 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 47693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3282: /* opt_column_list: %empty  */
#line 17401 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 47702 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3286: /* column_list_id: ident  */
#line 17415 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 47732 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3288: /* opt_require_clause: REQUIRE_SYM require_list  */
#line 17445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 47740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3289: /* opt_require_clause: REQUIRE_SYM SSL_SYM  */
#line 17449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 47748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3290: /* opt_require_clause: REQUIRE_SYM X509_SYM  */
#line 17453 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 47756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3291: /* opt_require_clause: REQUIRE_SYM NONE_SYM  */
#line 17457 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 47764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3292: /* resource_option: MAX_QUERIES_PER_HOUR ulong_num  */
#line 17464 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 47774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3293: /* resource_option: MAX_UPDATES_PER_HOUR ulong_num  */
#line 17470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 47784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3294: /* resource_option: MAX_CONNECTIONS_PER_HOUR ulong_num  */
#line 17476 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 47794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3295: /* resource_option: MAX_USER_CONNECTIONS_SYM int_num  */
#line 17482 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 47804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3296: /* resource_option: MAX_STATEMENT_TIME_SYM NUM_literal  */
#line 17488 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.max_statement_time= (yyvsp[0].item_num)->val_real();
            lex->mqh.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 47814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3297: /* resource_option_list: resource_option_list resource_option  */
#line 17496 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 47820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3298: /* resource_option_list: resource_option  */
#line 17497 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 47826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3299: /* opt_resource_options: %empty  */
#line 17501 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3301: /* opt_grant_options: %empty  */
#line 17507 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3302: /* opt_grant_options: WITH grant_option_list  */
#line 17508 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 47844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3303: /* opt_grant_option: %empty  */
#line 17512 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3304: /* opt_grant_option: WITH GRANT OPTION  */
#line 17513 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->grant |= GRANT_ACL;}
#line 47856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3305: /* grant_option_list: grant_option_list grant_option  */
#line 17517 "/home/buildbot/git/sql/sql_yacc.yy"
                                         {}
#line 47862 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3306: /* grant_option_list: grant_option  */
#line 17518 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 47868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3307: /* grant_option: GRANT OPTION  */
#line 17522 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->grant |= GRANT_ACL;}
#line 47874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3308: /* grant_option: resource_option  */
#line 17523 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 47880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3309: /* $@242: %empty  */
#line 17528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 47890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3310: /* begin_stmt_mariadb: BEGIN_MARIADB_SYM $@242 opt_work  */
#line 17533 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 47896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3311: /* compound_statement: sp_proc_stmt_compound_ok  */
#line 17538 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_COMPOUND;
            Lex->sphead->set_stmt_end(thd);
            Lex->sphead->restore_thd_mem_root(thd);
          }
#line 47906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3312: /* opt_not: %empty  */
#line 17546 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 47912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3313: /* opt_not: not  */
#line 17547 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 1; }
#line 47918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3314: /* opt_work: %empty  */
#line 17551 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3315: /* opt_work: WORK_SYM  */
#line 17552 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 47930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3316: /* opt_chain: %empty  */
#line 17557 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3317: /* opt_chain: AND_SYM NO_SYM CHAIN_SYM  */
#line 17558 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3318: /* opt_chain: AND_SYM CHAIN_SYM  */
#line 17559 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3319: /* opt_release: %empty  */
#line 17564 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3320: /* opt_release: RELEASE_SYM  */
#line 17565 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3321: /* opt_release: NO_SYM RELEASE_SYM  */
#line 17566 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3322: /* commit: COMMIT_SYM opt_work opt_chain opt_release  */
#line 17571 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3323: /* rollback: ROLLBACK_SYM opt_work opt_chain opt_release  */
#line 17583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3324: /* rollback: ROLLBACK_SYM opt_work TO_SYM SAVEPOINT_SYM ident  */
#line 17592 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 48002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3325: /* rollback: ROLLBACK_SYM opt_work TO_SYM ident  */
#line 17598 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 48012 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3326: /* savepoint: SAVEPOINT_SYM ident  */
#line 17607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 48022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3327: /* release: RELEASE_SYM SAVEPOINT_SYM ident  */
#line 17616 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 48032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3328: /* unit_type_decl: UNION_SYM  */
#line 17629 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_type)= UNION_TYPE; }
#line 48038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3329: /* unit_type_decl: INTERSECT_SYM  */
#line 17631 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_type)= INTERSECT_TYPE; }
#line 48044 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3330: /* unit_type_decl: EXCEPT_SYM  */
#line 17633 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_type)= EXCEPT_TYPE; }
#line 48050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3331: /* union_clause: %empty  */
#line 17637 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48056 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3333: /* $@243: %empty  */
#line 17643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 48065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3334: /* union_list: unit_type_decl union_option $@243 union_list_part2  */
#line 17648 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 48077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3335: /* $@244: %empty  */
#line 17659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 48086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3336: /* union_list_view: unit_type_decl union_option $@244 query_expression_body_view  */
#line 17664 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_context();
          }
#line 48094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3337: /* $@245: %empty  */
#line 17670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 48112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3338: /* union_order_or_limit: $@245 order_or_limit  */
#line 17684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 48121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3341: /* union_head_non_top: unit_type_decl union_option  */
#line 17700 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), FALSE)))
              MYSQL_YYABORT;
          }
#line 48130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3342: /* union_option: %empty  */
#line 17707 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=1; }
#line 48136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3343: /* union_option: DISTINCT  */
#line 17708 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 48142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3344: /* union_option: ALL  */
#line 17709 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=0; }
#line 48148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3345: /* simple_table: query_specification  */
#line 17713 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 48154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3346: /* simple_table: table_value_constructor  */
#line 17714 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 48160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3347: /* $@246: %empty  */
#line 17719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->tvc_start();
	  }
#line 48168 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3348: /* table_value_constructor: VALUES $@246 values_list  */
#line 17723 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->current_select;
            if (Lex->tvc_finalize())
              MYSQL_YYABORT;
	  }
#line 48178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3349: /* query_specification: SELECT_SYM select_init2_derived opt_table_expression  */
#line 17741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 48186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3350: /* query_term_union_not_ready: simple_table order_or_limit opt_select_lock_type  */
#line 17747 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 48192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3351: /* query_term_union_not_ready: '(' select_paren_derived ')' union_order_or_limit  */
#line 17748 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                  { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 48198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3352: /* query_term_union_ready: simple_table opt_select_lock_type  */
#line 17752 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 48204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3353: /* query_term_union_ready: '(' select_paren_derived ')'  */
#line 17753 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 48210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3354: /* query_expression_body: query_term_union_not_ready  */
#line 17757 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 48216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3355: /* query_expression_body: query_term_union_ready  */
#line 17758 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 48222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3356: /* query_expression_body: query_term_union_ready union_list_derived  */
#line 17759 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 48228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3357: /* subselect: subselect_start opt_with_clause query_expression_body subselect_end  */
#line 17765 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyvsp[-1].select_lex)->set_with_clause((yyvsp[-2].with_clause));
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 48237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3358: /* subselect_start: %empty  */
#line 17772 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (unlikely(mysql_new_select(Lex, 1, NULL)))
              MYSQL_YYABORT;
          }
#line 48260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3359: /* subselect_end: %empty  */
#line 17793 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->check_automatic_up(UNSPECIFIED_TYPE);
            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;

            /*
              A subquery (and all the subsequent query blocks in a UNION) can
              add columns to an outer query block. Reserve space for them.
              Aggregate functions in having clause can also add fields to an
              outer select.
            */
            for (SELECT_LEX *temp= child->master_unit()->first_select();
                 temp != NULL; temp= temp->next_select())
            {
              lex->current_select->select_n_where_fields+=
                temp->select_n_where_fields;
              lex->current_select->select_n_having_items+=
                temp->select_n_having_items;
            }
          }
#line 48290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3364: /* query_expression_option: STRAIGHT_JOIN  */
#line 17831 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 48296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3365: /* query_expression_option: HIGH_PRIORITY  */
#line 17833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 48308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3366: /* query_expression_option: DISTINCT  */
#line 17840 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 48314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3367: /* query_expression_option: SQL_SMALL_RESULT  */
#line 17841 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_SMALL_RESULT; }
#line 48320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3368: /* query_expression_option: SQL_BIG_RESULT  */
#line 17842 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_BIG_RESULT; }
#line 48326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3369: /* query_expression_option: SQL_BUFFER_RESULT  */
#line 17844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 48336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3370: /* query_expression_option: SQL_CALC_FOUND_ROWS  */
#line 17850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 48346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3371: /* query_expression_option: ALL  */
#line 17855 "/home/buildbot/git/sql/sql_yacc.yy"
              { Select->options|= SELECT_ALL; }
#line 48352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3374: /* no_definer: %empty  */
#line 17871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 48367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3375: /* definer: DEFINER_SYM '=' user_or_role  */
#line 17885 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
            Lex->ssl_cipher= Lex->x509_subject= Lex->x509_issuer= 0;
            bzero(&(Lex->mqh), sizeof(Lex->mqh));
          }
#line 48378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3376: /* view_algorithm: ALGORITHM_SYM '=' UNDEFINED_SYM  */
#line 17900 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 48384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3377: /* view_algorithm: ALGORITHM_SYM '=' MERGE_SYM  */
#line 17901 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 48390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3378: /* view_algorithm: ALGORITHM_SYM '=' TEMPTABLE_SYM  */
#line 17902 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 48396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3379: /* opt_view_suid: %empty  */
#line 17906 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 48402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3380: /* opt_view_suid: view_suid  */
#line 17907 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 48408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3381: /* view_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 17911 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 48414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3382: /* view_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 17912 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 48420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3383: /* view_list_opt: %empty  */
#line 17917 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 48426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3385: /* view_list: ident  */
#line 17923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 48436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3386: /* view_list: view_list ',' ident  */
#line 17929 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 48446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3387: /* $@247: %empty  */
#line 17937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 48456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3388: /* view_select: $@247 opt_with_clause query_expression_body_view view_check_option  */
#line 17943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            size_t len= YYLIP->get_cpp_ptr() - lex->create_view->select.str;
            void *create_view_select= thd->memdup(lex->create_view->select.str, len);
            lex->create_view->select.length= len;
            lex->create_view->select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(),
                            &lex->create_view->select);
            lex->create_view->check= (yyvsp[0].num);
            lex->parsing_options.allows_variable= TRUE;
            lex->current_select->set_with_clause((yyvsp[-2].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;

          }
#line 48476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3396: /* view_check_option: %empty  */
#line 17975 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 48482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3397: /* view_check_option: WITH CHECK_SYM OPTION  */
#line 17976 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 48488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3398: /* view_check_option: WITH CASCADED CHECK_SYM OPTION  */
#line 17977 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 48494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3399: /* view_check_option: WITH LOCAL_SYM CHECK_SYM OPTION  */
#line 17978 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 48500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3400: /* trigger_action_order: FOLLOWS_SYM  */
#line 17989 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 48506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3401: /* trigger_action_order: PRECEDES_SYM  */
#line 17991 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 48512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3402: /* trigger_follows_precedes_clause: %empty  */
#line 17996 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 48522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3403: /* trigger_follows_precedes_clause: trigger_action_order ident_or_text  */
#line 18003 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 48531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3404: /* $@248: %empty  */
#line 18012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 48540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3405: /* $@249: %empty  */
#line 18021 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 48548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3406: /* $@250: %empty  */
#line 18027 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 48556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3407: /* $@251: %empty  */
#line 18032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 48564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3408: /* $@252: %empty  */
#line 18036 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 48588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3409: /* trigger_tail: remember_name opt_if_not_exists $@248 sp_name trg_action_time trg_event ON remember_name $@249 table_ident FOR_SYM remember_name $@250 EACH_SYM ROW_SYM $@251 trigger_follows_precedes_clause $@252 sp_proc_stmt force_lookahead  */
#line 18056 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $21 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(thd);
            sp->restore_thd_mem_root(thd);

            if (unlikely(sp->is_not_allowed_in_function("trigger")))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (unlikely(!lex->select_lex.
                         add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                           TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
          }
#line 48616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3410: /* udf_tail: opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 18090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (unlikely(lex->add_create_options_with_check((yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(is_native_function(thd, & (yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].ident_sys).str));
            lex->sql_command= SQLCOM_CREATE_FUNCTION;
            lex->udf.name= (yyvsp[-4].ident_sys);
            lex->udf.returns= (Item_result) (yyvsp[-2].num);
            lex->udf.dl= (yyvsp[0].lex_str).str;
          }
#line 48632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3411: /* $@253: %empty  */
#line 18106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 48643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3412: /* sf_return_type: RETURNS_SYM $@253 field_type  */
#line 18113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 48653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3413: /* $@254: %empty  */
#line 18123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_function)))
              MYSQL_YYABORT;
          }
#line 48664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3414: /* $@255: %empty  */
#line 18132 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->set_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 48676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3415: /* sf_tail: opt_if_not_exists sp_name $@254 sp_parenthesized_fdparam_list sf_return_type sp_c_chistics $@255 sp_proc_stmt_in_returns_clause force_lookahead  */
#line 18140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 48685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3416: /* $@256: %empty  */
#line 18148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_procedure)))
              MYSQL_YYABORT;
          }
#line 48696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3417: /* $@257: %empty  */
#line 18156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->set_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 48705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3418: /* sp_tail: opt_if_not_exists sp_name $@256 sp_parenthesized_pdparam_list sp_c_chistics $@257 sp_proc_stmt force_lookahead  */
#line 18161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 48714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3419: /* xa: XA_SYM begin_or_start xid opt_join_or_resume  */
#line 18171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 48722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3420: /* xa: XA_SYM END xid opt_suspend  */
#line 18175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 48730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3421: /* xa: XA_SYM PREPARE_SYM xid  */
#line 18179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 48738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3422: /* xa: XA_SYM COMMIT_SYM xid opt_one_phase  */
#line 18183 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 48746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3423: /* xa: XA_SYM ROLLBACK_SYM xid  */
#line 18187 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 48754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3424: /* xa: XA_SYM RECOVER_SYM opt_format_xid  */
#line 18191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 48763 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3425: /* opt_format_xid: %empty  */
#line 18198 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= false; }
#line 48769 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3426: /* opt_format_xid: FORMAT_SYM '=' ident_or_text  */
#line 18200 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 48786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3427: /* xid: text_string  */
#line 18216 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 48797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3428: /* xid: text_string ',' text_string  */
#line 18223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 48808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3429: /* xid: text_string ',' text_string ',' ulong_num  */
#line 18230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 48819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3430: /* begin_or_start: BEGIN_MARIADB_SYM  */
#line 18239 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 48825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3431: /* begin_or_start: BEGIN_ORACLE_SYM  */
#line 18240 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 48831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3432: /* begin_or_start: START_SYM  */
#line 18241 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 48837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3433: /* opt_join_or_resume: %empty  */
#line 18245 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_NONE;        }
#line 48843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3434: /* opt_join_or_resume: JOIN_SYM  */
#line 18246 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_JOIN;        }
#line 48849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3435: /* opt_join_or_resume: RESUME_SYM  */
#line 18247 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_RESUME;      }
#line 48855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3436: /* opt_one_phase: %empty  */
#line 18251 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_NONE;        }
#line 48861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3437: /* opt_one_phase: ONE_SYM PHASE_SYM  */
#line 18252 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_ONE_PHASE;   }
#line 48867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3438: /* opt_suspend: %empty  */
#line 18257 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_NONE;        }
#line 48873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3439: /* $@258: %empty  */
#line 18259 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_SUSPEND;     }
#line 48879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3441: /* opt_migrate: %empty  */
#line 18264 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 48885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3442: /* opt_migrate: FOR_SYM MIGRATE_SYM  */
#line 18265 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 48891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3443: /* install: INSTALL_SYM PLUGIN_SYM ident SONAME_SYM TEXT_STRING_sys  */
#line 18270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].ident_sys);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 48902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3444: /* install: INSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18277 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 48913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3445: /* uninstall: UNINSTALL_SYM PLUGIN_SYM ident  */
#line 18287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].ident_sys);
          }
#line 48923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3446: /* uninstall: UNINSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18293 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 48934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;

  case 3447: /* keep_gcc_happy: IMPOSSIBLE_ACTION  */
#line 18304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYERROR;
          }
#line 48942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"
    break;


#line 48946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (thd, YY_("syntax error"));
    }

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

