/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                          \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void ORAerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}




#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


#line 212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc_ora.hh".  */
#ifndef YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
# define YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int ORAdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ADD = 260,
    ALL = 261,
    ALTER = 262,
    ANALYZE_SYM = 263,
    AND_AND_SYM = 264,
    AND_SYM = 265,
    AS = 266,
    ASC = 267,
    ASENSITIVE_SYM = 268,
    BEFORE_SYM = 269,
    BETWEEN_SYM = 270,
    BIGINT = 271,
    BINARY = 272,
    BIN_NUM = 273,
    BIT_AND = 274,
    BIT_OR = 275,
    BIT_XOR = 276,
    BLOB_MARIADB_SYM = 277,
    BLOB_ORACLE_SYM = 278,
    BODY_ORACLE_SYM = 279,
    BOTH = 280,
    BY = 281,
    CALL_SYM = 282,
    CASCADE = 283,
    CASE_SYM = 284,
    CAST_SYM = 285,
    CHANGE = 286,
    CHAR_SYM = 287,
    CHECK_SYM = 288,
    COLLATE_SYM = 289,
    CONDITION_SYM = 290,
    CONSTRAINT = 291,
    CONTINUE_MARIADB_SYM = 292,
    CONTINUE_ORACLE_SYM = 293,
    CONVERT_SYM = 294,
    COUNT_SYM = 295,
    CREATE = 296,
    CROSS = 297,
    CUME_DIST_SYM = 298,
    CURDATE = 299,
    CURRENT_USER = 300,
    CURRENT_ROLE = 301,
    CURSOR_SYM = 302,
    CURTIME = 303,
    DATABASE = 304,
    DATABASES = 305,
    DATE_ADD_INTERVAL = 306,
    DATE_SUB_INTERVAL = 307,
    DAY_HOUR_SYM = 308,
    DAY_MICROSECOND_SYM = 309,
    DAY_MINUTE_SYM = 310,
    DAY_SECOND_SYM = 311,
    DECIMAL_NUM = 312,
    DECIMAL_SYM = 313,
    DECLARE_MARIADB_SYM = 314,
    DECLARE_ORACLE_SYM = 315,
    DEFAULT = 316,
    DELETE_DOMAIN_ID_SYM = 317,
    DELETE_SYM = 318,
    DENSE_RANK_SYM = 319,
    DESC = 320,
    DESCRIBE = 321,
    DETERMINISTIC_SYM = 322,
    DISTINCT = 323,
    DIV_SYM = 324,
    DOUBLE_SYM = 325,
    DO_DOMAIN_IDS_SYM = 326,
    DOT_DOT_SYM = 327,
    DROP = 328,
    DUAL_SYM = 329,
    EACH_SYM = 330,
    ELSE = 331,
    ELSEIF_MARIADB_SYM = 332,
    ELSIF_ORACLE_SYM = 333,
    ENCLOSED = 334,
    END_OF_INPUT = 335,
    EQUAL_SYM = 336,
    ESCAPED = 337,
    EXCEPT_SYM = 338,
    EXISTS = 339,
    EXTRACT_SYM = 340,
    FALSE_SYM = 341,
    FETCH_SYM = 342,
    FIRST_VALUE_SYM = 343,
    FLOAT_NUM = 344,
    FLOAT_SYM = 345,
    FOREIGN = 346,
    FOR_SYM = 347,
    FOR_SYSTEM_TIME_SYM = 348,
    FROM = 349,
    FULLTEXT_SYM = 350,
    GE = 351,
    GOTO_ORACLE_SYM = 352,
    GRANT = 353,
    GROUP_SYM = 354,
    GROUP_CONCAT_SYM = 355,
    LAG_SYM = 356,
    LEAD_SYM = 357,
    HAVING = 358,
    HEX_NUM = 359,
    HEX_STRING = 360,
    HOUR_MICROSECOND_SYM = 361,
    HOUR_MINUTE_SYM = 362,
    HOUR_SECOND_SYM = 363,
    IDENT = 364,
    IDENT_QUOTED = 365,
    IF_SYM = 366,
    IGNORE_DOMAIN_IDS_SYM = 367,
    IGNORE_SYM = 368,
    INDEX_SYM = 369,
    INFILE = 370,
    INNER_SYM = 371,
    INOUT_SYM = 372,
    INSENSITIVE_SYM = 373,
    INSERT = 374,
    INTERSECT_SYM = 375,
    INTERVAL_SYM = 376,
    INTO = 377,
    INT_SYM = 378,
    IN_SYM = 379,
    IS = 380,
    ITERATE_SYM = 381,
    JOIN_SYM = 382,
    KEYS = 383,
    KEY_SYM = 384,
    KILL_SYM = 385,
    LE = 386,
    LEADING = 387,
    LEAVE_SYM = 388,
    LEFT = 389,
    LEX_HOSTNAME = 390,
    LIKE = 391,
    LIMIT = 392,
    LINEAR_SYM = 393,
    LINES = 394,
    LOAD = 395,
    LOCATOR_SYM = 396,
    LOCK_SYM = 397,
    LONGBLOB = 398,
    LONGTEXT = 399,
    LONG_NUM = 400,
    LONG_SYM = 401,
    LOOP_SYM = 402,
    LOW_PRIORITY = 403,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 404,
    MATCH = 405,
    MAX_SYM = 406,
    MAXVALUE_SYM = 407,
    MEDIAN_SYM = 408,
    MEDIUMBLOB = 409,
    MEDIUMINT = 410,
    MEDIUMTEXT = 411,
    MINUTE_MICROSECOND_SYM = 412,
    MINUTE_SECOND_SYM = 413,
    MIN_SYM = 414,
    MODIFIES_SYM = 415,
    MOD_SYM = 416,
    MYSQL_CONCAT_SYM = 417,
    NATURAL = 418,
    NCHAR_STRING = 419,
    NE = 420,
    NEG = 421,
    NOT2_SYM = 422,
    NOT_SYM = 423,
    NOW_SYM = 424,
    NO_WRITE_TO_BINLOG = 425,
    NTILE_SYM = 426,
    NULL_SYM = 427,
    NUM = 428,
    NUMERIC_SYM = 429,
    NTH_VALUE_SYM = 430,
    ON = 431,
    OPTIMIZE = 432,
    OPTIONALLY = 433,
    ORACLE_CONCAT_SYM = 434,
    OR2_SYM = 435,
    ORDER_SYM = 436,
    OR_SYM = 437,
    OTHERS_ORACLE_SYM = 438,
    OUTER = 439,
    OUTFILE = 440,
    OUT_SYM = 441,
    OVER_SYM = 442,
    PACKAGE_ORACLE_SYM = 443,
    PAGE_CHECKSUM_SYM = 444,
    PARAM_MARKER = 445,
    PARSE_VCOL_EXPR_SYM = 446,
    PARTITION_SYM = 447,
    PERCENT_ORACLE_SYM = 448,
    PERCENT_RANK_SYM = 449,
    PERCENTILE_CONT_SYM = 450,
    PERCENTILE_DISC_SYM = 451,
    POSITION_SYM = 452,
    PRECISION = 453,
    PRIMARY_SYM = 454,
    PROCEDURE_SYM = 455,
    PURGE = 456,
    RAISE_ORACLE_SYM = 457,
    RANGE_SYM = 458,
    RANK_SYM = 459,
    READS_SYM = 460,
    READ_SYM = 461,
    READ_WRITE_SYM = 462,
    REAL = 463,
    RECURSIVE_SYM = 464,
    REF_SYSTEM_ID_SYM = 465,
    REFERENCES = 466,
    REGEXP = 467,
    RELEASE_SYM = 468,
    RENAME = 469,
    REPEAT_SYM = 470,
    REPLACE = 471,
    REQUIRE_SYM = 472,
    RESIGNAL_SYM = 473,
    RESTRICT = 474,
    RETURNING_SYM = 475,
    RETURN_MARIADB_SYM = 476,
    RETURN_ORACLE_SYM = 477,
    REVOKE = 478,
    RIGHT = 479,
    ROWS_SYM = 480,
    ROWTYPE_ORACLE_SYM = 481,
    ROW_NUMBER_SYM = 482,
    SECOND_MICROSECOND_SYM = 483,
    SELECT_SYM = 484,
    SENSITIVE_SYM = 485,
    SEPARATOR_SYM = 486,
    SERVER_OPTIONS = 487,
    SET = 488,
    SET_VAR = 489,
    SHIFT_LEFT = 490,
    SHIFT_RIGHT = 491,
    SHOW = 492,
    SIGNAL_SYM = 493,
    SMALLINT = 494,
    SPATIAL_SYM = 495,
    SPECIFIC_SYM = 496,
    SQLEXCEPTION_SYM = 497,
    SQLSTATE_SYM = 498,
    SQLWARNING_SYM = 499,
    SQL_BIG_RESULT = 500,
    SQL_SMALL_RESULT = 501,
    SQL_SYM = 502,
    SSL_SYM = 503,
    STARTING = 504,
    STATS_AUTO_RECALC_SYM = 505,
    STATS_PERSISTENT_SYM = 506,
    STATS_SAMPLE_PAGES_SYM = 507,
    STDDEV_SAMP_SYM = 508,
    STD_SYM = 509,
    STRAIGHT_JOIN = 510,
    SUBSTRING = 511,
    SUM_SYM = 512,
    SYSDATE = 513,
    TABLE_REF_PRIORITY = 514,
    TABLE_SYM = 515,
    TERMINATED = 516,
    TEXT_STRING = 517,
    THEN_SYM = 518,
    TINYBLOB = 519,
    TINYINT = 520,
    TINYTEXT = 521,
    TO_SYM = 522,
    TRAILING = 523,
    TRIGGER_SYM = 524,
    TRIM = 525,
    TRUE_SYM = 526,
    ULONGLONG_NUM = 527,
    UNDERSCORE_CHARSET = 528,
    UNDO_SYM = 529,
    UNION_SYM = 530,
    UNIQUE_SYM = 531,
    UNLOCK_SYM = 532,
    UNSIGNED = 533,
    UPDATE_SYM = 534,
    USAGE = 535,
    USE_SYM = 536,
    USING = 537,
    UTC_DATE_SYM = 538,
    UTC_TIMESTAMP_SYM = 539,
    UTC_TIME_SYM = 540,
    VALUES = 541,
    VALUES_IN_SYM = 542,
    VALUES_LESS_SYM = 543,
    VARBINARY = 544,
    VARCHAR = 545,
    VARIANCE_SYM = 546,
    VARYING = 547,
    VAR_SAMP_SYM = 548,
    WHEN_SYM = 549,
    WHERE = 550,
    WHILE_SYM = 551,
    WITH = 552,
    WITH_CUBE_SYM = 553,
    WITH_ROLLUP_SYM = 554,
    WITH_SYSTEM_SYM = 555,
    XOR = 556,
    YEAR_MONTH_SYM = 557,
    ZEROFILL = 558,
    IMPOSSIBLE_ACTION = 559,
    BODY_MARIADB_SYM = 560,
    ELSEIF_ORACLE_SYM = 561,
    ELSIF_MARIADB_SYM = 562,
    EXCEPTION_ORACLE_SYM = 563,
    GOTO_MARIADB_SYM = 564,
    OTHERS_MARIADB_SYM = 565,
    PACKAGE_MARIADB_SYM = 566,
    RAISE_MARIADB_SYM = 567,
    ROWTYPE_MARIADB_SYM = 568,
    ACTION = 569,
    ADMIN_SYM = 570,
    ADDDATE_SYM = 571,
    AFTER_SYM = 572,
    AGAINST = 573,
    AGGREGATE_SYM = 574,
    ALGORITHM_SYM = 575,
    ALWAYS_SYM = 576,
    ANY_SYM = 577,
    ASCII_SYM = 578,
    AT_SYM = 579,
    ATOMIC_SYM = 580,
    AUTHORS_SYM = 581,
    AUTOEXTEND_SIZE_SYM = 582,
    AUTO_INC = 583,
    AUTO_SYM = 584,
    AVG_ROW_LENGTH = 585,
    AVG_SYM = 586,
    BACKUP_SYM = 587,
    BEGIN_MARIADB_SYM = 588,
    BEGIN_ORACLE_SYM = 589,
    BINLOG_SYM = 590,
    BIT_SYM = 591,
    BLOCK_SYM = 592,
    BOOL_SYM = 593,
    BOOLEAN_SYM = 594,
    BTREE_SYM = 595,
    BYTE_SYM = 596,
    CACHE_SYM = 597,
    CASCADED = 598,
    CATALOG_NAME_SYM = 599,
    CHAIN_SYM = 600,
    CHANGED = 601,
    CHARSET = 602,
    CHECKPOINT_SYM = 603,
    CHECKSUM_SYM = 604,
    CIPHER_SYM = 605,
    CLASS_ORIGIN_SYM = 606,
    CLIENT_SYM = 607,
    CLOB_MARIADB_SYM = 608,
    CLOB_ORACLE_SYM = 609,
    CLOSE_SYM = 610,
    COALESCE = 611,
    CODE_SYM = 612,
    COLLATION_SYM = 613,
    COLON_ORACLE_SYM = 614,
    COLUMNS = 615,
    COLUMN_ADD_SYM = 616,
    COLUMN_CHECK_SYM = 617,
    COLUMN_CREATE_SYM = 618,
    COLUMN_DELETE_SYM = 619,
    COLUMN_GET_SYM = 620,
    COLUMN_SYM = 621,
    COLUMN_NAME_SYM = 622,
    COMMENT_SYM = 623,
    COMMITTED_SYM = 624,
    COMMIT_SYM = 625,
    COMPACT_SYM = 626,
    COMPLETION_SYM = 627,
    COMPRESSED_SYM = 628,
    CONCURRENT = 629,
    CONNECTION_SYM = 630,
    CONSISTENT_SYM = 631,
    CONSTRAINT_CATALOG_SYM = 632,
    CONSTRAINT_NAME_SYM = 633,
    CONSTRAINT_SCHEMA_SYM = 634,
    CONTAINS_SYM = 635,
    CONTEXT_SYM = 636,
    CONTRIBUTORS_SYM = 637,
    CPU_SYM = 638,
    CUBE_SYM = 639,
    CURRENT_SYM = 640,
    CURRENT_POS_SYM = 641,
    CURSOR_NAME_SYM = 642,
    CYCLE_SYM = 643,
    DATAFILE_SYM = 644,
    DATA_SYM = 645,
    DATETIME = 646,
    DATE_FORMAT_SYM = 647,
    DATE_SYM = 648,
    DAY_SYM = 649,
    DEALLOCATE_SYM = 650,
    DECODE_MARIADB_SYM = 651,
    DECODE_ORACLE_SYM = 652,
    DEFINER_SYM = 653,
    DELAYED_SYM = 654,
    DELAY_KEY_WRITE_SYM = 655,
    DES_KEY_FILE = 656,
    DIAGNOSTICS_SYM = 657,
    DIRECTORY_SYM = 658,
    DISABLE_SYM = 659,
    DISCARD = 660,
    DISK_SYM = 661,
    DO_SYM = 662,
    DUMPFILE = 663,
    DUPLICATE_SYM = 664,
    DYNAMIC_SYM = 665,
    ENABLE_SYM = 666,
    END = 667,
    ENDS_SYM = 668,
    ENGINES_SYM = 669,
    ENGINE_SYM = 670,
    ENUM = 671,
    ERROR_SYM = 672,
    ERRORS = 673,
    ESCAPE_SYM = 674,
    EVENTS_SYM = 675,
    EVENT_SYM = 676,
    EVERY_SYM = 677,
    EXCHANGE_SYM = 678,
    EXAMINED_SYM = 679,
    EXCLUDE_SYM = 680,
    EXECUTE_SYM = 681,
    EXCEPTION_MARIADB_SYM = 682,
    EXIT_MARIADB_SYM = 683,
    EXIT_ORACLE_SYM = 684,
    EXPANSION_SYM = 685,
    EXPORT_SYM = 686,
    EXTENDED_SYM = 687,
    EXTENT_SIZE_SYM = 688,
    FAST_SYM = 689,
    FAULTS_SYM = 690,
    FILE_SYM = 691,
    FIRST_SYM = 692,
    FIXED_SYM = 693,
    FLUSH_SYM = 694,
    FOLLOWS_SYM = 695,
    FOLLOWING_SYM = 696,
    FORCE_SYM = 697,
    FORMAT_SYM = 698,
    FOUND_SYM = 699,
    FULL = 700,
    FUNCTION_SYM = 701,
    GENERAL = 702,
    GENERATED_SYM = 703,
    GEOMETRYCOLLECTION = 704,
    GEOMETRY_SYM = 705,
    GET_FORMAT = 706,
    GET_SYM = 707,
    GLOBAL_SYM = 708,
    GRANTS = 709,
    HANDLER_SYM = 710,
    HARD_SYM = 711,
    HASH_SYM = 712,
    HELP_SYM = 713,
    HIGH_PRIORITY = 714,
    HISTORY_SYM = 715,
    HOST_SYM = 716,
    HOSTS_SYM = 717,
    HOUR_SYM = 718,
    ID_SYM = 719,
    IDENTIFIED_SYM = 720,
    IGNORE_SERVER_IDS_SYM = 721,
    IMMEDIATE_SYM = 722,
    IMPORT = 723,
    INCREMENT_SYM = 724,
    INDEXES = 725,
    INITIAL_SIZE_SYM = 726,
    INSERT_METHOD = 727,
    INSTALL_SYM = 728,
    INVOKER_SYM = 729,
    IO_SYM = 730,
    IPC_SYM = 731,
    ISOLATION = 732,
    ISOPEN_SYM = 733,
    ISSUER_SYM = 734,
    INVISIBLE_SYM = 735,
    JSON_SYM = 736,
    KEY_BLOCK_SIZE = 737,
    LANGUAGE_SYM = 738,
    LAST_SYM = 739,
    LAST_VALUE = 740,
    LASTVAL_SYM = 741,
    LEAVES = 742,
    LESS_SYM = 743,
    LEVEL_SYM = 744,
    LINESTRING = 745,
    LIST_SYM = 746,
    LOCAL_SYM = 747,
    LOCKS_SYM = 748,
    LOGFILE_SYM = 749,
    LOGS_SYM = 750,
    MASTER_CONNECT_RETRY_SYM = 751,
    MASTER_DELAY_SYM = 752,
    MASTER_GTID_POS_SYM = 753,
    MASTER_HOST_SYM = 754,
    MASTER_LOG_FILE_SYM = 755,
    MASTER_LOG_POS_SYM = 756,
    MASTER_PASSWORD_SYM = 757,
    MASTER_PORT_SYM = 758,
    MASTER_SERVER_ID_SYM = 759,
    MASTER_SSL_CAPATH_SYM = 760,
    MASTER_SSL_CA_SYM = 761,
    MASTER_SSL_CERT_SYM = 762,
    MASTER_SSL_CIPHER_SYM = 763,
    MASTER_SSL_CRL_SYM = 764,
    MASTER_SSL_CRLPATH_SYM = 765,
    MASTER_SSL_KEY_SYM = 766,
    MASTER_SSL_SYM = 767,
    MASTER_SYM = 768,
    MASTER_USER_SYM = 769,
    MASTER_USE_GTID_SYM = 770,
    MASTER_HEARTBEAT_PERIOD_SYM = 771,
    MAX_CONNECTIONS_PER_HOUR = 772,
    MAX_QUERIES_PER_HOUR = 773,
    MAX_ROWS = 774,
    MAX_SIZE_SYM = 775,
    MAX_UPDATES_PER_HOUR = 776,
    MAX_STATEMENT_TIME_SYM = 777,
    MAX_USER_CONNECTIONS_SYM = 778,
    MEDIUM_SYM = 779,
    MEMORY_SYM = 780,
    MERGE_SYM = 781,
    MESSAGE_TEXT_SYM = 782,
    MICROSECOND_SYM = 783,
    MIGRATE_SYM = 784,
    MINUTE_SYM = 785,
    MINVALUE_SYM = 786,
    MIN_ROWS = 787,
    MODE_SYM = 788,
    MODIFY_SYM = 789,
    MONTH_SYM = 790,
    MULTILINESTRING = 791,
    MULTIPOINT = 792,
    MULTIPOLYGON = 793,
    MUTEX_SYM = 794,
    MYSQL_SYM = 795,
    MYSQL_ERRNO_SYM = 796,
    NAMES_SYM = 797,
    NAME_SYM = 798,
    NATIONAL_SYM = 799,
    NCHAR_SYM = 800,
    NEW_SYM = 801,
    NEXT_SYM = 802,
    NEXTVAL_SYM = 803,
    NOCACHE_SYM = 804,
    NOCYCLE_SYM = 805,
    NODEGROUP_SYM = 806,
    NONE_SYM = 807,
    NOTFOUND_SYM = 808,
    NO_SYM = 809,
    NOMAXVALUE_SYM = 810,
    NOMINVALUE_SYM = 811,
    NO_WAIT_SYM = 812,
    NOWAIT_SYM = 813,
    NUMBER_MARIADB_SYM = 814,
    NUMBER_ORACLE_SYM = 815,
    NVARCHAR_SYM = 816,
    OF_SYM = 817,
    OFFSET_SYM = 818,
    OLD_PASSWORD_SYM = 819,
    ONE_SYM = 820,
    ONLY_SYM = 821,
    ONLINE_SYM = 822,
    OPEN_SYM = 823,
    OPTIONS_SYM = 824,
    OPTION = 825,
    OWNER_SYM = 826,
    PACK_KEYS_SYM = 827,
    PAGE_SYM = 828,
    PARSER_SYM = 829,
    PARTIAL = 830,
    PARTITIONS_SYM = 831,
    PARTITIONING_SYM = 832,
    PASSWORD_SYM = 833,
    PERIOD_SYM = 834,
    PERSISTENT_SYM = 835,
    PHASE_SYM = 836,
    PLUGINS_SYM = 837,
    PLUGIN_SYM = 838,
    POINT_SYM = 839,
    POLYGON = 840,
    PORT_SYM = 841,
    PRECEDES_SYM = 842,
    PRECEDING_SYM = 843,
    PREPARE_SYM = 844,
    PRESERVE_SYM = 845,
    PREV_SYM = 846,
    PREVIOUS_SYM = 847,
    PRIVILEGES = 848,
    PROCESS = 849,
    PROCESSLIST_SYM = 850,
    PROFILE_SYM = 851,
    PROFILES_SYM = 852,
    PROXY_SYM = 853,
    QUARTER_SYM = 854,
    QUERY_SYM = 855,
    QUICK = 856,
    RAW_MARIADB_SYM = 857,
    RAW_ORACLE_SYM = 858,
    READ_ONLY_SYM = 859,
    REBUILD_SYM = 860,
    RECOVER_SYM = 861,
    REDOFILE_SYM = 862,
    REDO_BUFFER_SIZE_SYM = 863,
    REDUNDANT_SYM = 864,
    RELAY = 865,
    RELAYLOG_SYM = 866,
    RELAY_LOG_FILE_SYM = 867,
    RELAY_LOG_POS_SYM = 868,
    RELAY_THREAD = 869,
    RELOAD = 870,
    REMOVE_SYM = 871,
    REORGANIZE_SYM = 872,
    REPAIR = 873,
    REPEATABLE_SYM = 874,
    REPLICATION = 875,
    RESET_SYM = 876,
    RESTART_SYM = 877,
    RESOURCES = 878,
    RESTORE_SYM = 879,
    RESUME_SYM = 880,
    RETURNED_SQLSTATE_SYM = 881,
    RETURNS_SYM = 882,
    REUSE_SYM = 883,
    REVERSE_SYM = 884,
    ROLE_SYM = 885,
    ROLLBACK_SYM = 886,
    ROLLUP_SYM = 887,
    ROUTINE_SYM = 888,
    ROWCOUNT_SYM = 889,
    ROW_SYM = 890,
    ROW_COUNT_SYM = 891,
    ROW_FORMAT_SYM = 892,
    RTREE_SYM = 893,
    SAVEPOINT_SYM = 894,
    SCHEDULE_SYM = 895,
    SCHEMA_NAME_SYM = 896,
    SECOND_SYM = 897,
    SECURITY_SYM = 898,
    SEQUENCE_SYM = 899,
    SERIALIZABLE_SYM = 900,
    SERIAL_SYM = 901,
    SESSION_SYM = 902,
    SERVER_SYM = 903,
    SETVAL_SYM = 904,
    SHARE_SYM = 905,
    SHUTDOWN = 906,
    SIGNED_SYM = 907,
    SIMPLE_SYM = 908,
    SLAVE = 909,
    SLAVES = 910,
    SLAVE_POS_SYM = 911,
    SLOW = 912,
    SNAPSHOT_SYM = 913,
    SOCKET_SYM = 914,
    SOFT_SYM = 915,
    SONAME_SYM = 916,
    SOUNDS_SYM = 917,
    SOURCE_SYM = 918,
    SQL_BUFFER_RESULT = 919,
    SQL_CACHE_SYM = 920,
    SQL_CALC_FOUND_ROWS = 921,
    SQL_NO_CACHE_SYM = 922,
    SQL_THREAD = 923,
    STARTS_SYM = 924,
    START_SYM = 925,
    STATEMENT_SYM = 926,
    STATUS_SYM = 927,
    STOP_SYM = 928,
    STORAGE_SYM = 929,
    STORED_SYM = 930,
    STRING_SYM = 931,
    SUBCLASS_ORIGIN_SYM = 932,
    SUBDATE_SYM = 933,
    SUBJECT_SYM = 934,
    SUBPARTITIONS_SYM = 935,
    SUBPARTITION_SYM = 936,
    SUPER_SYM = 937,
    SUSPEND_SYM = 938,
    SWAPS_SYM = 939,
    SWITCHES_SYM = 940,
    SYSTEM = 941,
    SYSTEM_TIME_SYM = 942,
    TABLES = 943,
    TABLESPACE = 944,
    TABLE_CHECKSUM_SYM = 945,
    TABLE_NAME_SYM = 946,
    TEMPORARY = 947,
    TEMPTABLE_SYM = 948,
    TEXT_SYM = 949,
    THAN_SYM = 950,
    TIES_SYM = 951,
    TIMESTAMP = 952,
    TIMESTAMP_ADD = 953,
    TIMESTAMP_DIFF = 954,
    TIME_SYM = 955,
    TRANSACTION_SYM = 956,
    TRANSACTIONAL_SYM = 957,
    TRIGGERS_SYM = 958,
    TRIM_ORACLE = 959,
    TRUNCATE_SYM = 960,
    TYPES_SYM = 961,
    TYPE_SYM = 962,
    UDF_RETURNS_SYM = 963,
    UNBOUNDED_SYM = 964,
    UNCOMMITTED_SYM = 965,
    UNDEFINED_SYM = 966,
    UNDOFILE_SYM = 967,
    UNDO_BUFFER_SIZE_SYM = 968,
    UNICODE_SYM = 969,
    UNINSTALL_SYM = 970,
    UNKNOWN_SYM = 971,
    UNTIL_SYM = 972,
    UPGRADE_SYM = 973,
    USER_SYM = 974,
    USE_FRM = 975,
    VALUE_SYM = 976,
    VARCHAR2_MARIADB_SYM = 977,
    VARCHAR2_ORACLE_SYM = 978,
    VARIABLES = 979,
    VERSIONING_SYM = 980,
    VIA_SYM = 981,
    VIEW_SYM = 982,
    VIRTUAL_SYM = 983,
    WAIT_SYM = 984,
    WARNINGS = 985,
    WEEK_SYM = 986,
    WEIGHT_STRING_SYM = 987,
    WINDOW_SYM = 988,
    WITHIN = 989,
    WITHOUT = 990,
    WORK_SYM = 991,
    WRAPPER_SYM = 992,
    WRITE_SYM = 993,
    X509_SYM = 994,
    XA_SYM = 995,
    XML_SYM = 996,
    YEAR_SYM = 997,
    PREC_BELOW_ESCAPE = 998,
    CONDITIONLESS_JOIN = 999,
    ON_SYM = 1000,
    PREC_BELOW_NOT = 1001,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1002,
    USER = 1003,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1004
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_sp_suid_behaviour sp_suid;
  enum enum_view_suid view_suid;
  enum sub_select_type unit_type;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_sys_type_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;

#line 1111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int ORAparse (THD *thd);

#endif /* !YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  726
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   90447

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  771
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1307
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3574
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6164

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1004

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   765,     2,     2,     2,   756,   751,     2,
     762,   763,   754,   753,   764,   752,   769,   755,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   768,
     749,   747,   748,     2,   770,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   757,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   766,   750,   767,   758,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   759,   760,   761
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1665,  1665,  1675,  1674,  1699,  1706,  1708,  1712,  1713,
    1714,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,  1727,
    1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,  1737,
    1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,
    1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,
    1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,
    1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,  1776,  1780,
    1789,  1790,  1794,  1806,  1806,  1816,  1815,  1824,  1823,  1834,
    1836,  1836,  1847,  1848,  1852,  1864,  1863,  1880,  1879,  1888,
    1889,  1893,  1897,  1901,  1905,  1909,  1913,  1923,  1928,  1932,
    1936,  1940,  1944,  1948,  1953,  1957,  1962,  1990,  1994,  1998,
    2003,  2006,  2008,  2009,  2013,  2019,  2021,  2022,  2026,  2032,
    2034,  2035,  2039,  2046,  2050,  2065,  2069,  2075,  2081,  2087,
    2097,  2101,  2105,  2119,  2118,  2149,  2148,  2204,  2201,  2214,
    2212,  2225,  2223,  2235,  2234,  2249,  2247,  2259,  2257,  2266,
    2265,  2270,  2269,  2274,  2273,  2278,  2277,  2282,  2281,  2286,
    2285,  2292,  2299,  2306,  2310,  2314,  2314,  2321,  2317,  2341,
    2353,  2358,  2337,  2371,  2377,  2385,  2386,  2387,  2393,  2394,
    2400,  2401,  2407,  2418,  2417,  2444,  2443,  2469,  2478,  2487,
    2493,  2492,  2516,  2515,  2534,  2537,  2539,  2543,  2544,  2548,
    2555,  2565,  2566,  2570,  2571,  2575,  2576,  2580,  2585,  2591,
    2597,  2605,  2611,  2617,  2625,  2633,  2641,  2649,  2657,  2665,
    2677,  2694,  2693,  2705,  2706,  2710,  2715,  2720,  2725,  2730,
    2735,  2740,  2748,  2747,  2780,  2779,  2786,  2793,  2794,  2800,
    2806,  2816,  2822,  2828,  2830,  2837,  2838,  2842,  2852,  2853,
    2861,  2861,  2906,  2920,  2925,  2933,  2934,  2938,  2939,  2943,
    2944,  2949,  2951,  2953,  2955,  2957,  2959,  2961,  2966,  2968,
    2973,  2974,  2977,  2979,  2983,  2983,  2989,  2990,  2994,  2995,
    3000,  2999,  3008,  3010,  3013,  3015,  3019,  3023,  3030,  3032,
    3036,  3037,  3041,  3049,  3054,  3059,  3064,  3069,  3074,  3082,
    3084,  3088,  3089,  3093,  3099,  3105,  3111,  3117,  3123,  3132,
    3133,  3134,  3135,  3136,  3141,  3140,  3153,  3152,  3165,  3172,
    3173,  3177,  3178,  3182,  3183,  3187,  3188,  3192,  3192,  3204,
    3207,  3212,  3211,  3220,  3224,  3225,  3232,  3233,  3240,  3241,
    3245,  3251,  3257,  3266,  3278,  3282,  3288,  3300,  3304,  3311,
    3321,  3329,  3337,  3348,  3349,  3356,  3367,  3366,  3385,  3384,
    3398,  3400,  3405,  3415,  3414,  3430,  3431,  3432,  3433,  3438,
    3440,  3445,  3460,  3468,  3472,  3492,  3493,  3497,  3501,  3507,
    3513,  3519,  3525,  3535,  3540,  3548,  3556,  3571,  3577,  3578,
    3584,  3587,  3591,  3599,  3616,  3618,  3636,  3642,  3644,  3646,
    3648,  3650,  3652,  3654,  3656,  3658,  3660,  3662,  3664,  3669,
    3677,  3693,  3694,  3699,  3705,  3714,  3721,  3730,  3739,  3744,
    3753,  3755,  3757,  3766,  3771,  3778,  3787,  3796,  3798,  3800,
    3802,  3804,  3806,  3808,  3810,  3812,  3814,  3816,  3818,  3820,
    3825,  3826,  3834,  3846,  3861,  3862,  3863,  3867,  3868,  3869,
    3870,  3871,  3872,  3876,  3877,  3878,  3879,  3880,  3881,  3882,
    3883,  3884,  3885,  3886,  3887,  3888,  3892,  3893,  3894,  3895,
    3900,  3899,  3910,  3912,  3911,  3919,  3918,  3927,  3927,  3980,
    3981,  3986,  3985,  3996,  4007,  4007,  4011,  4016,  4021,  4027,
    4036,  4041,  4046,  4052,  4062,  4070,  4078,  4087,  4093,  4103,
    4102,  4121,  4120,  4136,  4142,  4150,  4151,  4155,  4163,  4168,
    4173,  4181,  4185,  4203,  4217,  4234,  4236,  4252,  4234,  4271,
    4273,  4274,  4279,  4278,  4348,  4350,  4348,  4358,  4363,  4364,
    4368,  4369,  4374,  4378,  4373,  4398,  4402,  4397,  4420,  4430,
    4434,  4435,  4439,  4450,  4448,  4464,  4468,  4462,  4483,  4485,
    4490,  4489,  4504,  4510,  4503,  4525,  4529,  4533,  4539,  4529,
    4550,  4548,  4563,  4564,  4568,  4569,  4574,  4573,  4589,  4590,
    4594,  4602,  4607,  4614,  4623,  4638,  4637,  4654,  4653,  4673,
    4682,  4681,  4689,  4688,  4697,  4702,  4711,  4696,  4721,  4720,
    4731,  4730,  4740,  4739,  4750,  4757,  4749,  4774,  4773,  4785,
    4787,  4792,  4794,  4796,  4813,  4818,  4824,  4831,  4832,  4840,
    4846,  4855,  4861,  4867,  4868,  4872,  4872,  4877,  4878,  4879,
    4883,  4884,  4885,  4889,  4893,  4894,  4895,  4899,  4900,  4901,
    4902,  4903,  4904,  4905,  4906,  4910,  4914,  4915,  4916,  4920,
    4921,  4922,  4923,  4924,  4928,  4932,  4933,  4934,  4938,  4939,
    4940,  4941,  4942,  4943,  4944,  4948,  4952,  4953,  4954,  4958,
    4959,  4960,  4965,  4973,  4981,  4989,  5002,  5015,  5020,  5025,
    5033,  5041,  5049,  5057,  5065,  5073,  5081,  5091,  5101,  5111,
    5113,  5117,  5122,  5132,  5133,  5146,  5145,  5148,  5154,  5156,
    5155,  5158,  5157,  5159,  5173,  5174,  5178,  5179,  5185,  5183,
    5190,  5195,  5197,  5196,  5199,  5198,  5203,  5240,  5241,  5246,
    5245,  5261,  5276,  5275,  5293,  5292,  5298,  5306,  5305,  5308,
    5310,  5313,  5312,  5321,  5324,  5323,  5332,  5333,  5339,  5340,
    5357,  5358,  5362,  5363,  5367,  5381,  5391,  5402,  5411,  5412,
    5425,  5427,  5426,  5431,  5429,  5440,  5441,  5445,  5459,  5471,
    5472,  5485,  5494,  5516,  5517,  5522,  5521,  5545,  5557,  5573,
    5572,  5587,  5586,  5600,  5605,  5610,  5630,  5648,  5652,  5679,
    5691,  5692,  5697,  5706,  5696,  5731,  5732,  5736,  5747,  5766,
    5779,  5805,  5806,  5811,  5810,  5847,  5856,  5857,  5861,  5862,
    5866,  5868,  5874,  5880,  5882,  5884,  5886,  5888,  5890,  5895,
    5896,  5902,  5918,  5921,  5938,  5946,  5946,  5967,  5968,  5972,
    5973,  5977,  5988,  5989,  5993,  5994,  5998,  5999,  6003,  6004,
    6009,  6012,  6020,  6023,  6030,  6034,  6040,  6042,  6046,  6047,
    6051,  6052,  6053,  6057,  6072,  6077,  6082,  6087,  6092,  6097,
    6102,  6117,  6123,  6138,  6143,  6158,  6164,  6182,  6187,  6192,
    6197,  6202,  6207,  6213,  6212,  6238,  6239,  6240,  6245,  6250,
    6255,  6257,  6259,  6261,  6267,  6272,  6277,  6286,  6295,  6301,
    6307,  6312,  6315,  6317,  6321,  6340,  6348,  6363,  6373,  6384,
    6385,  6386,  6387,  6388,  6389,  6390,  6394,  6395,  6396,  6400,
    6401,  6402,  6403,  6408,  6415,  6416,  6420,  6421,  6422,  6423,
    6427,  6429,  6435,  6434,  6442,  6441,  6449,  6448,  6456,  6455,
    6465,  6462,  6473,  6471,  6480,  6479,  6518,  6526,  6534,  6535,
    6539,  6549,  6550,  6554,  6555,  6559,  6564,  6563,  6601,  6601,
    6604,  6603,  6613,  6614,  6618,  6619,  6623,  6624,  6628,  6629,
    6633,  6634,  6635,  6636,  6638,  6637,  6643,  6648,  6656,  6657,
    6662,  6665,  6669,  6673,  6680,  6681,  6685,  6686,  6690,  6696,
    6702,  6703,  6711,  6710,  6729,  6735,  6736,  6746,  6756,  6756,
    6759,  6760,  6768,  6772,  6780,  6781,  6782,  6783,  6784,  6789,
    6790,  6791,  6792,  6793,  6798,  6799,  6800,  6816,  6820,  6824,
    6828,  6830,  6837,  6839,  6844,  6846,  6847,  6848,  6852,  6856,
    6861,  6866,  6870,  6874,  6879,  6884,  6893,  6897,  6902,  6907,
    6911,  6915,  6920,  6925,  6934,  6952,  6953,  6960,  6967,  6975,
    6980,  6985,  6990,  6995,  7006,  7011,  7016,  7021,  7023,  7025,
    7027,  7029,  7031,  7033,  7035,  7043,  7045,  7050,  7051,  7052,
    7053,  7054,  7055,  7056,  7057,  7061,  7065,  7066,  7070,  7071,
    7075,  7076,  7077,  7078,  7079,  7083,  7084,  7085,  7086,  7087,
    7091,  7097,  7098,  7103,  7105,  7112,  7113,  7114,  7118,  7122,
    7123,  7124,  7125,  7126,  7127,  7131,  7132,  7133,  7134,  7138,
    7139,  7143,  7144,  7166,  7167,  7171,  7172,  7176,  7177,  7182,
    7183,  7187,  7188,  7189,  7196,  7197,  7203,  7210,  7214,  7215,
    7219,  7220,  7224,  7232,  7240,  7249,  7253,  7259,  7263,  7264,
    7273,  7282,  7288,  7294,  7307,  7313,  7323,  7337,  7351,  7352,
    7356,  7361,  7365,  7366,  7370,  7371,  7375,  7382,  7386,  7387,
    7391,  7399,  7400,  7404,  7405,  7409,  7410,  7414,  7415,  7416,
    7424,  7425,  7429,  7430,  7431,  7432,  7436,  7437,  7442,  7441,
    7454,  7455,  7459,  7462,  7463,  7464,  7465,  7469,  7477,  7484,
    7485,  7489,  7499,  7500,  7504,  7505,  7508,  7510,  7514,  7526,
    7527,  7531,  7538,  7551,  7552,  7554,  7556,  7562,  7567,  7573,
    7579,  7586,  7596,  7597,  7598,  7599,  7600,  7604,  7605,  7609,
    7610,  7614,  7615,  7619,  7620,  7621,  7625,  7626,  7630,  7634,
    7646,  7647,  7651,  7652,  7656,  7657,  7661,  7662,  7666,  7667,
    7671,  7672,  7676,  7677,  7682,  7683,  7684,  7688,  7690,  7695,
    7700,  7702,  7710,  7718,  7724,  7733,  7734,  7738,  7742,  7743,
    7753,  7754,  7755,  7759,  7763,  7770,  7776,  7788,  7789,  7793,
    7795,  7805,  7819,  7804,  7840,  7839,  7853,  7862,  7861,  7877,
    7876,  7892,  7891,  7904,  7898,  7911,  7910,  7945,  7950,  7955,
    7960,  7966,  7965,  7972,  7979,  7989,  7978,  8009,  8010,  8011,
    8012,  8016,  8017,  8029,  8030,  8034,  8035,  8038,  8040,  8048,
    8056,  8058,  8060,  8061,  8069,  8070,  8076,  8085,  8083,  8096,
    8109,  8108,  8121,  8119,  8132,  8139,  8149,  8150,  8174,  8181,
    8185,  8191,  8189,  8206,  8208,  8213,  8221,  8220,  8234,  8238,
    8237,  8249,  8250,  8254,  8267,  8268,  8272,  8276,  8283,  8288,
    8292,  8299,  8303,  8308,  8316,  8324,  8334,  8345,  8355,  8366,
    8376,  8382,  8388,  8393,  8399,  8413,  8427,  8432,  8436,  8441,
    8442,  8443,  8448,  8453,  8459,  8461,  8462,  8463,  8464,  8468,
    8473,  8481,  8486,  8494,  8495,  8499,  8500,  8504,  8504,  8507,
    8509,  8513,  8514,  8518,  8519,  8528,  8529,  8530,  8534,  8535,
    8540,  8549,  8550,  8551,  8552,  8557,  8556,  8566,  8565,  8573,
    8580,  8590,  8607,  8610,  8617,  8621,  8628,  8632,  8636,  8643,
    8643,  8649,  8650,  8654,  8655,  8656,  8660,  8661,  8670,  8677,
    8678,  8683,  8682,  8694,  8695,  8696,  8700,  8702,  8701,  8708,
    8707,  8728,  8729,  8733,  8734,  8738,  8739,  8740,  8744,  8745,
    8750,  8749,  8770,  8771,  8775,  8780,  8781,  8788,  8790,  8795,
    8797,  8796,  8808,  8810,  8809,  8822,  8823,  8828,  8837,  8838,
    8839,  8843,  8850,  8860,  8868,  8877,  8879,  8878,  8884,  8883,
    8906,  8907,  8911,  8912,  8916,  8917,  8918,  8919,  8920,  8921,
    8925,  8926,  8931,  8930,  8951,  8952,  8953,  8958,  8957,  8963,
    8970,  8976,  8985,  8986,  8990,  9006,  9005,  9018,  9019,  9023,
    9024,  9028,  9039,  9050,  9051,  9056,  9055,  9066,  9067,  9071,
    9072,  9076,  9087,  9099,  9098,  9106,  9106,  9115,  9116,  9121,
    9122,  9131,  9140,  9141,  9142,  9143,  9144,  9145,  9146,  9150,
    9151,  9152,  9153,  9154,  9155,  9156,  9160,  9160,  9168,  9168,
    9180,  9184,  9186,  9190,  9190,  9201,  9205,  9207,  9211,  9211,
    9222,  9227,  9227,  9236,  9236,  9248,  9254,  9252,  9259,  9271,
    9269,  9276,  9286,  9291,  9290,  9295,  9299,  9310,  9311,  9315,
    9316,  9320,  9321,  9322,  9326,  9327,  9328,  9332,  9333,  9334,
    9335,  9336,  9340,  9340,  9358,  9365,  9367,  9371,  9375,  9381,
    9388,  9390,  9399,  9403,  9407,  9414,  9422,  9426,  9434,  9437,
    9444,  9448,  9452,  9456,  9463,  9464,  9468,  9469,  9486,  9505,
    9507,  9514,  9525,  9526,  9527,  9541,  9546,  9568,  9574,  9580,
    9586,  9592,  9601,  9602,  9603,  9604,  9605,  9609,  9610,  9611,
    9615,  9616,  9617,  9621,  9622,  9627,  9678,  9685,  9728,  9734,
    9740,  9746,  9752,  9758,  9764,  9770,  9774,  9780,  9786,  9792,
    9798,  9804,  9808,  9814,  9823,  9829,  9837,  9843,  9852,  9858,
    9866,  9876,  9883,  9891,  9897,  9906,  9910,  9916,  9922,  9928,
    9934,  9941,  9947,  9953,  9959,  9965,  9972,  9978,  9984,  9990,
    9996, 10002, 10008, 10014, 10020, 10024, 10025, 10029, 10030, 10034,
   10035, 10039, 10040, 10044, 10045, 10046, 10047, 10048, 10049, 10053,
   10054, 10059, 10063, 10067, 10068, 10069, 10073, 10074, 10075, 10076,
   10077, 10078, 10082, 10083, 10084, 10089, 10088, 10094, 10102, 10125,
   10132, 10141, 10142, 10143, 10144, 10148, 10157, 10158, 10159, 10160,
   10161, 10162, 10163, 10164, 10196, 10197, 10198, 10199, 10200, 10201,
   10202, 10203, 10204, 10205, 10206, 10207, 10214, 10220, 10225, 10235,
   10240, 10245, 10251, 10256, 10262, 10273, 10280, 10285, 10290, 10295,
   10300, 10305, 10310, 10318, 10319, 10320, 10324, 10325, 10333, 10334,
   10340, 10344, 10350, 10356, 10365, 10366, 10375, 10382, 10396, 10402,
   10408, 10417, 10426, 10432, 10438, 10444, 10450, 10465, 10476, 10482,
   10488, 10494, 10500, 10506, 10514, 10521, 10525, 10530, 10538, 10559,
   10566, 10572, 10579, 10586, 10592, 10598, 10604, 10610, 10616, 10622,
   10628, 10634, 10641, 10647, 10654, 10660, 10665, 10670, 10675, 10680,
   10698, 10704, 10710, 10715, 10722, 10729, 10737, 10744, 10751, 10758,
   10765, 10782, 10788, 10794, 10800, 10806, 10813, 10819, 10825, 10834,
   10845, 10852, 10858, 10864, 10871, 10879, 10885, 10891, 10896, 10902,
   10910, 10916, 10922, 10928, 10934, 10942, 10954, 10961, 10976, 10982,
   10989, 10996, 11003, 11010, 11017, 11021, 11028, 11046, 11045, 11113,
   11121, 11123, 11128, 11129, 11133, 11134, 11138, 11139, 11143, 11150,
   11158, 11185, 11191, 11197, 11203, 11209, 11215, 11224, 11231, 11233,
   11230, 11240, 11251, 11257, 11263, 11269, 11275, 11281, 11287, 11293,
   11299, 11306, 11305, 11330, 11339, 11357, 11359, 11366, 11373, 11380,
   11387, 11394, 11401, 11408, 11415, 11422, 11429, 11440, 11447, 11458,
   11469, 11489, 11488, 11494, 11511, 11517, 11526, 11535, 11545, 11544,
   11556, 11566, 11574, 11579, 11587, 11588, 11593, 11598, 11601, 11603,
   11607, 11612, 11620, 11621, 11625, 11629, 11636, 11643, 11650, 11663,
   11662, 11679, 11682, 11681, 11686, 11685, 11690, 11689, 11693, 11698,
   11699, 11703, 11704, 11705, 11706, 11707, 11708, 11709, 11710, 11714,
   11715, 11716, 11720, 11721, 11725, 11732, 11740, 11741, 11745, 11752,
   11760, 11769, 11779, 11780, 11789, 11798, 11810, 11811, 11823, 11834,
   11835, 11841, 11842, 11860, 11869, 11867, 11885, 11883, 11894, 11904,
   11902, 11920, 11919, 11929, 11940, 11938, 11957, 11956, 11967, 11979,
   11980, 11981, 11985, 11986, 11994, 11995, 11999, 12014, 12015, 12019,
   12019, 12059, 12125, 12168, 12169, 12178, 12177, 12186, 12187, 12188,
   12192, 12193, 12194, 12194, 12198, 12204, 12212, 12212, 12227, 12244,
   12245, 12253, 12263, 12262, 12276, 12293, 12276, 12300, 12304, 12313,
   12324, 12325, 12330, 12333, 12334, 12335, 12339, 12340, 12345, 12344,
   12350, 12349, 12357, 12358, 12361, 12363, 12363, 12367, 12367, 12372,
   12373, 12377, 12379, 12384, 12385, 12389, 12400, 12414, 12415, 12416,
   12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12429,
   12430, 12431, 12432, 12433, 12434, 12435, 12436, 12437, 12441, 12442,
   12443, 12444, 12447, 12449, 12450, 12454, 12455, 12463, 12465, 12469,
   12471, 12470, 12484, 12487, 12486, 12501, 12506, 12521, 12523, 12527,
   12532, 12540, 12541, 12558, 12581, 12582, 12588, 12589, 12593, 12606,
   12605, 12613, 12614, 12623, 12624, 12628, 12629, 12633, 12634, 12648,
   12649, 12653, 12663, 12672, 12679, 12686, 12696, 12697, 12704, 12714,
   12715, 12717, 12719, 12721, 12723, 12732, 12736, 12737, 12741, 12753,
   12755, 12760, 12759, 12809, 12814, 12822, 12823, 12824, 12828, 12829,
   12833, 12846, 12853, 12858, 12865, 12872, 12879, 12889, 12894, 12899,
   12903, 12909, 12915, 12924, 12933, 12937, 12944, 12945, 12948, 12950,
   12954, 12955, 12959, 12960, 12961, 12962, 12963, 12964, 12968, 12969,
   12970, 12971, 12972, 12976, 12977, 12978, 12979, 12983, 12984, 12985,
   12986, 12987, 12991, 12992, 12993, 12994, 12995, 12999, 13004, 13005,
   13009, 13010, 13014, 13015, 13016, 13021, 13020, 13054, 13055, 13059,
   13060, 13064, 13074, 13074, 13086, 13087, 13090, 13110, 13114, 13119,
   13127, 13132, 13143, 13131, 13145, 13160, 13172, 13171, 13189, 13188,
   13197, 13214, 13220, 13228, 13236, 13250, 13265, 13273, 13277, 13282,
   13281, 13290, 13295, 13301, 13306, 13311, 13318, 13316, 13330, 13331,
   13335, 13346, 13359, 13360, 13364, 13378, 13382, 13391, 13394, 13401,
   13402, 13410, 13418, 13409, 13430, 13437, 13429, 13449, 13457, 13458,
   13465, 13469, 13470, 13479, 13480, 13484, 13494, 13495, 13496, 13498,
   13497, 13509, 13511, 13515, 13516, 13517, 13521, 13522, 13526, 13527,
   13531, 13541, 13542, 13546, 13547, 13551, 13552, 13556, 13557, 13562,
   13561, 13577, 13576, 13591, 13592, 13596, 13597, 13601, 13606, 13614,
   13622, 13633, 13634, 13640, 13648, 13650, 13652, 13650, 13665, 13673,
   13664, 13695, 13696, 13700, 13709, 13710, 13714, 13724, 13725, 13732,
   13731, 13747, 13750, 13757, 13758, 13765, 13780, 13786, 13785, 13797,
   13796, 13809, 13811, 13815, 13816, 13820, 13835, 13853, 13854, 13858,
   13859, 13863, 13864, 13865, 13870, 13881, 13869, 13891, 13893, 13894,
   13897, 13899, 13902, 13904, 13907, 13908, 13911, 13915, 13919, 13923,
   13927, 13931, 13935, 13939, 13943, 13951, 13954, 13964, 13963, 13979,
   13986, 13994, 14002, 14010, 14018, 14026, 14033, 14040, 14046, 14048,
   14050, 14059, 14063, 14068, 14067, 14074, 14073, 14078, 14087, 14094,
   14099, 14104, 14109, 14114, 14119, 14121, 14123, 14125, 14132, 14140,
   14142, 14150, 14157, 14164, 14172, 14178, 14183, 14191, 14199, 14207,
   14211, 14216, 14223, 14228, 14235, 14242, 14248, 14254, 14260, 14268,
   14273, 14280, 14287, 14294, 14301, 14306, 14311, 14316, 14321, 14328,
   14350, 14352, 14354, 14359, 14360, 14363, 14365, 14369, 14370, 14374,
   14375, 14379, 14380, 14384, 14385, 14389, 14390, 14394, 14395, 14403,
   14415, 14414, 14430, 14429, 14439, 14440, 14441, 14442, 14443, 14447,
   14448, 14452, 14459, 14460, 14461, 14465, 14466, 14479, 14480, 14481,
   14496, 14495, 14508, 14507, 14519, 14523, 14524, 14539, 14542, 14541,
   14554, 14555, 14560, 14562, 14564, 14566, 14568, 14570, 14578, 14580,
   14582, 14584, 14589, 14591, 14599, 14601, 14603, 14605, 14622, 14623,
   14627, 14628, 14631, 14633, 14634, 14638, 14654, 14655, 14660, 14659,
   14669, 14670, 14674, 14674, 14678, 14677, 14683, 14687, 14688, 14692,
   14693, 14701, 14700, 14711, 14715, 14719, 14732, 14731, 14746, 14747,
   14748, 14752, 14753, 14754, 14755, 14763, 14767, 14776, 14782, 14794,
   14805, 14816, 14829, 14793, 14839, 14840, 14844, 14845, 14849, 14850,
   14858, 14862, 14863, 14864, 14867, 14869, 14873, 14874, 14878, 14883,
   14890, 14895, 14902, 14904, 14908, 14909, 14913, 14918, 14926, 14927,
   14931, 14933, 14941, 14942, 14946, 14947, 14948, 14952, 14954, 14959,
   14960, 14969, 14970, 14974, 14975, 14979, 14992, 14997, 15002, 15007,
   15015, 15023, 15028, 15041, 15050, 15066, 15073, 15079, 15089, 15090,
   15098, 15099, 15100, 15101, 15115, 15121, 15127, 15133, 15139, 15145,
   15164, 15174, 15184, 15190, 15197, 15207, 15215, 15223, 15235, 15236,
   15245, 15244, 15263, 15264, 15269, 15270, 15277, 15275, 15302, 15303,
   15309, 15314, 15323, 15338, 15339, 15343, 15348, 15356, 15361, 15369,
   15374, 15379, 15384, 15390, 15395, 15403, 15408, 15413, 15418, 15424,
   15432, 15433, 15444, 15452, 15456, 15462, 15468, 15478, 15484, 15493,
   15503, 15504, 15508, 15509, 15510, 15514, 15522, 15530, 15538, 15546,
   15547, 15555, 15556, 15564, 15565, 15570, 15579, 15580, 15588, 15589,
   15598, 15599, 15607, 15608, 15612, 15621, 15622, 15623, 15627, 15640,
   15670, 15680, 15680, 15682, 15692, 15693, 15694, 15695, 15696, 15697,
   15698, 15699, 15700, 15705, 15706, 15707, 15708, 15709, 15710, 15711,
   15712, 15713, 15714, 15722, 15723, 15724, 15725, 15726, 15727, 15731,
   15732, 15733, 15734, 15735, 15736, 15737, 15738, 15739, 15743, 15744,
   15745, 15746, 15747, 15748, 15749, 15753, 15754, 15755, 15756, 15757,
   15758, 15759, 15760, 15761, 15765, 15766, 15767, 15768, 15769, 15770,
   15771, 15784, 15785, 15786, 15787, 15788, 15789, 15790, 15791, 15792,
   15793, 15794, 15795, 15796, 15797, 15798, 15799, 15800, 15801, 15802,
   15803, 15804, 15805, 15806, 15807, 15808, 15809, 15810, 15811, 15812,
   15813, 15814, 15815, 15816, 15817, 15818, 15819, 15820, 15821, 15822,
   15823, 15824, 15825, 15826, 15827, 15828, 15829, 15830, 15831, 15832,
   15833, 15834, 15835, 15836, 15837, 15838, 15879, 15880, 15881, 15882,
   15883, 15884, 15895, 15896, 15897, 15898, 15899, 15900, 15901, 15902,
   15903, 15904, 15908, 15909, 15910, 15917, 15918, 15919, 15923, 15924,
   15925, 15934, 15935, 15936, 15937, 15938, 15939, 15940, 15941, 15942,
   15943, 15944, 15945, 15946, 15947, 15948, 15949, 15950, 15951, 15952,
   15953, 15954, 15955, 15956, 15957, 15958, 15959, 15960, 15961, 15962,
   15963, 15964, 15965, 15966, 15967, 15975, 15976, 15977, 15978, 15979,
   15980, 15981, 15982, 15983, 15984, 15985, 15986, 15987, 15988, 15989,
   15990, 15991, 15992, 15993, 15994, 15995, 15996, 15997, 15998, 15999,
   16000, 16001, 16002, 16003, 16004, 16005, 16006, 16007, 16008, 16009,
   16010, 16011, 16012, 16013, 16014, 16015, 16016, 16017, 16018, 16019,
   16020, 16025, 16026, 16027, 16028, 16029, 16030, 16031, 16032, 16033,
   16034, 16035, 16036, 16037, 16038, 16039, 16040, 16041, 16042, 16043,
   16044, 16045, 16046, 16047, 16048, 16049, 16050, 16051, 16052, 16053,
   16054, 16055, 16056, 16057, 16058, 16059, 16060, 16061, 16062, 16063,
   16064, 16065, 16066, 16067, 16068, 16069, 16070, 16071, 16072, 16073,
   16074, 16075, 16076, 16077, 16078, 16079, 16080, 16081, 16082, 16083,
   16084, 16085, 16086, 16087, 16088, 16089, 16090, 16091, 16092, 16093,
   16094, 16095, 16096, 16097, 16098, 16099, 16100, 16101, 16102, 16103,
   16104, 16105, 16106, 16107, 16108, 16109, 16110, 16111, 16112, 16113,
   16114, 16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123,
   16124, 16125, 16126, 16127, 16128, 16129, 16130, 16131, 16132, 16133,
   16134, 16135, 16136, 16137, 16138, 16139, 16140, 16141, 16142, 16143,
   16144, 16145, 16146, 16147, 16148, 16149, 16150, 16151, 16152, 16153,
   16154, 16155, 16156, 16157, 16158, 16159, 16160, 16161, 16162, 16163,
   16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171, 16172, 16173,
   16174, 16175, 16176, 16177, 16178, 16179, 16180, 16181, 16182, 16183,
   16184, 16185, 16186, 16187, 16188, 16189, 16190, 16191, 16192, 16193,
   16194, 16195, 16196, 16197, 16198, 16199, 16200, 16201, 16202, 16203,
   16204, 16205, 16206, 16207, 16208, 16209, 16210, 16211, 16212, 16213,
   16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221, 16222, 16223,
   16224, 16225, 16226, 16227, 16228, 16229, 16230, 16231, 16232, 16233,
   16234, 16235, 16236, 16237, 16238, 16239, 16240, 16241, 16242, 16243,
   16244, 16245, 16246, 16247, 16248, 16249, 16250, 16251, 16252, 16253,
   16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262, 16263,
   16264, 16265, 16266, 16267, 16268, 16269, 16270, 16271, 16272, 16273,
   16274, 16275, 16276, 16277, 16278, 16279, 16280, 16281, 16282, 16283,
   16284, 16285, 16286, 16287, 16288, 16289, 16290, 16302, 16301, 16311,
   16315, 16310, 16328, 16327, 16341, 16340, 16356, 16355, 16382, 16383,
   16389, 16388, 16395, 16394, 16404, 16403, 16414, 16413, 16419, 16427,
   16429, 16434, 16434, 16443, 16442, 16456, 16455, 16460, 16464, 16465,
   16466, 16470, 16471, 16472, 16473, 16477, 16478, 16479, 16480, 16485,
   16490, 16495, 16504, 16509, 16514, 16519, 16524, 16529, 16534, 16539,
   16553, 16564, 16583, 16601, 16613, 16621, 16626, 16642, 16643, 16644,
   16645, 16649, 16668, 16686, 16687, 16691, 16692, 16693, 16694, 16698,
   16713, 16717, 16718, 16719, 16729, 16730, 16731, 16737, 16743, 16755,
   16754, 16768, 16769, 16775, 16784, 16785, 16789, 16790, 16794, 16813,
   16814, 16815, 16820, 16821, 16826, 16825, 16842, 16852, 16863, 16862,
   16894, 16895, 16899, 16900, 16904, 16905, 16906, 16907, 16909, 16908,
   16921, 16922, 16923, 16924, 16925, 16931, 16936, 16942, 16948, 16954,
   16961, 16968, 16972, 16979, 16988, 16990, 16995, 17000, 17007, 17014,
   17021, 17028, 17035, 17042, 17054, 17055, 17059, 17060, 17064, 17069,
   17077, 17087, 17106, 17109, 17111, 17115, 17116, 17123, 17125, 17129,
   17130, 17135, 17134, 17138, 17137, 17141, 17140, 17144, 17143, 17146,
   17147, 17148, 17149, 17150, 17151, 17152, 17153, 17154, 17155, 17156,
   17157, 17158, 17159, 17160, 17161, 17162, 17163, 17164, 17165, 17166,
   17167, 17168, 17169, 17170, 17171, 17172, 17176, 17177, 17181, 17182,
   17186, 17193, 17200, 17210, 17220, 17229, 17238, 17251, 17256, 17264,
   17269, 17277, 17282, 17289, 17289, 17290, 17290, 17293, 17300, 17305,
   17311, 17317, 17323, 17327, 17331, 17332, 17336, 17364, 17366, 17370,
   17374, 17378, 17385, 17391, 17397, 17403, 17409, 17418, 17419, 17423,
   17424, 17429, 17430, 17434, 17435, 17439, 17440, 17444, 17445, 17450,
   17449, 17459, 17468, 17469, 17473, 17474, 17479, 17480, 17481, 17486,
   17487, 17488, 17492, 17504, 17513, 17519, 17528, 17537, 17550, 17552,
   17554, 17559, 17560, 17565, 17564, 17581, 17580, 17592, 17592, 17613,
   17614, 17621, 17629, 17630, 17631, 17635, 17636, 17641, 17640, 17662,
   17669, 17670, 17674, 17675, 17679, 17680, 17681, 17686, 17694, 17715,
   17742, 17744, 17748, 17749, 17753, 17754, 17762, 17763, 17764, 17765,
   17766, 17772, 17778, 17788, 17789, 17794, 17807, 17823, 17824, 17825,
   17829, 17830, 17834, 17835, 17840, 17841, 17845, 17851, 17860, 17860,
   17885, 17886, 17887, 17888, 17889, 17890, 17891, 17895, 17896, 17897,
   17898, 17908, 17910, 17916, 17922, 17932, 17941, 17947, 17952, 17956,
   17930, 18010, 18028, 18027, 18045, 18054, 18043, 18076, 18084, 18075,
   18097, 18107, 18117, 18118, 18122, 18123, 18129, 18133, 18137, 18141,
   18145, 18149, 18157, 18158, 18174, 18181, 18188, 18198, 18199, 18200,
   18204, 18205, 18206, 18210, 18211, 18216, 18218, 18217, 18223, 18224,
   18228, 18235, 18245, 18251, 18262
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ADD",
  "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "AS", "ASC",
  "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM",
  "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM",
  "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM",
  "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FOR_SYSTEM_TIME_SYM", "FROM",
  "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM", "GRANT", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM", "HAVING", "HEX_NUM",
  "HEX_STRING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "POSITION_SYM", "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE",
  "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM", "REF_SYSTEM_ID_SYM",
  "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REPLACE",
  "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT", "ROWS_SYM",
  "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM", "SECOND_MICROSECOND_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERVER_OPTIONS", "SET",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SIGNAL_SYM", "SMALLINT",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_SMALL_RESULT", "SQL_SYM",
  "SSL_SYM", "STARTING", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM",
  "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM",
  "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM",
  "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM",
  "COLON_ORACLE_SYM", "COLUMNS", "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM",
  "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPORT_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM",
  "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOTFOUND_SYM", "NO_SYM",
  "NOMAXVALUE_SYM", "NOMINVALUE_SYM", "NO_WAIT_SYM", "NOWAIT_SYM",
  "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM", "NVARCHAR_SYM", "OF_SYM",
  "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM", "ONLY_SYM", "ONLINE_SYM",
  "OPEN_SYM", "OPTIONS_SYM", "OPTION", "OWNER_SYM", "PACK_KEYS_SYM",
  "PAGE_SYM", "PARSER_SYM", "PARTIAL", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM", "PERSISTENT_SYM",
  "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM", "STOP_SYM",
  "STORAGE_SYM", "STORED_SYM", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSTEM",
  "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TEXT_SYM", "THAN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIM_ORACLE",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "PREC_BELOW_ESCAPE", "CONDITIONLESS_JOIN",
  "ON_SYM", "PREC_BELOW_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'.'", "'@'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_var_list", "execute_var_ident",
  "help", "$@6", "change", "$@7", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "do_domain_id_list",
  "do_domain_id", "ignore_domain_id_list", "ignore_domain_id",
  "master_file_def", "optional_connection_name", "connection_name",
  "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15",
  "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23", "$@24",
  "$@25", "$@26", "package_implementation_executable_section",
  "package_implementation_declare_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2", "package_routine_lex",
  "package_specification_function", "$@27",
  "package_specification_procedure", "$@28",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@29",
  "package_implementation_procedure_body", "$@30",
  "package_implementation_item_declaration",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "create_function_tail", "opt_sequence", "sequence_defs", "sequence_def",
  "server_def", "$@31", "server_options_list", "server_option",
  "event_tail", "$@32", "ev_schedule_time", "$@33", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@34", "clear_privileges", "sp_name",
  "opt_sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "create_package_chistic", "create_package_chistics",
  "opt_create_package_chistics", "opt_create_package_chistics_init",
  "$@35", "sp_c_chistic", "sp_suid", "call", "$@36", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "sp_fdparams",
  "sp_param_name", "sp_param_name_and_type", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_parenthesized_fdparam_list", "$@37", "sp_parenthesized_pdparam_list",
  "$@38", "sp_no_param", "opt_sp_parenthesized_fdparam_list",
  "opt_sp_parenthesized_pdparam_list", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_proc_stmts1_implicit_block", "$@39", "opt_sp_decl_body_list",
  "sp_decl_body_list", "$@40", "sp_decl_non_handler_list",
  "sp_decl_handler_list", "opt_sp_decl_handler_list",
  "optionally_qualified_column_ident", "row_field_name",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_vars", "sp_decl_non_handler",
  "$@41", "sp_decl_handler", "$@42",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@43", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt", "sp_labelable_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@44", "sp_statement",
  "$@45", "$@46", "sp_proc_stmt_statement", "$@47", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@48", "reset_lex_expr", "$@49",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "remember_lex", "assignment_source_lex", "assignment_source_expr",
  "$@50", "for_loop_bound_expr", "$@51", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@52", "$@53", "$@54", "sp_elseifs",
  "case_stmt_specification", "$@55", "case_stmt_body", "$@56", "$@57",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@58", "$@59", "searched_when_clause", "$@60",
  "$@61", "else_clause_opt", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@62", "$@63", "$@64", "opt_not_atomic",
  "sp_unlabeled_block", "$@65", "$@66", "$@67", "sp_instr_addr", "sp_body",
  "$@68", "$@69", "$@70", "sp_block_statements_and_exceptions", "$@71",
  "opt_exception_clause", "exception_handlers", "exception_handler",
  "$@72", "opt_sp_for_loop_direction", "sp_for_loop_index_and_bounds",
  "sp_for_loop_bounds", "loop_body", "while_body", "$@73", "repeat_body",
  "$@74", "pop_sp_loop_label", "sp_labeled_control", "$@75", "$@76",
  "$@77", "$@78", "$@79", "$@80", "sp_unlabeled_control", "$@81", "$@82",
  "$@83", "$@84", "$@85", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@86", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@87", "$@88", "$@89", "create_like", "opt_create_select",
  "create_select_query_expression", "$@90", "$@91", "$@92",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@93",
  "have_partitioning", "partition_entry", "$@94", "partition", "$@95",
  "part_type_def", "$@96", "$@97", "$@98", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@99", "$@100", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@101", "part_name",
  "opt_part_values", "$@102", "$@103", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@104", "$@105",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@106", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "opt_versioning_interval_start",
  "create_select_query_specification", "create_select_part2", "$@107",
  "create_select_part3", "create_select_part3_union_not_ready",
  "create_select_part4", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@108", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list", "field_list",
  "field_list_item", "column_def", "key_def", "$@109", "$@110", "$@111",
  "$@112", "$@113", "$@114", "$@115", "constraint_def",
  "period_for_system_time", "opt_check_constraint", "check_constraint",
  "opt_constraint_no_id", "opt_constraint", "constraint", "field_spec",
  "@116", "field_type_or_serial", "$@117", "$@118", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@119", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@120", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "qualified_field_type", "field_type", "sp_param_field_type",
  "field_type_numeric", "opt_binary_and_compression", "field_type_string",
  "sp_param_field_type_string", "field_type_temporal", "field_type_lob",
  "field_type_misc", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "srid_option", "float_options",
  "precision", "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1",
  "opt_field_length_default_sp_param_varchar",
  "opt_field_length_default_sp_param_char", "opt_precision",
  "attribute_list", "attribute", "opt_compression_method",
  "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "type_with_opt_collate",
  "sp_param_type_with_opt_collate", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "opt_binary", "binary", "opt_bin_mod",
  "ws_nweights", "$@121", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@122", "$@123", "$@124", "$@125", "$@126", "$@127", "$@128",
  "$@129", "$@130", "$@131", "$@132", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@133", "$@134", "$@135", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@136",
  "add_part_extra", "reorg_partition_rule", "$@137", "reorg_parts_rule",
  "$@138", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@139", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@140", "$@141", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@142",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@143", "opt_checksum_type",
  "repair_table_or_view", "$@144", "repair", "$@145", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@146", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@147", "persistent_index_stat_spec",
  "$@148", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@149", "check", "$@150",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@151", "opt_no_write_to_binlog",
  "rename", "$@152", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@153", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@154", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@155", "cache_keys_spec", "$@156", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "union_list_part2",
  "select_paren", "$@157", "$@158",
  "select_parent_union_query_term_proper", "select_paren_union_query_term",
  "$@159", "select_parent_view_proper", "select_paren_view", "$@160",
  "select_paren_derived", "$@161", "$@162", "select_init3", "$@163",
  "select_init3_union_query_term", "$@164", "select_init3_view", "$@165",
  "select_part3", "select_part3_union_query_term", "select_part3_view",
  "select_part3_union_not_ready", "select_part3_union_not_ready_noproc",
  "select_options_and_item_list", "$@166", "table_expression",
  "opt_table_expression", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "opt_select_lock_type", "select_item_list",
  "select_item", "remember_tok_start", "remember_tok_end", "remember_name",
  "remember_end", "remember_end_opt", "select_alias",
  "opt_default_time_precision", "opt_time_precision", "optional_braces",
  "expr", "bool_pri", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "$@167", "dyncall_create_element", "dyncall_create_list",
  "plsql_cursor_attr", "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@168", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@169", "$@170", "$@171",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@172",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@173", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@174", "cast_type", "$@175", "$@176",
  "$@177", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@178", "$@179", "$@180", "$@181", "$@182", "$@183", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident", "$@184", "table_primary_derived",
  "select_derived_union", "$@185", "union_list_derived_part2", "$@186",
  "union_list_derived", "select_init2_derived", "select_part2_derived",
  "$@187", "select_derived", "derived_simple_table",
  "derived_query_specification", "derived_table_value_constructor",
  "$@188", "select_derived2", "$@189", "$@190", "get_select_lex",
  "get_select_lex_derived", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@191",
  "$@192", "index_hints_list", "opt_index_hints_list", "$@193",
  "opt_key_definition", "$@194", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@195", "opt_having_clause", "$@196", "opt_escape",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@197",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@198", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause_init", "limit_clause", "limit_options", "limit_option",
  "limit_rows_option", "delete_limit_clause", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "longlong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "choice", "bool",
  "procedure_clause", "$@199", "procedure_list", "procedure_list2",
  "procedure_item", "select_var_list_init", "$@200", "select_var_list",
  "select_var_ident", "select_outvar", "into", "into_destination", "$@201",
  "$@202", "do", "$@203", "drop", "$@204", "$@205", "$@206", "table_list",
  "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "opt_if_exists_table_element",
  "opt_if_exists", "opt_temporary", "insert", "$@207", "$@208", "replace",
  "$@209", "$@210", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "$@211", "fields", "insert_values",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "opt_with", "opt_by", "no_braces", "$@212", "no_braces_with_names",
  "$@213", "opt_values", "opt_values_with_names", "values",
  "values_with_names", "expr_or_default", "opt_insert_update", "$@214",
  "$@215", "update", "$@216", "$@217", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "$@218", "opt_delete_system_time", "delete_part2", "delete_single_table",
  "single_multi", "$@219", "$@220", "opt_select_expressions",
  "table_wild_list", "table_wild_one", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@221", "$@222",
  "opt_truncate_table_storage_clause", "opt_table_sym", "opt_profile_defs",
  "profile_defs", "profile_def", "opt_profile_args", "show", "$@223",
  "show_param", "$@224", "$@225", "show_engine_param", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "from_or_in", "binlog_in",
  "binlog_from", "wild_and_where", "describe", "$@226", "$@227",
  "explainable_command", "describe_command", "analyze_stmt_command",
  "opt_extended_describe", "opt_format_json", "opt_describe_column",
  "flush", "$@228", "flush_options", "$@229", "opt_flush_lock",
  "flush_lock", "$@230", "flush_options_list", "flush_option",
  "opt_table_list", "opt_delete_gtid_domain", "delete_domain_id_list",
  "delete_domain_id", "optional_flush_tables_arguments", "reset", "$@231",
  "reset_options", "reset_option", "$@232", "$@233", "slave_reset_options",
  "master_reset_options", "purge", "$@234", "purge_options",
  "purge_option", "kill", "$@235", "kill_type", "kill_option", "kill_expr",
  "shutdown", "use", "load", "$@236", "$@237", "$@238", "$@239",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "opt_with_clause",
  "with_clause", "$@240", "opt_recursive", "with_list",
  "with_list_element", "$@241", "opt_with_column_list", "with_column_list",
  "query_name", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "ident_directly_assignable", "label_ident",
  "labels_declaration_oracle", "label_declaration_oracle", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case",
  "keyword_directly_assignable", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@242", "$@243", "$@244",
  "set_assign", "$@245", "$@246", "$@247",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@248", "$@249", "$@250",
  "start_option_value_list_following_option_type", "$@251",
  "option_value_list_continued", "option_value_list", "$@252", "$@253",
  "option_value", "$@254", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@255",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@256", "handler", "$@257",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@258", "handler_rkey_mode", "revoke", "revoke_command",
  "admin_option_for_role", "grant", "grant_command", "opt_with_admin",
  "opt_with_admin_option", "role_list", "current_role", "grant_role",
  "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@259", "$@260", "$@261",
  "$@262", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@263", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_clause", "union_list",
  "$@264", "union_list_view", "$@265", "union_order_or_limit", "$@266",
  "order_or_limit", "union_head_non_top", "union_option", "simple_table",
  "table_value_constructor", "$@267", "query_specification",
  "query_term_union_not_ready", "query_term_union_ready",
  "query_expression_body", "subselect", "subselect_start", "subselect_end",
  "opt_query_expression_options", "query_expression_option_list",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@268", "query_expression_body_view",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@269", "$@270",
  "$@271", "$@272", "$@273", "udf_tail", "sf_return_type", "$@274",
  "sf_tail", "$@275", "$@276", "sp_tail", "$@277", "$@278",
  "sf_tail_standalone", "sp_tail_standalone",
  "opt_package_routine_end_name", "sp_tail_is", "xa", "opt_format_xid",
  "xid", "begin_or_start", "opt_join_or_resume", "opt_one_phase",
  "opt_suspend", "$@279", "opt_migrate", "install", "uninstall",
  "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,    61,    62,    60,
     124,    38,    45,    43,    42,    47,    37,    94,   126,  1002,
    1003,  1004,    40,    41,    44,    33,   123,   125,    59,    46,
      64
};
# endif

#define YYPACT_NINF -5165

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5165)))

#define YYTABLE_NINF -3501

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
   36306,  3515,  1095, 83257, -5165,    81, -5165,   863, -5165, -5165,
   -5165, -5165,  4868, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,   395,  1133, -5165,  1170, -5165, -5165, -5165, 78819,    20,
    1101, -5165, -5165, 80087, -5165,    36, -5165, 80087, -5165, -5165,
   83257, -5165,   509, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  2910,    63, -5165, -5165, -5165, -5165, -5165, -5165,
    1390, -5165, -5165, -5165, -5165, -5165,  1133, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, 83257, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,   -65, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  1420,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, 83891, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,   617,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    1088, -5165, -5165, 68016, -5165, -5165,   352, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    1698, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, 83257, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,  1170, -5165, -5165,  2017, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,   -65, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, 83257, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,   382, -5165, -5165,   331, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165,  1960, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,  3150, -5165, -5165,  1986,  2209, -5165, -5165,  1626, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,  4402, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, 68650,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,   487, -5165,
   -5165, -5165,   354, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, 83257, 83257,  1607,  1624,
   83257,  2337,  2285, 79453, 83257,  2285, -5165,   535, -5165, -5165,
    2052, -5165,  1833, -5165,  1133,  2641, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  1756, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  2303,  2338,   592,  2604,  2631, 83257,
   48933,  1331,  2285,  2767,  2288,  2285,  2285,  2285,  2285,  2776,
    2285,  2285, 83257, -5165,  2285,  2285,   978, 87695, 33513, -5165,
    1704,  1512,  2780, -5165, -5165, -5165, -5165, -5165, -5165,  6515,
    1133, 20313,  2884,   706,  5127,  2224, -5165,  2721, -5165, -5165,
   83257, -5165, -5165,  6515,  1196, -5165,  2721, 34250, -5165, 32070,
    8068,  2721,  1133,  2823, -5165, 20313, -5165, -5165,   -65, -5165,
   -5165, -5165,  2657, -5165, 79453, -5165, -5165, -5165,  2207, -5165,
    2982, 20313,   192, -5165, -5165, -5165,  2596, 83257,  2454,  1788,
    1333, 79453, 83257,  2338,  2954, -5165,  2211,  1337, -5165,  2400,
    2338,  1201,  2429,  2338,  2829, 83257,  2338, -5165, -5165,  2018,
    2018,  2018,  2692,  2018, -5165,  2018, -5165, -5165,  2323, 83257,
    3026, -5165, -5165, -5165,  3026,  3026,  2510,  3066,  3082,  3084,
     166,  2520,  1122,  2723,  2052,  2132,  1833,  2360, -5165, -5165,
   -5165,  2453, -5165, -5165,   126, -5165,  3402, -5165, 83257, -5165,
    2515, -5165,  1890, 49631, -5165, 83257,  3168, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,   689, -5165, -5165,  2990,   686,
    2612,  2840,  2536, -5165,  3018, 79453, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,  2517, 83257, -5165,  3200, 20313,  2303, -5165,
    3016, -5165, -5165, -5165, -5165, 68016, -5165, 83257, -5165,  3280,
   -5165, -5165, 87695, -5165, -5165,  1432, -5165, -5165, 51707,  1322,
   41988, -5165,  2522,  2525,  2843, -5165,  2531,  1437,  1530, -5165,
    1610, -5165, -5165,  1654,  1886,  1899, -5165, -5165,  3211, -5165,
   -5165, 71201,   593, 83257,  3249, 83257,  2285, 83257, 83257, 83257,
   83257, 83257, 83257, -5165, 79453,  2671, -5165, -5165,  2285,  2285,
   -5165,  3233,  2782,  2744,  2413,  2617,  2933, -5165,  2828, -5165,
   -5165,  2712, -5165, -5165,   284, -5165, -5165, -5165,   282,   314,
     328,   337,  3232,   338,   997,   363,   376, -5165, -5165, -5165,
    3149,  3242,  2656, -5165,  3012, 20313, -5165, -5165, -5165,  3321,
   -5165, -5165,  1452,  3099,   273, 68016, 88329, 71845, 89247, 89247,
   89247, -5165, -5165,   202, 89247, 83257, 88788, 83257,  8141,  2676,
   -5165, -5165, -5165, 37778, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, 83257, -5165, -5165, -5165,   482, -5165, -5165, -5165,
   -5165, -5165,  9210, -5165, -5165, 24837, -5165,  2694,  2697,  2713,
   16543,  2716,  2724,  2728,  2730,  2735,  2617,  2617,  2617,  2739,
    2742,  2763,  2769, -5165,  2779,  2781,  2799,  2804, -5165,  2820,
   -5165,  2830,  2833,  2838, -5165, -5165,   137,   186,  2847,  2850,
   21067,  2875, -5165, 63578,  2882,  2908,  2911,  2916, -5165, -5165,
   20313,  2739,  2925, -5165, -5165,  2934, -5165,  2942,  2958,  2965,
    2968,  2972,  2975,  2978,  2993,  3006,  3322,  3009,  3020,  3023,
    3030,  2739, -5165,  3033, -5165, -5165,  2229,  2617,  2739,  2739,
    3040,  3054,  3061,  3076,  3080,  3100,  3107,  3114, 80721,  3118,
    3120,  3124,  3144,  3148,  3170,  3177,    69,  3184,  3186,  3189,
    3196,  3209,  3217,  3221,  3264,  3271,  3272,  3273,  3276,  3279,
    3281,  3286,  3288,  2800,  3291,  3293,  3297,  3298,  3302,  2904,
    3304,  3306,  3311,  3319,  3320,  3323,  3325,    87,  3328,  3329,
     179,  3331,  3338,  3339,  3340,  3347,  3355,  3356,  3359, 25591,
   26345, 24837, 20313, -5165, 83257, 84525, -5165,  3578,   664, -5165,
    3809, 24837, -5165, -5165, -5165,  3534, -5165,  3499, -5165, -5165,
   -5165, -5165, -5165, -5165,  3526, -5165,  3587, -5165, -5165,  3593,
    3091, -5165,  3584, -5165, -5165, -5165, -5165, -5165,  3085,  3364,
    3802,  3815, -5165, -5165, -5165, -5165,  3537, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    3278,  3336, -5165,  3584, -5165, -5165, 50324, 68016,  5752, -5165,
   -5165, -5165, 64212, -5165, -5165,  2782,  3514,  3918, -5165,  4012,
   -5165,  3951, 55119,  3895,  1258,   488,  3361,   627,   628, 41261,
     303, 76283,   678,   287,  3371, 59774, 44874,  3373,   140,  3378,
   -5165,  3379,  3380,  3382,  3387,  3388,  3392,  3393, -5165, -5165,
   -5165,  3511,  3406,  3197,  1940, -5165, -5165,   365,   989,  3482,
   -5165,  3752, -5165,  1940, -5165, 34910,  4036,  2555, -5165,  1076,
   -5165,  4084, -5165, -5165,  3512,  3497,  3527, -5165,  2870, -5165,
    2338, -5165,   130, -5165,  4036,  1940,  2555, -5165,  3695,  3777,
    1464,  4102, -5165,   -72, -5165, -5165,  3321, -5165,  2959, 83257,
   -5165, -5165, -5165,  3431, 68016, 68016, 83257,  1006,   327,  3578,
    3432, -5165, 20313,  3923,  3510, 38481, -5165,   220, -5165, -5165,
   83257, -5165,  3539, -5165, -5165,  1098, -5165,  3867, -5165,  3447,
   -5165, 85159,   327, -5165, -5165,  1293,  3839, -5165,  3453, -5165,
   -5165, -5165, -5165, 68016, -5165, -5165, -5165, -5165, -5165, -5165,
    3456, -5165, -5165,  3659,  3542, -5165,  3479, -5165, -5165,   215,
    4147, -5165,  2910, 83257, -5165, -5165,  3026, -5165,  3026,  3026,
    3026,  3026,  3026,  2359, -5165, -5165, -5165,  3501,  3784, -5165,
   -5165,  3018,  2641, 46892,  2929,  3002,  3469,   126,  3470,  3950,
    4008, -5165, -5165, -5165,   597, -5165, -5165,  1312, 14281,  4009,
    4185,  3857, -5165, -5165, -5165, -5165,  2617,  3478, -5165, -5165,
   -5165, -5165, -5165,  4246, -5165, -5165, 68016,  3683,  3866,  3866,
    3866,  4253, -5165, -5165, -5165, 49631, 68016, -5165, -5165, -5165,
     686, -5165,  1549, 83257, 68016,  3531, -5165, 68016, 20313, -5165,
   -5165, 20313, -5165,  3847,  3578, -5165, -5165, 68016,  2192, -5165,
   -5165, -5165,  4246,  3866, -5165,  3928,  1322,  3496,  3500, -5165,
    3505,  3505,    32, -5165,  3508,  4074,  3508, -5165,  3906,   602,
    2092,  3906, -5165,   602,  3508, -5165,  3519, -5165,  3906, -5165,
     602,  3505, -5165,  3505, -5165, -5165,   602,  3505, -5165,  3521,
    3508, -5165, -5165,  3906, -5165, -5165, -5165, -5165,  1847,  1759,
    3508, -5165, -5165, -5165,  3505,  3523,  3505,  3505,  3505,  3505,
   -5165,  3505,  4087,  3517,  4256, -5165, -5165, -5165, -5165, -5165,
    3508,   203,  3505,  3505,  3505,  3505,  3530,  1348, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,  4202, 83257,  4203, -5165, 68016,
    4282, 68016,  4004, -5165,  3536, -5165,  3532, -5165, -5165, -5165,
    4129, 83257, -5165, -5165, -5165, -5165,  3543,  2671, 51016, -5165,
    1718,  3899, 50324, 68016, -5165, -5165,  4170,  3690, -5165, -5165,
   -5165, -5165, -5165, -5165,  3632, -5165, -5165,  3561, -5165, -5165,
   -5165,  3566, -5165,  3566,  3566, -5165, -5165,  3566, 50324, -5165,
   -5165, 49631,  1865,  6325,  4218,  3109, -5165, 64212, -5165,  3873,
   21821, -5165, -5165, -5165,  3849,   260,  1705, -5165, -5165, -5165,
   -5165, -5165,  4063, -5165, -5165, -5165, -5165, -5165, 83257,  4267,
    4225, -5165, -5165, -5165,  4128, -5165, -5165,  4081,  3606,  4230,
    3610, -5165, -5165, -5165,   392, 20313,  3616, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, 68016,  3621, 24837, 24837,
   -5165,  4378,  4378,  4378, 20313,  3344,  1798,  3974, 20313, 20313,
   20313,  1989,  3624, -5165, -5165, -5165,   325, -5165,  3625, 20313,
   20313, 64846,  3626, -5165,  5740, 20313,  4322, 20313, 20313, 20313,
   20313, 20313,  5339, 20313, -5165, -5165, 84525, 64846,  4075,  3635,
   -5165,  3637, -5165,  2511, 20313,  2689, 20313, -5165, -5165, 20313,
   20313,  3631, 20313, 20313, 27099,  3638, 20313, 20313, 20313,  3642,
    3781,  4378,  4378, 20313,  2753, -5165, 15789, -5165, -5165, -5165,
   -5165, -5165,  4378,  4378, 20313, 20313,  2764, 20313, 20313, 20313,
   -5165,  3647, 20313, 20313, 20313, 20313, 20313, 20313, 20313, -5165,
   20313, 20313, 20313, 20313, 20313, 20313,  1670, 20313, 20313, 68016,
   20313, 20313, 20313, 20313, 20313, 20313, 20313,  4328, 68016, 20313,
   20313, 20313, 20313,  4329, 20313, 20313, 20313,  3660, 20313, 68016,
   20313, -5165, 20313,  3487,  3487, -5165, 20313, 15789, 20313,  3664,
   65480, 20313, 20313, 20313, 20313, 21067, -5165, 21067, -5165, -5165,
    3671,   301, -5165,  4138, 20313,  3657, 60408, -5165, -5165, -5165,
   -5165, 20313, 20313, 20313, 27099, -5165,   324, -5165, -5165, -5165,
   -5165, -5165, 15035, 27099, 27099,  3677, 27099, 27099, 27099, 27099,
   27099, 27099,  4300, 27099, 27099, 27853, 28607, 27099, 27099, 27099,
   27099,  2648, -5165, 79453, 24837, 69918,  3678,  4347, -5165, 84525,
   -5165,  2399,   598,  1307,  5127, 30080, -5165,  3684, -5165,  4182,
    3689, -5165,  1639, -5165, 68016, -5165, -5165, -5165,  4263,  3692,
    4368, 50324, 49631,  1916,  3688,   745,  3699, -5165, -5165, 51016,
   83257, -5165, -5165, -5165, -5165, -5165,  4256, 20313, -5165, 50324,
   -5165,  1273, 14281, -5165,  1093,  1508,   140, -5165, -5165, -5165,
   -5165, -5165, 14281, 83257, 55796,  3704,  3800,  3721,  3026, 47534,
   83257, 68016, 83257, 83257, 83257, 68016, 50324, 68016, -5165, -5165,
   -5165,  1223,  1940, 83257,  1940,  2555,  4352, -5165,  1792,  1792,
   -5165, -5165, -5165, 76917, -5165, -5165, -5165,  1940, 83257, 83257,
    1940, 49631, -5165,  2555,  2534, -5165,  4010,  3792, -5165, -5165,
   -5165,  4044, -5165, -5165,  4391,  3720, -5165,  4067, -5165, -5165,
    3819, -5165, -5165, 68016, -5165, -5165,  2555, -5165,  2555,  2555,
   20313,  1940,  1940,  1940,  1742, -5165,  3728, -5165,  3731, -5165,
   -5165,  4082,  3725,  4376,  3741, -5165, -5165,  4316,  1397,  4275,
   -5165,  4168, -5165,  4301, -5165, 20313,  3923,  3578, -5165, -5165,
    4020, -5165,  4022,  4027,  4028, -5165, -5165, -5165, -5165,  4184,
    4033, -5165,  2338,  4034, -5165, -5165,  3767, -5165, -5165, -5165,
   30080, 79453, -5165,  3768, -5165,  3786, -5165, -5165, -5165, 86427,
   -5165, 85793, -5165,  2338, -5165, -5165, -5165, 68016,  4269, -5165,
    2338,  2211, 83257, -5165, -5165, -5165,  1425, -5165, -5165, -5165,
    3879,  1201, -5165, -5165,  1639,  2018,  3958, -5165, -5165, -5165,
   79453, -5165, -5165, -5165, -5165, -5165,  4456, -5165, 51016, 49631,
   79453, 83257, 83257, 83257, 68016, 68016,  3026, 83257,  3026, -5165,
   -5165,  3026, -5165,  3026,  3026,  3816, -5165, -5165, -5165, -5165,
     244,   369,  4518, -5165,  2439, -5165,  2794,  2439,  4004,  4036,
   -5165,  4451, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  3793,  3002, -5165, -5165, -5165,  3789,
   -5165,  3787,  3402,  2929, -5165, -5165, -5165, -5165, -5165, -5165,
   24837,  2779, -5165,  3578, -5165, -5165, -5165,   216, -5165, -5165,
   -5165,  1368,  4151,  3541, -5165, 79453,  3541,  1745,  1663, -5165,
    3794,  2338,  1820, -5165,  1820, -5165,  4090, -5165,  4104,   163,
   -5165,  1639, -5165, -5165, -5165, -5165, -5165, 68016,  3803, -5165,
    3990,  3808,  3811,  3578,  3578, -5165,  6515,  4544,  4283,  8112,
     209,  3858, -5165, -5165, -5165, -5165, -5165, 68016, -5165, -5165,
    1827,  3547,  4298,  3818, -5165,  1322, -5165, -5165, -5165,  1981,
   -5165, -5165, -5165,  3906,   140,  3906, -5165, -5165,  2864,  1294,
   -5165, -5165, -5165,  1294, -5165,   230, -5165, -5165, -5165, -5165,
    1226, 46244,  4565,  4211,  3895,  3906, -5165,  4294,   602, -5165,
   -5165,  1294,  2018, -5165, -5165,  3906, -5165, -5165, -5165,  2018,
    1294, -5165,  4295, -5165, -5165, -5165,  1294,  3906, 87695,  1348,
     602, -5165, -5165,   602,  1294,   476, 83257, 54442, -5165,  4381,
   -5165,  1226,  4565,   602,  3906,  1294,  4419, -5165,  1294, 20313,
   20313, -5165, -5165, -5165,   390,  4263,  3907, -5165,  3831, -5165,
   -5165,  1012, -5165,  4416, 83257,  4508, 72479, -5165, 68016, -5165,
   83257,  1718,  3837, -5165, -5165, -5165, -5165, -5165,   140, -5165,
    3846,   233, 68016, 68016,  6515, -5165,  3850, -5165, -5165, 83257,
   -5165, -5165, -5165, -5165,  4354,   443, 30722, 66114, -5165, 66114,
   66114, -5165, -5165, -5165, -5165, -5165,   997, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, 48227,  3578, -5165, 68016, -5165,  4499,
     480, -5165,   234, 68016, -5165, -5165, 20313, -5165,  4497, 83257,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, 83257,  2517,
    3578, 83257, 48933, -5165, 87695,  6515,  6515, 20313,  1905, 20313,
   -5165,  3861, -5165,  3863,  3865,  3423,  4228, 20313, 20313, -5165,
    2979,  1102,   283, -5165,  3881,  3876, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  3883, -5165, -5165, -5165,   330,   387,
    3886, -5165,  3888, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,  4558, -5165,   305, -5165, -5165,   323,   341,
     425,   429,   518,  3900,   570,  3647,  2349,  3892, 64846, 84525,
    4378,  3894,   367,  4378,  3896,   573,   394,   702, -5165,   458,
     492,  4053, -5165,  1062,  1109,  1153, -5165, -5165,  3904,  3905,
     289,  4378,  3908, 17297, 18051, 18805,  3719,  3913,  3914,  3916,
    1187,  1241,  4378,  3917,  1593,  2388,  1790, 84525,  1224,  1926,
    1268, -5165,  2426,  1304,  1546,  1602,  1615,  2034,  2037,  1648,
    1768,  1778,  2442, -5165, -5165, -5165, -5165,  3891,  2064,  2072,
    3920,  3922,  2465,  2086,  2089,  2148,  2472,  2477,  2495, 68016,
    3925,  2161,  2173,  1796,  2524, 68016,  2196,  2228,  1799, -5165,
    2264,  3926,  1809,   349,  3929,  3931,  2273,  3937,  1831, -5165,
   84525, 83257,  3941,  3936,   353,   269,  1835,  2286,  5339,  5339,
   -5165, 20313,   542,   245, 84525,  1508, -5165,  4435,  3300,   490,
   -5165, -5165, -5165, -5165, -5165, -5165,   432, -5165,  3924, -5165,
    3935,  2824,  3949, 20313,  4206,  3949,   552,  4477,  2595,  2595,
   27099,  4429,  4172, 21067,   552, 21067,   552,  3949,  3949,  3949,
   -5165, 27099,  3945, 27099, 27099, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  4516,  3953,  1517,  3948, -5165, -5165, -5165, -5165,
   -5165, -5165,    34,  4356, -5165,  4142,   311, 20313,  2338, -5165,
    3976,  4459,  4464,  4466, -5165, -5165, -5165, -5165, 50324, 50324,
   68016,  4462, 20313, -5165,  1094,  3968, -5165, -5165,  4634, 51016,
    4641, -5165,  3972, 31364, 66114, 66114, 66114, 83257, 83257, 14281,
   55119,  4658,  4660,   140, -5165,  3578,   140, -5165,  3992,  3994,
   -5165, -5165,  1722,  4268, -5165,  3995,  3996, -5165,  3989,  3997,
    4003, 58504, 20313, -5165,   140,  1093, -5165, -5165, -5165, -5165,
   -5165,  3998, 83257, 83257, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,  2338, 20313, 83257,  1940, -5165, -5165, -5165,
    1940,  2338,  4671, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    4349, -5165, 80721,  4549,  1417, -5165,  4006, -5165, -5165, -5165,
   -5165, -5165,  1940, -5165, -5165, -5165, -5165, -5165,  4176,  4036,
    2870,  4352, -5165,  2555, 68016,  1940,  1940,  3578, -5165, -5165,
   -5165, -5165, 83257,  4372,  4545, -5165,  4013, -5165, -5165, -5165,
   68016, -5165,  6515, 83257, 83257, -5165,  6898, -5165, 79453, 56473,
   68016, -5165, -5165, -5165,  1386, -5165, -5165, -5165, -5165, -5165,
   -5165,  3578, -5165, 19559,  4719, -5165, -5165, -5165, -5165,  2338,
   -5165, -5165,  5916, -5165, 68016, -5165, 62310, -5165, 62310,  2125,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,   516,   519,  2951,  4004, -5165, -5165, 68016,  1428,
     234, -5165,  4776, -5165, -5165, -5165, -5165, -5165,  4023, -5165,
    4071, -5165, -5165, -5165,  4025, -5165,  4698, -5165, -5165,   236,
     483,   163, -5165,   717,  4615,  4618, -5165, -5165, 83257, -5165,
   83257, 83257, -5165,  3026, -5165, -5165,  3026, 68016,  3026, -5165,
   83257, -5165, 83257, -5165, 83257, -5165,  3026, -5165, -5165, -5165,
    4533,  4533, -5165, 61042, -5165, -5165,  4517,  4673, -5165, 83257,
   -5165, -5165,  2444, -5165,  4700, -5165, -5165,  4416, -5165,  4037,
   -5165, 20313, -5165,  4039,  4051, -5165, -5165, -5165, -5165, -5165,
   -5165,  2929,   829, 14281, -5165,   140,   140,  4271,  4569,  4570,
    4169,  2338,  4571,  4573,  4575, -5165, -5165, -5165,  2338,  2338,
   -5165, -5165,   140, -5165,  1671, -5165, -5165, -5165, -5165,  4050,
    2280, -5165,   140,   140, -5165,  2860, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,  1931, -5165,   276,  1806, 49631,  4526, -5165,
    4648,  4065, -5165, 68016,  4733, -5165, -5165, 20313,  4566,  7783,
   -5165, -5165,  4283, -5165,  4083,  4086,  4088,  4089,  4091,  4092,
    4093,  4095,  4096,  4100,  4101,  4103,  4105,  4108,  4109,  4110,
    4111,  4113,  4116,  4118,  4122,  4123,  4124,  4126,  4070, -5165,
   -5165,  4131, -5165, -5165, -5165, -5165,   140,   140,   140,   140,
   -5165,  3636, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    4382,  3363, 83257,  4750,  4467,  4115,  4119,  4125,  4130, -5165,
   -5165, 83257, -5165,  2564,  4578,  4607, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,   140, -5165, -5165, -5165, -5165,
    2592, -5165, -5165,  2610, -5165, -5165, -5165, -5165,  7126, -5165,
    2623, -5165, -5165, -5165, -5165, -5165,  1348,  1348,  4120, -5165,
   -5165, -5165,  4140, -5165, -5165, -5165, -5165,  4565, -5165,  4127,
   -5165,  3578,  3578, 70552, -5165, -5165, -5165, -5165,  2576, -5165,
   -5165,  2296, 83257,  4614, 72479, -5165, 20313,  4769, -5165, -5165,
    1742, -5165,  4141,  1639, -5165, -5165, 51016, -5165, 79453, 50324,
   -5165, -5165, -5165,  4148,  1905,  8233, -5165, -5165,  4842, -5165,
    2628, -5165, 49631,  4600, -5165, 66114,  4150, -5165,  4152,  4649,
    4655,  4663,  4665, -5165,  1094, -5165, -5165,  4171, -5165, -5165,
    4316,  4533,  4195,  4444,  4563, -5165, -5165, -5165,  3578, -5165,
   -5165,  4817, -5165, -5165, -5165,  2642,  4009, -5165, -5165, -5165,
    4528, -5165, 89247, 89247, 89247, -5165,  1840, -5165, 20313, -5165,
   -5165, 20313, -5165,  3578,  3834,  3674, 46244, -5165, 46244,  3674,
   20313, -5165,  4178, -5165,  4834,  4843, -5165, -5165, 20313, -5165,
   20313, -5165, 20313, -5165, 20313, 20313, 20313, 20313, 20313, 20313,
   -5165, 27099, -5165,  4196,  4205, -5165, -5165,  4207, -5165, 20313,
   -5165, 20313, -5165, -5165, 20313, 20313, 20313, 20313, -5165, -5165,
   20313, 20313,  4208, -5165, 20313,  3898, 20313,  3934, 20313,  4030,
   20313, -5165, -5165, -5165, 22575, -5165,  4209, -5165, -5165, -5165,
   -5165, -5165, 20313, -5165, 20313, -5165, 20313, 20313, 20313, 20313,
   20313, -5165, -5165, 20313, 20313, 20313, -5165, 20313, -5165,  4779,
   20313, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, 20313, -5165, -5165, -5165, -5165, 20313, -5165,
     477, 23329, -5165, 20313, 20313, 20313, -5165, -5165, 20313,  4200,
    4204, -5165, 83257, -5165, 20313,  2806,  4193,   234,  4213, 20313,
   -5165,  4221,  4224,  3432, -5165,   372,  3090, -5165, -5165, -5165,
    2181, -5165, -5165, -5165, 87061, 20313, -5165, -5165, -5165, -5165,
   -5165, 27099,   361,  4215, 24837, -5165,  4477,  5339,  5339,  3246,
   20313,  4206,  4477, 83257,  4957,  4222, -5165, 20313, 84525, 20313,
    4223,  4220, -5165,  4229, 27099, -5165, -5165,  4231, -5165,  2427,
    4193,  4306,  4670, -5165,  3578, -5165, 30080,  4725, -5165, -5165,
   68016,  2068, -5165,  3469,  3469, 62944, -5165, -5165, -5165,  4765,
   83257,  4425, -5165, 50324, 49631, 66114,  4904,  4905,  4906,  4908,
     140,   140, -5165, -5165, 37042, 50324, 14281, -5165,  4741,  4742,
   -5165, -5165,   905,  4530,  4799, -5165, -5165, -5165,  4239, -5165,
   -5165, -5165, -5165,  1038, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  3578, 14281, -5165,  3704,  4245, 32776,   878, -5165,
   -5165, -5165,  3578, -5165, -5165, -5165, -5165,  4257, -5165, 78185,
   -5165,  4587, 78185, 78185, 84525, -5165, -5165,  4839, -5165, -5165,
    4671,  4004,  2555, -5165, -5165,  2332,  4254,  4888,  4892, -5165,
    4837,  3833,  4837, -5165, -5165,  4254, 65480,  1742,  4263,  8545,
   -5165,  2649, -5165,  5011,  4255,  4717, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165,  4264, -5165, 14281,  2779,
   -5165,  4270, -5165,  3578, -5165,  4284, -5165, -5165, -5165,  4148,
    1815,  4288,  4272, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    4036,   213, -5165, -5165, -5165, -5165, -5165,   909, -5165, -5165,
   -5165,  1425,  3806, -5165,   312,   234,  4509, -5165, -5165,   307,
    4722, -5165,  4526,  4948,  1536,  1536,  4864, 68016, 68016,  6839,
    4050, -5165,  1406,  1694, -5165, -5165, -5165, -5165, 83257, -5165,
   83257, -5165, -5165,  1712, -5165, 68016, -5165, -5165, -5165, 79453,
    4277, -5165, -5165,  4274, -5165, 20313,  1639,  4394, -5165, -5165,
   -5165,  2181,  5019,  4944,  4036, -5165,  3578, -5165,  4279, 19559,
    4289,  4290, -5165, -5165,  2439, -5165,  4291, -5165,  3402, -5165,
   54442, 45595, -5165,  4667,  4668,  1559, -5165, -5165, -5165, -5165,
   -5165, -5165,  3385,  1663, -5165,   140,   140, -5165,   239,   140,
   -5165, -5165,   296, -5165, -5165,  1158,   189,  4050, -5165,  2338,
    2338,  2338,  2338,   234,  2338,  2338,  2659, -5165,  3385,  3385,
    1820, -5165,  1343, -5165, -5165, -5165, -5165,   157, -5165, -5165,
   79453, -5165,  4793,  4798, -5165,  4800, -5165, -5165,   237, -5165,
    2991, -5165,  6291,   150, -5165,  4847, 83257,  5053,  4065, -5165,
    1267,  3578, -5165, 20313, -5165,  4303,  4305,   234,  4307,   234,
     234,  2338,  2338,  4257,  2338,   234,  2338,  2338,  2338,  2338,
    2338,  2338,  2338,   234,  2338,  1510,  2797,  2338,   234,  8112,
   -5165,  2338,  4193,  3385,  3385,  3547, -5165,  4972,   140, -5165,
    3218, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    2663, 42715, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,  4899, -5165, -5165, -5165,  1226,  2018,  1226, -5165, -5165,
   87695, -5165, -5165, 83257,  4900, -5165, -5165, -5165, -5165,  5064,
   -5165, -5165, -5165,  4631, -5165, -5165, -5165, -5165, -5165, -5165,
     416, -5165, 27099, -5165, -5165, -5165,  4308,  1742,  1029,  3578,
   77551,  4856,  4004,  4325, -5165, -5165, -5165, -5165, -5165, -5165,
    1418,  4933, -5165,  4318, 20313, -5165, -5165, 83257,   524,  4512,
    4816,  4330, 73113, 49631, 49631, 49631, 49631, -5165,  4909, 68016,
   -5165,  4975, -5165, -5165, -5165, -5165, -5165, 20313, -5165, -5165,
    2517,  4755, 89247,  4943, -5165, -5165, -5165, -5165, -5165, 20313,
    3578,  3578, 20313,  3505,  3505,  3508,  3530, -5165, -5165,  4968,
    3505,  3505, -5165,  3505,  4969,  3505,  3505,  4332, -5165, -5165,
    4333,  4334,  4336,  3432, -5165, 20313, 20313,  2304,   139,  2340,
    2375,  1844,  1848,   407, -5165,  2404,  4194, -5165, -5165,  2416,
    2468,  2486,  2506,  1868,  2514,   344,   447, -5165,  3578, 20313,
    3578, 20313,  3578, 20313,  3578, 21067,  2549, -5165,  2674,  3597,
   -5165,  2685,  3630,  2558,   497,  2562,  1876,  2688,   507,  2600,
    2665,  2673,  2747, -5165,  2745,  4925,  2754, 21067,  2682,  2700,
    1903,  1935,  2705, 84525, 83257,  4331,  2709,  4342,  4342,   226,
   -5165,  4341, -5165, -5165, -5165,  4343, -5165,  2717, 20313, 20313,
    4451, -5165,  2467,   372,  4346,  3950,  4877, -5165,  2439, -5165,
     597,   542, -5165,  4344,  3578,  4359, -5165, -5165, 20313, -5165,
   -5165, -5165, -5165, 27099,   562,  4360, -5165,  4516, -5165, 20313,
   -5165,  4929,  4362,  3432, -5165,  3578, -5165, -5165, 83257,  4363,
    4477, -5165, 20313,  4257, -5165, -5165,  5086,  4353,  4370,  4366,
    4231, -5165, 50324, -5165,  4912, 65480,  3789,  3789,  1194,  4367,
    2773,  4907, -5165, -5165, -5165,  4369, -5165,  2785, -5165,  5035,
    3846, -5165,  5040, 49631, 49631, 49631, 49631, 14281, 14281, -5165,
   -5165, -5165,  4377,  4379,   826,  4935, -5165, -5165, -5165, -5165,
   83257, 83257, 14281, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,  3332, -5165,  4036, -5165, -5165, 78185, -5165, -5165, -5165,
   -5165, -5165, -5165,  1940, -5165, -5165,  4385,   281,  3090, -5165,
   -5165, -5165,  1742,  4138,  1132, -5165, -5165, -5165,  5008,  4837,
    4837,  4254,  5017,  4219,  4389, -5165,   140, -5165,  5061,  5012,
   -5165, 83257,  4393, -5165,  4869, -5165,  4400, 81355, -5165, 19559,
    4403, -5165,  4960, -5165, -5165,  4986, 62310,  4407, -5165,  4630,
   -5165, -5165, -5165,  4424, -5165,  4408,  4500,  4502, -5165, -5165,
   -5165, 49631, -5165,  4787, -5165, -5165, -5165, -5165, -5165, 68016,
   -5165, -5165,  4775, 68016,   140,   140,   140,   140,   140,  4468,
     140,   140,   140,   140,   140,  4784,   140,   140,   140,   140,
     140,   140,   140,   140,   140,   140,  1028, 83257,   140,   140,
   39183, -5165, -5165,  5000, -5165,  6392, -5165, -5165, -5165,   140,
    7417,  4050,  1406, -5165, -5165, -5165,  2338, -5165,  1694, -5165,
   -5165,  4432, 83257, -5165,  4065,  4568,  4434,   422, -5165,  1561,
   -5165, 61042, 83257,  3578,  4436,  2759, -5165,  4666,  4440, -5165,
   -5165, 20313, -5165,  4465, -5165, -5165, 40540, -5165, 73747, -5165,
   -5165, -5165, 19559, -5165,  2929,  4291,  4441,  2041, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,   477,   477, -5165, -5165,   477,
     477, -5165, -5165, -5165, -5165,   477,   477, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165,  2280, -5165, -5165, -5165,
    1931, -5165, -5165,  4941,  1334, -5165, -5165, -5165, -5165,   980,
     234,   234,   234,  2797,  2566, -5165,  2991,  5241,  4841,  5013,
    4841,  5016,  4942,  3270,   140,  5018,  5186, -5165,   294,   140,
    5021,  5088,  4531,  5091,  5029, -5165,  4534,  4841,  5030,  4662,
    5045,  5048,  5050, -5165, -5165,  7014, -5165, -5165, -5165, -5165,
     121, 66748, -5165, -5165, -5165, -5165,  2910,  1119,  4976,  2556,
   -5165,  2809, -5165,  5233, -5165,   246, -5165, -5165,  3578,   537,
     579, -5165,   613, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, 83257,  3385,  3363, -5165, -5165, 83257,  3505,  3505,  3505,
    3523,  3505,   148,  4256, -5165, -5165, -5165, -5165, -5165,   203,
    3505,  3505,  3505, -5165, -5165,  4482, -5165, -5165, -5165, -5165,
   -5165, -5165, 70552, -5165, -5165, -5165,  4477, 72479,  4004, -5165,
    4822,  5022,  3793, -5165, -5165, -5165, -5165,  4138, -5165,  3578,
   -5165, -5165,  5150, -5165, -5165, 49631, -5165, -5165,   163,   163,
     163,   163,  2935,  4840, -5165, -5165, -5165,  4975,  4764, -5165,
     423,  3578, -5165, -5165, -5165, -5165,  6515,   407,  3578, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  4491,  5339,  5339, -5165,  5230,  5028,
   -5165, -5165, 20313, 20313, -5165, 20313, -5165,  2115,  4501,  4963,
   -5165, -5165, -5165, -5165, 20313, -5165, 20313, -5165, -5165, 20313,
    3578,  3578,  3578,  5339, -5165, -5165,  3663, -5165, -5165,  3674,
   -5165, -5165, 20313, -5165, 20313, -5165, 20313, -5165, 20313, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165,   462,  5339, -5165,
   -5165, 20313, 20313, -5165, -5165, -5165, 83257, -5165,  4193,  4504,
    4773, -5165, -5165, -5165,  4193,  4639, -5165, -5165,  4193,   234,
   -5165, -5165, -5165, -5165,  3793,  2467, -5165,  4506,  2353, -5165,
   -5165, -5165, -5165, -5165, -5165,  4510, 83257, -5165,  2827, -5165,
   -5165, 20313, -5165,  5089,  4511,  2759,  5246,  4513, -5165, 40540,
   -5165,  4515,  4519, -5165, -5165, -5165,  5339, -5165,  5142,  5092,
   -5165,  4193, 83257, -5165, -5165, -5165,  4523, -5165,   140,  4138,
   -5165,  3433,  1194, 65480, -5165, 74381,  2456,  3002, -5165, 83257,
   49631, 49631,  3972,  3972,  3972,  3972, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,   140,   140, -5165, 32776, 55119, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,  4036, -5165, -5165,  3469,  5061,
   -5165, -5165,  2181,  2439,  4013,   542, -5165,  4254,  5161,  5163,
   -5165,  4254, -5165, -5165, 65480,  4004, 19559,  2579,  6079, -5165,
   -5165, -5165, -5165,  4869, -5165, 35570, -5165,  4529, -5165,  4532,
   -5165, -5165,  2266,  4866,  5153, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   19559, -5165,  2338,  2368, -5165, -5165, -5165,  4561, -5165,  4538,
    4539,   140, -5165,   308,   357,   411,   415, -5165, -5165,  4257,
     234,   234,  2338,  2338,   140,   234, 79453,  2104,   234,  4257,
    4257,   428,  2338,  2406,   308, -5165, -5165, -5165,   234,   308,
   69284, 68016,  5209, 83257,  4540,  4546,  4547, -5165, -5165, -5165,
   -5165, -5165,  2165, -5165,  5097,  3026,  1386,  1386, -5165,  4541,
     195, -5165, -5165,  8169, -5165, 52393, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,  1531,  5136,  5302, -5165, -5165,
   -5165,  5093, -5165, -5165, -5165, -5165,  4656,  4065, 45595, -5165,
   -5165, -5165, 20313, -5165, -5165, -5165,  1639,  4553,  1165, 20313,
   83257, -5165, 81989, -5165, -5165, -5165, -5165,  2215, -5165, 19559,
    4555,  4556, -5165, -5165,  2439,  2614,  2439,  4559,  3402, -5165,
   -5165,  2929, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,  2338, -5165, -5165, -5165, -5165, -5165,  5146,
    5148, -5165, -5165, 67382,  3026, -5165,  5209,  4599, -5165, -5165,
   -5165,  5214,  2767,  1170,  2767, 35570,  1561,  1842,  5198,  2285,
    5235,  4604,  5132,  2767,  2767, 57150,  1170, 65480, -5165, -5165,
   -5165, -5165, 68016, 57827,  1170, -5165, -5165, -5165, 83257, -5165,
    2767,  1170, -5165,  1170,  1170, 35570, -5165,  9219, -5165, -5165,
   39885,   264, -5165,  4743, 20313, 20313,  5159, 83257,  5162, -5165,
    4978, -5165, 83257, -5165,  4138, -5165, -5165, -5165,  4870,  5080,
    2858, -5165, -5165,  2868, -5165, -5165,  2883, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  1226,
    5118, 83257, -5165,  1226,  4565,  1226,  4565, -5165, -5165,  4141,
   -5165, -5165,  4923,  4037, -5165,  4780,   163,  5054,  5054,  5054,
    5054, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  5232,
    4940,  9168,  1226,  1226,  1226, -5165,  4593,  4594, 20313,  2018,
    5221,  2725,  1964,  2885,  4876,  4833, -5165,  4767, -5165,  2737,
    2743,  2863,  1924,  3508, -5165, -5165, -5165, -5165,  5245,  3505,
   -5165,  5337, -5165,  3505, -5165, -5165, -5165, -5165, -5165, -5165,
    4608,  2899,  3578,  3578,  2963, -5165, -5165, -5165,  2892,  2001,
    3015,  3031, -5165, -5165, -5165,  4609, -5165, -5165,   410, -5165,
    4610,  4037, -5165, -5165, -5165,  4451,  2181, -5165, -5165,  2896,
    5350,  1272, 20313, -5165, 20313, -5165, -5165, -5165, 83257,  4708,
     368, -5165,  2912, -5165, -5165,  4616, 65480, 19559,  2181, -5165,
   -5165, -5165,  2456, -5165,  4611,  2439,  1312,  2439, -5165,  3793,
   -5165, -5165,  3972,  3972, 14281, 14281, -5165, -5165, -5165, -5165,
    3002,  3789,  4016,   542, -5165, -5165, -5165,  4507,  5101,  4254,
    4254,  4804,  5102, 20313,  4623, -5165,  4416, -5165, -5165,  4824,
    2296,  2296, -5165, -5165, -5165, 70552, -5165, -5165,  4624,  4625,
   -5165, -5165, -5165, 81355, -5165,  2918, -5165, -5165,  5378,  2955,
   -5165, -5165, 79453,  4635, 83257, 83257,  2338, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165,  4637, -5165, -5165, -5165,
   -5165, -5165,  2338, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  4633,  4638,
   -5165,   256, -5165, 39885,  4640,  5275,  5276,  1386, -5165,  3026,
   68016, -5165, 69284, -5165,  3026,  3026, 43442, 83257, -5165,  5395,
   -5165, -5165, -5165, -5165, -5165, -5165,  1687, 83257,  4265, -5165,
   -5165,  2124,  4768, -5165, 83257, -5165, -5165,  2338,  5396, -5165,
    5051,  2759, -5165, 20313,  4651,  4652, -5165, -5165, -5165, -5165,
    3578,  5401,  4653, -5165, -5165, -5165, 75015, -5165, -5165, 19559,
   -5165,  5296, -5165, -5165, -5165, -5165,  2929, -5165, -5165, -5165,
   -5165, -5165, -5165,  2910,  1170, -5165,  2910, -5165, 69284, 35570,
   69284, -5165, 45595, 69284,  2767, 83257, -5165, -5165,  5291, 69284,
   69284, -5165, -5165, 35570,  4657, -5165,  2759,  2884, -5165, -5165,
   -5165,  4193,  5125, 69284, 35570, -5165, 35570, -5165,  4552,  2407,
   -5165,  4661, 83257, -5165, -5165, -5165,  3578,  5339,  5056, -5165,
   -5165,  4771,  2338,  5024, -5165,  1050, -5165, 83257,   270, -5165,
   -5165,   234, -5165,   234, -5165,   234, -5165, -5165,   315, -5165,
   -5165, -5165, -5165, -5165, -5165,  5054,  2848, -5165, -5165, -5165,
   -5165, -5165, -5165,  5294,  5166, 89247,  5282, -5165, -5165, -5165,
   -5165, -5165,  4672,  2759, -5165, -5165,  4669, 78185, -5165, -5165,
   20313, -5165,  4902, -5165,  5007, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  1226, -5165, -5165, -5165, -5165,  4257,
   -5165, -5165, -5165,  4675, -5165,   234,  4416, -5165, -5165, 20313,
   -5165, -5165,  4676,  4681,  2759,  2759, -5165,   234, -5165,  4670,
    4679, 83257, -5165,  5092, -5165, -5165, -5165, -5165, -5165,  2439,
   -5165, -5165, 75649, -5165, -5165, -5165, -5165,  4037, -5165, -5165,
    3793, -5165, -5165,  4688, -5165,  5160, -5165, -5165, -5165,  5171,
    3578, 83257,  4769,  2296,  5434,  5188, -5165,  1642, -5165,   115,
   -5165, 83257, -5165, -5165,  4257,  5057, -5165, -5165,  4889, 83257,
    3003,  2759,  4707,  3027, -5165, 68016, -5165, -5165, 83257,  2181,
   -5165,  7014, -5165, 20313,  3026, -5165, -5165, 69284,  4710,  5178,
    2129, 69284, 69284, -5165,  4704,  5443, -5165, -5165,  4711, -5165,
     379, 89706, -5165, -5165,  5067,  1687, -5165,  2651,  4720,  4718,
   -5165, -5165, -5165,  5417,  1406, -5165, -5165, -5165,  5311,  1119,
   -5165,  4728,  4724,  7608,  4265, -5165, -5165,  2309,  5353, -5165,
    3578, -5165, -5165,  4745, 83257, -5165, -5165, -5165,  2181,  2439,
    5411, -5165,  5427,  1902, -5165, 69284,  1827,  4256, -5165, 69284,
    4625, -5165, -5165,  1418, -5165, 65480, -5165, -5165, -5165,  5252,
     264, -5165, 83257, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  4756,  3402,  5223,  3055, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,   495, 83257, -5165,  4952, -5165,  2848,
   -5165,  5244, 68016, -5165, -5165, 20313, -5165, -5165, -5165,  1477,
    3043, -5165, -5165, -5165,  4761, -5165,  4762,  4036,  4436, -5165,
    5237,  4891,  4459,  4464,  4466,  4945,  5103, -5165,  4946, -5165,
   -5165, -5165,  4770, 27099, -5165,  1872, -5165, -5165, -5165, -5165,
    2181,  4037,  5061, 20313,  4774, 20313,  4778,  3058, -5165, -5165,
    2296,  2296, -5165,  1733,  4766, -5165, -5165, -5165,  5182,  4781,
    3067,  1639, 83257, -5165,  5358,  1639,  4772,  4782, -5165, -5165,
    5000,  3063, 69284,  5178,  2135, 83257,  5387,  1536, -5165,  1536,
   -5165, -5165,  3191,  7126, -5165, -5165,  4002, 83257,  5238, -5165,
   -5165, -5165, 89706,  1739, -5165, -5165, -5165,  4777,  4783, -5165,
    4788, -5165, -5165, -5165, -5165,  5356, -5165, 44169, -5165, 83257,
   -5165, -5165, -5165,  5159, -5165, -5165,  1406, -5165,  5518,  5521,
    5470,  5524,  2309, -5165,   374, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, 69284,  1376, -5165,  5491,  5494,   264, -5165, -5165,
   -5165, -5165,  1170, -5165, 68016, -5165, -5165,  4625,   909,  4890,
   -5165,  6515,  2456,  4756,  4795,  2253,   597, -5165, -5165,  1436,
   -5165, -5165, 83257, 82623, -5165, -5165,  5368, -5165, -5165, -5165,
    4263, 89247,  2759, 78185, 78185, -5165, -5165, -5165,  2439,   942,
   -5165,  5553,  1019, -5165, -5165,   346, -5165, -5165, 83257,  4802,
    4886, -5165, -5165,  4873, -5165, -5165,  4469, -5165,  4451,  4016,
    3578, 83257,  3578, 83257, -5165, -5165, -5165, -5165,  1386, -5165,
    1386, -5165,  1733, -5165, -5165, -5165,  2280,  1639,  1821,  2759,
    4806,  1424, -5165, 83257,   195, -5165, -5165, -5165,  1536,  3073,
   -5165,  1556,  5399, -5165,  4809, -5165,  4810,  4814, -5165,  5448,
   -5165,  2338, -5165,  4895, -5165,  3191, -5165, -5165, -5165,  4857,
    5454,  5412,   140, -5165, 79453, 29360, -5165,  5306, -5165,  5268,
    5532, -5165,  5583,  3813, -5165, -5165, -5165, -5165, -5165,   247,
     248,  2327,  1739, -5165, -5165, -5165, -5165, 83257, -5165, 83257,
   83257, -5165,  3523,   370, -5165, -5165, -5165, 48933, -5165,  2556,
   -5165, -5165,  2018,  2018,  5570,  2018, -5165,  5571,  5572,   374,
   -5165,  5443,  4193,  5092, -5165, -5165, 29360, -5165, -5165, -5165,
    5477, -5165, 20313,  5187, -5165, -5165,  1312,  2439,  2439,  4838,
    3402, -5165, -5165,  2456, -5165,  5032,  5573,  5576, -5165, -5165,
    3101, -5165, -5165,  4896, 65480, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  5237, -5165, -5165,  4970,  2122, -5165,  3104, -5165,
   -5165, -5165,  4193, -5165,  4848, -5165,  5210,   140,   140,  5211,
     140,   140,   140,   140,  4854,  4469, -5165,  5202, -5165, -5165,
    3121,  3127,  5526,  5526, -5165,  3131,  1752,  5046,  2338,   140,
    1257,  1821, -5165, -5165,   140, -5165, -5165,  1257,  1424, -5165,
   -5165,  4858, -5165,  4862,  4867, -5165, -5165, 83257, -5165, -5165,
   -5165,   467, -5165, 83257,  4872, 83257, 83257, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, 53079, -5165,  2797,  2797, 20313, -5165,
   -5165, -5165, -5165, -5165,  3364,  5450, -5165,  4910,  1789,   140,
   -5165,  4335,  4871, -5165,  4874, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,  5400, 83257, -5165, 68016,  4978, -5165, -5165,
   -5165,  2018, -5165,  2018,  2018, -5165, -5165, -5165,  3133, -5165,
   -5165,  4875,  3578, 20313, -5165,  2439,  2226, -5165, -5165, -5165,
   -5165,  2456, -5165,  1312, -5165, -5165,  1050, -5165,  5065,  5066,
   -5165, 82623, -5165,  4879, -5165,   140,  1561, -5165, -5165, -5165,
   -5165, -5165, 83257, -5165,  4882, -5165, -5165,   172,   140,  2338,
    2338,   140,  4365,  4365,  4193, 79453,  4964, -5165, -5165,   140,
   -5165, -5165,  1885, -5165, -5165, -5165,  1536,  1536,  1257,  1752,
   -5165, -5165, -5165,  3518, -5165,   234, -5165,  5504,  5327, -5165,
   53765, -5165, -5165, -5165, 83257, 83257,  4887, -5165,  1195,  1195,
    3141, 83257,  3154,  3166, -5165, -5165, -5165, -5165, -5165, -5165,
    4885,  4893, -5165,  1526, -5165, -5165,  4335, -5165, -5165, -5165,
   -5165,  5239, -5165,  4432,  4434, -5165,   375,  5316,  5560,  5249,
   -5165, -5165, -5165, -5165,  5092,  3578, -5165,  2181,  2439, -5165,
   -5165, -5165, -5165, -5165, 65480, 19559, -5165,  4886, -5165, -5165,
    3171, -5165, 24083, -5165, -5165, -5165,  2338, -5165, -5165,  2338,
   -5165, -5165, -5165, -5165, -5165,  3190, -5165, 79453,  5633, -5165,
    5636,  4903,  4911, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,  3199,  3202, 83257, -5165, -5165,
     557,  5352,  5488,  5495,  1752,  3210,  1821,  1424, -5165,  1179,
   -5165,  3105,  3105,  1953, -5165, -5165, -5165, 83257, -5165,  5093,
     621, 83257, -5165, -5165, -5165,  3223, -5165, -5165, -5165, -5165,
    5453, -5165, -5165,  4882, -5165,  4915, -5165,  4477, -5165, -5165,
   79453, -5165,  4964, -5165, -5165, -5165, 81355, 81355,  5097,  1752,
    3227, -5165, -5165, -5165,  5405,  5612, -5165,  1752, -5165, -5165,
   -5165,  4922, -5165,  3105, -5165, -5165, -5165, -5165, -5165,  1892,
   83257, 83257, -5165,  4265, -5165, -5165, -5165,  5493, -5165, -5165,
   -5165, -5165,  5225,  5051, -5165, 24083,  4928,  4469, -5165, -5165,
    4930,  3230, -5165, -5165,  1752,  1195,  1195, -5165, -5165, -5165,
   -5165,  1892, -5165, -5165, -5165, -5165,  4265,  4981,  5280,  5619,
    5669,  5353, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165,  5062,  2018,  5585, -5165, -5165,  5523,  4937,
    1690,   459, 59138,  5467, -5165, -5165, 79453, -5165, -5165, -5165,
   -5165, -5165, 79453,  3243, -5165, -5165, 65480, -5165, -5165,  6515,
   -5165, -5165, 61676,  4938, -5165,   140, -5165, -5165, 65480, -5165,
   -5165, 19559, -5165, -5165
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2628,  1241,  2475,     0,   522,     0,  1448,   824,   552,  2329,
    2469,  2470,  2259,     2,   594,   252,  2670,  2671,   470,  2261,
    2536,     0,     0,   590,  1464,   962,   712,  2531,   390,     0,
       0,   597,  2264,   388,   252,  3187,  2377,     0,  3284,  2318,
       0,   592,  2632,  3574,  2893,  2941,  2942,  2969,  2788,  3063,
    3085,  3111,  2875,  2877,  2876,  2878,  2879,  2880,  2881,  2882,
    2883,  2761,  2884,  2885,  2886,  2888,  2887,  2889,  2890,  2891,
    2762,  3429,   548,  2763,  2841,  2892,  2843,  2842,  2894,  2764,
    2765,  2895,  2896,  2897,  2898,  2767,  2766,  2899,  2901,  2900,
    2844,  2845,  2902,  2903,  2904,     0,  2906,  2768,  2769,  2770,
    2771,  2772,  2905,  2773,  2907,  3434,  2908,  2909,  2774,  2910,
    2911,  2912,  2913,  2915,  2914,  2916,  2917,  2919,  2920,  2921,
    2918,  2922,  2923,  2925,  2924,  2847,  2926,  2846,  2927,  2775,
    2928,  2929,  2930,  2931,  2932,  2933,  2934,  2935,  2936,  2937,
    2226,  2938,  2939,  2940,  2961,  2943,  2945,  2944,  2848,  2946,
    2947,  2948,  2950,  2949,  2951,  2953,  2776,  2777,  2778,  2952,
    2954,  2955,  2956,  2957,  2959,  2958,  2963,  2964,  2849,  1464,
    2780,  2781,  2960,  2962,  2759,  2965,  2966,  2850,  2851,  2967,
    2782,  2838,  2968,     0,  2971,  2970,    85,  2972,  2784,  2973,
    2974,  2975,  2976,  2977,  2979,  2981,  2978,  2982,  2983,  2989,
    2785,  2980,  2984,  2985,  2986,  2987,  2988,  2990,  2852,  2991,
    2993,  2992,  2994,  2995,  2996,  2997,  2853,  2998,  2839,  2999,
    3000,  3001,  3014,  3015,  3005,  3006,  3008,  3009,  3012,  3007,
    3013,  3018,  3017,  3019,  3020,  3021,  3022,  3023,  3016,  3003,
    3010,  3011,  3004,  3024,  3025,  3002,  3026,  3028,  3027,  3029,
    2854,  3030,  3031,  3032,  3033,  3034,  3035,  3036,  3037,  3039,
    3038,  3040,  2855,  2856,  2857,  3041,  3042,  3043,  2832,  3044,
    2858,  2859,  3047,  3045,  3046,  3048,  3049,  3054,  3055,  3056,
    3051,  3050,  3052,  3053,  2860,  2861,  2862,  3057,  3058,  3059,
    3060,  3062,  3061,  2787,  2786,  2789,  3064,  3065,  2790,  3066,
    3068,  3067,  2834,  2791,  3069,  3070,  3072,  3071,  2863,  2864,
    2792,  2793,  2794,  3073,  3074,  3075,  3076,  3077,  3078,  3079,
    3080,  3081,  3082,  3083,  3084,  2865,  2866,  3086,  3087,  3088,
    3090,  3089,  3091,  3092,  3093,  3094,  3095,  3096,  3097,  2795,
    3098,  1464,  3099,  3100,  2796,  3102,  3101,  2797,  3103,  3104,
    3105,  3106,  3107,  2833,  3434,  3108,  3109,  3110,  2867,  3112,
    3113,  3114,     0,  3115,  3116,  3117,  2798,  3118,  3119,  2868,
    2840,  2799,  3120,  3122,  2547,  2800,  3121,  2802,  2803,  3123,
    3124,  3125,  2801,  3126,  2804,  3127,  3128,  3130,  3129,  3131,
    3132,  3133,  2805,  3134,  3135,  2806,  3136,  2807,  3137,  3138,
    3139,  3140,  3142,  3141,  3143,  3144,  3145,  3146,  3147,  3148,
    3150,  3152,  3151,  3149,  3153,  3154,  2869,  3155,  2808,  2870,
    3160,  3161,  2871,  3156,  3157,  3158,  3159,  2354,  3162,  3163,
    3164,  2811,  3165,  3166,  3168,  3167,  2809,  2810,  3169,  3170,
    2815,  3171,  3172,  3177,  2872,  2873,  3173,  3174,  3186,  3175,
    3176,  3179,  3178,  3180,  3181,  2760,  2812,  3182,  3183,  2813,
    3184,  2814,  3185,  2874,     0,     3,     8,    21,     0,    43,
      26,    31,    16,    20,    15,    45,    58,    51,    28,  3431,
     466,   467,   468,   469,    41,  3495,    40,    11,    61,    62,
      18,    48,    12,    14,    17,    39,    47,    35,    42,    55,
      24,    25,    32,    49,    66,    22,    63,    59,    23,  2475,
      13,    27,    50,    44,    36,    60,    67,    37,     0,  2629,
    2675,  2688,     0,  2689,  2757,  2755,  2758,  2754,  2756,    56,
      57,    38,    65,    30,    52,    29,     9,    10,    19,    53,
      54,    46,    68,    33,    64,    34,  1275,     0,     0,     0,
       0,     0,  2257,     0,     0,  2257,  1357,  1599,  3493,  3494,
    3495,  1465,     0,  1466,     0,  2628,  2836,  2835,  2763,  2765,
    2819,  2766,  2822,  2823,  2816,  2775,  2824,  2837,  2778,  2779,
    2820,  2721,  2782,  2825,  2783,  2785,  2817,  2818,  2826,  2821,
    2794,  2827,  2796,  2828,  2829,  2830,  2805,  2806,  2831,  2810,
    2722,  2814,   280,  2686,   254,  2687,  2718,  2716,  2720,  2714,
    2715,  2719,  2713,  2717,   524,   130,     0,     0,     0,     0,
     329,  2349,  2257,  2255,  2257,  2257,  2257,  2257,  2257,     0,
    2257,  2257,     0,  2260,  2257,  2257,     0,     0,     0,   515,
    2267,  2538,     0,  2554,  2555,  2549,  3274,  3275,  3269,   477,
       0,     0,     0,     0,     0,   375,   387,   390,   383,   386,
       0,   252,  1467,   477,  2327,   389,   390,     0,  3189,     0,
    2449,   390,     0,  2327,  2548,     0,  2633,  2630,  3434,  1670,
    1669,   550,     0,  2676,     0,  1443,  1475,  1401,     0,  3435,
    3436,     0,    73,    75,  2480,   412,     0,     0,     0,     0,
    2669,     0,     0,     0,     0,  1409,     0,  3436,  3446,     0,
     130,  1382,     0,   130,  2360,     0,     0,  3557,  3558,     0,
       0,     0,  3552,     0,  3559,     0,     1,     5,     0,     0,
     822,  1198,  1199,  1197,   822,   822,     0,     0,     0,     0,
       0,  3500,  3493,  3494,  3495,  2956,  2781,  3068,  2462,  2474,
    2460,  2664,  1562,  3467,  1516,  1501,  1503,  3192,     0,  1244,
    1276,  1247,     0,     0,  1249,     0,     0,  1264,  2697,  2696,
    2695,  1261,  1260,  1259,  1257,     0,   665,   252,     0,  1359,
       0,     0,     0,  3501,  3500,     0,  1420,  2464,  2465,  2466,
    2467,  2468,  2471,   282,     0,   535,   538,     0,   527,   530,
       0,   131,   132,  1446,  1449,     0,   825,     0,   164,     0,
     366,   368,     0,   365,   367,  2744,   553,   330,   331,   333,
       0,   353,     0,     0,     0,   442,   348,   440,     0,   441,
    2741,  2738,  2743,  2739,  2742,  2740,  2353,  2352,     0,  2351,
    2330,     0,  2349,     0,     0,     0,  2257,     0,     0,     0,
       0,     0,     0,   252,     0,  2445,   252,  2239,  2257,  2257,
     595,     0,  3337,  3352,  3353,  1613,  3349,  3354,     0,  3351,
    3343,     0,  3347,  3341,     0,  3373,  3345,  3350,  2949,  2778,
    2963,  3077,  3081,  3097,  3100,  2830,  3143,  3331,  3316,  3332,
       0,     0,  3335,  3339,     0,     0,  2268,  2269,  2270,  1355,
    2539,  2540,  2541,     0,  2558,     0,   490,     0,     0,     0,
       0,   465,   479,   480,     0,     0,   486,     0,   477,     0,
     451,   463,   453,  2628,   481,   462,   455,   454,   456,   457,
     458,   459,     0,   460,   461,   464,     0,   447,   448,   591,
     449,   450,   477,  2692,  1462,     0,  2618,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1613,  1613,  1613,  1610,
       0,     0,     0,  2623,     0,     0,     0,     0,  2614,     0,
    2624,     0,     0,     0,  2616,  2617,  2672,  2673,     0,     0,
       0,     0,  2621,     0,     0,     0,     0,     0,  2597,  1672,
       0,  1610,     0,  2613,  2620,     0,  2605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1610,  2596,     0,  2615,  2622,     0,  1613,  1610,  1610,
       0,     0,  2876,  2761,  2891,  2819,  2902,  2904,     0,  2768,
    2769,  2770,  2771,  2772,  2816,  2926,  2846,  2927,  2928,  2929,
    2781,  2850,  2967,  2974,  2992,  2994,  2853,  3033,  3035,  3040,
    2855,  2856,  2857,  3045,  3046,  3059,  2834,  2863,  2864,  3075,
    3082,  3107,  2867,  3112,  3117,  3120,  3139,  2870,  3160,  3161,
    2871,  3159,  2831,  3171,  3177,  3180,  3181,  2812,  2874,     0,
       0,     0,  3478,  1671,     0,     0,  1908,   963,  1625,  1631,
    1645,     0,  1744,  1743,  1746,  1748,  1754,  1664,  1775,  1715,
    1716,  1718,  1837,  1717,  1722,  1723,     0,  1885,  1724,     0,
       0,  1721,  2610,  1720,  1719,  2611,  2612,  1714,  2650,  2686,
       0,  2674,   714,   713,  2444,  2443,     0,  2532,   402,   397,
     405,   399,   401,   400,   406,   407,   408,   403,   398,   404,
     391,     0,   376,     0,   384,  3447,     0,     0,   477,   598,
    2328,  2272,     0,  2271,   409,  3337,  2877,  3081,  3305,     0,
    3315,     0,     0,     0,     0,  1119,  2752,  3218,  3219,  2832,
    2834,  2833,  3220,  3156,  2753,     0,     0,  2681,     0,     0,
    2682,  2749,  2747,  2751,  2746,  2750,  2745,  2748,  3188,  3204,
    3200,     0,     0,     0,  2457,  1194,  1193,     0,     0,     0,
    2399,     0,  1119,  2457,  2400,     0,  2148,  2447,  2450,     0,
    3222,  2413,  1195,  3223,  2443,     0,  2385,  2401,  2362,  2406,
     130,  3224,     0,  2446,  2148,  2457,     0,  2378,     0,     0,
       0,     0,  1597,     0,   385,  3285,  1355,   593,     0,     0,
    3430,   555,   549,     0,     0,     0,     0,     0,  3439,  1954,
    2227,    77,     0,    79,     0,     0,  2666,  2082,  3288,  3287,
       0,    86,     0,  3571,    73,     0,  2524,     0,  2522,  2519,
    2521,     0,  3439,  1389,  1389,     0,     0,  1381,  1383,  1384,
    1389,  1389,  2361,     0,  3572,  3573,  2604,  2602,  2603,  2677,
    3554,  2601,  2600,  3563,  3565,  3548,     0,  3551,  3550,  3560,
       6,    69,     0,     0,   252,   252,   822,   166,   822,   822,
     822,   822,   822,   822,   151,   149,   153,     0,     0,   157,
     155,  3500,  2628,  2477,  1565,  1570,     0,  1516,     0,     0,
       0,  3450,  3449,  3448,  3462,  1504,  1505,     0,     0,     0,
    1135,     0,   257,  3498,  3499,  3497,  1613,  2698,  2701,  3496,
    2702,   257,  1258,     0,   666,  2258,     0,     0,     0,     0,
       0,     0,   668,   667,   604,     0,     0,  1363,  1364,  1358,
    1360,  1362,     0,     0,     0,     0,  2476,     0,   284,   281,
     253,     0,   327,     0,   525,   531,    87,     0,  1450,  2248,
    2250,   163,     0,     0,   356,     0,   338,     0,     0,  1059,
    1081,  1079,  1100,  1045,  1065,  1061,  1065,  1055,  1100,   994,
     994,  1100,  1058,   994,  1065,  1060,     0,  1057,  1100,  1056,
     994,     0,  1049,  1081,   988,   989,   994,  1079,  1015,     0,
    1065,  1038,  1037,  1100,  1041,  1042,  1040,  1044,     0,  1046,
    1065,  1051,  1039,  1043,     0,     0,  1079,  1079,  1079,     0,
    2744,  1079,     0,   340,  1131,   974,   976,   975,   977,   978,
    1065,  1081,  1081,     0,     0,  1079,  1087,   444,   440,  2741,
    2739,  2742,  2740,   334,   336,     0,     0,     0,   355,     0,
    2331,     0,  2089,  2333,  2337,  2343,  2347,  2350,  2231,  2256,
       0,     0,  2232,  2236,  2242,  2241,  2235,  2445,     0,  2245,
     679,     0,     0,     0,  2246,  2228,     0,   568,   570,  3338,
    3336,  3370,  3369,  3374,     0,  3371,  3367,     0,  3330,  3375,
    3360,  3402,  3364,  3402,  3402,  3361,  3368,  3402,     0,  3366,
    3365,     0,  3333,     0,     0,     0,  1356,     0,  2542,  2543,
       0,  1485,  2560,  2559,  2556,  2082,  3271,  3276,   484,  2728,
    2727,  2690,   491,  2691,  2724,  2726,  2723,  2725,     0,  3045,
       0,   496,   495,   494,     0,   512,   484,   487,   505,     0,
       0,   325,   472,   478,   473,     0,   511,   513,   545,   543,
     584,   580,   588,   582,   452,  2693,     0,     0,     0,     0,
    1749,  2087,  2087,  2087,     0,     0,  1962,     0,     0,     0,
       0,  2087,     0,  1781,  1760,  1761,     0,  1782,     0,     0,
       0,     0,     0,  3478,     0,     0,  1914,     0,     0,     0,
       0,  3478,     0,     0,  2672,  2673,     0,     0,     0,  1956,
    1958,  2650,  2674,  2087,     0,  2087,     0,  1618,  1791,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2087,  2087,     0,  2087,  1799,     0,  2598,  2619,  1803,
    1805,  1804,  2087,  2087,     0,     0,  2087,     0,     0,     0,
    2607,  2606,     0,     0,     0,     0,     0,     0,     0,  2625,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2627,     0,     0,     0,  2626,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1751,     0,  1750,  1752,
       0,   965,   964,  2628,     0,     0,     0,  1668,  1667,  1666,
    1665,     0,     0,     0,     0,  1674,     0,  1676,  1678,  1673,
    1675,  1677,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1753,     0,     0,     0,     0,     0,  2599,     0,
    1847,     0,   726,     0,     0,     0,   374,  1469,  2703,     0,
    1468,  1472,  3271,   577,     0,  2275,  2265,  2274,  1994,  3336,
       0,     0,     0,  3333,     0,     0,  3190,  3198,  1118,     0,
       0,  1121,  1123,  2292,  2291,  1122,  1131,     0,  1120,     0,
    3259,     0,     0,  3244,     0,  3225,     0,  1127,  1129,  1128,
    3239,  1126,     0,     0,     0,  3209,     0,     0,   822,     0,
       0,     0,     0,     0,     0,     0,  2428,     0,  1597,  1597,
    2379,     0,  2457,     0,  2457,  2447,  2453,  2412,     0,     0,
     878,  2150,  2405,     0,  2149,  2451,  2452,  2457,     0,     0,
    2457,     0,  2419,  2447,  2457,  2374,     0,     0,  2366,  2371,
    2367,     0,  2373,  2372,  2375,  2363,  2364,     0,  2392,  2421,
       0,  2404,  2411,     0,  2391,  2398,     0,  2409,  2447,  2447,
       0,  2457,  2457,  2457,  1999,   575,  2631,  2634,  2638,  2642,
     323,     0,     0,     0,  1477,  1479,  1478,  1495,  1403,     0,
    3438,     0,  3440,     0,  3442,     0,    79,    74,    80,    76,
       0,  2505,     0,     0,     0,  2499,  2501,  2504,  2500,     0,
       0,  2506,   130,     0,  2502,  2481,  2484,  2491,  1597,  2482,
       0,     0,   410,   413,   415,     0,   418,  2083,  2084,     0,
    3286,     0,  2665,     0,    72,  1407,  1410,     0,  2529,  2526,
     130,     0,  2829,  3445,  3443,  1377,  1393,  1375,  1387,  1388,
       0,     0,  1380,  1379,  3271,     0,     0,  3549,  3566,  3547,
       0,  3561,  3562,  3546,     7,     4,     0,   143,     0,     0,
       0,     0,     0,     0,     0,     0,   822,     0,   822,  1599,
    1599,   822,   159,   822,   822,     0,  2463,  2461,  2478,  2479,
    1999,  2212,     0,  1502,  1589,  1554,  1566,  1589,  2089,  2148,
    3460,  1565,  1557,  3492,  3486,  3489,  3488,  3484,  3487,  3485,
    3490,  1588,  3491,  1587,  1599,  1571,  1585,  1586,  2301,  3468,
    2287,     0,  1506,  1565,  1562,  3464,  3463,  3453,  3458,  3267,
    3268,  3265,  3266,  3264,  3193,  3194,  1136,  1135,   816,   819,
     818,     0,     0,  1248,  2700,     0,  1250,     0,  2445,  1265,
       0,     0,  2445,   615,  2445,   669,  2701,  3401,     0,  3407,
    3389,  3271,  1361,  3502,  3503,  1255,  1253,     0,  1421,  1422,
    1425,     0,   285,   287,   536,   539,   477,     0,     0,     0,
    1460,     0,  1458,  1457,  1455,  1456,  1454,     0,  1445,  1451,
    1452,  2445,   607,   360,   555,   339,   332,   335,   337,     0,
    1082,  1000,  1080,  1100,  1098,  1100,  1022,  1101,     0,  1069,
    1067,  1066,  1062,  1069,  1025,  1144,  1138,  1142,  1139,  1031,
    1140,     0,  1146,   995,  1045,  1100,  1033,     0,   994,  1024,
    1030,  1069,     0,  1019,  1028,  1100,   987,  1032,  1018,     0,
    1069,  1034,  1047,  1050,  1052,  1054,  1069,  1100,     0,   444,
     994,  1017,  1016,   994,  1069,     0,     0,     0,  1116,  1063,
    1048,  1140,  1146,   994,  1100,  1069,     0,  1088,  1069,     0,
       0,   349,   358,   443,  2168,  1994,     0,  2334,  2339,  2252,
    2254,  2664,  2090,  2139,     0,     0,     0,  2345,     0,  2233,
       0,   679,  2238,  3328,   682,   681,  2243,   680,  2293,  3387,
    2237,  1365,     0,     0,   477,   569,   498,  3363,  1614,     0,
    3344,  3348,  3342,  3346,     0,  3326,     0,     0,  3334,     0,
       0,  3372,  3355,  3359,  3358,  3356,     0,  3357,  3362,  3340,
     471,   516,  2262,  2544,  3171,  2545,  2537,     0,  2557,     0,
       0,  3273,  2168,     0,  3270,   492,     0,   484,     0,     0,
     508,  2694,   488,   484,   498,   507,   574,   326,     0,   282,
     482,     0,   329,   555,     0,   477,   477,     0,  3271,     0,
    2088,     0,  1929,     0,     0,     0,     0,     0,     0,  1730,
       0,     0,     0,  1868,     0,  1929,  1891,  2198,  2199,  2179,
    2180,  2178,  2181,  1611,     0,  2182,  2197,  1815,     0,     0,
       0,  1889,     0,  2058,  2059,  2060,  2061,  2062,  2063,  2064,
    2065,  2066,  2067,  2068,  2069,  2071,  2076,  2072,  2073,  2074,
    2075,  2070,  2077,     0,  2057,     0,  1915,  1881,     0,     0,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
    2087,     0,     0,  2087,     0,     0,     0,     0,  1890,     0,
       0,     0,  1888,     0,     0,     0,  1887,  1773,     0,     0,
       0,  2087,     0,     0,     0,     0,  1706,     0,     0,     0,
       0,     0,  2087,     0,     0,     0,     0,     0,     0,     0,
       0,  1699,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2080,  2078,  2081,  2079,     0,     0,  1954,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1829,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1777,
       0,     0,     0,  2655,     0,  1164,     0,     0,     0,     0,
    1745,     0,     0,     0,     0,  3225,  1909,  1911,  1616,  1615,
    1617,  1628,  1621,  1626,  1619,  1623,     0,  1679,  2883,  1629,
       0,     0,  1661,  3478,  2096,  1662,  1650,  1643,  1648,  1649,
       0,  1646,  1647,     0,  1652,     0,  1651,  1658,  1659,  1660,
    1663,     0,     0,     0,     0,  1747,  1130,  1755,  2109,  1883,
    1884,  1907,  2113,     0,  2651,  1599,  1702,  1701,  1703,  1704,
    1705,   727,     0,   721,   724,   738,     0,     0,     0,  2533,
       0,  2846,  2870,  2871,   392,   395,   394,   396,     0,     0,
       0,     0,     0,  2273,  2628,     0,  2251,  1995,     0,     0,
       0,  3391,  3313,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3242,     0,  3241,  3240,     0,  3261,     0,     0,
    3246,  3245,     0,     0,  3203,  3247,  3248,  3251,     0,     0,
       0,     0,     0,  3232,     0,  3156,  3205,  3206,  3211,  3201,
    2420,     0,     0,     0,  2425,  2423,  2416,  2427,  2437,  2424,
    2418,  2429,  2417,     0,     0,     0,  2457,  2432,  2434,  2430,
    2457,     0,  2455,  2442,  2441,  2440,  2389,  2388,  2161,  2162,
       0,  2160,     0,  2151,  2154,  2159,  2157,  2382,  2448,  2435,
    2431,   252,  2457,  2387,  2386,  2368,  2369,  2370,     0,  2148,
       0,  2453,  2422,  2447,     0,  2457,  2457,  2438,  2439,  2408,
    2410,  2027,     0,  1969,     0,  1971,  1968,  1967,  1966,  1997,
       0,  1998,   477,     0,     0,  2636,   477,   551,     0,     0,
       0,   711,  1495,  1481,  1497,  1405,  1404,  1402,  3196,  3437,
    3441,  1955,    78,     0,  2510,  2493,  2492,  2494,  2498,   130,
    2503,  2495,     0,  2507,  2508,   423,     0,   419,     0,     0,
    2712,  2679,  2086,  2680,  2709,  2707,  2711,  2705,  2706,  2710,
    2704,  2708,  2964,  3045,     0,  2089,  3290,  3570,     0,  1411,
    2168,  2525,  2527,  2520,  3444,  1378,  1395,  1394,  1390,  1391,
    1396,  1386,  1385,  2355,  3555,  3564,  3568,  3553,   823,  1135,
    3324,  3407,   221,  1214,     0,     0,   133,   135,     0,   274,
       0,   255,   152,   822,   150,   154,   822,     0,   822,   158,
       0,   202,   255,   201,     0,   156,   822,  1569,  1567,  1568,
       0,     0,  2225,     0,  2220,  2141,     0,     0,  1538,     0,
    1555,  1559,  1560,  1536,  2097,  3459,  1566,  2139,  1594,  1563,
    1593,     0,  1584,  1599,     0,  1520,  1507,  1508,  1517,  1548,
    1547,  1565,     0,     0,   817,  2293,  2293,     0,     0,     0,
       0,     0,     0,     0,     0,   258,   267,  2699,     0,     0,
     613,   614,  2293,   612,   655,   656,   659,   660,   661,     0,
       0,   662,  2293,  2293,   609,   635,   636,   639,   640,   641,
     642,   643,   605,     0,   610,     0,     0,     0,  3419,  1242,
    1267,  3504,  1251,     0,     0,  1424,   283,     0,     0,   477,
     523,   532,   526,   528,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    88,    89,
     110,     0,  1447,  1459,  2249,  1453,  2293,  2293,  2293,  2293,
     611,   644,   645,   648,   649,   650,   651,   654,   652,   653,
       0,  2445,     0,     0,     0,     0,     0,     0,     0,  1020,
    1102,     0,  1021,     0,  1071,  1072,  1070,   990,   986,  1145,
     997,  1141,  1137,  1147,  1143,  1098,   996,  1026,  1027,   992,
       0,  1239,  1004,     0,   993,  1053,   991,  1005,     0,   345,
       0,   343,   352,  1029,  1002,  1014,   444,   444,   341,  1134,
    1133,  1132,     0,  1023,   998,   999,  1001,  1146,   984,     0,
     985,   445,   446,  2168,  2173,  2169,   354,   373,     0,   372,
    2335,  1572,     0,     0,     0,  2667,     0,  2164,  2140,  2344,
    1999,  2348,  2347,  3271,  2234,  2244,     0,  2294,     0,     0,
    1367,  1366,  2240,  2247,  3271,   477,   362,   501,   572,  3406,
       0,  3405,     0,     0,  3323,     0,  3383,  3386,  2664,     0,
       0,     0,     0,   327,  2628,  2546,  1486,  1488,  1489,  1487,
    1495,     0,     0,  3279,  3280,  3278,  3272,  3277,   485,   493,
     509,     0,   489,   499,   503,     0,   475,   474,   514,   546,
       0,   585,   540,   540,   540,  1463,     0,  1863,     0,  1864,
    1865,     0,  1731,  1963,     0,     0,     0,  1758,     0,     0,
       0,  1867,     0,  1612,     0,     0,  1734,  1726,     0,  1893,
       0,  1898,     0,  1896,     0,     0,     0,     0,     0,     0,
    1957,     0,  1959,  2651,     0,  1873,  1903,     0,  1871,     0,
    1892,     0,  1904,  1905,     0,     0,     0,     0,  1877,  1875,
       0,     0,     0,  1879,     0,     0,     0,     0,     0,     0,
       0,  1776,  1876,  1878,     0,  1811,     0,  1861,  1812,  1813,
    1814,  2654,     0,  1808,     0,  1809,     0,     0,     0,     0,
       0,  1762,  1763,     0,     0,     0,  1839,     0,  1764,  1819,
       0,  1739,  1840,  1821,  1769,  1770,  1841,  1842,  1843,  1736,
    1737,  1823,  1824,     0,  1845,  1738,  1825,  1828,     0,  1772,
    2168,     0,  1756,     0,     0,     0,  1774,  1802,     0,     0,
       0,  1735,     0,  1831,     0,     0,     0,  2168,     0,     0,
    1778,     0,     0,   966,  2016,  1531,  1589,  3466,  3465,  3474,
    3475,  3479,  1727,  2652,     0,     0,  1622,  1627,  1620,  1624,
    3478,     0,     0,     0,     0,  1641,  1640,     0,     0,     0,
    3478,  2096,  1644,  2111,     0,     0,  1901,  1952,     0,     0,
       0,  1857,  1858,     0,     0,   720,   719,     0,   723,   799,
       0,   740,   728,   717,  2535,  2534,     0,     0,  1470,  1473,
       0,     0,  2279,     0,     0,  2628,  2285,  2266,  2276,     0,
       0,     0,  3314,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3229,  3199,  2628,     0,     0,  3260,     0,     0,
    3253,  3254,     0,     0,     0,  3226,  3227,  3228,     0,  2736,
    2737,  2683,  2685,     0,  2684,  2734,  2732,  2735,  2730,  2731,
    2729,  2733,  3235,     0,  3208,  3209,  3210,     0,     0,  2415,
    2426,  2458,  2459,  2436,  2433,  2383,  2454,  2168,  2393,     0,
    2606,     0,     0,     0,     0,  2414,  2384,     0,  2407,  2365,
    2455,  2089,  2447,  2380,  2381,  2027,  1999,     0,     0,  1989,
    2030,     0,  2030,  1991,  1992,  1999,     0,  1999,  1994,   477,
    2635,     0,  2640,     0,     0,   562,  1444,  1484,  1476,  1483,
    1480,  1495,  1493,  1482,  1190,  1189,     0,  1496,     0,  2312,
    2313,    81,    83,  2311,    84,     0,  2496,  2497,  2490,  2509,
    2485,     0,   414,   424,   416,   420,   421,   422,   417,  3301,
    3302,  3294,  3297,  3295,  3296,  3300,  3303,  3304,  3291,  3298,
    2148,  1418,  1416,  1415,  1417,  1406,  1412,  1413,  2530,  2528,
    2523,  1393,     0,  1376,  2357,  2168,     0,  3567,   144,  1135,
       0,   162,  3419,     0,     0,     0,     0,     0,     0,   826,
     203,   274,     0,   272,  3537,   256,  3541,  3525,     0,   145,
       0,   160,  3534,   254,  3540,     0,  2678,  2221,  2224,     0,
    2213,  2215,  2216,  2695,  2218,     0,  3271,     0,  2205,  1556,
    1561,  3451,     0,  2092,  2148,  1599,  1600,  1600,  2650,     0,
       0,  2306,  2299,  2286,  1589,  1562,  1523,  3454,  1510,  3195,
       0,     0,  1246,     0,     0,     0,   261,   264,   262,   263,
     664,   663,     0,  2445,   657,  2293,  2293,   217,  2293,  2293,
     216,   218,     0,   212,   209,   219,  2293,  1266,   205,     0,
       0,     0,     0,  2168,     0,     0,     0,   223,     0,     0,
    2445,   637,   616,   617,   620,   621,   622,     0,  3394,  3393,
       0,  3409,     0,     0,  3411,     0,  3410,  3408,  3376,  3390,
       0,  1263,  1135,     0,  1269,  1271,     0,     0,  3504,  1423,
       0,   286,   327,     0,   529,     0,     0,  2168,     0,  2168,
    2168,     0,     0,  2168,     0,  2168,     0,     0,     0,     0,
       0,     0,     0,  2168,     0,     0,     0,     0,  2168,     0,
    1461,     0,     0,     0,     0,  2445,   646,     0,  2293,   606,
     623,   624,   627,   628,   629,   630,   631,   634,   632,   633,
       0,     0,   291,   292,   362,   554,  1077,  1075,  1078,  1076,
    1099,     0,  1073,  1074,  1103,  1140,     0,  1140,   344,   347,
       0,   351,   350,     0,     0,  1003,   382,   381,   379,   477,
     369,   377,   371,     0,   378,  2176,  2177,  2174,  2172,  2175,
    1574,  1573,     0,  2332,  1576,  2253,  2347,  1999,  2665,  2091,
       0,  2341,  2089,     0,  2346,  2230,  3329,   678,   877,  3388,
    1365,     0,   363,     0,     0,   498,  3403,     0,  3423,     0,
       0,     0,     0,     0,     0,     0,     0,   517,  2314,     0,
    1495,  1499,  2550,  3282,  3283,  3281,   510,     0,   506,   498,
     282,     0,   540,     0,   579,   581,   541,   589,   583,     0,
    1930,  1960,     0,  1079,  1079,  1065,  1087,  1947,  1941,  1944,
       0,  1079,  1949,  1079,  1942,  1079,     0,     0,  1939,  1940,
       0,     0,     0,  1869,  1866,     0,     0,     0,  1918,     0,
       0,     0,     0,     0,  1655,     0,  1852,  1874,  1872,     0,
       0,     0,     0,     0,     0,     0,     0,  1880,  1712,     0,
    1710,     0,  1711,     0,  1713,     0,     0,  1862,     0,  1681,
    1700,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1955,     0,     0,  2184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2656,     0,     0,     0,  1153,
    1159,  1162,  1163,  1165,  1157,     0,  1833,     0,     0,     0,
    1565,  2015,  3480,  1531,     0,     0,     0,  3472,  1589,  3476,
    3462,     0,  3477,  1912,  1910,     0,  1638,  1634,     0,  1632,
    2095,  1654,  1653,     0,     0,     0,  1642,  2113,  2112,     0,
    1900,     0,     0,  1953,  2653,  1600,  1848,  1599,   730,     0,
     748,   722,     0,  2168,   725,   739,     0,   751,     0,     0,
       0,   393,     0,  1474,     0,     0,  2283,  2284,  2628,     0,
       0,     0,  2282,  2644,  2643,  2655,   805,     0,  2055,     0,
    3312,  3392,     0,     0,     0,     0,     0,     0,     0,  3191,
    3243,  3234,     0,     0,     0,     0,  3258,  3252,  3249,  3250,
       0,     0,     0,  3233,  3207,  3213,  3212,  3215,  3217,  2403,
    2402,     0,  2456,  2148,  2163,  2153,     0,  2156,  2155,  2158,
    2376,  2395,  2397,  2457,  2029,  2022,     0,  3457,  1589,  2019,
    2020,  2028,  1999,     0,     0,  1993,  1990,  2031,     0,  2030,
    2030,  1999,     0,  1973,  2319,  2322,     0,  1972,  1578,     0,
    2639,     0,     0,   324,     0,   561,     0,  2049,  3197,     0,
       0,  2488,     0,  2483,  2486,     0,     0,     0,  3289,     0,
    1408,  1414,  1392,     0,  1399,  1397,     0,     0,  2356,  3556,
    3569,     0,   161,     0,  1230,  1232,  1231,  1215,  1216,     0,
     139,   141,     0,     0,  2293,  2293,  2293,  2293,  2293,     0,
    2293,  2293,  2293,  2293,  2293,     0,  2293,  2293,  2293,  2293,
    2293,  2293,  2293,  2293,  2293,  2293,     0,     0,  2293,  2293,
     923,   134,   693,   707,   827,   830,   871,   855,   856,     0,
    1135,   204,     0,  3545,  3544,  1599,     0,   270,   273,   275,
     269,   318,     0,   232,  3504,     0,   318,     0,   147,  1124,
    2217,     0,     0,  2649,  2142,  2145,  1590,     0,     0,  1537,
    3452,     0,  2093,  2104,  1558,  1592,  1602,  1595,     0,  1600,
    2302,  1599,  2303,  1519,  1565,  1523,     0,     0,  1511,  1512,
     876,   875,   266,   265,   278,   279,  2194,  2195,  2192,  2193,
     670,   683,  2196,   684,   658,  2168,  2168,  2298,  2297,  2168,
    2168,   211,   208,  2296,  2295,  2168,  2168,   206,   227,   226,
     228,   229,   231,   230,   225,  1262,     0,   671,   672,   638,
       0,   618,  3397,     0,  3399,  3382,  3381,  3380,  3377,     0,
    2168,  2168,  2168,     0,  2168,  3418,  3420,  1353,  1353,     0,
    1353,     0,     0,  1353,  2293,     0,     0,   711,  1371,  2293,
       0,     0,     0,     0,     0,  1337,     0,  1353,     0,     0,
       0,     0,     0,  1283,  1336,   828,  1243,  1282,  1284,  1296,
     707,     0,  1314,  1339,  1340,  1338,  3432,     0,     0,   237,
    3506,     0,  3508,     0,  1427,     0,  1426,   537,   533,  2168,
    2168,   103,  2168,    95,    96,    91,   123,   124,    93,    94,
      99,    98,   100,   101,   104,   105,   102,    97,    92,   127,
     129,   128,   106,   125,   126,    90,   677,   676,   675,   674,
     647,     0,     0,  2445,   625,   361,     0,  1085,  1083,  1083,
       0,  1083,     0,  1131,   979,   981,   980,   982,   983,  1085,
    1085,  1083,  1083,   293,   357,     0,  1036,  1240,  1035,   346,
     342,  1064,  2168,   359,   380,  1575,  1577,     0,  2089,  2668,
       0,  2165,  1599,  2336,  2338,  2229,   596,  2628,   573,   502,
     571,  3404,     0,  3322,  3327,     0,  3385,  3384,  3407,  3407,
    3407,  3407,   519,     0,  2263,  1490,  1495,  1499,     0,  1491,
    2561,   500,   504,   476,   555,   544,   477,     0,  1961,  1931,
    1932,  1946,  1948,  1945,  1934,  1951,  1938,  1943,  1950,  1936,
    1729,  1759,  1733,  1732,     0,     0,     0,  1789,     0,  1916,
    1899,  1897,     0,     0,  1766,     0,  1768,     0,     0,  1854,
    1822,  1895,  1792,  1826,     0,  1771,     0,  1798,  1796,     0,
    1709,  1707,  1708,     0,  1779,  1806,     0,  1698,  1807,     0,
    1838,  1785,     0,  1787,     0,  1788,     0,  1817,     0,  1790,
    1820,  1844,  1725,  2186,  2185,  2183,  1740,  2168,     0,  1793,
    1757,     0,     0,  1830,  2657,  2658,     0,  1832,     0,     0,
    1164,  1150,  1151,  1152,     0,  1154,  1156,  1158,     0,  2168,
    1846,  1657,  1656,  3469,  1599,  3481,  3483,     0,  3473,  1532,
    2016,  3470,  3461,  2014,  2010,  2012,     0,  1630,     0,  1639,
    1636,     0,  1633,  2115,  2114,  2145,     0,     0,  1849,  1602,
    1859,     0,   731,   732,   734,   736,     0,   801,   726,     0,
     715,     0,   730,   718,  1471,   578,  2280,  2289,     0,  2628,
    2277,   701,  2628,     0,   805,     0,  1565,  1570,   711,     0,
       0,     0,  3309,  3308,  3307,  3306,  3231,  3230,  3263,  3262,
    3256,  3255,  3257,     0,     0,  3236,     0,     0,  2190,  2191,
    2189,  2187,  2188,  2394,  2152,  2148,  2390,  2024,     0,  1578,
    2004,  2005,  2007,  1589,  2018,     0,  1970,  1999,     0,     0,
    1978,  1999,  1974,  1976,     0,  2089,     0,     0,  2082,   576,
    2641,  1597,   566,   563,   564,     0,  2052,     0,  2053,  2050,
    2051,    82,  2168,     0,     0,   432,   427,   435,   429,   431,
     430,   436,   437,   438,   439,   433,   428,   434,   426,   425,
       0,  1419,     0,     0,  2358,  2359,  3325,     0,   137,     0,
       0,  2293,   694,  2168,  2168,  2168,  2168,   853,   874,  2168,
    2168,  2168,     0,     0,  2293,  2168,     0,     0,  2168,  2168,
    2168,  2168,     0,     0,  2168,   861,   862,   860,  2168,  2168,
    1237,     0,  2791,     0,     0,     0,   893,   894,   896,   897,
     898,   899,     0,   924,   900,   822,  1191,  1191,   926,  2660,
    2561,   706,   708,  1135,   831,     0,   136,  1599,   167,   268,
     271,   316,   322,   321,   259,     0,     0,     0,   314,   320,
     319,     0,   891,   892,   890,   889,     0,  3504,     0,  2222,
    2214,  2219,     0,  2146,  2147,  2144,  3271,  1599,  2101,     0,
       0,  1564,     0,  1596,  1606,  1605,  2647,  2651,  2310,     0,
       0,  2304,  2308,  1509,  1589,  1566,  1589,     0,  1513,  1562,
    1524,  1565,   210,   215,   214,   207,   220,   213,   224,   619,
    3398,  3396,  3395,     0,  3378,  3414,  3412,  3413,  3416,     0,
       0,  3415,  3417,  1237,   822,  1354,     0,     0,  1318,  1321,
    1319,   820,  2255,  1464,  2255,     0,     0,  2255,     0,  2257,
       0,     0,     0,  2255,  2255,     0,  1464,     0,   709,  1374,
    1372,  1373,     0,     0,  1464,  1330,  1278,  1331,     0,  1279,
    2255,  1464,  1298,  1464,  1464,     0,   829,  1135,  1280,  1281,
     923,  1368,  3433,     0,     0,     0,  1268,     0,   240,   238,
     248,  3505,     0,  1254,  2628,  3508,  1429,  1430,     0,     0,
       0,   116,   118,     0,   120,   122,     0,   112,   114,   608,
     673,   626,   290,  1086,  1008,  1084,  1012,  1013,   298,  1140,
       0,     0,  1117,  1140,  1146,  1140,  1146,  1068,   370,  2347,
    2340,  2166,     0,  2342,   364,     0,  3407,  3421,  3421,  3421,
    3421,   327,   515,   518,  2315,  1492,  1500,  2563,  2562,     0,
       0,   477,  1140,  1140,  1140,  1870,     0,     0,     0,     0,
    1922,     0,     0,     0,     0,     0,  1728,     0,  1850,     0,
       0,     0,     0,  1065,  1688,  1690,  1686,  1689,     0,  1079,
    1692,     0,  1046,  1079,  1695,  1697,  1682,  1683,  1684,  1685,
       0,     0,  1964,  1965,     0,  2204,  2203,  2202,     0,     0,
       0,     0,  2659,  1148,  1835,     0,  1161,  1155,  1153,  1160,
       0,  2017,  3482,  1535,  3471,  1565,     0,  1913,  1635,     0,
       0,  2117,     0,  2100,     0,  1902,  1860,   735,     0,   802,
       0,   755,     0,   753,   729,     0,     0,     0,     0,  3457,
    2278,  2281,  1565,  2645,  2656,  1589,  1566,  1589,   810,  1599,
    1996,  2056,  3311,  3310,     0,     0,  3214,  3216,  2396,  2021,
    1570,  2023,  2082,     0,  2009,  2008,  3479,     0,  1966,  1999,
    1999,     0,  1966,     0,     0,  2321,  2139,  2323,  1581,     0,
    1572,  1572,  1579,  2047,  3478,  2168,   565,  1299,     0,  1300,
    1311,  1313,  1498,     0,  2515,     0,  2513,  2489,  2516,     0,
    1398,  1400,     0,     0,     0,     0,     0,  2201,  2200,   850,
     843,   842,   845,   844,   847,   846,     0,   839,   836,   848,
     838,   863,     0,   851,   833,   887,   888,   886,   857,   864,
     834,   835,   841,   840,   837,   879,   884,   882,   881,   880,
     885,   883,   852,   870,   849,   865,   925,  1238,     0,     0,
    2663,   689,   685,   923,     0,     0,     0,  1191,   916,   822,
       0,   901,  1237,  1192,   822,   822,     0,     0,   687,   812,
     832,   869,   868,   866,   867,   169,   195,   299,  3538,   599,
     600,     0,     0,  3508,   288,  3532,   259,     0,     0,  1125,
    2564,  2145,  1591,     0,     0,  2208,  2210,  2102,  2103,  2098,
    2094,     0,  2105,  2107,  1604,  1603,     0,  1600,  2300,     0,
    1541,  1560,  1539,  1525,  1514,  1515,  1565,  1522,  1550,  1549,
    3400,  2171,  2170,     0,  1464,  1341,     0,  1316,     0,     0,
       0,  1290,     0,     0,  2255,     0,  1343,  1342,     0,     0,
       0,  1351,  1352,     0,  2135,  2137,  2145,     0,  1334,  1349,
    1350,     0,     0,     0,     0,  1306,     0,  1295,  1353,  1353,
    1315,     0,     0,  1370,  1317,   247,   236,     0,     0,  1270,
    1272,     0,     0,  1273,  3507,     0,  1252,  1435,     0,   327,
     108,  2168,   109,  2168,   107,  2168,  1010,   296,     0,  1006,
    1007,  1009,  1011,  2167,  3424,  3421,     0,  3320,  3319,  3318,
    3317,   521,   520,     0,     0,   540,     0,  1933,  1935,  1937,
    1783,  1784,  1919,  2145,  1917,  1924,     0,     0,  1923,  1816,
       0,  1767,     0,  1851,     0,  1827,  1797,  1795,  1780,  1691,
    1687,  1694,  1047,  1693,  1140,  1810,  1786,  1818,  1741,  2168,
    1794,  1800,  1801,     0,  1834,  2168,  2139,  2013,  1637,     0,
    2120,  2119,     0,     0,  2145,  2145,   733,  2168,   800,   728,
       0,     0,   752,     0,   716,  2288,  2290,   703,   705,  1589,
     808,   807,     0,   700,   811,   809,   698,   806,  3238,  3237,
    1599,  2001,  2006,     0,  1979,     0,  1983,  1988,  1984,     0,
    1975,     0,  2164,  1572,     0,     0,  2000,  2044,  1598,     0,
    1494,     0,  2054,  2511,  2168,     0,  2487,  3299,     0,     0,
       0,  2145,  1235,     0,   859,  2508,   858,   695,     0,     0,
    3457,   826,   895,     0,   822,  1187,  1188,  1237,  1169,  1212,
    2660,  1237,  1237,   930,     0,   918,   928,   972,  2662,   813,
    2628,     0,   497,   497,     0,   196,   197,   309,     0,   300,
     302,   276,   260,     0,     0,   603,   601,   602,     0,     0,
     146,     0,   289,     0,  3535,  3531,  3508,     0,  2572,  2143,
    1600,  2206,  1599,     0,     0,  2648,  2309,  2307,  3451,  1589,
       0,  1301,     0,     0,  1289,     0,  1450,  1131,  1326,     0,
    1285,  1328,  1329,  1365,  1287,     0,  2138,   710,  1294,     0,
    1368,  1286,  1308,  1292,  1320,  1369,   234,   239,   249,   250,
    1256,  1562,  1528,  3511,  3517,     0,  1436,  1432,  1433,  1428,
     534,   117,   121,   113,     0,     0,  3321,     0,  3428,  3422,
    3426,     0,     0,   547,   586,     0,  1921,  1882,  1925,  1926,
       0,  1853,  1855,  1696,     0,  1149,     0,  2148,  2116,  2110,
       0,     0,     0,     0,     0,     0,  2129,  2121,     0,  2099,
    1906,   803,     0,     0,   741,   758,   757,   754,   804,  2646,
    3451,  2025,  1578,     0,     0,     0,     0,     0,  2320,  1580,
    1572,  1572,  2048,     0,     0,   327,  1312,  2514,     0,     0,
       0,  3271,     0,  1234,     0,  3271,     0,     0,   690,   692,
     707,     0,  1237,  1212,  2660,     0,  1173,     0,   902,     0,
     906,   908,   932,     0,   927,   919,   940,     0,   872,   497,
     497,   170,   175,   176,   180,   178,   189,     0,     0,   182,
       0,   182,  1601,   198,   312,   310,   311,     0,   317,     0,
     277,   556,  1599,   245,   315,  3533,     0,   148,     0,     0,
       0,     0,  2565,  2567,     0,  2223,  2211,  2209,  2108,  2106,
    1540,  1521,     0,  1303,   821,     0,     0,  1368,  1291,  1335,
    1327,  1325,  1464,  2136,     0,  1324,  1307,  1309,  1411,   241,
    1274,   477,  1565,  1528,     0,     0,  3462,  3513,  3512,     0,
    3509,  1431,     0,  1438,   297,   294,     0,  3427,  3425,  2316,
    1994,   540,  2145,     0,     0,  1765,  1742,  1836,  1589,     0,
    2126,     0,     0,  2124,  2123,     0,  2118,  2125,     0,     0,
     749,   765,   761,     0,   763,   764,   786,   699,  1565,  2082,
    1980,     0,  1985,     0,  1977,  1583,  1582,  2037,     0,  2036,
       0,  2042,  2046,  2637,   567,  2517,     0,  3271,  1202,  2145,
       0,  1204,   854,     0,  2561,   920,   914,   910,     0,     0,
    1172,     0,  1177,  1213,     0,   904,     0,     0,  1167,   958,
    1114,     0,   961,     0,   931,   933,  1107,  1108,   935,     0,
       0,     0,     0,   973,     0,     0,  1091,     0,  1094,     0,
       0,   929,     0,   941,  1090,  1097,  2661,   697,   873,     0,
       0,     0,   177,   179,   181,   194,   200,     0,   199,     0,
     255,   313,     0,     0,   303,   301,  3539,   329,  3526,   237,
     246,   556,     0,     0,     0,     0,  2566,     0,     0,  2573,
    2575,     0,     0,     0,  1302,  1333,     0,  1323,  1288,   711,
       0,  1293,     0,   243,   251,  3510,  1566,  1589,  1589,     0,
    3514,  1562,  1529,  1565,  3455,     0,     0,     0,  1437,  1442,
       0,  1439,  1441,     0,     0,  2551,   587,  1920,  1928,  1927,
    1534,  2127,     0,  2128,  2131,     0,     0,  2132,     0,   745,
     747,   737,     0,   742,     0,   759,     0,  2293,  2293,     0,
    2293,  2293,  2293,  2293,   779,   787,   789,     0,  2026,  2002,
       0,     0,  2032,  2032,  2043,     0,  1200,     0,     0,  2293,
    1344,  1203,  1228,  1210,     0,  1233,  1236,  1344,  1205,  1227,
    1208,     0,   686,     0,     0,   912,  1170,     0,  1174,  1175,
    1176,     0,  1168,     0,     0,     0,     0,   959,   960,  1115,
     934,  1113,  1106,  1105,     0,  1096,     0,     0,  3478,   970,
     971,  1092,   968,   969,     0,     0,   949,     0,     0,  1098,
    1089,   942,     0,   497,     0,   497,   555,   173,   171,   185,
     183,   168,   308,     0,     0,   557,     0,   248,  3536,  2570,
    2571,     0,  2568,     0,     0,  2574,  1322,  1305,     0,  1332,
    1297,     0,   242,     0,   235,  1589,  1542,  1545,  1530,  3516,
    3515,  1565,  1527,  1566,  1551,  1552,     0,  3518,     0,     0,
    1434,     0,   295,  2317,  2325,     0,  1124,  2122,  2130,  2134,
    2133,   743,     0,   750,   772,   762,   768,     0,  2293,     0,
       0,  2293,     0,     0,     0,     0,     0,   756,   788,  2293,
    1982,  1987,     0,  2040,  2038,   222,     0,     0,  1344,  1201,
    1226,  1225,  1206,     0,  1220,  2168,   140,  1346,  1345,  1211,
       0,   142,  1209,   917,     0,     0,     0,  1171,     0,     0,
       0,     0,     0,     0,  1112,  1111,  1109,  1110,  2609,  2608,
       0,  1607,  1095,     0,   944,  1104,   943,   188,   192,   187,
     190,     0,  1601,   318,   318,   306,     0,     0,     0,     0,
    2569,  2577,  2576,  1304,     0,   244,  1546,     0,  1589,  1553,
    3456,  3519,  3520,  1440,     0,     0,  2552,   749,   746,   772,
       0,   770,     0,   766,   760,   767,     0,   798,   792,     0,
     794,   795,   793,   790,   783,     0,   781,     0,     0,  2033,
       0,     0,     0,  1217,  1218,   138,  1207,  1229,  1219,  1348,
    1347,  1224,  1223,  1221,  1222,     0,     0,     0,  1183,  1182,
       0,     0,  1179,  1178,  1200,     0,  1202,  1204,   967,     0,
    1093,   936,   936,   950,   556,   556,   174,   255,   259,     0,
       0,     0,   555,  1599,   250,     0,  1544,  1526,  2324,  2326,
    2578,   744,   769,     0,   777,   773,   775,   778,   797,   796,
       0,   780,     0,   791,  2035,  2034,  2049,     0,     0,  1200,
       0,  1186,  1184,  1185,     0,     0,   903,  1200,   907,   909,
    1608,     0,   947,   937,   939,   946,   952,   953,   951,   954,
    3542,  3542,   172,   186,   259,   307,   304,     0,   558,  3527,
     233,  1310,     0,  2564,   771,     0,     0,   786,   785,   782,
       0,     0,   915,   911,  1200,     0,     0,   905,  1609,   938,
     945,   955,   957,  3543,   193,   191,   184,     0,     0,     0,
       0,  2572,   776,   774,   784,  2041,  2039,   913,  1181,  1180,
     956,   305,   559,     0,     0,  2580,  3528,  2579,     0,  2584,
    3523,     0,     0,  2591,  3521,  3522,     0,  3529,  2582,  2583,
    2581,  2586,     0,     0,  2588,  2589,     0,  2553,  3524,   477,
    2590,  2585,     0,  2592,  2594,     0,  3530,  2587,     0,  1599,
    2593,     0,  1600,  2595
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5165, -5165, -5165, -5165,  2417,  4785, -5165, -5165, -5165,  4450,
   -5165, -5165, -5165, -5165,  3799, -5165, -5165,  1767, -5165, -5165,
   -5165, -5165, -5165,  2140, -5165,   605, -5165,   610, -5165,   609,
   -3231,  -572,  4514, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165,   272,   266,   275, -5165,
     280, -5165, -4908, -5165, -5165, -5165, -5165,   278, -5165, -5165,
   -4534, -5165, -5165,  2298, -2854, -5165, -5165,   155,  1627, -5165,
   -5165,   445, -5165,    83, -5165, -5165, -5165, -4470,   -70,  -279,
   -5165,    49,    28, -2715,  4397, -4810,   705,  1714, -5165, -5165,
    2312, -5165, -5165, -3149, -5165, -5165, -2129, -5165, -5165, -5165,
     730, -4610,  1529, -5165, -5165,   277, -5165, -5165, -5165, -5165,
   -5165, -3938,  -175,  -173, -5165,  -585, -2926, -5165, -2246, -5165,
   -5165, -5165,  4371, -5165, -5165, -5165,  2131, -5165, -4074, -5165,
   -4737,  4947, -5165,  -654, -5165, -5165, -5165,  2150, -5165, -5165,
     837,  1514,  3567,  3028, -5165, -5165, -5165, -5165,  3092, -5165,
    2350, -5165, -1782,  3986, -5165, -5165, -5165, -5165, -5165,  3064,
   -2526, -5165, -5165, -5165,  1807, -5165,  -817, -5165, -1937,  -914,
    4832, -5165,    50, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -1309, -5165, -5165, -5165, -5165, -5165, -5165, -3901,
   -2120,  2076, -5165,  2101, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,   995, -5165, -5165, -5165, -5165,    54, -5165, -5165,
   -5165, -5165, -5165, -5165,  2906, -5165, -5165,  4982, -5165, -5165,
   -5165, -3544, -5165, -5165, -5165, -5165, -5165, -5165,    55, -5165,
   -5165, -5165, -5165, -4595, -5165, -5165, -5165, -2103, -5165, -5165,
   -5165,  1276, -5165, -5165,  3488, -5165,  3489,  3486, -5165,  3490,
   -5165, -2963, -5165, -5165, -5165, -5165, -5165, -5165, -5165,    58,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  4395, -5165, -5165, -5165, -2947, -5165,
   -5165, -3316,  3701, -5165, -2576, -5165, -5165, -2676, -5165, -5165,
   -2551,  1555, -5165, -5165,  1371,  1893, -5165, -1731, -2631, -2617,
   -5165, -5165, -5165, -2740, -2707,  -792,  3568, -1382, -3163, -5165,
   -5165, -5165, -5165, -5165,   197,   512, -5165, -5165, -5165,   358,
    1630,  2245, -5165, -3970, -5165, -5165,   718, -5165, -5165, -5165,
   -5165, -5165,  1378,   608,  1377, -5165,   940,  3277, -2974, -5165,
   -5165, -5165, -5165, -5165, -5165,   -51,   413,  -140, -5165, -3926,
     616, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -3355,
   -5165, -5165, -5165,  -264, -5165, -5165,  -219, -5165, -5165,  -263,
   -5165,    90, -5165, -5165,  1810,  1382, -5165, -5165,   945, -3374,
   -5165, -5165,  3083, -1906, -5165,  -696, -5165, -3843,  1664, -3570,
   -3327, -5165, -5165,   377, -1217, -1203,  -143, -5165, -5165, -5165,
   -5165,  1116, -5165,   845,  1666, -3933, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -3922, -3910, -5165, -4862, -5165, -5165, -5165,
   -3699, -5165, -5165, -5165, -5165, -5165, -5165,  -172, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -3839, -5165, -5165,    57,    43,
   -5165,   167, -5165, -4556, -5165, -3490,  -966, -5165, -5165, -3472,
   -3469, -3467, -5165, -1403, -3492, -1400, -3461, -5165, -5165, -5165,
   -1358, -1374,   844, -1278, -1316,  1451,  -771,  -547,  2134,    51,
   -5113, -2893, -1027, -1011, -5165, -5165, -3116, -4064, -5165,  2893,
   -4739,  -655, -1923, -3337,    -2, -5165, -5165, -1751, -1772,  2365,
   -5165,  3711, -2140,  -967, -2119,  2059, -5165, -5165,  1474, -5165,
   -1261,  1472, -5165, -5165, -5165,  1481, -5165,  -186, -5165, -5165,
   -5165, -5165, -3607, -5165, -2623, -4163, -5165, -5165,  5379,  5380,
   -3422,  -138,  -141, -5165, -5165, -5165,   427, -5165, -5165, -2975,
     -18,   118,   128, -3359, -4699,   448, -2616,  3708, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  1711, -2284,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -3704, -4004, -5165,
   -5165,  1167, -5164, -3471, -3478, -3890,  4646, -5165, -5165, -5165,
   -5165,  4521, -3553, -3911, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,  3915,  1912, -5165, -5165,  2466, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,   384,  2469, -5165, -5165, -5165,
   -5165, -5165,  3025, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,    44, -5165, -5165, -5165, -5165, -5165,   574,  3783, -5165,
   -5165, -5165, -5165,   -22, -5165, -5165, -5165, -5165,  3354, -5165,
   -5165, -5165, -5165,  3225, -5165, -5165, -5165, -5165, -5165, -5165,
    2218, -5165,  2871, -5165, -2515, -5165, -5165,  1623,  -557, -5165,
   -5165,  4585, -5165, -5165, -5165,  1838, -5165, -5165,   391, -5165,
    2102, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  3106,
     860,    77,  4595, -3877, -2027, -5165, -1283, -1284, -5165, -5165,
   -3672, -5165, -3307, -4286, -5165, -5165,  3875, -2008, -4033,  2446,
   -1735, -5165,  -548, -3412,    -9,  1509, -5165,  2263,   926,  8562,
   -5165, -1593, -1558, -5165, -5165,   -39, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165,  2783,  2788, -5165, -5165,  4214,
   -4180, -5165, -5165,  -861, -5165, -2914, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165,  2085, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    4160, -1615, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -1306, -5165, -2910, -5165, -5165, -5165, -5165, -5165,
   -5165,  -536, -5165,  4309, -5165,  4345, -5165, -3123, -1867,  2582,
    2009, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  2591, -5165,
   -2158, -5165, -3724, -5165, -5165, -5165, -5165, -5165,  1040, -5165,
   -4003, -5165,  1544, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  2602, -5165, -5165, -3049,   205, -5165,   371, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165,  -101,  1016,   -97, -3552,
   -1497,  2297, -5165, -5165, -1540,  4350, -1933, -5165, -5165, -5165,
    2726, -5165,  1891, -5165, -5165, -5165,   640,   643, -5165, -5165,
    2121, -5165, -5165, -5165, -5165,   766,   249, -5165, -5165, -5165,
     625, -2728, -2151, -5165,   776, -4194, -1207, -5165, -1181, -5165,
   -1821,  2050,   737, -2669, -5165,  1683, -1547,  -549, -3187, -4346,
   -3354, -5165, -1642, -5165,  3178, -5165, -5165, -5165,   659, -5165,
   -5165, -5165,  1921, -5165, -1947, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  -430, -1126, -5165, -5165,  2983, -1854,
    -537,  5492,  -305, -5165, -5165,  -297, -5165, -5165, -5165, -5165,
    4442,  4186,  2948, -5165, -5165, -3562, -3075, -5165,  1107, -1141,
    1709,  2470, -5165, -5165, -5165, -5165, -5165, -5165, -5165,  1454,
   -5165, -3399, -5165, -5165, -5165,  -295, -5165, -5165, -5165,  1491,
   -5165,    35,  5315,  -291, -5165, -5165, -5165,  5149, -5165, -5165,
   -5165, -5165, -5165,  3779, -1426,  5154, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  3348, -5165, -5165, -5165, -5165, -5165,
   -5165,  4143,  5329,  -657, -1610, -5165,  -900,  3346,  2660, -1098,
   -5165, -5165, -5165,  4683,  5331, -5165, -5165,  5499, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165,  3301,   754, -5165,
   -5165,   767, -5165, -5165, -5165, -5165,  4042, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
    1720,   -69, -5165,   523,   -95, -5165,   348, -5165, -5165, -5165,
   -5165, -5165,  -133, -5165, -5165,  -137, -5165, -1303,  5004, -1827,
   -5165, -1774, -3466, -5165, -1684,  2090, -5165, -5165, -5165,  3349,
   -5165, -5165, -5165, -5165,  1581, -5165, -5165, -3661,  -804, -1685,
   -3848,  3745, -5165, -5165, -5165,  -912,     0,   279,  1822, -2361,
   -5165, -5165,  2814,  2900,    53,  3434, -5165,  5087,   -76,  -482,
    -667, -1040, -5165,  7451, -5165, -5165, -5165, -5165, -5165,    24,
    -594,  -554,   146,  -637,    23,   112,    12, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  2715, -5165, -5165, -5165,  1565, -5165,  5363, -5165,
    3558, -1770,  5366,  3441,  2746,  2748, -5165, -5165, -5165, -5165,
   -1723, -5165, -5165, -1747,   398, -5165,  3764, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165, -5165, -5165,  4040,  -504,  -534,  4236,  5376,  4897,
   -5165,  4520, -5165, -5165, -5165, -5165, -5165,  1915, -5165, -2006,
    2772, -1461, -2300, -5165, -5165,  3194,  1743, -5165,  2369, -2648,
   -3238, -5165,  2615, -2813, -5165, -5165,   685, -5165, -5165, -5165,
    1879,   110,  5349,  4786, -5165, -5165, -5165, -5165, -3143, -3903,
    -755, -5165, -4124, -5165, -2018, -5165, -1269,  2137, -3710, -5165,
    -512, -5165, -5165, -3629, -3627,  1574, -1484,  2720,  1155, -5165,
   -5165, -3484,  1442,  5577,  5584,  5586,     2, -5165, -3325, -5165,
   -4368, -5165,   222, -5165, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165, -5165,  3305,    56, -5165, -5165, -5165, -5165, -5165, -5165,
   -5165,  4060, -5165,     5, -3747, -5165, -5165,  2445, -5165, -5165,
   -5165, -5165, -5165, -5165, -5165, -5165, -5165
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,   464,   728,  1995,   465,   466,   467,   468,   469,  1251,
    1252,   470,  1253,  1926,  1929,  2693,  3381,  3382,   471,   701,
     472,  2109,  2898,  2899,  4746,  4747,  4740,  4741,  4743,  4744,
    2900,   800,   801,   473,  3439,  3440,  4943,  4539,  4540,  2749,
    4044,  4617,  2009,  2008,  2010,  2014,  2013,  2768,   736,  5016,
    5281,  5641,  5932,  5808,  5461,  5462,  5463,  5647,  5470,  5934,
    5468,  5933,  5464,  5804,  6015,  5802,  6014,  5465,  5284,  5285,
    5466,  2769,  4030,  3517,  3518,  1307,  3433,  3526,  3527,  2765,
    4606,  4726,  5519,  4730,  5683,  5834,  5659,  3554,  5113,  5520,
    5521,   638,  3445,  3446,  2073,  5018,  5291,  4037,  4038,  4039,
    3442,  3443,  5292,  2826,   474,   793,  1379,  2101,  2102,  5301,
    3610,  3611,  3612,  5288,  5289,  5290,  5477,  4609,  5024,  4602,
    5017,  4603,  4611,  4604,  2676,   918,  2105,  2106,   816,   817,
    1396,   818,   819,  2126,  1452,  2958,  2959,  2960,  2179,   820,
     821,   822,  2123,   823,  2983,  2923,  3672,  3673,  4267,   824,
    3639,  3640,  3641,  2987,  1143,  3642,   475,   476,   657,   666,
     658,  1140,  2544,  1141,   477,   478,   696,  1952,  1953,  1954,
    1955,  3398,  2706,  3392,  3393,  4528,   825,   826,  2201,   919,
     920,   479,   921,   639,  1573,  2289,  3700,   922,   923,   924,
     925,  1575,  2275,  2276,   926,   927,   928,   929,   930,  5469,
    3017,  3054,  3697,  3018,  3674,  3055,  2285,   931,   932,   933,
     934,  1576,   894,   895,  3033,  4282,  4783,   935,   614,   796,
     797,  2108,  2872,   798,  2873,  3563,  4739,   799,  1381,  2868,
    1383,  3704,   936,   937,  2293,  2292,  3701,   681,   938,  1241,
     620,  1395,  1910,  5656,  5657,  5937,  6108,  1911,  3365,  3955,
    4503,  4504,  4925,  2236,   860,  1508,   939,  1237,  2672,  1149,
    2552,  3705,   940,  2295,  2297,  2294,  3703,  5541,  2296,   941,
     649,   675,   637,  1506,   663,  5021,  5298,   772,   773,   808,
    2921,   774,  1391,  1352,  2078,  2852,  2853,  3532,  3533,  3599,
    3600,  3601,  2844,  2845,  2846,  2910,  2911,  2912,  2833,  2834,
    2835,  2082,  2830,  2831,   775,  1353,  1364,  2847,  2848,  2849,
    3605,  2914,  2915,  2916,  2917,  2850,  2226,  2851,  4090,  4021,
    5261,  5259,  5260,  4022,  5008,  3266,  5410,  4878,  4879,  4590,
    4591,  4592,  5087,  3372,   484,   652,  1123,  1782,  2535,  3860,
    3247,  3249,  2536,  3859,  4421,  4422,  4423,  3245,  3246,  5404,
    3251,  3857,  5560,  5957,  5718,  5719,  3849,  5723,  4430,  4872,
    4873,  5201,  5405,  5566,  5867,  5724,  5964,  5865,  5960,  5866,
    5962,  6086,  6035,  6036,  5877,  5975,  5976,  6040,  6087,  5734,
    5735,  5736,  3854,  5198,  3869,  4446,  4447,  5209,  4885,  5213,
    5280,  3428,  2067,  2068,  5067,  1303,   485,  4023,  4164,  4024,
    4025,  4956,  5637,  4026,  4027,  4028,  3667,  1859,  4982,  4968,
    4616,  4575,  4576,  4577,  4578,  4579,  5604,  5774,  5606,  5607,
    5764,  5906,  5763,  4580,  4581,  5454,  4998,  4692,  4582,  4583,
    4584,  5006,  5275,  5456,  5452,  5614,  5615,  6062,  6063,  5631,
    6013,  5632,  6069,  6100,  6101,  5616,   486,   651,  1730,  5789,
    5790,  5791,  5276,  1454,  4233,  1455,  2149,  1456,  4235,  1457,
    1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,  2973,
    2139,  2140,  2937,  2132,  2133,  2131,  4756,  4754,  2198,  5633,
    5634,  2930,  2136,  2137,  2946,  5801,  5617,  5635,  5619,  1467,
    4243,  2151,  1815,  1816,  4619,  1829,  1830,  2970,  2188,  2971,
    2071,  2152,  2940,  2941,  2944,  4379,  5183,  4385,  4386,  4387,
    3799,  3800,  3801,  3802,  3803,  3198,  5620,  5001,  5446,  5599,
    5602,  5772,  6002,  4999,  4585,  5004,  1226,   737,  4586,  4587,
    5888,  5750,  5757,  5889,  5758,  5751,  5448,  3436,  5890,  5891,
    5892,  5760,  5753,  3987,  5250,  5251,  4986,  2950,   487,   556,
    3552,  1340,  1342,  1351,  3558,  2861,  2860,  1357,  1356,  2839,
    3555,  4179,  5350,   759,  4166,  5512,  5326,  5518,  4167,  4928,
    4168,  5503,  5674,  4169,  5342,  5516,  5680,  4929,  4930,  4170,
    4171,  4172,  5896,  5897,  5898,  4681,  1537,   778,   779,  1369,
    1370,  1371,  3012,  5104,  4702,   488,  2740,  2735,   489,  1277,
    1278,  1279,  1975,  1976,  2738,  2739,  3423,  3975,   490,  1245,
    2687,  1966,  2728,   491,  1265,  3415,  3416,  3417,  3970,   492,
    1377,  2098,  2099,  2865,  4186,  4738,  5117,  5359,  5533,  5355,
    5700,  5701,   493,   804,  1387,   494,   616,  2118,  2119,  2120,
    2902,   495,  1586,   564,   496,  1147,  1787,  1790,  1791,   497,
    1244,  1913,  1914,  1915,  1916,  3368,   498,  2267,  3036,  3037,
    3038,  3039,  2682,  3956,  2683,  2684,  3377,  4289,   499,   755,
    3487,  1328,  1329,  1330,  4650,  4076,  4077,  5692,  5524,  5525,
    3814,  3815,  3816,  2023,  3471,  4643,  5318,  5685,  5947,  2808,
    5057,  5842,  2809,  2025,  1324,  1325,  2796,  2810,  2028,  2778,
    2044,  3652,  3653,  4498,  4922,  2045,  2046,  5214,  2799,  2800,
    1901,  5424,  2801,  4066,  5650,  4633,  6010,  1607,  1518,  1249,
    1088,  1089,  1090,  1742,  1743,  5621,  1091,  1752,  2490,  4347,
    4826,  4827,  4828,  4829,  5174,  2411,  2412,  2530,  1092,  2397,
    1093,  1094,  1095,  1096,  1097,  1098,  1099,  1100,  1101,  1102,
    1103,  2525,  4328,  4329,  4808,  3240,  3241,  3242,  1104,  3080,
    4314,  3090,  1105,  1106,  1107,  1108,  1109,  3841,  1110,  4417,
    5041,  1111,  1736,  2476,  2357,  4800,  4319,  5152,  5156,  5157,
    5158,  5378,  2301,  3068,  3727,  4792,  4793,  4794,  3728,  3729,
    3842,  3203,  1628,  1629,  1596,  1597,  3777,  2663,  2664,  2665,
    2666,  2667,  4913,  4914,  5413,  5225,  5415,  5229,  3354,  3355,
    2556,  2557,  2668,  2669,  2670,  2671,  3926,  4903,  4403,  4856,
    3819,  3810,  3811,  3812,  3927,  3928,  3929,  3930,  4478,  4899,
    4900,  5568,  3345,  3932,  4477,  3938,  5883,  5580,  5581,  5982,
    5981,  5582,  5422,  5423,  5236,  5237,  4507,  4508,  4509,  3877,
    2353,  2354,  2427,  1959,  1960,  2302,  2213,  2996,  4063,  4629,
    3225,  3473,  4414,  5039,  4631,  5042,  5043,  2520,  3233,  3837,
    3235,  4861,  5192,  5193,  5396,  5550,  5551,  5556,  4175,  5084,
    5085,  2997,  2029,  3465,  4054,  4625,  1862,  1863,  2030,  2633,
    3914,  3915,  3661,  2988,  4671,  2989,  3804,  3786,  4934,  4091,
    2325,  2326,  4949,  4838,  2790,  4058,  5034,  5035,  5036,  2782,
    2783,  3460,  3461,  3462,  2031,  2784,  4049,  5030,   500,   691,
     501,  2233,  1503,  2232,  3389,  1389,  1795,  2208,  2209,   845,
     767,   636,   502,   640,  3034,   503,   664,  2554,   899,  1152,
    1796,  1797,  3267,  3865,  3870,  3268,  2049,  4436,  4437,  3007,
    4104,  4105,  4099,  3483,  4072,  2050,  2803,  4640,  3480,  4641,
    3481,  3384,  4284,  5143,  5704,   504,   673,  4495,  3944,  3945,
    5853,  5854,  1153,   505,   621,  2207,   840,  1480,  1483,  2215,
    2993,  4263,  1484,  1485,  2995,   841,   842,   506,   714,  3424,
    3978,  1283,  1884,  1885,  1886,  2649,   507,   670,  1227,  3913,
    4475,  2626,  1126,  1501,  1867,  1230,  1868,  2622,  3328,  1850,
     508,  1323,  1322,   792,   509,   510,   748,   565,  2017,   511,
    1254,  1945,  2704,  3963,  3964,  4513,  1946,  1947,  3390,  3386,
    4935,  4936,  5246,   512,   706,  1269,  1270,  1970,  1968,  3420,
    2731,   513,   653,  1127,  2539,   514,   641,   902,  1540,  2266,
     515,   516,   517,   904,  4290,  5856,  6030,   645,  2269,  1544,
    5009,  5308,  5492,  5493,  5495,  5669,  5670,  6083,  6129,  6140,
    6133,  6143,  6144,  6147,  6153,  6154,  1112,  1290,  1291,  1113,
    5793,  1114,  1115,  1116,   518,   519,  1239,   677,  1906,  1907,
    3363,  2675,  3361,  1908,  3872,  3873,  3477,  4055,  1117,  3874,
    4987,  1390,  2210,   699,   520,  1118,   603,   769,  1292,  3457,
    2712,  1178,  3303,  1120,   828,  3706,   942,   943,  1347,  1788,
    2087,  2088,  2713,   605,  1553,  3304,   829,  1180,   523,   606,
     607,   608,   609,   610,   611,   612,   613,   529,   669,  1162,
    2571,   530,  1338,  2813,  3378,  1806,  1188,  1835,  1824,  1834,
    2596,  3315,  2599,  3316,  3317,  4466,  3906,  4467,  3907,  1233,
    2591,  1807,  3908,  2584,  2585,  2586,  2587,  3897,  1821,  2580,
    2064,   531,   905,  2274,   648,  1546,  1547,  3045,   532,   672,
     533,  1961,  2725,  2726,  3408,  3967,  3409,   534,  1158,  1159,
     535,   888,  3431,  3024,  2222,  1350,  2223,  2250,   891,  1510,
     892,   893,  1524,  1521,  1527,  1523,  4129,  3547,  3548,  3029,
    2230,  2089,  2562,  3540,  4663,  2090,  2240,  3020,  3021,  2858,
    5368,  4136,  3551,  5137,  4273,  5369,  5370,   536,   678,   537,
    5293,   690,  1248,  1924,   538,   539,   540,   541,  1334,  4059,
    4060,  2812,  5527,  5846,  1336,  1337,  2032,  3821,  2057,  3206,
    3207,  1326,  3208,  3209,  3210,  3211,  1732,  1733,  3822,  4394,
    4395,  2047,   557,   558,   559,   560,   782,   783,  3557,  4181,
    4733,  4734,  5354,  5530,  6136,  6137,  2764,  4042,  5816,  6109,
    6130,  6149,  2771,  5026,  5303,  2772,  4046,  5486,  2761,  4041,
    5294,  2773,  2762,  6104,  4035,   542,  1297,  1293,   725,  1993,
    1987,  1989,  2746,  3427,   543,   544,   545
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     521,  1335,   650,  1453,  1570,  2270,   756,  2157,   787,   781,
    2158,  2546,   528,  1229,  1176,  1225,  2788,  1891,   777,  2793,
    2018,  2924,  2515,   526,   524,  1864,   831,  2811,  1817,  1820,
    1822,   602,  1184,   682,  2807,  2462,  2635,  1832,  1304,  1305,
    2027,  2026,  2634,  1864,  2574,  2551,  3059,  2990,  2143,  2472,
     480,  2974,  3624,   522,   481,   482,  2161,  3454,   483,  2324,
    2217,  3376,  2998,  1500,  2597,  4067,   832,  3820,  2058,  3474,
    2245,  1631,  2170,  2975,  4174,  1182,  3988,  3654,  1148,  2791,
    4069,  4173,  2176,   667,  1590,   843,  2381,   847,   848,   849,
     850,   851,  2197,   853,   854,  2794,  1349,   856,   857,  2581,
    3707,  3708,  2189,  3432,   890,  1857,  1789,  3687,  4610,  2593,
    4402,  2168,   527,  2613,  2614,  1183,  1671,  4265,  2227,  4240,
    4212,  4234,  2130,  2069,  2135,  2363,  2141,  1892,  2141,  2332,
    2180,  2181,  2182,  1160,   889,  2184,  2141,  2070,  1274,  4236,
    3912,  1281,  4237,  2165,  4238,  2130,   525,   694,  4092,  2195,
    4242,  2481,  2141,  2779,  4081,  1250,  4758,  1984,  4295,  2489,
    3057,  2814,  2141,   889,  3053,  1398,  2177,  3373,  2705,  3732,
    2545,  2183,  4588,  1735,  4092,  4092,  2546,  4698,  4415,  1630,
    3391,  3606,  2141,  2130,  2130,  2193,  2194,  4596,  3866,  3867,
    3060,  3974,  4404,  4902,  4405,  2491,  2492,  4644,  2494,  2495,
    2496,  2497,  2498,  2499,  4678,  2501,  2502,  2504,  2506,  2507,
    2508,  2509,  2510,  2703,  3607,  4679,  5304,  4490,  1726,  1728,
    1729,  4863,  3535,  3934,   831,  4165,   831,  4680,  2942,  4773,
    1772,  1957,  3943,  4183,  1570,  3596,  3536,  2743,  4381,  4092,
    4092,  3030,  2962,  3031,  3032,  2620,  5253,  4128,  4682,  5012,
    4684,  2100,  4736,  4694,  1737,  1738,  5109,  2282,  4033,  4033,
     788,  3010,  1163,  2642,   832,  4097,   832,  4710,   789,  3531,
     790,  1957, -2979,  3851,   791,  -696,  5357,  2066,  1737,  1738,
    3195,  1348,  -483,  3504,  4224,  4597,  2303,  2304,  2655,  2656,
    3603,  4382,  1737,  1738,  4040,  2314, -1245,  2066,  1737,  1738,
   -2085,  2901,  3537,  3942,  3604,  4699,  4440,  3969,  4787,  1491,
    1737,  1738,  4135,  4147,  1737,  1738,  -814, -3379,  2777,   705,
    4318,  1504,  1505,  4588,  5963,   683,  1893,  2371,  4396,  2374,
   -2670,  1679,  1737,  1738,  1525,  2545,  -688,   712,  2984,  1737,
    1738,  4760,  1991,  1956,  2859,  2388,  2389,  2836,  2392,  1711,
    1737,  1738,   685,  1737,  1738, -1518,  2398,  2399,  1737,  1738,
    2403,  4851,  1737,  1738,  1331,  4117,  4118,  5116,  2066,  4947,
    1737,  1738,  4034,  4034,  1813,  1388,  1737,  1738,  5425, -2671,
    2856,  2144,  2317,  3120,  2159,  3976,  4197,  -815,   709,  1851,
    2913,  2163,   683,  -691,  3243,  1819,  1737,  1738,  2150,  2150,
    4415,  1332,  2150,  1737,  1738,  2134,  2171,  5287, -2085,  2150,
    2482,  4788,  2984,  5455,  2318,  2150,  1737,  1738,  4950,  4122,
    3458,  1542,  4381,  1813,  5005,  1739,  1311,  1740,   662,  2319,
    4218,  4219, -2783,  4419,  1737,  1738,  4336,  -691,  1737,  1738,
    3252,  1715,  2153,  2153,  2156,  5714,  2153,  2160,  4101,  1739,
    5277,  1740,  3011,  2153,  2164,  4594,  1737,  1738, -3372,  2153,
    2167,  2984,  2229,  1739,   707,  1740, -2085,  1737,  1738,  1739,
    2320,  1740,  4952,  1813, -2979,  4382,  4954,   771,  4890,  4904,
    4612,  1739,  5286,  1740,   687,  1739,  4103,  1740,  2244,  4972,
   -3355,   679,   680, -3202,  2984,  2190,  2483,  5199,  2321,  1737,
    1738,  1737,  1738,  1739, -3359,  1740,  1737,  1738,  5364,   642,
    1739,  3785,  1740, -3358, -3356,  2984,  1737,  1738,  3216,  2984,
    5800,  1739,  4176,  1740,  1739,  3691,  1740,  1737,  1738,  1739,
    5908,  1740,  2984,  1739, -3379,  1740,  4787,  1813,  2751, -3357,
    1922,  1739,  1578,  1740,  5467,  4613,  1741,  1739,  4835,  1740,
    5430,  3065, -3362,  2146,  2780,  5644,  1333,  3276,  3277,  3278,
    3279,  4700,   887,  5813,  5485,  3078,  2984,  1739,  6020,  1740,
    1741,  1737,  1738,  3538,  1739,   761,  1740,  1202,   764,  1737,
    1738,  5102,  1737,  1738,  1741,  4121, -2783,  1739,   757,  1740,
    1741,   887,  1888,  5901,   615,  2484, -3292,  2322,  6138, -3293,
    1902, -1533,  1741,  2055,  3217,  1739,  1741,  1740,  1243,  1739,
    2000,  1740,  2001,  2002,  2003,  2004,  2005,  2007,  6051,  2145,
     827,  1754,  3783,  5667,  1741,  1261,   757,  1739,  3042,  1740,
    4614,  1741,   835,   655,  1163,  5668,  4187,   521,  1739,  4788,
    1740,  2984,  1741,   834,   830,  1741,  2998,  1543,  1887,   528,
    1741,  1119,  1903, -3292,  1741,  5300, -3293,  4638,  3911,   660,
     526,   524,  1741,  4107,  2569,  2056,  4427,  4668,  1741,  1177,
    1232,   689,  1739,  4642,  1740,  1119,    42,  1739,  4255,  1740,
    3692,  1187,  2744,  2984,  6139,  2592,  3043,  1739,  1741,  1740,
     861,  1119,  1185,  1181,  1358,  1741,  2838, -2779,  1739,  1631,
    1740,  5103,  2966,  3218,  5092,  2221,   836,   668,  1741,  1376,
    1146,  1737,  1738,  1757,  2365,  1631,   752,  2984,   676,  4607,
    1359,  5534, -2819,  1124,  5985,  5467,  1741,  1726,  1728,  6052,
    1741,  5715,   527,  4836,  5644,  4123,  2531,  4159,  5654,  2919,
    3023,   837,  1739,  1317,  1740,  1744,  5909,  2797,  1741,   527,
    1739,  5473,  1740,  1739,  2617,  1740,  2619,  2792,  3196,  1741,
    1745,  2560,  1360,  4908, -3202,   787,   833,  4912,  3253,  2637,
    2026,  3204,  2640,   753,  5058,  4889,  2643,  2781,  1499,  2576,
    3430,  1186,   780,   525,  3820,   643,  1375,   561,  1240,  1746,
    4177,  1741,  3410,  1741,  2129,  1747,  3244,  1119,  1741,  1367,
    3283,  2532,  1889,  2658,  2659,  2660,  2611,  2330,  1741,  5826,
    1312, -3292,   521,  5800, -3293,  1918,  1579,  2053,   827,  1741,
    1468,  4272,  2795,  1630,   528,  5200,  1365,  4102,   753,  1748,
     835,  1680,  1472,   684,  5266,   526,   524,  5309,  4165,  2227,
    1992,   834,   830,  1471,  1469,  3470,  3282,  6075,  1864,  1712,
    2069, -2779,   646,  5187,  4825,  4383,  5217,  1361,  3635,  2951,
    3606, -2838, -2839,  1741,  2070,  1394,  2951,  2524,  4092,  5287,
    3269,  1741,  4588,  1631,  1741,  1492,  1493,  1494,  1495,  4252,
    4880,  1923,  1739,  2086,  1740,  4717,  4433,  1814,  1327,  4040,
    4488,  4489,  5336,  3607,   802,  1119,  1362,  5623,  4672, -2670,
    5716,  3535,  1498,  1925,  3911,  1502,  1551,  4751,  1551,  1551,
    1551,  4852, -2840,  2517,  1551,  3536,  1551,  4761,  1557,  4220,
    1557,  1557,  1557,   521,   527,  2146,  1557,  2857,  1557,  1555,
     527,  1555,  1555,  1555,  5959,   528,  1814,  1555,  5487,  1555,
    3977,  1716,  3226,  2147,  2148,  1119,   526,   524, -2671,  1202,
    1119,  2636,  4094,  3229,  4119,  3231,  3232,  2110,   525,  5376,
   -2979,  5031,   786,  -696,   833,  2129,  1470,  1958,  3049,  3603,
    -483,  3201,  3202,  2117,  3052,  2134,  1574,  2117,  4384,  1813,
    1119,  2547,  1263,  3604, -1245,   713,  1814,  2985, -2085,   802,
    1119,  2904,   802,  2931,   889,  1285,  2654,  2117, -2085,  3434,
    5399,  5400,  3539,  1741,  -814, -3379,  2661,  1958,  4737,  3223,
    2662,  1526,  3212,  5660,   805,  5646,  5648,   788,  1556,  3680,
    1556,  1556,  1556,  5010,  -688,   789,  1556,   790,  1556,  3631,
    3632,   791,  5358,  3197,   859,   527,   710,  1852,  1631,  4383,
    2485,  4701,  5717,  3341, -2003,   617, -3372,  3079,   944,  2086,
    1814,  1771,  1554,  3121,  1554,  1554,  1554,  5433,  3485,  4750,
    1554,  2985,  1554,  2311,  3104,  2471,  5818,  3107,  3089,   525,
    1235,  1737,  1738,  2231,  5910,  -815,  5912,  5913, -3355,  1119,
    1119,  1119,  1119,   711,  5365,  3122,  3091,  3092,  2323,  2533,
    3489,  1119, -3359,  1818,  3084,  1823,  3136,  4917,  4615,  1826,
    1831, -3358, -3356,  2836,  3093,  3094,  2929,  4337,  2932,   563,
    2985,  3894,  3182,  3183, -2783,   753,  3193,  3194,  1737,  1738,
   -2783, -2783,  3534,   758,  3827,  3828,  5569, -3357,  2947,  1860,
    3106,  4642,  2405,  3662,  3813,  2561,   644,  5153,  2952,  5814,
   -3362,  4439,  2602,  2985,  6021,  4588,  2547,  2150,  3219,  2422,
    2957,  3085,  2430,  3730,  2432,  3731,  2298,  3110,  2436,  2437,
    2438,  2288,  1737,  1738,  2985,  4678,  2444,  2977,  2985,  2150,
    4324,  4325,  2150,  4659,  3347,  4287,  4679,  4107,  1712,  5058,
    2913,  2985,  2150,  2967,  3911,  5226,  5227,  5411,  4680,  3095,
    3602,  2153,  2948,  3096,   839,  4460,  1737,  1738,  3817,  1590,
    3948,  5194,  5535,  5195,  2641,  5995,  5996,  2857,  6073,  4694,
    4338,  4339,  6005,  2153,  2963,  2985,  2153,  2964,  3044,  1125,
    5323,  3112,  5325,  5998,  3035,  5328,  2153,  2976,  5220,  3784,
    2985,  5332,  5333,  1737,  1738, -2819,  2317,  5426,   646,  4174,
    5047,  4092,  1739,  2145,  1740,  4588,  4173,  3006,  3348,   754,
    1737,  1738,  1119,  1368,  1948,  3113,  3665, -2819,  1163,  3349,
    4351,  4352, -3500,  1996,  6106,   561,  3350,  3670,  2318,  3882,
    4357,  4358,  1813,  4184,  4404,  2572,  4405,  1737,  1738,  5351,
     647,  5029,  3097,  2319, -3292,  2534,  2837, -3293,  2857,  1739,
    2985,  1740,  5028,  1363, -2347,  3351,  3909,  2806,  6050,  2582,
    -115,  -115,  4941, -2293,  3205,   889,  1767,  1768,  1769,  1770,
    2758, -2347,  2760,  1737,  1738,  2767,  2148,  2770,  2774,   803,
    1348,  2537,  2718,  2015,  2320,  4410,  4411,  3262,  6076,  2918,
    3542, -2293,  2985,  1739,  3099,  1740,   753,  3109,  1119,  3820,
     561,  3412,  -119,  -119,  1150,  4661,  1853,  1247,  5707,  1529,
    3269,  1920,  2321,  1998,  1999, -1464,  3352,   618,   646,   810,
     811,   646,  4957,  1741,  4907,  2715,  2985,  1739,  4911,  1740,
    2700,  5330,  4970,  4971, -2838, -2839,  -111,  -111,  1119, -2779,
    3263,  1119,  5471,  5711,  3076, -2779, -2779,  3353,  5618,  1348,
    4165,    42,  1813,   646,  5340,  5755, -2838, -2839,  2732,  4144,
    1163,  2095,  2815,  4901,  1739,  2716,  1740,  1275,  3922,  2199,
    1741,  1749,  1750,  1751,  5999,  5500,  2816,  4033,  5440,  6070,
    6071,  1739,   887,  1740,  3435, -2840,  3785,  3785,  6000,  5515,
    3785,  3785,  3286,  1869,  4565,  3287,  3785,  3785,  5915,  4830,
    3391,  1318,  3338,  4724,   836,  5792,  3010, -2840,  1739,  1861,
    1740,  2322,  2838,  3313,  1741,  4103,  1631,  3103,  4074,  3543,
    5713,  2763,  2766,  5037,  5038,  4670,  3111, -2760,  1864,  5695,
    4079,  1398, -2688,   695,  3861,  5190,  4073,  4588,  5206,   837,
    3263,  5510,  2546,  3606,  1739,  4246,  1740,  4248,  1741,  3535,
    -411,    42,  1814,  2022,   889,  3141,  5792,  5191,  1276,   802,
    3374,   802,  2635,  3536,   686,  2635,  2635,  5567,  3257,  3258,
    3413,  3917,  3918,  5216,  2568,  3375,  3607,  2086,  3324,  2219,
    4693,  2869,  3325,  2814,  3895,  1741,  5970,  5971,  2026,  2919,
    5554,  4034,  2069,    16,    17,  2577,  4461,  2729,   562,  3609,
    1119,  4725,  1741,  3746,  3336,  5019,  2070,  5481,  3189,  2146,
    3896,  5780,   619,  4566,  5992,  1737,  1738,  3343,  3344,  5471,
    1921,  3678,  3213,  3891,  3102,  1477,  5839,  2147,  1319,  1741,
    2583,  4293,  2934,  1202,  2538,  1119,  3664,  4149,  5812,  3053,
    2615,  3871,  2200,  4452,  4453,  4454,  4455,   563,  1119,  1119,
    3903,  3486,  3603,  1163,  1119,  1151,  5677,  2935,  1119,  1119,
    1119,  5373,  1737,  1738,  1271,  1741,  3604,  5557,  3910,  1119,
    1119,  1737,  1738,  5234,  5235,  1119,  4662,  1119,  1119,  1119,
    1119,  1119,   858,  1119,  1737,  1738,  5507,  4185,  3826,  3414,
    4777,  4778,  4779,  4780,  1119,  5316,  1119,  3011,  5517,  1119,
    1119,  2545,  1119,  1119,  1119, -2757,  1119,  1119,  1119,  3015,
    5317,  1530,  1949,  1119,  5671,  3958,  1119,  1737,  1738,  3545,
    2477,  1854,   563,  1967,  1119,  1119,   647,  1119,  1119,  1119,
    2842,  3946,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  5417,
    1119,  1119,  1119,  1119,  1119,  1119,  3850,  1119,  1119, -2755,
    1119,  1119,  1119,  1119,  1119,  1119,  1119,  2516,   831,  1119,
    1119,  1119,  1119,  3855,  1119,  1119,  1119,  2486,  1119,  5830,
    1119,  1148,  1119,  3820,  5542,  1202,  1119,  1119,  1119,  4056,
    3330,  1119,  1119,  1119,  1119,  1119,  1739,  1119,  1740,  4264,
    3831,  3832,  3923,   887,  1119,  5327,  3825,  2100,   832,  5661,
   -2760,  1119,  1119,  1119,  1119, -2688,  3835,  5828,  1870,  6001,
     813,   814,  1119,  1119,  1119, -2045,  1119,  1119,  1119,  1119,
    1119,  1119,  3364,  1119,  1119,  1119,  1119,  1119,  1119,  1119,
    1119,  3691,  2836,  1739,  1119,  1740, -2347,  1737,  1738,  5696,
    5511,  2994,  1739, -1464,  1740,  1814,   647,  1737,  1738,   647,
    4258,   838,  5748, -2347,  1956,  1739,  1956,  1740,  3663,  1737,
    1738,  3534,  3013,  3014,  2931,  1737,  1738,  3901,  1737,  1738,
    4401,  4240,  5352,  4234,  2832,  3264,  5694,  1119,  1737,  1738,
     661,   647,  1119,  6026,  1896,  1965,  3115,  1538,  1739,  2685,
    1740,  4236,  1119,  2635,  4237,  5408,  4238,  2578,  1478,  4261,
    1737,  1738,  4242,  3911,  1737,  1738,  5577,  1741,  5020,  1737,
    1738,  2579,   896,  1737,  1738,  5141,  3265,  1737,  1738,  1978,
    3412,    16,    17,  2843,  2913,  3077,  1925,  2604,  2605,  3602,
    2607,  2608,  2609,  3116,  2307,  2707,  3984,  1737,  1738,  2172,
    3911,  2618,  1603,  1604,  1605,  1737,  1738,  5282,  1809,  3478,
    3911,  3911,  5803,  5805,  1741,  2616,  4209,  2639,  5496,  4486,
    1119, -2664,  5928,  1741,  5930,  1814,  5749,  3961,  1202,  4480,
   -2293, -2293,  1737,  1738,  2747,  3264,  1741,  3117, -2757,  2111,
    4482, -2758,   887, -2045,  2752,  1119,  5419,   741,  5697,  4862,
      16,    17,   839,  5561, -2756,  1737,  1738,  3818,  6011,  5459,
    2148,  2820,  6060,  1659,  1737,  1738,  2936,  2093,  1739,  1741,
    1740,  3134,  5672,   844,  3309,  1570,  4439,  4084,  1739,  2711,
    1740,  2588, -2755,  5003,  5003,  5138,  5139,  5140,   900,  3669,
    1739,  2721,  1740,  1737,  1738,  5505,  1739,  3239,  1740,  1739,
    3332,  1740,  2719,  2714,  5978,  4240,   726,  4234,  3142,  1739,
     809,  1740,  5384,  3985,  1258,  2300,  4610,  3306,  2686,  2827,
    2589,  5768,   784,   855,  3135,  4236,  3654,  3654,  4237,   -70,
    4238,  1739,  5979,  1740,  5578,  1739,  4242,  1740,  6025,  5740,
    1739,  5741,  1740,  2094,  1739,  3272,  1740,  1810,  1739,  3413,
    1740,  1979,  3144,  4085,  5886,  2759,  1286,  3307,  2925,  2736,
    5543,  -922,  2837,  1737,  1738,  4217,  1737,  1738,  1739,  2174,
    1740,  2175,  1539,  2246,  3541,   889,  1739,  2313,  1740,  1897,
    1119,  2423,  4036,  2424,  4210,  2247,  5980,  3447,  3147,  1741,
    3448,  2720,  3450,  1737,  1738,  1818,  1848,  1737,  1738,  1741,
    3455,  1737,  1738,  1739, -2045,  1740, -2445,  3359,  5603,  2635,
    5605,  1741,  2308,  2737,  4256,  1737,  1738,  1741,  1737,  1738,
    1741,  1570,  1260,   897,  2563,  2717,  1739,  4120,  1740,  2145,
    1741,  2516,  3962,  5575,  5576,  1739,  2564,  1740,  5747,  2918,
    5748,  2838,  1287,  1288,  2154,  2248,  2926,  3387,  5135,  3608,
    6134,  5769,  1741,  5283,  2832,  5506,  1741,  2173,  5673,  3887,
    3888,  1741,  2832,  1259,  1739,  1741,  1740,  2842,  3414,  1741,
    4892,  4893,  1898,  2644,  2927,  2590,  3542,  1737,  1738,  5562,
    5563,  2117,  3902,   898,  4456,  4457,  4211,  1899,  5609,  1741,
    1737,  1738,   901,  2112,  3986,  5579,  2248,  1741,   521,  4465,
    4438,  3333,  1737,  1738,  3269,  5460,  1321,  5295,  5232,  5748,
     528,  4790,  2117,  5360, -2758, -2472,  6012,  2271,  4994,  1119,
    1119,   526,   524,  3968,  1741,  1737,  1738, -2756,  4239,  5770,
    5526,  4241,  2069,  2919,  1739,   729,  1740,  1739,  3609,  1740,
    2224,   802,  4278,  4279,  4280,  4281,  2070,  1741,  2224,  1864,
    6102,  2961,  4259,  2229,  5749,  1849,  1741,  1737,  1738,  5765,
    4409,  5544,  2727,  5296,  1739,  3890,  1740,  1286,  1739,   802,
    1740, -2472,  1739,  2928,  1740,  3479,  4995,  5564,  2842,  2113,
    5611,  2114,  6120,  2271,  1331,  1741,  1739,  4064,  1740,  1739,
    4649,  1740,  2074,  1737,  1738,  2224,  1119,  6135,  4804,  3237,
    1289,   702,  1737,  1738,  2111,  3543,  3238,  2623,  3290,   727,
     527,  2832,   827,  1864,   521,  1737,  1738,  1119,  3411,  1119,
    3488,  1332,  6003,  5749,   835,  5859,   528,  1119,  1119, -1543,
    3148,  2249,   846,  1737,  1738,   834,   830,   526,   524,  3654,
    5918,  5919,  5366,  4247,   525,  4770,  3844,   753,  1739,  3519,
    1740,  2624,  5565,  1287,  1288,  1741,  3871,  1223,  1741,  4047,
    2843,  1739,  2197,  1740,  1631,  1223, -1543,   861, -2472,  1737,
    1738,  2115,  2828,  1739,   762,  1740,  3138,  4301,  3544,   703,
    2841, -2472,  2565,  3830,  4996,  1741,  3149,  2425,  2272,  1741,
    2426,   763,  5612,  1741,  5003,  2086,  1739,  2224,  1740,  3150,
    4854,  2155,  1422,  2006,  1737,  1738,  5269,  1741,  5488,  3534,
    1741,  5489,  2225,  1119,  1119,  1119,   766,  4299,  4300,   766,
    2225,  5071,  2832,  5297,   527,  4305,   527,  4306,  1739,  4308,
    1740, -2472,  3153,  1737,  1738,  2146,  1343,  2636, -2472,  5989,
    2636,  2636,  3919, -2473,  5923,  1737,  1738,  5990,  2116, -2472,
    4092,  5097,  5860,  2147,  2272,  3503,   765,  2141,   833,  1202,
     525,  4997,  4304,  4687,  1739,  1570,  1740,  2225,  4309,  1741,
     549,  2843,  2547,  1739,  4805,  1740,  1333,  2829,  5387,  5887,
    3291,  4762,  1741,  2271,  2625,  2134,  1739,  4975,  1740,  2273,
    1302,  1119,  3666,  2033,  1741,  4905,  4693,  1737,  1738, -2473,
    3864,   794,  5691,   887,  1739,  3545,  1740,  5490,  6118,  6119,
   -3457,  1657,  3602,  1119,  1223,  1737,  1738,  1741,  4688,  5584,
    1119, -1543,   889,  1119,  2661,  1119,  3654,  3654,  2662,  5961,
    3911,  1119,  5965,  1119,  1119,  1737,  1738,  2300,  4092,  4092,
    1739,  3374,  1740,  1737,  1738,   794,  4393,  5983,  5984,  1741,
   -2518,  2786,  3154,  6066, -3457,  2034,  3375,  1119,  2112,   753,
    2086,  4965,  3155,   715,  3733,  3546,  4092,  5526,  3852,  2225,
    2020,  5788,  1119,  3140,  3738,  1739,  6029,  1740,  1737,  1738,
    3173,  3924,  4916,  3178,  3853,  1741,  2021,  1737,  1738,  1119,
    5491,  1737,  1738,  3181,  1741,  3911, -2473,  3309,  5706,  2370,
     785,  2787,  6056,  1344,  1739,  4918,  1740,  1741,  4966, -2473,
    4919,  3301,  1119,  1861,  4920,  3188,  1739,   795,  1740,  3199,
     683,  1345,  3366,  3311,  3709,  1741,  -921,  3881,  4322,  1737,
    1738,  3771,  4323,  5752,  1119,  3305,  5759, -2518,  3925,  5126,
    3306,   716,  5056,  5129,  2113,  5131,  2114,  6093,  6067, -3478,
    5055,  3320,  4334,  3645,  2272,  6097,  5050,  2022,  5052, -2473,
    4354,  1741,  3782,  3323,  2789,  5130, -2473,  5132,  1739,  1865,
    1740,  5443,  5147,  5148,  5149,  5450,  5451, -2473,  4967,  4483,
    3307,  5806,  1176,  2511,  1754,  3646,  1739,  4371,  1740,  2117,
    1848, -2518,  6117,  4921,  1737,  1738,  1741,  3098,  6084,  1866,
    1184,  6068,  1737,  1738,  3395,  3396,  1739,  5168,  1740,  3143,
    3335,  1737,  1738,  1119,  1739,  2300,  1740,  4897,  2791,  4372,
    1392,  3843,  1948,  3310,     9,  1741,  4473,  3464,  1313,  1737,
    1738,  2837,  2035,  2036,  1737,  1738,  2115,  1741,  1737,  1738,
    1314,  3647,  2037,  1182,  1266,  4253,  1737,  1738,  5160,  1739,
     807,  1740,  1864,  4078,  1737,  1738,  2021,  3308,  1739,  5807,
    1740,  3520,  1739,  2038,  1740,  1497,  1737,  1738,  2636,  3648,
    6163,  1861,  1737,  1738,  3098,  3871,  1757,  2373,  3269,  2300,
      19,  3397,  6162,  1183,  5180,  2998,  4924,   780,  5474,  1741,
    2300,  4623,  2512,  4675,  1758,  5475,  5752,  4976,  2825,  4977,
    1739,  2825,  1740,  5759,  2513,  5324,  3441,  1741,  3444,  1315,
    4646,  4645,  1348,  2116,  4232,  2022,   683,  3151,  3452,  5334,
    3152,  1119,  3452,  2918,  5526,  4496,  2148,  1741,  3608,  3946,
    5341,  1267,  5343,  1119,  4776,  1741,  4978,  3255,  4796,  4797,
     806,  2391,  4434,  3797,  4624,  4476,  5596,  3158,  5068,  1849,
    5070,  4843,  2402,  5073,  3221,  3159,  5449,  5476,  3798,  5079,
    5080,  3609,  5598,  2526,  4979,  1739,  4812,  1740,  3649,  3163,
    1741,  3521,  3164,  1739,   963,  1740,  5093,    32,  3522,  1741,
    2514,  5208,  1739,  1741,  1740,  1268,  3523,  1119,  2881,  2882,
    3302,  4839,  1737,  1738,  2166,   852,  1875,  2527,   844,  5032,
    1739,  4374,  1740,  2894,  4874,  1739,   970,  1740,  4595,  1739,
    4363,  1740,  3321,  1754, -2472,  6064,  6064,  1739,  5007,  1740,
    3326,  1741,   903,   604,  5007,  1739,  5925,  1740,  1737,  1738,
    1122,  3165,  2191,  2192,  2083,  2084,  2021,  1739,  4364,  1740,
      39,  2925,  4983,  1739,  3171,  1740,  2039,  4985,   659,  4869,
     887,  1861,  3668,   659,  1778,  5811,  3172,   659,    42,  3524,
     674,  1316,   982,  4824,  3643,  1142,  5367,  6099,  2122,  4753,
    4755,  4755,  2528,  4755,   654,  5742,  2117,  5743,  4923,  3176,
    4728,  4753,  4753,  4755,  4755,  1786,  1741,  4729,  1737,  1738,
     994,  1150,  1737,  1738,  1741,  2022,  1246,  3237,   802,  4980,
    2896,  2897,  1242,  1741,  5046,  1757,  4690,  2938,  1737,  1738,
    3075,  3177,  1247,  3650,  2789,   688,  1119,  3651,  1255,  3525,
    1818,  1741,  1818,  1758,  2636,  2949,  1741,  1144,  2033,  2926,
    1741,  4781,  5086,  4782,  2954,  4981,  1154,   831,  1741,  2985,
    2956,  1234,  1257,  2020,  1737,  1738,  1741,  3179,  2965, -2512,
   -2512,  5752,  5759,  2529,  5383,  2998,  3186,  2933,  1741,  2978,
    1737,  1738,  2980,  1739,  1741,  1740,  1512,  3399,  1264,  3200,
    5115,  2021,  1737,  1738,  1956,  1273,   656,   832,   693,  1760,
    1761,   656,  1551,  1551,  1551,   656,  1861,  4317,  1119,  1015,
    2034,  1119,  1737,  1738,  1557,  1557,  1557,   679,   680,  1739,
    1119,  1740,  3400,   700,  1280,  1555,  1555,  1555,  1119,  1282,
    1119,  1300,  1119,  4691,  1119,  1119,  1119,  1119,  1119,  1119,
    3496,  1119,  1513,  4320,  3470,  1514,  1905,  3500,  3501,  1119,
    2022,  1119,  3100,  2368,  1119,  1119,  1119,  1119,  1737,  1738,
    1119,  1119, -2473,  4846,  1119,   665,  1119,  4848,  1119,   671,
    1119,  2040,  1515,  2042,  1119,  1296,  2928,  1302,  4321,  1739,
    1516,  1740,  1119,  1739,  1119,  1740,  1119,  1119,  1119,  1119,
    1119,  3139,  1925,  1119,  1119,  1119,  4637,  1119,  1306,  1739,
    1119,  1740,  4887,  4886,  1741,  1294,  1295,  4326,  1298,  1320,
    1299,  5218,  5219,  1119,  1556,  1556,  1556,  4888,  1119,  4330,
    1308,  1119,  2786,  1119,  1119,  1119,  1977,  2842,  1119,  3145,
    3146,  4438,  1982,  1983,  1119,  1739,  1309,  1740,  1310,  1119,
    1741,  2086,  2086,  2086,  2086,  3156,  1925,  1876,  1554,  1554,
    1554,  1739,   704,  1740,  3301,  1119,  2561,  2561,  2561,  2561,
    5329,  1119,  1260,  1739,  1119,  1740,  3311,  1861,  3162,  1925,
    1119,  4331,  2787,  1341, -1166,  3166,  1925,  1119,  3305,  1119,
    3167,  1925,  5439,  1739,  1119,  1740,  1838,  2035,  2036,  4332,
    1366,  1877,  1355,  1878,  1638,  1372,  3833,  2037,  3168,  1925,
    1741,  1373,   708,  1374,  1741,   780,  2241,  2242,  4898,  4333,
    2243,  2022,   679,   680,  1655, -2445,  1382,  4335,  2038,  1378,
    1741,  1660,  1661,  1386,   521,  1393,  1119,  3174,  1925,  1739,
    1473,  1740,  4408,  1474,  1864,  1476,   528,  4877,  1475,  3239,
      16,    17,  6072,  4399,  5608,  1479,  4687,   526,   524,  1737,
    1738,  5501,  4344,  1119,  4536,  1754,  1741,  1177,  4669,  2985,
   -1166,  4350,  4894,  4895,  5522,  4353,  3310,  3618,  3621,  1187,
    2635,  2832,  1741,  1489,   480,  5528,  5379,   522,   481,   482,
    1185,  1181,   483,  4259,  1741,  1223,  1879,  1765,  1766,  1767,
    1768,  1769,  1770,  1737,  1738,  3625,  3626,  1507,   679,   680,
    3308,  4688,  5221,  4359,  1741,  4130,  4131,  5059,  4645,  4132,
    4133,  4134,  2261,  3627,  3626,  1509,  5051,  1511,  1119,  1517,
    2843,  5609,  5705,  4050,  3374,  1839,  3629,  3630,  3401,  4468,
    5608,  3676,  3677,  1519,  4618,  1880,   527,  1840,  1520,  3375,
    1522,  1348,  1348,  1348,  1348,  3698,  3699,  1757,  1528,   751,
    1741,  5815,  3950,  3951,  2516,  1818,  1531,  2224,  1532,  5398,
    1533,  4469,  4115,  4116,  1534,  1758,  4225,  4226,  4360,  1186,
     525,  3608,  1737,  1738,  1536,  3402,  4361,  4345,  3146,  4029,
    5238,  1541,  2317,  1881,  1571,  4369,   760,   604,  4348,  1925,
     604,  4355,  4356,   770,   776,  5169,  1591,  1841,  4757,  1592,
    4759,  2039,  4689,  4370,  4124,  1119,  1842,  5609,  4373,  -921,
    4765,  4766,  4377,  5611,  2318,  1593,  4043,  4470,  1598,  1119,
    4390,  1760,  1761,   717,   718,  1331,  1599,  4598,  5159,  4086,
    1600,  5610,  1601,  3302,    16,    17,  5154,  1602,  3403,  1348,
    5165,  1606,  4093,  5171,  1608,  4471,  5166,  5173,  4130,  4131,
    4362,  1925,  4132,  4133,  4134,  1650,  -702,  4366,  4367,   776,
     719,  1697,  1332,  4639,  1739,  1609,  1740,  1930,  4093,  4093,
    4087,  1610,   776,  1882,  1223,  2141,  4442,  4443,   770, -3457,
    5710,  1611,  3404,  1612,  5338,  2842,  4652,  4653,  4448,  4449,
    4654,  4655,  4029,  -702,  1883,  5509,  4656,  4657,  4088,  5611,
    1145,  1613,   720,  1119,   546,  4651,  1614,   770,  1773,  1179,
    -704,  5186,  4731,  4732,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  1770,  1615, -3457,   770,  5612,  2906,  1737,  1738,  2225,
    4858,  1925,  1616,  4093,  4093,  1617,  3269,  1256,  5211,  4886,
    1618,   770,  1262,  1739,  4472,  1740,  1737,  1738,  4346,  1619,
    5346,  1468,  1620,  4888,  -704,  1284,  5552,  5215,  1843,    16,
      17,  5120,  5121,  1472,  3530,  1703,  5167,    16,    17,  1301,
     521,  5122,  5123, -2445,  1471,  1469,  4675,  1623,  1594,  1737,
    1738,  4349,   528,  1844,  1633,  1741,  5124,  5125,  5161,  1925,
    5086,  3598,  1119,   526,   524,  5178,  5179,  4089,  1339,  5188,
    1925,  1774,  5176,   770,  5841,  1354,  2040,  2041,  2042,  2043,
    1634,  5612,  5840,  1635,  1119,  5202,  5203,  1333,  1636,  5836,
    5837,  5243,  5244,  2961,  5588,   770,  3071,  1639,  5591,  2832,
    2842,  3713,  4763,  4764,  1380,  1403,  1640,  1119,  3405,  3406,
    3407,  2818,  1551,  5931,  1641,   751,  3714,  1354,  -702,  1119,
    4774,  4791,  1119, -1886,  1557,   547,  2635,  2635,  5247,  5049,
    1642,  4813,  5708,  5709,  1741,  1555,  5177,  1643,  1737,  1738,
    1644,  2906,  3715,  4814,  1645,  1119,  1119,  1646,  2843,   721,
    1647,  1486,   527,  1488,  3716,  1490,  2819,   604,   604,   604,
     604,  1496,  1354,  4815,   770,  1648,   722,  1470,  1739,  1119,
    1740,  1119, -3495,  1119,  3717,  1119,  5431,  5432,  1649,  2907,
     646,  1651,  5059,  4645,  1775,  2224,   525,  1739,  5181,  1740,
    1776,   723,  1652,  2561,  2561,  1653,  4816,  1119,  2820,  4803,
    5435,  5432,  1654,  2086,  5182,  1656,  3598,  3718,  4108,  4109,
    4110,  4111,  1662,  4113,  4114,   751,  5545,  1560,  1119,  1119,
    1739,  1176,  1740,  3130,  1556,  1565,  1663,  1568,  5531,  5532,
     724,  5574,  4449,  1664,  1753,  1777,  5595,  5946,  1119,  1184,
    5587,  5432,  1577,  1119,  2832,   548,  5766,  5767,  1665,  1119,
    5746,  1845,  1666,  1737,  1738,  3850,  1289,  5624,  1554,  4690,
    4195,  4196,  1119,  4198,  1779,  4200,  4201,  4202,  4203,  4204,
    4205,  4206,  1667,  4208,  5850,  5851,  4213,  5861,  5862,  1668,
    4216,  4817,  1182,  5785,  5625,  4859,  1669,  1570,  1754,  1741,
    1672,  2344,  1673,  2843,  5880,  4449,  1674,  1119,  1119,  5002,
    5881,  4449,  1223,  5054,  5885,  4116,  5943,  5203,  1741,  1739,
    4239,  1740,  1119,  4241,  6004,  5432,  1675,  1737,  1738,  2821,
    1676,  1931,  1183,   549,  2907,  2906,  1846,  6006,  5432,  6078,
    2224,  2822,    16,    17,  1847,  1932,  5613,  1933,   698,  6007,
    5432,  1741,  1677,  1755,  6032,  6033, -3495,  3008,  5552,  1678,
    6027,  4818, -1166,  1737,  1738,  1756,  1681,  2225,  1682,  3348,
    2345,  1683,  3719,  6041,  6042,  3046,  4691,  1934,  1684,  1119,
    3349,   550,  6048,  5432,  3720,  6049,  5432,  3939,  1348,  1348,
    1757,  1685,  1935,  6057,  5432,  3464,   679,   680,  5064,  1686,
     679,   680,  4223,  1687,  1734,  5626,  6081,  5203,  1758,  5627,
    6094,  5432,  3759,  6116,  4933,  1781,  1763,  1764,  1765,  1766,
    1767,  1768,  1769,  1770,  2906,  1936,  6151,  6152, -2687,   551,
    2454,  2455,  5608,  -948,  1739,  2346,  1740,  2347,  2832,  5855,
    1741,  1759,  2348,  1937,  2823,  4029,  1688,  1957,  3761,  5739,
    4029,  5072,  1783,  1689,  1690,  1691,  5624,  1223,  1692,  1737,
    1738,  1693,  1784,  1694,  1760,  1761,   770,   751,  1695,  5015,
    1696, -2445,   751,  1698,  4819,  1699,  4820,  3940, -2085,  1700,
    1701,  1119,  1805,  5625,  1702,  3721,  1704,  3722,  1705,   770,
    4605,   770,  1119,  1706,  4239,   770,   770,  4241,  1739,  5033,
    1740,  1707,  1708,  1785,  1800,  1709,  2349,  1710,  3353,  5609,
    1713,  1714,  2225,  1717,  1801,  2824, -2085,  3712,  2907, -2085,
    1718,  1719,  1720,  1938,  2224,   770,  1802,  2832, -2085,  1721,
    1939,    16,    17,  5610,  1739, -2085,  1740,  1722,  1723, -2085,
    1940,  1724,  1754,  5207,  3763,  5827,  1780,  1803,  1808,  2350,
   -2721, -1166, -2085,  1941,  3844,  1741, -2085,  4722, -2085,  1909,
   -2722,  5628, -2686, -2085,   751,   751,  1919,  1833, -2718, -2716,
   -2085, -2720,  5075, -2085,  1855,  2908, -2715, -2719, -2085,   552,
    1962, -2713, -2717,   553,  1942,  4029,  1836,  1943,  1837,   679,
     680,  1973,  1856,  1861,  5626,  5863,  1871,  3114,  5627, -2085,
    5548,  5611,  1944,   751,  1872,  1873,  5799,  2907,  1874,  5274,
    1894,  1895, -2085,  2224,  1900,  1912,  1925, -2085,   647,  1741,
    1963,  5608,  3505,  1997,   554,  1928,  1864,  4821,  4822,  1969,
    1739,  1971,  1740,  3643,  1757,  1980, -2085,  1981,  2351,  3723,
    1985,  1223,  4093,  2019,  1986,  1988,  1990,  1994,  2011,  2352,
    2012,  2048,  1758,  2052,   555,  1741,   753,  2054,  5687,  5686,
   -2085,  1754, -3495,  2065,  2908,  2636,  2066,  2072,  2075, -2085,
    2317,  2077,  2080,  5688,   750,  2081,   751,  2085,  2097,  2107,
    2909,  3347,  2124,  1754,  2127,   770,   751,  2129,  2128,  5855,
    2138, -2085,  2142,   604,   751,  1754,  2225,   751,  5609,  2134,
    2185,  2162,  2318,  2169,  5738,  2178,  2186,   751,  1760,  1761,
    2187, -2085,  2196,  5612,  2202,  2204,  2206,  2319, -2085,  2212,
    2214,  2216,  5610,  5267,  3973,  2218,  2881,  2882,  5271,  5272,
    1223, -2085,  2220, -2085,  2228,  4599, -2085,  2234,  4327,  2235,
    2237,  2894,  1119,  1119,  2238,  1119,  3724,  5972,  2239,  2260,
    5628,  1741, -3432,  1757,  1119,  3348,  1119,  2263,  2320,  1119,
    1552,  2268,  1561,  1562,  1563,  4634,  3349,  2280,  1564,  2909,
    1567,  1758,  1119,  3350,  1119,  1757,  1119,  2277,  1119,  5819,
    5820,  2279,  5822,  4823,  2281,  2225,  2321,  1757,  2284,  5624,
    5611,  1119,  1119,  1758,  3725,  2283,  2203,  2286,  2287,   751,
    2291,  2211,  3351,  2299,  2300,  1758,  2309,  2316,  2327,  2331,
    2356,   604,  3506,  2367,  2378,  4492,  5625,  3726,   770,  2368,
    3595,  2382,   770,   751,  6037,  2386,  2369,  1760,  1761,  5844,
    5843,  1119,   831,  3418,  3347,  2387,  2407,  5835,  2896,  2897,
    2439,  2445,  2317,  2449,  5845,  2818,  2474,  2459,   770,  1760,
    1761,   770,   679,   680,  2470,    42,  2500,   751,  3507,  2493,
    2522,  1760,  1761,  3352,    16,    17,  2523,  6145,  2548,  2549,
    5629,   730,   832,  2550,  2318,  2555,  2558,  2567,  2278,  5630,
    2559,  6155,  6061,  2570, -1166,  2322,  1177,  6145,  2598,  4086,
    2819,  1762,  2600,  6155,  3353,  2601,  2621,  2646,  1187,  2647,
    4964,  5784,  5612,  2648,  2650,  2645,   751,  2651,  3348,  1185,
    1181,  2652,  2673,  2674,  2677,  2678,  1119,   731,  1754,  3349,
    2679,  4493,   679,   680,  5438,  2680,  3350,  5626,  2681,  2688,
    4087,  5627,  2820,  2689,  2690,  2694, -1196,  2695,  5940,  3508,
    5941,  5942,  2696,  2697,  3490,  3491,  2698,  6037,  2699,  2701,
    1119,  2702,  2708,  2709,  5608,  3351,  2730,  2741,  4088,  2745,
    2748,  3502,  1818,  2776,  2785,  2020,  1754,  2798,  5613,  3347,
    2805,  3528,  3529,  2804,  2817, -2703,  2840,  5844,  5843,  1763,
    1764,  1765,  1766,  1767,  1768,  1769,  1770,  2863,  5442,  2855,
    2864,  2866,  5845,  2870,  5949,  2867,  2903,  2871,  1186,  2920,
    2922,  3509,  2943,  5726,  2945,  -923,  2190,  2955,  4673,   751,
    1757,  2972,  2979,  4029,  2991,  2992,  3352,  2022,   751,  3510,
    3511,  3006,  3000,  5353,  3512,  3513,  3514,  5684,  1758,   751,
    3009,  5609,  3016,  5900,  3041,  3591,  3592,  3593,  3594,  3050,
    2463,  3022,  1119,  3348,  3067,  3224,  3069,  3353,  3070,  1119,
    3082,  2636,  2636,  2821,  3349,  5610,   770,  4089,  1757,  1119,
    3072,  3350,   732,  -923,  3081,  2822,  3083,   731,  5630,  3086,
    1545,  3087,  3088,  3098,  3101,  3157,  1758,  3105,  2931,  3108,
    5653,  5069, -2259,  5628,  1760,  1761,  3374,  3118,  3119,  3215,
    3351,  3123,  3515,   770,  5083,  2521,  3131,  3132,   733,  3133,
    3137,  3375,  5091,  5224,  3160,  3161, -1680,   831,  3170,  5094,
    3180,  5095,  5096,  3184,   751,  3185,  5390,  3220,  4634,   946,
    3187,   770,   770,  5611,  3191,  3192,  1770,  3230,  3234,   770,
    2573, -1856,  1760,  1761,  5955,  3236,  3243,  4029,  3250,   770,
    3516,  1679,   548,  3256,  1119,  1119,  1711,   832,  1715,  3260,
    3270,  3352,  3271,  2594,  1805,  3273,  3274,  5613,   963,   604,
     604,   751,   604,   604,   604,   751,   770,   751,  2823, -2085,
    3284,  -923,  3285,   604,  3288,  5110,  3289,  3292,  3295,  3293,
    3294,  3318,  3353,  1958,  5033,  3327,  3296,   968,  2638,   604,
     970,   770,  3297,  3329,  3331,  3334,  3337,  3357,  3356, -2085,
   -2085,  3385,  3419, -2085, -2085,   974,   975,  3421,  3422,  3425,
    3426,  3437,   732,   751,  3438,  3456,  3466,  3467,  1119,  3472,
     549,  3475, -2305,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  4940,  3495,  3482,  3492,  5612,  3493,  3494,  3497,  2824,
    3498,  6127,  3499,  3550,  3553,  3560,   982,  3556,  -923,  3562,
    3565,  4960,  4961,  3566,  3589,  3567,  3568,  5727,  3569,  3570,
    3571,  4974,  3572,  3573,  5728,   988,  3347,  3574,  3575,  3590,
    3576,   770,  3577,   993,   994,  3578,  3579,  3580,  3581,  5729,
    3582,  2724,  1119,  3583,  1119,  3584,  5248,   751,   831,  3585,
    3586,  3587,  2734,  3588,  5013,  3614,  3597,  1119,  3616,  3615,
    3805,  3622,  3617,   831, -2445,  3623,  3643,  3634,  3618,  3633,
     770,  3621,  1792,  3619,  1119,  1119,  3657,  1798,   770,   770,
     770,  2753,  2754,  2755,   751,   751,  3660,   604,   832,  5737,
    3663,  5044,  2117,  1119,  3675,  3679,  3683,   622,  4675,  3681,
    3348,  3682,  3684,   832,  1765,  1766,  1767,  1768,  1769,  1770,
    3685,  3349,  3686,  3693,  5658,  3689,  3694,  3695,  3350,  3696,
    3702,  3734,  5060,  1012,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  1770,  1014,  1015,  1016,  3735,  1763,  1764,  1765,  1766,
    1767,  1768,  1769,  1770,  3736,  3238, -1894,  3351,  3747,  3793,
    3748,  3757,  3767,  3794,  3808,   770,  3806,  3809,  3829,  4722,
    5228,  5630,   623,  3839,  3847,  3840,  3846,  3856,  5730,  1917,
    3858,  3848,  3862,  3244,  3876,  3879,  1818,   751,  3883,  3884,
    3885,  5731,  3886,  3892,  3893,  2582,  1468,  2583,  3900,  3905,
    2985,  3916,  3920,  5693,  6159,  3935,  2661,   751,  1472,  3936,
    5732,  3937,  3952,  3953,  5320,  3954,  3957,  5322,  3352,  1471,
    1469,  3960,   734,  1119,  3959,  3965,  3966,  3981,  3980,  3983,
    3989,  4051,  5321,  4052,  4057,  4061, -2259,  4062,  4068,  1119,
    -165,   770,  4070,  4075,  4071,  4125,   624,  4082,  4083,  3353,
    4126,  4178,  4127,   831,  4182,  4189,  5391,  4190,   625,  4192,
    5613,  4221,  4245,  4251,  5392,  4254,  4262,  4257,  5737,  3001,
    4266,  4268,  4274,  4275,  4276,  4283,  2968,   770,  4288,  4294,
    4296,  4303,  4307,     4,   633,  4310,  4311,  4312,  4365,  4313,
    4376,  2079,   906,   832,  4378,  4388,  4400,  4389,  3979,  4398,
    4416,  2091,  4428,  4406,  1486,  4429,  3002,  4431,   751,  2096,
    3004,   735,  4407,  4412,     8,  4418,  4425,  4435,  4432,  4450,
    4441,  4676,   751,   751,  4451,  4487,  4444,   626,  4445,  3019,
    4458,  4462,  4459,  1223,  4491,  1551,  3028,  3028,  4479,  3028,
    3028,   907,  1470,  4494,  4497,  4501,    14,  1557,  5733,  4499,
    1119,   908,  4505,  4502,   770,  4512,  4514,   751,  1555,  4530,
    4531,  4532,  4533,   751,  4534,    18,  4535,  4537,  4541,  3051,
    1764,  1765,  1766,  1767,  1768,  1769,  1770,  4554,  3056,  1119,
     909,  3058,  4147,  4548,  4601,  4047,  4608,   910,  4630,  4626,
    4622,  4618,  4627,  4660,  4648,  4683,  4112,  4675,  4685,  4686,
    4696,    23,  4697,  4704,  4095,  4096,  4705,  4098,  4100,  4707,
    4706,  4708,  4711,  4709,  2205,  5254,  2205,  1763,  1764,  1765,
    1766,  1767,  1768,  1769,  1770,  6156,   911,  4713,  4677,  4712,
    4714,  5256,  4715,  4727,  4735,  4767,  4771,  4772,  4775,  4784,
    4191,  4786,  4193,  4194,  4795,   946,  4798,  1556,  4199,  4799,
    4807,  4029,  3196,  1119,  4806,  4722,  4207,  4844,  4383,  4853,
    4860,  4214,  4864, -2011,  -923,  4862,  4865,  4673,  4867,    31,
    2531,  1468,  1798,  4868,  4871,   912,   913,  4876,  4909,   627,
    4910,  1554,  4932,  1472,   963,  4938,  4933,  4937,  4942,   914,
    4944,  4945,  4989,  4991,  1471,  1469,  5305,  4222,  5000,  4992,
    5007,  4993,  5022,  5023,   628,  5025, -2207,  5027,  5048,  5061,
    5049,  5062,  5053,   968,  5065,  5066,   970,  5074,  5076,  5077,
    4515,  5078,  -923,  5105,  5353,  5108,   731,  4516,  5111,   751,
    5118,   974,   975,  5119,  5127,   751,  5112,  5133,  1737,  1738,
    5134,  5136,  5145,  4517,  5144,  3374,  5150,  5151,  5155,  5162,
      41,  3190,   629,  4518,  4519,  4520,  5163,  5164,  5170,  5172,
    3375,  5175,  5184,  4521,  5185,  1119,  5189,  5197,  5393,  5204,
    5212,  5394,   982, -1981, -1986,  5231,  5233,  5240,  5245,  5241,
    5395,  5348,  2333,  2334,  2335,  2336,  5257,  5249,    72,  5255,
    5258,   988,  5263,  1119,  5264,  5265,  5279,  5306,  5299,   993,
     994,  5307,  5313,  1119,  5311,  1119,  5312,  5314,  2021,   915,
    5331,  5335,  5339,  5371,  5344,  5347,  5372,  1470,  4176,  5374,
    5737,  5349,  5377,  4674,  2431,  5381,  5375,  5382,  5385,  5389,
    -923,  5403,  5414,  2440,  5420,  2337,  2338,  2339,   770,   770,
     751,  5412,  5622,  5416,  2451,  5421,  5622,   -71,  5429,   770,
    5447,  5428,  1468,  3028,  3028,  3028,  3028,  3280,  3281,  5434,
    1805,  1128,  5445,  5453,  1472,  6079,  4994,  1468,  1129,  5472,
    5457,   732,  5479,  5478,  5480,  1471,  1469,  5482,  4226,  1472,
    5678,  5484,  5494,   916,  1130,  5502,  2340,  2341,   630,  1012,
    1471,  1469,  3319,   604,  1131,  1132,  1133,  2518,  1014,  1015,
    1016,  5504,  5514,  4522,  1134,   604,   631,  -923,  5523,  1739,
    5529,  1740,  5537,  5539,  5546,  5547,  5553,  4523,  5555,  5583,
    5585,  5590,  5558,  5554,  5557,  5592,  5571,  5601,  3999,  1798,
    5573,  1551,  5651,  5586,  5662,  5645,  5593,  5663,  2516,  5664,
    5665,  5646,  5675,  1557,   751,  5676,  5648,   632,  5690,  5682,
     633,  5703,  3346,  5712,  1555,  5721,  5722,  2342,  5725,  5756,
     751,  5773,  5775,  1909,  3362,  5771,  5776,  5777,   770,  3369,
     751,  5779,  5781,  5782,  5783,  5795,  2606,   634,  5754,  5796,
    2610,  5754,  2612,  5797,  5798,   635,  5821,  5823,  5824,  5831,
    5833,  5838,  5847,  5852,   751,  5858,  5848,  4675,  1470,  5849,
    5864,  6161,  4524,  5868,  5871,  5622,  5876,  5879,  5882,  5921,
    5893,  5903,  5391,  1470,  5904,  5794,  5935,  4525,   751,  5905,
    5392,  5922,   917,  5622,  5911,  5951,  5952,  5944,  2653,  5927,
    1741,  2343,  5929,  5954,  5959,  5974,  4144,  4149,  6008,  5997,
    6022,  6016,  6023,  1556,  1135,  6009,  6024,   827,   604,  6044,
     604,   604,  6045,  4526,  6054,  6046,  6053,   751,  1136,   835,
    3453,  6055,   604,  6047,   604,  6096,  5794,  4527,  6082,  6085,
     834,   830,  1119,  3463,  6095,  6098,  6107,  1554,  6121,  3468,
    6110,  6113,  6122,  6115,  6123,  6124,  6131,  6126,  6128,  6132,
    6146,  3889,  6158,  4543,  4544,  4545,  4546,  4547,  1572,  4549,
    4550,  4551,  4552,  4553,  1964,  4555,  4556,  4557,  4558,  4559,
    4560,  4561,  4562,  4563,  4564,  2692,  4511,  4568,  4569,  4215,
    5363,  5361,  5362,  2344,  5642,  5640,  1890,  5649,  4031,  5639,
    5643,  5745,  5817,  4658,  5483,  6080,  5754,  5939,  2076,  2756,
    2757,  5754,  4600,  4032,  5302,  4752,  5655,   770,  5754,  6019,
    6018,  4249,  5239,   751,  4244,  1397,  4768,  2125,  1137,   527,
    2540,  2986,  3394,  4529,  1584,  4292,  4270,  5142,  3564,  4926,
    1385,     4,  3061,  3064,  3062,  2854,  3063,  2121,  1119,  3005,
     906,  5762,  5458,  2333,  2334,  2335,  2336,  4163,  5594,  5973,
    4718,  5622,  2345,   833,  1138,  5337,  4870,  5402,  5196,  4875,
    3248,  5958,     8,  4665,  4666,  4667,  5559,  6031,  1139,  5407,
    4676,  6112,  3613,  6089,  6114,  5878,  4882,  5210,  4252,  4716,
    4574,  3620,  3429,  1119,  6043,  5638,  5101,  4721,  5262,   907,
    6065,  5924,  2862,  5829,    14,  5920,  2337,  2338,  2339,   908,
    4302,  3628,  5926,  4695,  5956,  4080,  2939,  4380,  4703,  4847,
    4849,  4845,  6092,    18,   738,   739,  6059,  2346,  6058,  2347,
    5597,  5986,  4742,  4745,  2348,  4748,  5902,  2953,   909,  5899,
    5589,  4719,  1904,  3644,  5100,   910,  3971,  3972,  3559,  5754,
    5778,  2092,  3656,  5987,  3658,  5953,  2742,  2340,  2341,    23,
    5508,  3668,  5681,  2905,  3259,  3370,   770,  4285,   770,   770,
    4785,  3690,  2051,  4647,  5689,  4397,  5319,  3484,  5948,  2024,
    2802,  4065,   770,  6017,   911,  3028,  5622,  4677,  4866,  3770,
    3768,  2457,  4420,  1930,  5393,  2519,  2366,  5394,  2349,  3947,
    2306,  4484,  3941,  5222,  4855,  6090,  5549,  3931,  5884,  5242,
    6091,  2315,  4628,  5744,  5499,  1119,  5498,  3836,  4413,  5397,
    5513,  5857,  1119,  3003,  6088,  5388,  4474,    31,  2342,  5418,
    3469,  5497,  4620,   912,   913,  3655,   770,   740,   770,  2262,
    2553,  2350,  3688,  5205,  4939,  4915,  4106,   914,  1236,  6028,
    1482,  3027,  3027,  2999,  3027,  3027,  1487,  3340,  3339,  1228,
    3921,  1231,  2627,  3388,  5754,  2016,  5754,  5754,   749,  5436,
    4789,  5427,  3040,  2733,  6111,  5666,  6125,  5825,  1545,  6157,
    1658,  6160,  3360,  4485,  4881,    16,    17,  5894,  3823,  1585,
    3904,  4896,  1189,  3214,  4722,  1190,  3314,  3047,  2750,  2566,
    3899,  3898,  2343,  1161,  4664,  3880,  4271,  3982,    41,  5754,
    4837,  3549,  1799,  2259,  5538,  4723,  1272,  5754,  1974,  4906,
    6148,  5223,   742,  5916,  4481,  3933,  6150,  4722,  5950,   743,
    2351,   744,  4850,  3451,  2775,  6074,  6105,     0,     0,     0,
       0,  2352,     0,     0,     0,  1119,    72,     0,     0,     0,
    1957,     0,  3795,     0,  5754,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -2085,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3838,  2344,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5967,  5968,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -2085,
     751,  1119, -2085,     0,     0,  3875,     0,     0,     0,     0,
    3878, -2085,     0,   770,   770,  3028,     0,     0, -2085,  5993,
       0,   916, -2085,     0,  3169,   770,     0,     0,     0,     0,
    3175,     0, -2085,     0,     0, -2085,     0,     0,     0, -2085,
       0, -2085,     0,  2345,     0,     0, -2085,     0,     0,     0,
       0,     0,     0, -2085,     0,     0, -2085,  1179,     0,     0,
       0, -2085,     0,     0,     0,     0,  4948,  4951,  4953,  4955,
       0,     0,     0,  4958,  4959,     0,     0,     0,  4963,     0,
       0,  4969, -2085,     0,  4973,  6038,     0,  4948,  6039,     0,
    4946,  4984,  4948,     0,     0, -2085,  2463,     0,     0,     0,
   -2085,     0,     0,  4962,     0,     0,     0,     0,  2346,     0,
    2347,     0,     0,     0,     0,  2348,     0,     0,     0, -2085,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1792,  4137,     0,  4138,  4139,
       0,     0,     0, -2085,     0,     0,     0,     0,  3027,  3027,
    3027,  3027, -2085,     0,     0,     0,     0,  1931,     0,     0,
     917,     0,  4140,     0,  4141,     0,     0,     0,     0,     0,
    4142,  1932,   863,  1933, -2085,     0,     0,   751,   751,  2349,
       0,     0,     0,     0,     0,     0,     0,     0,   604,     0,
    4045,     0,  2066,     0, -2085,   751,     0,     0,     0,   770,
   -2085, -2085,     0,  1934,  4143,     0,   864,     0,     0,     0,
       0, -1277,     0,     0, -2085,     0, -2085,     0,  1935, -2085,
       0,     0,  2350,     0,     0,     0,     0,     0,   866,     0,
     770,   770,     0,     0,     0,     0,     0,     0,   867,  3342,
      16,    17,     0,     0,     0,  3992,     0,     0,     0,     0,
       0,  1936,     0,     0,     0,  3358,     0,     0,     0,     0,
       0,     0,     0,   868, -1135,  3371, -1135,     0,     0,  1937,
       0,     0,     0,  4144,     0,     0,     0,     0,     0,   869,
     770,     0,     0,     0,   870,     0,     0,     0,     0,     0,
       0,     0,     0,  2066,     0,     0,  4180,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   871,  4145,  1793,
       0,  2351,  4146,     0,     0,     0,     0,     0,     0,     0,
    3994,     0,  2352,  4147,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,  4148,  3992,     0,     0,  1938,
       0,     0,  3449,     0,     0,     0,  1939,     0,     0,     0,
       0, -2085,     0,     0,     0,     0,  1940,     0,     0,     0,
       0,     0,     0,  4250,     0,     0,   872,     0,     0,  1941,
       0,  3995,  3996,  3997,     4,     0,     0,     0,     0,     0,
       0,     0,     0,   906,   873,     0,     0,     0,     0,     0,
       0,     0,   874,     0,     0,     0,  3998,     0,     0,     0,
    1942,     0,     0,  1943,     0,     8,     0,  3019,     0,     0,
       0,  3994,  1962,   770,   770,   770,   770,     0,  1944,   751,
       0,  3999,     0,     0,   875,     0,     0,     0,     0,     0,
       0,     0,   907,     0,   876,   877,     0,    14,     0,     0,
       0,  4149,   908,     0,     0,     0,     0,     0,     0,  4000,
       0,  4001,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4002,   909,  3995,  3996,  3997,     0,     0,  4150,   910,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4003,
       0,     0,    23,     0,     0,     0,  4004,  3998,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4005,     0,     0,     0,     0,     0,   911,     0,     0,
       0,  4006,  3999,     0,  4375,  4151,  4152,     0,     0,     0,
       0,     0,  4153,     0,     0,     0,  4007,     0,     0,     0,
       0,     0,     0,     0,  4154,     0,     0,     0,     0,     0,
    4000,     0,  4001,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,  4155,     0,     0,   912,   913,     0, -1135,
       0,  4002,     0,     0,     0,     0,  2251,     0,  4424,     0,
     914,  2252,     0,     0,     0,     0,     0,     0,     0,  4156,
    4003,  2253,   770,  4008,     0,  2463,     0,  4004,     0,     0,
    3027,     0,     0,  4009,     0,     0,     0,     0,     0,     0,
       0,     0,  4005,   770,   770,   770,   770,     0,     0,     0,
       0,     0,  4006,     0,     0,     0,     0,     0,     0,     0,
    4463,  4464,     0,     0,  4742,     0,  4745,  4007,  4748,     0,
    4010,    41, -2085,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4011,     0,  4157,  1958,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -2085, -2085,     0,     0, -2085, -2085,     0,    72,
       0,  4500,     0,     0,     0,     0,     0,  4510,     0,     0,
       0,     0,     0,  4012,  4008,     0,     0,     0,  5386,  4013,
     915, -1135,     0, -1135,  4009,     0,     0,     0,     0,     0,
    5401,   770,     0,     0,     0,     0,     0,     0,     0,   751,
       0,     0,     0,   751,     0,     0,  4158,     0,     0,     0,
    2066,     0,     0,     0,     0,     0,     0,  4159,  4160,  4161,
       0,  4010,     0,     0,     0,     0,     0,  4567,     0,  2254,
    4589,     0,     0,     0,  4011,     0,     0,     4,  4014,     0,
       0,     0,     0,     0,     0,  4015,   906,     0,     0,     0,
    2255,     0,   604,     0,   916,  2256,     0,     0,    16,    17,
       0,  3463,  4621,  3992,     0,     0,     0,     0,     8,     0,
       0,     0,     0,     0,  4012,  4016,  4635,     0,     0,     0,
    4013,     0,     0,     0,     0,  3993,  2257,     0,     0,     0,
    4017,  4018,     0,     0,     0,   907,     0,     0,     0,     0,
      14,     0,     0,  4019,     0,   908,  4162,     0,     0,     0,
       0,     0,     0,     0,     0,  3863,     0,  2258,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3027,     0,     0,     0,   909,     0,     0,     0,  3994,  4014,
       0,   910,     0,     0,     0,     0,  4015,     0,     0,     0,
       0,     0,     0,     0,     0,    23, -1135,     0, -1135,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1277,
       0,     0,     0,     0,     0,     0,  4016,     0,     0,     0,
     911,  4589,     0,     0,     0,  2066,     0,     0,     0,     0,
       0,  4017,  4018,   917,     0,     0,     0,     0,     0,  3995,
    3996,  3997,     0,     0,  4019,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,  3998,     0,     0,     0,     0,   912,
     913,  4749,     0,    16,    17,     0,  3613,     0,  3992,     0,
       0,     0,     0,   914,     0,     0,     0,     0,     0,  3999,
       0,     0,  1399,  1400,     0,     0,     0,     0,  1401,  1402,
       0,     0,  3644,     0,     0,     0,  4593,  4769,  1403,     0,
       0,     0,     0,     0,     0,     0,     0,  4000,     0,  4001,
       0,     0,     0,     0,     0,   770,     0,     0,     0,     0,
       0,     0,  3990,  3991,  1404,     0, -1135,     0,  4002,     0,
       0,     0,     0,     0,    41,     0,  1405,     0,     0,     0,
    4048,     0,     0,  3994,     0,     0,  -560,  4003,     0,     0,
       0,     0,     0,     0,  4004,     0,  1406,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4005,
       0,     0,    72,     0,     0,     0,     0,     0,     0,  4006,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1407,
       0,     0,     0,   915,  4007,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3995,  3996,  3997,     0,     0,  1408,
    1409,     0,  1410,     0,     0,     0,  4842,     0,     0,     0,
    1411,  1412,  1413,     0,     0,     0,     0,     0,     0,  3998,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1414,     0,     0,     0,     0,     0,  4857,     0,     0,     0,
    -560,  4008,     0,     0,  3999,     0,     0,     0,     0,  4635,
       0,  4009,     0,     0,     0,     0,     0,   916,     0,     0,
       0,     0,  4424,     0,  1415,     0,     0,     0,     0,     0,
       0,     0,  4000,  3875,  4001,  4884,     0,     0,     0,  4891,
     770,   770,     0,     0,     0,     0,     0,     0,  4010,  1416,
       0, -1135,     0,  4002,     0,  1417,  1179,  1805,     0,     0,
       0,  4011,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4003,     0,     0,     0,     0,     0,     0,  4004,
    1418,  1419,  1420,     0,  2463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4005,  4931,     0,     0,     0,     0,
       0,  4012,     0,     0,  4006,  1421,  1422,  4013,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4007,
       0,     0,     0,     0,  4286,     0,  5869,  5870,     0,  5872,
    5873,  5874,  5875,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   770,     0,  5895,     0,
       0,     0,  1423,     0,  1424,  1425,   917,     0,     0,     0,
    4589,   751,     0,  4990,     0,     0,  4014,     0,  2066,     0,
    1426,     0,     0,  4015,     0,     0,  4008,     0,     0,     0,
       0,     0,     0,     0,     0,  5014,  4009,  -826,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4016,     0,     0,     0,  1427,   770,  1428,
       0,     0,     0,     0,     0,     0,    16,    17,  4017,  4018,
    2521,  3992,  5045,  4010,     0,     0,     0,     0,     0,     0,
       0,  4019,  1429,     0,     0,     0,  4011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1430,     0,     0,     0,     0,     0,
       0,     0,     0,  4589,     0,  1431,  1432,  5966,  5988,     0,
    5969,     0,     0,     0,     0,  4931,  4012,     0,  5977,     0,
       0,     0,  4013,     0,     0,  5082,     0,  2463,     0,     0,
       0,  4020,   751,  5090,     0,     0,  3994,  1433,  4931,     0,
       0,     0,     0,     0,     0,  4931,  1434,     0,     0,     0,
    4589,     0,     0,     0,  1399,  4227,     0,   604,     0,     0,
    1401,  1402,  5114,     0,     0,     0,     0,     0,     0,     0,
    1403,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4014,     0,     0,     0,     0,     0,     0,  4015,     0,
       0,  5128,  1435,  1436,  1437,     0,  1404,  3995,  3996,  3997,
    1438,  1439,     0,     0,     0,     0,     0,     0,  1405,     0,
       0,     0,     0,     0,     0,     0,  1440,  1441,  4016,     0,
       0,     0,  3998,     0,     0,     0,     0,     0,  1406,     0,
       0,     0,     0,  4017,  4018,     0,     0,     0,     0,     0,
    1442,  1443,     0,     0,     0,     0,  4019,  3999,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1444,
       0,  1407,     0,     0,  4538,     0,     0,     0,  4542,     0,
       0,     0,     0,     0,     0,  4000,     0,  4001,     0,     0,
       0,  1408,  1409,     0,  1410,     0,     0,     0,     0,     0,
       0,     0,  1411,  1412,  1413,     0,  4002,     0,  4424,     0,
       0,     0,     0,     0,     0,     0,  2463,     0,     0,     0,
       0,     0,  1414,     0,     0,  4003,     0,     0,     0,     0,
       0,     0,  4004,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4005,     0,     0,
       0,     0,     4,     0,     0,     0,  1415,  4006,     0,     0,
    1446,   906,     0,  1447,     0,  3644,  1448,     0,     0,     0,
       0,     0,  4007,  4510,     0,     0,     0,     0,     0,     0,
       0,  1416,   770,     8,  5252,  5252,     0,  1417,     0,  1449,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -328,
       0,  -328,     0,     0,     0,     0,     0,     0,  1451,     0,
     907,     0,  1418,  1419,  1420,    14,     0,     0,     0,     0,
     908,     0,     0,     0,     0,     0,     0,     0,     0,  4008,
       0,     0,     0,  4589,    18,     0,     0,  4228,  1422,  4009,
     751,     0,  5270,     0,     0,     0,     0,  5278,     0,   909,
       0,     0,     0,     0,     0,     0,   910,  3613,     0,     0,
       0,     0,     0,     0,  3613,     0,     0,     0,     0,     0,
      23,     0,     0,     0,     0,     0,  4010,     0,     0,     0,
       0,     0,     0,     0,  1423,     0,  1424,  1425,     0,  4011,
       0,     0,     0,     0,     0,   911,     0,     0,     0,     0,
       0,     0,  1426,     0,     0,     0,     0,     0,  4589,  4931,
    4589,     0,   770,  4589,     0,  4931,     0,     0,     0,  4589,
    4589,     0,     0,  4931,     0,     0,     0,     0,     0,  4012,
       0,     0,     0,  4589,  4931,  4013,  4931,     0,    31,  1427,
       0,  1428,  5345,     0,   912,   913,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5356,   914,     0,
       0,     0,     0,     0,  1429,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1430,     0,     0,     0,
       0,     0,     0,     0,  4014,     0,     0,  1431,  1432,     0,
       0,  4015,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1191,     0,     0,  -328,     0,    41,
       0,     0,     0,     0,     0,  1124,     0,     0,     0,  1433,
       0,  4016,     0,     0,     0,     0,     0,     0,  1434,     0,
    1163,  5406,  1121,     0,     0,     0,  4017,  4018,  1192,  1193,
       0,     0,  4842,     0,     0,     0,     0,    72,  1194,  4019,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,  3878,     0,    10,    11,     0,     0,     0,   915,     0,
       0,  4931,  1121,     0,  1435,  1436,  1437,     0,     0,  5252,
       0,     0,  1438,  1439,     0,   751,     0,     0,  5437,     0,
       0,     0,     0,     0,     0,     0,     0,  5444,  1440,  1441,
       4,  4589,  4589,     0,     0,     0,     0,    16,    17,   906,
       0,     0,  1195,  2874,     0,  -826,     0,     0,     0,     0,
       0,     0,  1442,  1443,     0,  -328,  1196,     0,     0,     0,
       0,     8,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4229,   916,     0,  2521,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2875,  4589,     0,     0,   907,  4589,
    2066,     0,     0,    14,     0,  2463,     0,     0,   908,     0,
       0,     0,  4931,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,    18,     0,     0,     0,  1197,     0,     0,     0,
       0,  2876,     4,     0,     0,  5536,     0,   909,  1198,     0,
       0,   906,   751,     0,   910,     0,     0,     0,    16,    17,
       0,     0,     0,  3992,     0,     0,     0,     0,    23,     0,
       0,     0,     0,     8,     0,     0,     0,     0,     0,     0,
       0,     0,  1446,     0,     0,  1447,     0,     0,  1448,     0,
       0,     0,     0,   911,     0,     0,  4988,     0,     0,     0,
     907,     0,     0,     0,     0,    14,     0,     0,  1199,     0,
     908,  4231,  5252,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4589,     0,    18,  5600,  1121,     0,     0,     0,
    1451,   917,     0,     0,     0,     0,    31,  5636,  3994,   909,
       0,     0,   912,   913,     0,     0,   910,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   914,     0,     0,  3613,
      23,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1200,     0,  1121,     0,     0,     0,
       0,  1121,  4589,  1201,     0,   911,     0,     0,     0,     0,
       0,     0,     0,     0,   751,  1202,     0,     0,     0,  3995,
    3996,  3997,     0,     0,     0,     0,  1203,     0,     0,     0,
       0,  1121,  5698,  5702,  1632,     0,     0,    41,     0,     0,
       0,  1121,     0,     0,  3998,     0,     0,  5088,    31,     0,
    1204,     0,     0,     0,   912,   913,     0,     0,  5720,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   914,  3999,
       0,  3878,     0,  3878,     0,    72,     0,     0,     0,  1632,
       0,     0, -2445,  1205,     0,     0,  1206,     0,  1207,     0,
       0,     0,     0,  5761,     0,     0,   915,  4000,     0,  4001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1208,  1209,     0,     0,     0,  4002,     0,
       0,  1210,  1211,     0,   770,     0,     0,     0,     0,    41,
    1121,  1121,  1121,  1121,     0,     0,  1632,  4003,  1212,     0,
       0,     0,  1121,     0,  4004,     0,     0,  5809,     0,  5810,
     604,     0,     0,  1569,     0,     0,     0,     0,     0,  4005,
    1213,     0,     0,     0,     0,     0,     0,    72,     0,  4006,
     916,     0,     0,     0,     4,     0,     0,     0,  2877,     0,
       0,  1214,     0,   906,  4007,     0,     0,     0,   915,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2463,     8,     0,     0,  2878,  2879,
       0,  2880,  2881,  2882,  2883,  2884,     0,  2885,  2886,  2887,
    2888,  2889,  2890,  2891,  2892,     0,  2893,  2894,  2895,     0,
       0,     0,   907,     0,     0,     0,  1215,    14,     0,     0,
       0,  4008,   908,     0,     0,  3671,     0,     0,     0,     0,
    1216,  4009,     0,     0,     0,     0,    18,     0,     0,     0,
       0,  1217,   916,     0,  1218,  1219,     0,  5907,     0,     0,
       0,   909,     0,  5252,     0,  5252,  5252,     0,   910,  1220,
       0,     0,     0,     0,  5917,     0,     0,     0,  4010,     0,
       0,     0,    23,     0,     0,     0,     0,     0,     0,     0,
       0,  4011,     0,  1121,     0,     0,  1632,     0,     0,   917,
       0,     0,     0,     0,  5936,  1221,   751,   911,     0,     0,
       0,     0,  1222,     0,  2896,  2897,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -3221,  4012,  1223,     0,     0,  5268,     0,  4013,     0,     0,
       0,  5702,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,  5720,     0,     0,     0,   912,   913,     0,     0,
       0,     0,     0,     0,     0,   770,     0,     0,     0,     0,
     914,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0, -3221,     0,     0,     0,     0,     0,  1224,     0,
    5994,   917,     0,     0,  5252,  5252,  4014,     0,     0,     0,
       0,  5252,     0,  4015,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,    41,     0,  4016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2463,     0,     0,     0,  4017,  4018,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4019,     0,     0,     0,     0,     0,   770,     0,    72,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5252,     0,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   604,     0,     0,
       0,  6077,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     770,     0,     0,     0,     0,     0,  4510,  4510,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3949,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    6103,  6103,     0,     0,   916,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,  2463,     0,     0,     0,   770,     0,     0,  1121,
    1121,     0,   770,     0,     0,  1121,  2463,     0,     0,  1121,
    1121,  1121,  2463,     0,     0,     0,     0,     0,  2463,     0,
    1121,  1121,  1632,     0,     0,     0,  1121,     0,  1121,  1121,
    1121,  1121,  1121,     0,  1121,     0,     0,  1632,  1632,     0,
       0,     0,     0,     0,     0,  1121,     0,  1121,     0,     0,
    1121,  1121,     0,  1121,  1121,  1121,     0,  1121,  1121,  1121,
       0,     0,     0,     0,  1121,     0,     0,  1121,     0,     0,
       0,     0,     0,   917,     0,  1121,  1121,  5540,  1121,  1121,
    1121,     0,     0,  1121,  1121,  1121,  1121,  1121,  1121,  1121,
       0,  1121,  1121,  1121,  1121,  1121,  1121,     0,  1121,  1121,
       0,  1121,  1121,  1121,  1121,  1121,  1121,  1121,     0,     0,
    1121,  1121,  1121,  1121,     0,  1121,  1121,  1121,     0,  1121,
       0,  1121,     0,  1121,     0,     0,     0,  1121,  1121,  1121,
       0,     0,  1121,  1121,  1121,  1121,  1121,     0,  1121,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,  1121,  1121,  1121,  1121,     0,     4,     0,     0,
       0,     0,     0,  1121,  1121,  1121,   906,  1121,  1121,  1121,
    1121,  1121,  1121,  1087,  1121,  1121,  1121,  1121,  1121,  1121,
    1121,  1121,     0,     0,  5098,  1121,  4138,     0,     8,     0,
    1632,     0,     0,     0,     0,     0,  1632,  1238,     0,     4,
       0,     0,     0,     0,     0,     0,     0,     0,   906,     0,
    4140,     0,     0,     0,     0,   907,     0,     0,  4142,  5679,
      14,     0,     0,     0,     0,   908,     0,     0,  1121,     0,
    -542,     0,     0,  1121,     0,     0,     0,     0,     0,    18,
    2066,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,  5099,     0,   909,     0,     0,   907,     0,     0,
       0,   910,  1580,     0,     0,     0,     0,   908,     0,     0,
       0,     0,     0,     0,  1632,    23,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,  3992,     0,     0,   909,     0,     0,     0,
     911,     0,     0,   910,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,  1581,     0,  1384,
       0,  4144,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,   911,    31,     0,     0,     0,     0,     0,   912,
     913,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4146,  1632,     0,   914,     0,     0,     0,     0,  3994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1582,     0,     0,     0,     0,
       0,   912,   913,  4148,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   914,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1535,     0,     0,
       0,     0,     0,     0,    41,     0,     0,     0,     0,  3995,
    3996,  3997,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3998,     0,     0,     0,     0,     0,
       0,     0,    72,     0,     0,     0,  1583,     0,     0,     0,
       0,  1121,  1595,     0,     0,     0,     0,     0,     0,  3999,
       0,     0,     0,   915,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4149,
       0,     0,  1622,     0,  -542,     0,     0,  4000,     0,  4001,
       0,     0,  1637,     0,     0,     0,     0,     0,     0,     0,
       0,  5938,     0,     0,     0,   915,     0,     0,  4002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5146,     0,     0,     0,     0,     0,     0,  4003,     0,     0,
       0,     0,     0,     0,  4004,     0,     0,   916,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4006,
       0,     0,     0,  4151,     0,     0,     0,     0,     0,     0,
    4153,     0,     0,     0,  4007,     0,     0,     0,     0,   916,
       0,     0,     0,     0,  1731,     0,     0,     0,     0,     0,
    1121,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4155,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4008,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4009,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,   917,     0,  4010,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
    1121,  4011,     0,  4157,     0,     0,     0,     0,  1121,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   917,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4012,     0,     0,     0,     0,     0,  4013,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1927,     0,     0,     0,     0,  1632,
    1632,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,  1121,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4014,     0,  1632,     0,
       0,     0,     0,  4015,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4016,     0,     0,     0,     0,     0,     0,
    2063,     0,     0,     0,     0,     0,     0,     0,  4017,  4018,
       0,  1632,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4019,  1121,     0,     0,  1632,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2103,     0,     0,  2104,  1121,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,  1121,     0,  1121,     0,     0,     0,
       0,     0,  1121,     0,  1121,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1632,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2265,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2290,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2305,  1632,     0,  1632,
    2310,     0,  2312,     0,     0,     0,     0,     0,     0,     0,
       0,  2328,  2329,     0,     0,     0,     0,  2355,     0,  2358,
    2359,  2360,  2361,  2362,     0,  2364,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2372,     0,  2375,     0,
       0,  2376,  2377,     0,  2379,  2380,     0,     0,  2383,  2384,
    2385,     0,     0,     0,     0,  2390,     0,     0,  2396,     0,
       0,     0,     0,     0,     0,     0,  2400,  2401,     0,  2404,
       0,  2406,     0,     0,  2408,  2409,  2410,  2413,  2414,  2415,
    2416,     0,  2417,  2418,  2419,  2420,  2421,     0,     0,  2428,
    2429,     0,  1121,  2433,  2434,  2435,     0,     0,     0,     0,
       0,  2441,  2442,  2443,  1121,     0,  2446,  2447,  2448,     0,
    2450,     0,  2452,     0,  2453,     0,     0,     0,  2456,  2396,
    2458,     0,     0,  2464,  2465,  2466,  2467,  2468,     0,  2469,
       0,     0,     0,     0,     0,     0,  2473,     0,     0,     0,
       0,     0,     0,  2478,  2479,  2480,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2575,
       0,     0,     0,     0,  2063,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2063,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2657,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2691,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,  1121,     0,  1121,     0,  1121,  1121,  1121,  1121,  1121,
    1121,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,  1121,     0,     0,  1121,  1121,  1121,  1121,     0,
       0,  1121,  1121,     0,     0,  1121,     0,  1121,     0,  1121,
       0,  1121,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,  1121,     0,  1121,  1121,  1121,
    1121,  1121,     0,     0,  1121,  1121,  1121,     0,  1121,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,  1121,
       0,     0,  1121,     0,  1121,  1121,  1121,     0,     0,  1121,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,  1121,     0,     0,  1121,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,  1121,  1632,
    1121,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1632,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2981,  2982,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1632,     0,     0,  1632,  1632,  1632,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,  3048,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1238,
       0,  3066,     0,     0,     0,     0,     0,     0,     0,  3073,
    3074,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3125,  3127,  3129,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3222,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3227,     0,  3228,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3254,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,  1632,     0,     0,  3261,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,  2063,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,  3312,     0,     0,     0,     0,     0,
    1121,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3322,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,  1121,     0,  1121,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,  1632,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3383,     0,     0,     0,  1121,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3476,     0,     0,     0,  1632,     0,     0,
       0,     0,     0,     0,     0,  2063,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,  1632,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3561,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,  1632,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3659,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3710,     0,     0,  3711,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3737,     0,     0,     0,  3739,     0,  3740,  3741,  3742,  3743,
    3744,  3745,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3749,     0,  3750,     0,     0,  3751,  3752,  3753,  3754,
       0,     0,  3755,  3756,     0,     0,  3758,     0,  3760,     0,
    3762,     0,  3764,     0,     0,     0,  3766,     0,     0,     0,
       0,     0,     0,     0,  2410,     0,  3769,     0,  2410,     0,
    3772,  3773,  3774,     0,     0,  3775,  3776,  3778,     0,  3779,
       0,     0,  3780,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3781,     0,     0,     0,     0,
       0,     0,     0,  3788,     0,  3789,  3790,  3791,     0,     0,
    3792,     0,     0,     0,     0,     0,  3796,     0,     0,     0,
       0,  3807,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,  1121,     0,  1121,  3824,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,  1121,     0,     0,
    1121,     0,  3834,     0,     0,     0,     0,     0,     0,     0,
       0,  3845,     0,  1121,     0,  1121,     0,  1121,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2063,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2063,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2063,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4053,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3383,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4188,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4269,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4291,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4297,     0,     0,  4298,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4315,  4316,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,  1121,     0,     0,     0,     0,
       0,  4340,     0,  4341,     0,  4342,     0,  4343,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,  1121,     0,     0,  4368,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
    4391,  4392,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4053,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4426,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2063,
    2063,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2063,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1632,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3383,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1632,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4053,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3383,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4801,  4802,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4809,     0,  4810,     0,
       0,  4811,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4831,     0,  4832,     0,  4833,     0,
    4834,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4840,  4841,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1632,  1632,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3383,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1632,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3383,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1632,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4053,     0,     0,     0,     0,     0,
       0,  5040,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3383,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,  5106,  5107,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4053,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4053,     0,  4053,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3383,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2063,  2063,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5230,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5310,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3383,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5380,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4053,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5441,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4053,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5570,     0,  5572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5832,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2059,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2060,   946,
     947,   948,   949,     0,     0,     0,     0,     0,     0,     0,
     950,   951,     0,   952,     0,     0,     0,     0,     0,     0,
     953,   954,     0,     0,   955,   956,   957,   958,     0,   959,
     960,     0,   961,   962,     0,     0,     0,     0,   963,     0,
       0,     0,  2061,     0,     0,   965,     0,     0,     0,     0,
    1731,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,  5945,     0,     0,     0,     0,
     979,     0,   980,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,   990,
     991,     0,   992,   993,   994,     0,   995,  2062,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,  3383,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,  3383,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    1073,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1079,  1080,     0,     0,     0,     0,  1081,
       0,  2487,     0,  1082,     0,     0,  1083,  1084,     0,     0,
    1085,  1086,   945,   946,   947,   948,   949,     0,     0,     0,
       0,     0,     0,     0,   950,   951,     0,   952,     0,     0,
       0,     0,     0,     0,   953,   954,     0,     0,   955,   956,
     957,   958,     0,   959,   960,     0,   961,   962,     0,     0,
       0,     0,   963,     0,     0,     0,   964,     0,     0,   965,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,   980,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,     0,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,  2488,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1079,  1080,     0,
       0,     0,     0,  1081,     0,     0,     0,  1082,     0,     0,
    1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,   948,
     949,     0,     0,     0,  2393,     0,     0,     0,   950,   951,
       0,   952,     0,     0,     0,     0,     0,     0,   953,   954,
       0,     0,   955,   956,   957,   958,     0,   959,   960,     0,
     961,   962,     0,     0,     0,     0,   963,     0,     0,     0,
     964,     0,     0,   965,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,     0,     0,     0,     0,     0,     0,   979,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2394,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,  2395,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1079,  1080,     0,     0,     0,     0,  1081,     0,     0,
       0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,
     945,   946,   947,   948,   949,     0,     0,     0,     0,     0,
       0,     0,   950,   951,     0,   952,     0,     0,     0,     0,
       0,     0,   953,   954,     0,     0,   955,   956,   957,   958,
       0,   959,   960,     0,   961,   962,     0,     0,     0,     0,
     963,     0,     0,     0,   964,     0,     0,   965,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,   980,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,     0,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,   990,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,  1594,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1079,  1080,     0,     0,     0,
       0,  1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,
       0,     0,  1085,  1086,   945,   946,   947,   948,   949,     0,
       0,     0,     0,     0,     0,     0,   950,   951,     0,   952,
       0,     0,     0,     0,     0,     0,   953,   954,     0,     0,
     955,   956,   957,   958,     0,   959,   960,     0,   961,   962,
       0,     0,     0,     0,   963,     0,     0,     0,   964,     0,
       0,   965,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
       0,  3124,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,   980,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1079,
    1080,     0,     0,     0,     0,  1081,     0,     0,     0,  1082,
       0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,
     947,   948,   949,     0,     0,     0,     0,     0,     0,     0,
     950,   951,     0,   952,     0,     0,     0,     0,     0,     0,
     953,   954,     0,     0,   955,   956,   957,   958,     0,   959,
     960,     0,   961,   962,     0,     0,     0,     0,   963,     0,
       0,     0,   964,     0,     0,   965,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,     0,  3126,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,   980,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,   990,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    1073,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1079,  1080,     0,     0,     0,     0,  1081,
       0,     0,     0,  1082,     0,     0,  1083,  1084,     0,     0,
    1085,  1086,   945,   946,   947,   948,   949,     0,     0,     0,
       0,     0,     0,     0,   950,   951,     0,   952,     0,     0,
       0,     0,     0,     0,   953,   954,     0,     0,   955,   956,
     957,   958,     0,   959,   960,     0,   961,   962,     0,     0,
       0,     0,   963,     0,     0,     0,   964,     0,     0,   965,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,     0,  3128,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,   980,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,   990,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1079,  1080,     0,
       0,     0,     0,  1081,     0,     0,     0,  1082,     0,     0,
    1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,   948,
     949,     0,     0,     0,     0,     0,     0,     0,   950,   951,
       0,   952,     0,     0,     0,     0,     0,     0,   953,   954,
       0,     0,   955,   956,   957,   958,     0,   959,   960,     0,
     961,   962,     0,     0,     0,     0,   963,     0,     0,     0,
    3379,     0,     0,   965,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,  3380,     0,     0,     0,     0,     0,   979,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1079,  1080,     0,     0,     0,     0,  1081,     0,     0,
       0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,
     945,   946,   947,   948,   949,     0,     0,     0,     0,     0,
       0,     0,   950,   951,     0,   952,     0,     0,     0,     0,
       0,     0,   953,   954,     0,     0,   955,   956,   957,   958,
       0,   959,   960,     0,   961,   962,     0,     0,     0,     0,
     963,     0,     0,     0,   964,     0,     0,   965,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,   980,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,     0,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,   990,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1079,  1080,     0,     0,     0,
       0,  1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,
       0,     0,  1085,  1086,   945,   946,   947,   948,   949,     0,
       0,     0,     0,     0,     0,     0,   950,   951,     0,   952,
       0,     0,     0,     0,     0,     0,   953,   954,     0,     0,
     955,   956,   957,   958,     0,   959,   960,     0,   961,   962,
       0,     0,     0,     0,   963,     0,     0,     0,   964,     0,
       0,   965,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,   980,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1079,
    1080,     0,     0,     0,     0,  1081,     0,     0,     0,  1621,
       0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,
     947,   948,   949,     0,     0,     0,     0,     0,     0,     0,
     950,   951,     0,   952,     0,     0,     0,     0,     0,     0,
     953,   954,     0,     0,   955,   956,   957,   958,     0,   959,
     960,     0,   961,   962,     0,     0,     0,     0,   963,     0,
       0,     0,   964,     0,     0,   965,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,   980,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,   990,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    2264,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1079,  1080,     0,     0,     0,     0,  1081,
       0,     0,     0,  1082,     0,     0,  1083,  1084,     0,     0,
    1085,  1086,   945,   946,   947,   948,   949,     0,     0,     0,
       0,     0,     0,     0,   950,   951,     0,   952,     0,     0,
       0,     0,     0,     0,   953,   954,     0,     0,   955,   956,
     957,   958,     0,   959,   960,     0,   961,   962,     0,     0,
       0,     0,   963,     0,     0,     0,   964,     0,     0,   965,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,  3765,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,   990,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1079,  1080,     0,
       0,     0,     0,  1081,     0,     0,     0,  1082,     0,     0,
    1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,   948,
     949,     0,     0,     0,     0,     0,     0,     0,   950,   951,
       0,   952,     0,     0,     0,     0,     0,     0,   953,   954,
       0,     0,   955,   956,   957,   958,     0,   959,   960,     0,
     961,   962,     0,     0,     0,     0,   963,     0,     0,     0,
     964,     0,     0,   965,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,     0,     0,     0,     0,     0,     0,   979,     0,
    3787,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1079,  1080,     0,     0,     0,     0,  1081,     0,     0,
       0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,
     945,   946,   947,   948,   949,     0,     0,     0,     0,     0,
       0,     0,   950,   951,     0,   952,     0,     0,     0,     0,
       0,     0,   953,   954,     0,     0,   955,   956,   957,   958,
       0,   959,   960,     0,   961,   962,     0,     0,     0,     0,
     963,     0,     0,     0,   964,     0,     0,   965,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,   980,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,  6034,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,     0,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1079,  1080,     0,     0,     0,
       0,  1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,
       0,     0,  1085,  1086,   945,   946,   947,   948,   949,     0,
       0,     0,     0,     0,     0,     0,   950,   951,     0,   952,
       0,     0,     0,     0,     0,     0,   953,   954,     0,     0,
     955,   956,   957,   958,     0,   959,   960,     0,   961,   962,
       0,     0,     0,     0,   963,     0,     0,     0,   964,     0,
       0,   965,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,  1587,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,     0,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1588,
    1589,     0,     0,     0,     0,  1081,     0,     0,     0,  1082,
       0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,
     947,   948,   949,     0,     0,     0,     0,     0,     0,     0,
     950,   951,     0,   952,     0,     0,     0,     0,     0,     0,
     953,   954,     0,     0,   955,   956,   957,   958,     0,   959,
     960,     0,   961,   962,     0,     0,     0,     0,   963,     0,
       0,     0,   964,     0,     0,   965,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,  1725,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,     0,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    1073,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1588,  1589,     0,     0,     0,     0,  1081,
       0,     0,     0,  1082,     0,     0,  1083,  1084,     0,     0,
    1085,  1086,   945,   946,   947,   948,   949,     0,     0,     0,
       0,     0,     0,     0,   950,   951,     0,   952,     0,     0,
       0,     0,     0,     0,   953,   954,     0,     0,   955,   956,
     957,   958,     0,   959,   960,     0,   961,   962,     0,     0,
       0,     0,   963,     0,     0,     0,   964,     0,     0,   965,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,  1727,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,     0,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1588,  1589,     0,
       0,     0,     0,  1081,     0,     0,     0,  1082,     0,     0,
    1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,   948,
     949,     0,     0,     0,     0,     0,     0,     0,   950,   951,
       0,   952,     0,     0,     0,     0,     0,     0,   953,   954,
       0,     0,   955,   956,   957,   958,     0,   959,   960,     0,
     961,   962,     0,     0,     0,     0,   963,     0,     0,     0,
     964,     0,     0,   965,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,     0,     0,     0,     0,     0,     0,   979,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,     0,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1079,  1080,     0,     0,     0,     0,  1081,     0,     0,
       0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,
     945,   946,   947,   948,   949,     0,     0,     0,     0,     0,
       0,     0,   950,   951,     0,   952,     0,     0,     0,     0,
       0,     0,   953,   954,     0,     0,   955,   956,   957,   958,
       0,   959,   960,     0,   961,   962,     0,     0,     0,     0,
     963,     0,     0,     0,   964,     0,     0,   965,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,  2503,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,     0,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,     0,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1079,  1080,     0,     0,     0,
       0,  1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,
       0,     0,  1085,  1086,   945,   946,   947,   948,   949,     0,
       0,     0,     0,     0,     0,     0,   950,   951,     0,   952,
       0,     0,     0,     0,     0,     0,   953,   954,     0,     0,
     955,   956,   957,   958,     0,   959,   960,     0,   961,   962,
       0,     0,     0,     0,   963,     0,     0,     0,   964,     0,
       0,   965,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,  2505,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,     0,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1079,
    1080,     0,     0,     0,     0,  1081,     0,     0,     0,  1082,
       0,     0,  1083,  1084,     0,     0,  1085,  1086,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     971,   972,   973,     0,   974,   975,     0,     0,     0,   976,
     977,   978,     0,     0,     0,     0,     0,     0,     0,   979,
       0,  1587,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   982,     0,     0,     0,     0,
     983,   984,     0,   985,     0,     0,     0,     0,     0,   986,
       0,   987,     0,     0,   988,     0,     0,     0,     0,   991,
       0,   992,   993,   994,     0,   995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     996,     0,     0,     0,   997,   998,   999,  1000,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,  1003,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,     0,     0,
       0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,
       0,     0,  1012,     0,     0,     0,     0,     0,     0,     0,
    1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1017,  1018,  1019,     0,     0,     0,     0,
       0,  1020,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,  1022,    55,    56,    57,
      58,    59,    60,  1023,    62,    63,    64,    65,    66,    67,
      68,  1024,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,  1025,    85,   571,
      87,    88,    89,    90,    91,   572,  1026,    93,  1027,  1028,
      96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
    1034,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,  1040,   172,   173,   581,   175,   176,  1041,
     178,  1042,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,  1043,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,  1044,  1045,   213,   214,   215,
    1046,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,  1047,   255,
    1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,
     266,   267,   268,   269,   270,   271,   272,  1053,  1054,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,  1055,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,  1056,   303,
     304,   305,   306,   307,  1057,  1058,   310,   589,   311,   590,
     313,   314,  1059,   316,   317,   318,   319,   320,   321,  1060,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,  1061,
     353,   593,   355,   356,   357,  1062,  1063,   360,   361,   594,
     363,   364,  1064,   366,   367,   368,   369,   370,   371,  1065,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,  1066,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,  1067,  1068,  1069,
    1070,   423,   424,   425,  1071,  1072,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,  1073,
     442,  1074,   444,   445,   446,   447,   448,   449,   450,   451,
     452,  1075,  1076,   600,  1077,   457,   458,   459,   946,   460,
     601,   462,  1078,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5786,  5787,     0,     0,     0,     0,     0,     0,
       0,     0,  5788,     0,     0,     0,  1084,     0,     0,  1085,
    1086,     0,     0,     0,     0,     0,     0,   963,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   968,     0,     0,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   974,   975,     0,     0,     0,  1624,
    1625,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   982,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   988,     0,     0,     0,     0,     0,
       0,     0,   993,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1012,     0,     0,     0,     0,     0,     0,     0,
       0,  1014,  1015,  1016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,  1626,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  2541,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,  3025,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,  2542,   420,   421,
    2543,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1085,
    1086,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,  3275,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
       0,   460,   601,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,  3026,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   697,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,  1163,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3026,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1164,     0,   697,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,  1165,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,  1166,   175,   176,   177,
     178,   179,   582,  1167,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,  1168,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,  1169,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,  1170,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
    1171,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,  1172,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,  1173,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,  1174,   456,   457,   458,   459,  1163,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1164,     0,     0,
    1175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,  1165,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,  1166,   175,   176,   177,   178,   179,   582,  1167,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,  1168,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,  1169,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,  1170,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,  1171,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,  1172,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,  1174,
     456,   457,   458,   459,     0,   460,   601,   462,   463,   862,
     863,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1175,     0,     0,     0,
       0,     0,     0,     0,   864,     0,     0,     0,     0,   865,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   866,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   867,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   868,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,   869,     0,     0,
       0,     0,   870,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   768,     0,
       0,     0,     0,     0,     0,   871,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   872,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   873,     0,     0,     0,     0,     0,     0,     0,
     874,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   683,     0,     0,     0,     0,
       0,     0,   875,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   876,   877,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   878,   154,   155,   156,   157,   879,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   880,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   881,   318,   319,
     320,   882,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   883,   339,
     340,   591,   342,   884,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   885,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   886,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,  1155,   863,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   864,     0,     0,     0,     0,   865,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   866,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   867,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   868,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,   869,     0,     0,     0,     0,   870,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   768,     0,     0,     0,     0,
       0,     0,   871,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   872,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   873,
       0,     0,     0,     0,     0,     0,     0,   874,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   683,     0,     0,     0,     0,     0,     0,   875,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   876,
     877,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,  1156,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   878,   154,   155,   156,   157,   879,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   880,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   881,   318,   319,   320,  1157,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   883,   339,   340,   591,   342,
     884,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   885,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,  1858,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   886,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   768,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   683,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,  4927,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,     1,     2,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     3,     0,     4,     0,     5,     0,     6,
       0,     0,     0,     0,     0,     0,     0,     7,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     8,     0,     0,     9,
       0,    10,    11,     0,     0,     0,     0,     0,     0,    12,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    14,     0,
       0,     0,     0,     0,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,    18,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,    22,     0,
       0,     0,     0,    23,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    24,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    25,    26,     0,
       0,     0,     0,     0,     0,     0,     0,    27,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
      30,    31,    32,     0,    33,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
       0,     0,     0,    36,    37,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,    39,     0,    40,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    41,    42,     0,     0,     0,     0,     0,     0,
      43,    44,    45,    46,     0,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,     0,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,     0,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,     0,   170,     0,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,     0,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     0,   460,   461,   462,   463,     1,
       2,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     3,
       0,     4,     0,     5,     0,     6,     0,     0,     0,     0,
       0,     0,     0,     7,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     8,     0,     0,     9,     0,    10,    11,     0,
       0,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    14,     0,     0,     0,     0,     0,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,    18,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,    22,     0,     0,     0,     0,    23,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    24,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    25,    26,     0,     0,     0,     0,     0,
       0,     0,     0,    27,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,    30,    31,    32,     0,
      33,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,     0,     0,     0,    36,
      37,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,    39,     0,    40,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    41,    42,
       0,     0,     0,     0,     0,     0,    43,    44,    45,    46,
       0,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,     0,
      85,    86,    87,    88,    89,    90,    91,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,     0,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,     0,   170,     0,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       0,   460,   461,   462,   463,     1,     2,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     3,     0,     0,     0,     5,
       0,     6,     0,     0,     0,     0,     0,     0,     0,     7,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     9,     0,    10,    11,     0,     0,     0,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    15,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    24,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    25,
      26,     0,     0,     0,     0,     0,     0,     0,     0,    27,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,    30,     0,    32,     0,    33,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    35,     0,     0,     0,    36,    37,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    38,     0,    39,     0,    40,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,    43,    44,    45,    46,     0,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,     0,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,     0,    85,    86,    87,    88,
      89,    90,    91,     0,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,     0,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,     0,   170,
       0,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,  1950,   460,   461,   462,
     463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1624,  1625,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,  4570,
     460,   601,   462,   463,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1951,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   731,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,  3374,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3375,     0,     0,     0,     0,     0,     0,  4571,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -2628,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   732,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,  4572,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,  4570,   460,   601,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4573,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     731,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,  3374,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3375,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   732,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,  4572,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,  4632,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,  4573,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   683,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,  1811,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1812,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   768,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1813,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   683,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,  1399,  1400,     0,     0,  1814,     0,
    1401,  1402,     0,     0,     0,     0,     0,     0,     0,     0,
    1403,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1405,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1406,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1408,  1409,     0,  1410,     0,     0,     0,     0,     0,
       0,     0,  1411,  1412,  1413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1414,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1415,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1416,     0,     0,     0,     0,     0,  1417,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1418,  1419,  1420,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1421,  1422,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,     0,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,     0,   568,  1423,    75,  1424,  1425,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,     0,  1426,   572,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1427,
     126,  1428,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
       0,   145,   146,   147,  1429,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,  1430,   579,   580,   170,
       0,   171,   172,   173,     0,   175,   176,  1431,  1432,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,  1433,
     209,   586,   210,   211,   212,   213,   214,   215,  1434,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,  1435,  1436,  1437,   265,   266,   267,
     268,   269,  1438,  1439,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,     0,  1440,  1441,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,  1442,  1443,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,  1444,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,  1445,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,     0,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,  1446,   417,   418,  1447,   420,   421,  1448,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
       0,  1449,   446,   447,   448,   449,   450,   451,   452,   453,
     454,  1450,   456,   457,   458,   459,     0,   460,   601,   462,
    1451,  1399,  4227,     0,     0,     0,     0,  1401,  1402,     0,
       0,     0,     0,     0,     0,     0,     0,  1403,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1405,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1406,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1408,  1409,
       0,  1410,     0,     0,     0,     0,     0,     0,     0,  1411,
    1412,  1413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1414,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1415,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1416,     0,
       0,     0,     0,     0,  1417,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1418,
    1419,  1420,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4228,  1422,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,     0,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,     0,
     568,  1423,    75,  1424,  1425,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,     0,  1426,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,  1427,   126,  1428,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,     0,   145,   146,
     147,  1429,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,  1430,   579,   580,   170,     0,   171,   172,
     173,     0,   175,   176,  1431,  1432,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,  1433,   209,   586,   210,
     211,   212,   213,   214,   215,  1434,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,  1435,  1436,  1437,   265,   266,   267,   268,   269,  1438,
    1439,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,     0,  1440,  1441,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,  1442,
    1443,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,  4229,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
    4230,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,     0,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,  1446,
     417,   418,  1447,   420,   421,  1448,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,     0,  4231,   446,
     447,   448,   449,   450,   451,   452,   453,   454,  1450,   456,
     457,   458,   459,     0,   460,   601,   462,  1451,  1399,  1400,
       0,     0,     0,     0,  1401,  1402,     0,     0,     0,     0,
       0,     0,     0,     0,  1403,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1405,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1406,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1407,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1408,  1409,     0,  1410,     0,
       0,     0,     0,     0,     0,     0,  1411,  1412,  1413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1414,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1415,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1416,     0,     0,     0,     0,
       0,  1417,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1418,  1419,  1420,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1421,  1422,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
       0,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,     0,   568,  1423,    75,
    1424,  1425,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,     0,  1426,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,  1427,   126,  1428,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,     0,   145,   146,   147,  1429,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
    1430,   579,   580,   170,     0,   171,   172,   173,     0,   175,
     176,  1431,  1432,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,  1433,   209,   586,   210,   211,   212,   213,
     214,   215,  1434,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1435,  1436,
    1437,   265,   266,   267,   268,   269,  1438,  1439,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,     0,  1440,  1441,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,  1442,  1443,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,  1444,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,     0,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,  5273,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,  1446,   417,   418,  1447,
     420,   421,  1448,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,     0,  1449,   446,   447,   448,   449,
     450,   451,   452,   453,   454,  1450,   456,   457,   458,   459,
       0,   460,   601,   462,  1451,  1399,  4227,     0,     0,     0,
       0,  1401,  1402,     0,     0,     0,     0,     0,     0,     0,
       0,  1403,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1405,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1406,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1408,  1409,     0,  1410,     0,     0,     0,     0,
       0,     0,     0,  1411,  1412,  1413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1414,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1415,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1416,     0,     0,     0,     0,     0,  1417,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1418,  1419,  1420,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4228,  1422,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,     0,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,     0,   568,  1423,    75,  1424,  1425,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,     0,  1426,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
    1427,   126,  1428,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,     0,   145,   146,   147,  1429,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,  1430,   579,   580,
     170,     0,   171,   172,   173,     0,   175,   176,  1431,  1432,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
    1433,   209,   586,   210,   211,   212,   213,   214,   215,  1434,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,  1435,  1436,  1437,   265,   266,
     267,   268,   269,  1438,  1439,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,     0,  1440,
    1441,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,  1442,  1443,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,  4229,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,  5652,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,     0,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,  1446,   417,   418,  1447,   420,   421,  1448,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,  1827,  4231,   446,   447,   448,   449,   450,   451,   452,
     453,   454,  1450,   456,   457,   458,   459,     0,   460,   601,
     462,  1451,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1828,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   683,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,  1811,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1812,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     768,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   683,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,  1811,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   683,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
    1286,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1287,  1288,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1289,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,  2603,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
       0,   460,   601,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,  1346,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   768,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   683,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,     0,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
     810,   811,     0,     0,     0,     0,     0,     0,     0,     0,
     812,     0,     0,     0,     0,     0,     0,     0,     0,  1719,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,     0,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,     0,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,   813,   814,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   815,   456,   457,   458,
     459,     0,   460,   601,   462,   463,  1346,   865,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   768,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   683,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,  1346,
     460,   601,   462,   463,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   683,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,   865,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   768,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   683,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,   812,   460,   601,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,     0,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,     0,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     815,   456,   457,   458,   459,     0,   460,   601,   462,   463,
    2317,     0,     0,     0,  5011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2318,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4086,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4087,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4088,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   683,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4089,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,  2317,     0,     0,     0,
    5914,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2318,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4086,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4087,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4088,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   683,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4089,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,  2317,     0,     0,     0,  5991,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2318,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4086,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4087,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4088,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   683,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4089,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,  2969,   460,   601,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   768,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   683,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
    1804,   460,   601,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,  1804,   460,   601,
     462,   463,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,  2595,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,  3367,   460,   601,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,  5081,   460,   601,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,  5089,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,  3298,   460,   601,   462,   463,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   683,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
    3299,   175,   176,   177,   178,   179,   582,     0,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,     0,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,  3300,   456,   457,
     458,   459,     0,   460,   601,   462,   463,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   566,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   567,   568,    74,    75,    76,    77,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,    90,    91,   572,    92,    93,    94,  2460,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
     577,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   579,   580,   170,
       0,   171,   172,   173,   581,   175,   176,   177,   178,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,   358,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   600,   456,   457,   458,   459,     0,   460,   601,   462,
     463,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  6141,     0,     0,     0,     0,     0,  2461,  6142,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   683,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   768,  1825,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     683,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   566,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   567,   568,    74,    75,    76,    77,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,    90,    91,   572,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
     577,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   579,   580,   170,
       0,   171,   172,   173,   581,   175,   176,   177,   178,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,   358,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   600,   456,   457,   458,   459,     0,   460,   601,   462,
     463,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   768,  2475,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   683,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
       0,   460,   601,   462,   463,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3459,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,  2460,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,     0,   460,   601,   462,   463,  1624,
    1625,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2461,  6142,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1951,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    42,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,  2460,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,  1624,  1625,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3868,     0,     0,
       0,     0,     0,  2461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   566,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   567,   568,    74,    75,    76,    77,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,    90,    91,   572,    92,    93,    94,  1626,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
     577,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   579,   580,   170,
       0,   171,   172,   173,   581,   175,   176,   177,   178,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,   358,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   600,   456,   457,   458,   459,     0,   460,   601,   462,
     463,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1794,     0,     0,     0,     0,     0,
    1627,     0,     0,     0,     0,     0,     0,  1085,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
       0,   460,   601,   462,   463,  1624,  1625,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   697,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,  1626,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,     0,   460,   601,   462,   463,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1085,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,  2460,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3026,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   697,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   566,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   567,   568,    74,    75,    76,    77,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,    90,    91,   572,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
     577,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   579,   580,   170,
       0,   171,   172,   173,   581,   175,   176,   177,   178,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,   358,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   600,   456,   457,   458,   459,     0,   460,   601,   462,
     463,    16,    17,  5063,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4720,     0,     0,     0,     0,     0,     0,  4573,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
       0,   460,   601,   462,   463,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4573,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,     0,   460,   601,   462,   463,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   697,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   745,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   746,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   747,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   697,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4573,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   566,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   567,   568,    74,    75,    76,    77,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,    90,    91,   572,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
     577,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   579,   580,   170,
       0,   171,   172,   173,   581,   175,   176,   177,   178,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,   358,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   600,   456,   457,   458,   459,  2984,   460,   601,   462,
     463,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2518,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   679,
     680,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3636,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3637,   655,  3638,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
       0,   460,   601,   462,   463,  1481,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2985,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,  1558,
     460,   601,   462,   463,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,  1559,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,  1624,  1625,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4277,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4636,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,  1624,  1625,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4883,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5315,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5409,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   768,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1813,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   683,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,  1624,  1625,     0,     0,
    1814,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2628,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2629,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2630,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2631,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,  2632,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
    1624,  1625,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2628,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2629,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4260,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2631,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
    2632,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,  1624,  1625,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2628,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2629,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2631,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,  2632,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   654,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   655,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   768,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   683,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     655,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
    1624,  1625,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1670,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4506,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   683,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5699,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   692,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,  1624,  1625,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,  1972,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
    2722,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
    2723,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,  2710,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
       0,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   683,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,  3299,   175,   176,
     177,   178,   179,   582,     0,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,     0,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,  3300,   456,   457,   458,   459,     0,
     460,   601,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,     0,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,     0,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,     0,    85,   571,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,     0,   170,     0,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   582,   181,   182,
       0,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,     0,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,     0,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1548,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,     0,    47,     0,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,     0,    62,    63,    64,    65,    66,    67,    68,
      69,     0,     0,     0,     0,    74,    75,    76,    77,    78,
       0,     0,    81,    82,    83,    84,     0,     0,     0,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,    96,
       0,     0,     0,     0,     0,     0,   102,     0,   104,     0,
     106,   107,  1549,   109,   110,   111,   112,   113,   114,     0,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,     0,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,     0,     0,     0,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,     0,     0,
       0,     0,     0,   172,   173,  1550,   175,   176,   177,   178,
     179,     0,   181,   182,     0,   184,   185,     0,     0,   187,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   201,   202,   203,   204,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,    16,    17,     0,
       0,   296,   297,     0,   299,   300,   301,   302,     0,   304,
     305,   306,   307,   308,   309,     0,     0,     0,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   340,     0,   342,   343,
       0,   345,   346,     0,   348,   349,   350,   351,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,     0,   363,
     364,   365,     0,   367,   368,   369,   370,     0,   372,   373,
       0,     0,   376,     0,     0,   379,   380,   381,     0,   383,
       0,   385,   386,   387,   388,     0,   389,   390,   391,     0,
     393,   394,     0,   396,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,     0,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,   430,     0,   432,
     433,   434,   435,     0,     0,   438,   439,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,     0,     0,   457,   458,     0,     0,   460,     0,
     462,   463,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1566,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,     0,    47,     0,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,     0,    62,    63,    64,    65,    66,    67,    68,    69,
       0,     0,     0,     0,    74,    75,    76,    77,    78,     0,
       0,    81,    82,    83,    84,     0,     0,     0,    87,    88,
      89,    90,    91,     0,    92,    93,    94,     0,    96,     0,
       0,     0,     0,     0,     0,   102,     0,   104,     0,   106,
     107,  1549,   109,   110,   111,   112,   113,   114,     0,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,     0,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,     0,     0,     0,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,     0,     0,     0,
       0,     0,   172,   173,  1550,   175,   176,   177,   178,   179,
       0,   181,   182,     0,   184,   185,     0,     0,   187,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   201,   202,   203,   204,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,    16,    17,     0,     0,
     296,   297,     0,   299,   300,   301,   302,     0,   304,   305,
     306,   307,   308,   309,     0,     0,     0,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   340,     0,   342,   343,     0,
     345,   346,     0,   348,   349,   350,   351,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,     0,   363,   364,
     365,     0,   367,   368,   369,   370,     0,   372,   373,     0,
       0,   376,     0,     0,   379,   380,   381,     0,   383,     0,
     385,   386,   387,   388,     0,   389,   390,   391,     0,   393,
     394,     0,   396,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   428,   429,   430,     0,   432,   433,
     434,   435,     0,     0,   438,   439,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,     0,     0,   457,   458,     0,     0,   460,     0,   462,
     463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,     0,    47,     0,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
       0,    62,    63,    64,    65,    66,    67,    68,    69,     0,
       0,     0,     0,    74,    75,    76,    77,    78,     0,     0,
      81,    82,    83,    84,     0,     0,     0,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,    96,     0,     0,
       0,     0,     0,     0,   102,     0,   104,     0,   106,   107,
    1549,   109,   110,   111,   112,   113,   114,     0,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,     0,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,     0,     0,     0,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,     0,     0,     0,     0,
       0,   172,   173,  1550,   175,   176,   177,   178,   179,     0,
     181,   182,     0,   184,   185,     0,     0,   187,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   201,   202,   203,   204,   205,   206,   207,   208,   209,
       0,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,    16,    17,     0,     0,   296,
     297,     0,   299,   300,   301,   302,     0,   304,   305,   306,
     307,   308,   309,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   340,     0,   342,   343,     0,   345,
     346,     0,   348,   349,   350,   351,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,     0,   363,   364,   365,
       0,   367,   368,   369,   370,     0,   372,   373,     0,     0,
     376,     0,     0,   379,   380,   381,  5459,   383,     0,   385,
     386,   387,   388,     0,   389,   390,   391,     0,   393,   394,
       0,   396,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,     0,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   428,   429,   430,     0,   432,   433,   434,
     435,     0,     0,   438,   439,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
       0,     0,   457,   458,     0,     0,   460,     0,   462,   463,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,     0,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
       0,   568,     0,    75,     0,     0,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,     0,
       0,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,     0,   126,     0,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,     0,   145,
     146,   147,     0,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,     0,   579,   580,   170,     0,   171,
     172,   173,  5460,   175,   176,     0,     0,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,     0,   209,   586,
     210,   211,   212,   213,   214,   215,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,     0,     0,     0,   265,   266,   267,   268,   269,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,     0,     0,     0,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,     0,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,     0,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,     0,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   417,   418,     0,   420,   421,     0,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,     0,     0,
     446,   447,   448,   449,   450,   451,   452,   453,   454,  1450,
     456,   457,   458,   459,     0,   460,   601,   462
};

static const yytype_int16 yycheck[] =
{
       0,   756,    24,   820,   918,  1545,   518,  1410,   565,   557,
    1410,  1785,     0,   670,   669,   670,  2024,  1224,   555,  2027,
    1323,  2124,  1773,     0,     0,  1206,   620,  2054,  1169,  1170,
    1171,     3,   669,    72,  2052,  1720,  1863,  1178,   734,   735,
    1324,  1324,  1863,  1224,  1816,  1792,  2292,  2205,  1406,  1733,
       0,  2191,  2945,     0,     0,     0,  1414,  2772,     0,  1606,
    1486,  2684,  2213,   855,  1834,  3477,   620,  3210,  1337,  2797,
    1531,   983,  1430,  2192,  3552,   669,  3435,  2991,   663,  2026,
    3479,  3552,  1440,    34,   945,   622,  1644,   624,   625,   626,
     627,   628,  1466,   630,   631,  2028,   763,   634,   635,  1822,
    3063,  3064,  1460,  2751,   638,  1203,  1146,  3033,  4046,  1832,
    3820,  1427,     0,  1848,  1849,   669,  1028,  3670,  1500,  3611,
    3586,  3611,  1400,  1340,  1402,  1622,  1404,  1225,  1406,  1613,
    1446,  1447,  1448,   667,   638,  1451,  1414,  1340,   710,  3611,
    3327,   713,  3611,  1421,  3611,  1423,     0,   169,  3502,  1465,
    3611,  1744,  1430,  2020,  3491,   691,  4230,  1283,  3702,  1752,
    2289,  2067,  1440,   667,  2284,   819,  1444,  2682,  1950,  3079,
    1785,  1449,  4020,  1085,  3528,  3529,  1950,  4147,  3839,   983,
    2706,  2921,  1460,  1461,  1462,  1463,  1464,  4030,  3263,  3264,
    2293,  3422,  3821,  4479,  3821,  1753,  1754,  4074,  1756,  1757,
    1758,  1759,  1760,  1761,  4137,  1763,  1764,  1765,  1766,  1767,
    1768,  1769,  1770,  1948,  2921,  4137,  5026,  3941,  1079,  1080,
    1081,  4415,  2853,  3346,   818,  3552,   820,  4137,  2151,  4262,
    1091,    11,  3355,  3558,  1148,  2911,  2853,  1984,    12,  3593,
    3594,  2247,  2179,  2249,  2250,  1855,  4945,    10,  4138,  4595,
    4140,  1377,     6,  4143,     9,    10,  4726,  1566,    11,    11,
     565,    28,    32,  1873,   818,    26,   820,  4157,   565,  2845,
     565,    11,    80,  3247,   565,    80,     6,    61,     9,    10,
      11,   763,    80,  2834,  3600,  4032,  1592,  1593,  1898,  1899,
    2921,    65,     9,    10,  3443,  1601,    80,    61,     9,    10,
      80,    92,    26,  3352,  2921,    11,  3868,    94,   113,   846,
       9,    10,  3550,   192,     9,    10,    80,    80,    74,   341,
     181,   858,   859,  4171,   152,   262,  1226,  1633,  3812,  1635,
     193,   262,     9,    10,    50,  1950,    80,     6,   104,     9,
      10,   193,   127,  1255,  2091,  1651,  1652,  2078,  1654,   262,
       9,    10,    73,     9,    10,   229,  1662,  1663,     9,    10,
    1666,  4394,     9,    10,    83,  3528,  3529,  4735,    61,    61,
       9,    10,   125,   125,   234,   805,     9,    10,   263,   193,
     217,  1408,    57,    94,  1411,    73,  3573,    80,     6,    24,
    2121,  1418,   262,   137,   360,    92,     9,    10,  1409,  1410,
    4061,   120,  1413,     9,    10,   373,  1433,  5017,   148,  1420,
      86,   216,   104,  5275,    89,  1426,     9,    10,    61,   262,
    2781,   148,    12,   234,  4587,   180,   260,   182,    30,   104,
    3593,  3594,    80,  3845,     9,    10,    92,   181,     9,    10,
     129,   262,  1409,  1410,  1410,    99,  1413,  1413,   152,   180,
    5006,   182,   219,  1420,  1420,  4025,     9,    10,   176,  1426,
    1426,   104,  1502,   180,   354,   182,   206,     9,    10,   180,
     145,   182,    61,   234,   282,    65,    61,   553,  4448,  4482,
      58,   180,  5016,   182,    86,   180,   297,   182,  1528,    61,
     176,   167,   168,   206,   104,   292,   172,   129,   173,     9,
      10,     9,    10,   180,   176,   182,     9,    10,   193,   114,
     180,  3180,   182,   176,   176,   104,     9,    10,    86,   104,
    5633,   180,   372,   182,   180,  3040,   182,     9,    10,   180,
      63,   182,   104,   180,   297,   182,   113,   234,  1999,   176,
     213,   180,    60,   182,  5281,   123,   301,   180,    86,   182,
    5249,  2298,   176,   323,   185,  5463,   275,  2563,  2564,  2565,
    2566,   267,   638,   193,  5303,   282,   104,   180,   193,   182,
     301,     9,    10,   297,   180,   547,   182,   347,   550,     9,
      10,   317,     9,    10,   301,  3532,   234,   180,   234,   182,
     301,   667,   462,  5757,   513,   271,    80,   272,   139,    80,
     672,   229,   301,     6,   172,   180,   301,   182,   684,   180,
    1306,   182,  1308,  1309,  1310,  1311,  1312,  1313,    61,    17,
     620,    69,   145,   249,   301,   701,   234,   180,   148,   182,
     208,   301,   620,   243,    32,   261,  3562,   637,   180,   216,
     182,   104,   301,   620,   620,   301,  2797,   374,  1220,   637,
     301,   651,   724,   137,   301,  5023,   137,  4069,  3327,   639,
     637,   637,   301,  3517,  1805,    68,  3853,  4133,   301,   669,
     670,   736,   180,  4072,   182,   675,   297,   180,   262,   182,
    3041,   669,  1985,   104,   225,  1826,   206,   180,   301,   182,
     637,   691,   669,   669,     5,   301,  2078,    80,   180,  1611,
     182,   437,   226,   271,  4708,  1497,   113,   671,   301,   785,
     661,     9,    10,   161,  1626,  1627,   229,   104,   209,  4044,
      31,   226,   234,    17,  5888,  5462,   301,  1588,  1589,   172,
     301,   385,   620,   271,  5642,   578,   138,   616,  5477,  2121,
     297,   148,   180,   741,   182,    81,   279,  2031,   301,   637,
     180,  5285,   182,   180,  1852,   182,  1854,  2026,   489,   301,
      96,  1801,    73,  4487,   477,  1322,   620,  4491,   457,  1867,
    2053,   229,  1870,   286,  4651,  4447,  1874,   408,   854,  1819,
     297,   669,   247,   637,  3927,   390,   784,   170,   678,   125,
     640,   301,  2725,   301,   762,   131,   762,   797,   301,   113,
    2570,   203,   672,  1901,  1902,  1903,  1846,  1611,   301,  5671,
     644,   295,   812,  5926,   295,  1245,   334,  1329,   818,   301,
     820,   297,  2029,  1627,   812,   457,   777,   531,   286,   165,
     818,   762,   820,   770,  4997,   812,   812,  5031,  4165,  2221,
     625,   818,   818,   820,   820,  2792,  2569,   226,  2029,   762,
    2067,   234,   260,  4856,  4346,   629,  4889,   168,  2977,  2162,
    3600,   234,   234,   301,  2067,   812,  2169,  1779,  4222,  5479,
    2554,   301,  4720,  1785,   301,   847,   848,   849,   850,   764,
    4442,   554,   180,  1365,   182,   764,  3860,   747,   762,  4038,
    3939,  3940,  5086,  3600,   615,   895,   207,  5453,  4136,   762,
     554,  3532,   853,   764,  3573,   856,   906,  4223,   908,   909,
     910,  4395,   234,  1774,   914,  3532,   916,   769,   906,  3595,
     908,   909,   910,   923,   812,   323,   914,   764,   916,   906,
     818,   908,   909,   910,   762,   923,   747,   914,  5306,   916,
     628,   762,  2500,   341,   714,   945,   923,   923,   762,   347,
     950,  1863,  3503,  2511,  3530,  2513,  2514,  1387,   812,  5153,
     768,  4622,   564,   768,   818,   762,   820,   747,  2277,  3600,
     768,  2468,  2469,   764,  2283,   373,   923,   764,   752,   234,
     980,  1785,   703,  3600,   768,   654,   747,   753,   768,   710,
     990,  2117,   713,  2134,  1498,   716,  1896,   764,   738,   282,
    5194,  5195,   726,   301,   768,   768,   762,   747,   762,  2493,
     766,   727,   767,  5483,   616,   768,   768,  1322,   906,  3025,
     908,   909,   910,  4593,   768,  1322,   914,  1322,   916,  2966,
    2967,  1322,   762,   764,   636,   923,   654,   672,  1950,   629,
     716,   747,   696,  2653,   763,   182,   764,   764,   650,  1531,
     747,  1090,   906,   764,   908,   909,   910,  5251,   229,  4222,
     914,   753,   916,  1599,  2370,   764,  5661,  2373,   763,   923,
     672,     9,    10,  1503,  5773,   768,  5775,  5776,   764,  1079,
    1080,  1081,  1082,   701,   769,  2391,   763,   764,   763,   491,
    2813,  1091,   764,  1169,   764,  1171,  2402,  4496,   676,  1175,
    1176,   764,   764,  2834,   763,   764,  2133,   763,  2135,   492,
     753,   206,   763,   764,   762,   286,   763,   764,     9,    10,
     768,   769,  2853,   769,   763,   764,  5412,   764,  2155,  1205,
     763,  4530,  1668,  3000,   762,  1802,   741,  4798,  2165,   769,
     764,   762,  1838,   753,   769,  4993,  1950,  2158,   716,  1685,
    2177,   764,  1688,  3076,  1690,  3078,  1586,   763,  1694,  1695,
    1696,   769,     9,    10,   753,  5098,  1702,  2194,   753,  2180,
     763,   764,  2183,  4120,    42,  3690,  5098,  4031,   762,  5056,
    2911,   753,  2193,   707,  3853,  4909,  4910,  5220,  5098,   764,
    2921,  2158,  2158,   764,   601,   369,     9,    10,  3206,  2060,
    3358,  4862,   707,  4864,  1871,  5904,  5905,   764,  6018,  5099,
     763,   764,  5911,  2180,  2180,   753,  2183,  2183,   738,   513,
    5068,   763,  5070,    28,  2264,  5073,  2193,  2193,  4900,   752,
     753,  5079,  5080,     9,    10,   747,    57,  5241,   260,  4717,
    4639,  4595,   180,    17,   182,  5093,  4717,   764,   116,   762,
       9,    10,  1252,   567,  1254,   763,  3003,   769,    32,   127,
     763,   764,   727,  1302,  6074,   170,   134,  3014,    89,  3275,
     763,   764,   234,     6,  4903,  1809,  4903,     9,    10,   229,
     688,  4618,   764,   104,   768,   687,  2078,   768,   764,   180,
     753,   182,  4617,   604,   282,   163,   418,  2052,  5997,   206,
     763,   764,  4533,   145,   762,  1809,   754,   755,   756,   757,
    2006,   282,  2008,     9,    10,  2011,   714,  2013,  2014,   727,
    1802,    14,  1959,  1321,   145,   763,   764,   233,   707,  2121,
     350,   173,   753,   180,   764,   182,   286,   764,  1338,  4482,
     170,   432,   763,   764,   148,    11,   357,    10,  5542,   352,
    3034,   345,   173,  1304,  1305,   260,   224,   494,   260,    37,
      38,   260,  4549,   301,  4487,  1959,   753,   180,  4491,   182,
    1942,  5075,  4559,  4560,   747,   747,   763,   764,  1378,   762,
     286,  1381,  5283,   441,   282,   768,   769,   255,  5452,  1871,
    4717,   297,   234,   260,  5093,  5589,   769,   769,  1970,   142,
      32,  1373,    34,  4478,   180,  1959,   182,   206,  3341,    61,
     301,   747,   748,   749,   219,  5318,  2071,    11,  5261,  6014,
    6015,   180,  1498,   182,   707,   747,  4095,  4096,   233,  5340,
    4099,  4100,  2573,   357,   406,  2576,  4105,  4106,  5784,  4349,
    3966,   319,  2649,   324,   113,  5625,    28,   769,   180,   137,
     182,   272,  2834,  2594,   301,   297,  2368,  2369,  3485,   479,
     441,  2009,  2010,   298,   299,  4134,   764,    35,  2649,    33,
    3488,  2125,    35,   385,  3256,   203,  3484,  5325,  4877,   148,
     286,  5329,  3256,  4223,   180,  3625,   182,  3627,   301,  4120,
     402,   297,   747,   181,  1998,  2407,  5676,   225,   297,  1220,
     114,  1222,  3329,  4120,   114,  3332,  3333,  5410,  2548,  2549,
     601,  3332,  3333,  4887,   769,   129,  4223,  1999,  2616,  1491,
    4143,  2106,  2620,  3429,   619,   301,  5872,  5873,  2811,  2911,
     588,   125,  2749,   109,   110,   262,   710,  1967,   443,  2921,
    1540,   422,   301,  3101,  2642,    14,  2749,  5294,  2460,   323,
     645,  5615,   689,   525,  5900,     9,    10,  2655,  2656,  5460,
     554,  3022,  2474,  3286,  2368,    35,  5690,   341,   446,   301,
     477,  3700,   278,   347,   267,  1575,  3002,   320,  5652,  3699,
     357,  3265,   234,  3883,  3884,  3885,  3886,   492,  1588,  1589,
    3313,   762,  4223,    32,  1594,   399,  5507,   303,  1598,  1599,
    1600,  5145,     9,    10,   267,   301,  4223,   588,   730,  1609,
    1610,     9,    10,  4920,  4921,  1615,   282,  1617,  1618,  1619,
    1620,  1621,   644,  1623,     9,    10,  5325,   360,  3221,   720,
    4278,  4279,  4280,  4281,  1634,  5047,  1636,   219,  5342,  1639,
    1640,  3256,  1642,  1643,  1644,    35,  1646,  1647,  1648,  2234,
    5049,   654,  1254,  1653,  5502,  3378,  1656,     9,    10,   679,
    1736,   672,   492,  1265,  1664,  1665,   688,  1667,  1668,  1669,
     327,  3356,  1672,  1673,  1674,  1675,  1676,  1677,  1678,  5231,
    1680,  1681,  1682,  1683,  1684,  1685,  3244,  1687,  1688,    35,
    1690,  1691,  1692,  1693,  1694,  1695,  1696,  1773,  2292,  1699,
    1700,  1701,  1702,  3250,  1704,  1705,  1706,  1746,  1708,  5679,
    1710,  2296,  1712,  4856,  5375,   347,  1716,  1717,  1718,  3466,
    2632,  1721,  1722,  1723,  1724,  1725,   180,  1727,   182,  3662,
    3227,  3228,  3342,  1809,  1734,  5072,  3220,  2863,  2292,  5486,
     308,  1741,  1742,  1743,  1744,   308,  3230,  5673,   672,   554,
     428,   429,  1752,  1753,  1754,   113,  1756,  1757,  1758,  1759,
    1760,  1761,  2676,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  4286,  3503,   180,  1774,   182,   764,     9,    10,   343,
    5333,   769,   180,   688,   182,   747,   688,     9,    10,   688,
    3657,   460,   368,   764,  2706,   180,  2708,   182,   769,     9,
      10,  3532,  2232,  2233,  2945,     9,    10,   769,     9,    10,
    3818,  5303,   762,  5303,   471,   721,  5526,  1817,     9,    10,
     719,   688,  1822,  5947,   360,   727,   764,   375,   180,   432,
     182,  5303,  1832,  3660,  5303,  5209,  5303,   564,   308,  3660,
       9,    10,  5303,  4512,     9,    10,   113,   301,   317,     9,
      10,   578,   148,     9,    10,  4781,   762,     9,    10,   566,
     432,   109,   110,   520,  3595,   763,   764,  1839,  1840,  3600,
    1842,  1843,  1844,   764,    76,  1951,   340,     9,    10,    32,
    4549,  1853,   956,   957,   958,     9,    10,   200,   630,  2801,
    4559,  4560,  5639,  5640,   301,   672,   386,  1869,  5310,   767,
    1900,   568,  5803,   301,  5805,   747,   482,    92,   347,  3927,
     752,   753,     9,    10,  1990,   721,   301,   764,   308,    92,
    3928,    35,  1998,   281,  2000,  1925,  5233,   485,   492,   764,
     109,   110,   601,    61,    35,     9,    10,  3206,   412,   200,
     714,   247,   763,  1017,     9,    10,   652,   398,   180,   301,
     182,   764,   576,   111,  2591,  2869,   762,   398,   180,  1959,
     182,   453,   308,  4586,  4587,  4778,  4779,  4780,   456,  3009,
     180,  1959,   182,     9,    10,    73,   180,  2525,   182,   180,
     563,   182,  1959,  1959,    99,  5477,     0,  5477,   764,   180,
     619,   182,  5179,   457,   206,     6,  5934,  2591,   601,  2075,
     492,   445,   560,   632,   763,  5477,  4920,  4921,  5477,   589,
    5477,   180,   127,   182,   281,   180,  5477,   182,  5944,  5571,
     180,  5573,   182,   474,   180,  2559,   182,   769,   180,   601,
     182,   738,   764,   474,   282,  2007,    18,  2591,    57,   614,
     563,   199,  2834,     9,    10,  3592,     9,    10,   180,   290,
     182,   292,   600,   188,   248,  2559,   180,    68,   182,   595,
    2060,   391,   368,   393,   554,   200,   181,  2763,   764,   301,
    2766,  1959,  2768,     9,    10,  2151,   136,     9,    10,   301,
    2776,     9,    10,   180,   442,   182,   415,  2672,  5447,  3916,
    5449,   301,   294,   668,  3652,     9,    10,   301,     9,    10,
     301,  3015,   769,   399,   188,  1959,   180,   764,   182,    17,
     301,  2187,   297,  5420,  5421,   180,   200,   182,   297,  2911,
     368,  3503,   104,   105,    32,   260,   145,  2699,  4776,  2921,
     440,   575,   301,   446,   471,   233,   301,   290,   762,  3280,
    3281,   301,   471,   355,   180,   301,   182,   327,   720,   301,
    4450,  4451,   688,  1874,   173,   647,   350,     9,    10,   287,
     288,   764,  3303,   459,  3887,  3888,   656,   703,   276,   301,
       9,    10,   660,   346,   638,   442,   260,   301,  2178,  3902,
    3865,   764,     9,    10,  3868,   446,   744,    63,  4916,   368,
    2178,  4294,   764,  5119,   308,    63,   670,   558,    33,  2199,
    2200,  2178,  2178,  3410,   301,     9,    10,   308,  3611,   653,
    5353,  3611,  3429,  3595,   180,   589,   182,   180,  3600,   182,
     557,  1942,  3683,  3684,  3685,  3686,  3429,   301,   557,  3410,
    6069,  2178,  3658,  3273,   482,   295,   301,     9,    10,  5598,
    3833,   764,  1963,   119,   180,  3285,   182,    18,   180,  1970,
     182,   119,   180,   272,   182,  2803,    91,   385,   327,   432,
     368,   434,  6101,   558,    83,   301,   180,  3474,   182,   180,
     229,   182,  1346,     9,    10,   557,  2276,   587,   163,   762,
     262,   583,     9,    10,    92,   479,   769,   495,   566,    80,
    2178,   471,  2292,  3474,  2294,     9,    10,  2297,  2728,  2299,
    2812,   120,  5909,   482,  2292,   183,  2294,  2307,  2308,    83,
     764,   446,    24,     9,    10,  2292,  2292,  2294,  2294,  5233,
    5786,  5787,  5135,  3626,  2178,  4258,  3238,   286,   180,    49,
     182,   539,   460,   104,   105,   301,  4020,   674,   301,   627,
     520,   180,  3716,   182,  3256,   674,   120,  2294,   216,     9,
      10,   524,   607,   180,   747,   182,   763,  3715,   552,   661,
    2081,   229,   446,  3224,   199,   301,   764,   697,   729,   301,
     700,   747,   480,   301,  4997,  2857,   180,   557,   182,   764,
    4398,   289,   290,    24,     9,    10,  5002,   301,    79,  4120,
     301,    82,   729,  2393,  2394,  2395,   111,  3713,  3714,   111,
     729,  4685,   471,   279,  2292,  3721,  2294,  3723,   180,  3725,
     182,   279,   764,     9,    10,   323,   526,  3329,   286,  5897,
    3332,  3333,  3334,    63,   635,     9,    10,  5898,   601,   297,
    5784,  4715,   310,   341,   729,   764,    99,  3715,  2292,   347,
    2294,   276,  3720,    36,   180,  3359,   182,   729,  3726,   301,
     398,   520,  3256,   180,   339,   182,   275,   712,  5186,   707,
     738,  4233,   301,   558,   672,   373,   180,    61,   182,   764,
     111,  2471,  3006,     6,   301,  4483,  5099,     9,    10,   119,
     412,   769,   229,  2559,   180,   679,   182,   178,  6095,  6096,
     137,   262,  4223,  2493,   674,     9,    10,   301,    91,  5425,
    2500,   275,  3006,  2503,   762,  2505,  5420,  5421,   766,  5864,
    5179,  2511,  5867,  2513,  2514,     9,    10,     6,  5872,  5873,
     180,   114,   182,     9,    10,   769,  3810,  5886,  5887,   301,
     513,    92,   764,   580,   181,    68,   129,  2537,   346,   286,
    3022,   437,   764,   583,  3080,   739,  5900,  5690,   121,   729,
      94,   762,  2552,   763,  3090,   180,  5955,   182,     9,    10,
     764,   229,  4495,   764,   137,   301,   122,     9,    10,  2569,
     261,     9,    10,   764,   301,  5244,   216,  3214,  5541,    68,
     747,   142,  6004,   693,   180,     6,   182,   301,   484,   229,
      11,  2591,  2592,   137,    15,   764,   180,   294,   182,   764,
     262,   711,  2678,  2591,   764,   301,   199,  3274,   764,     9,
      10,  3147,   764,  5588,  2614,  2591,  5591,   600,   286,  4759,
    3214,   661,  4649,  4763,   432,  4765,   434,  6049,   675,   297,
    4648,  2603,   764,    57,   729,  6057,  4644,   181,  4646,   279,
     764,   301,  3178,  2615,   200,  4764,   286,  4766,   180,    94,
     182,  5267,  4792,  4793,  4794,  5271,  5272,   297,   554,  3928,
    3214,   334,  3317,    15,    69,    89,   180,   764,   182,   764,
     136,   654,  6094,    94,     9,    10,   301,   753,  6033,   124,
    3317,   728,     9,    10,   559,   560,   180,   763,   182,   763,
    2641,     9,    10,  2693,   180,     6,   182,  4467,  4645,   764,
     807,  3237,  2702,  2591,    63,   301,  3913,  2783,   188,     9,
      10,  3503,   245,   246,     9,    10,   524,   301,     9,    10,
     200,   145,   255,  3317,   513,  3639,     9,    10,   764,   180,
      99,   182,  3913,  3488,     9,    10,   122,  2591,   180,   412,
     182,   461,   180,   276,   182,   852,     9,    10,  3660,   173,
    6162,   137,     9,    10,   753,  4439,   161,    68,  4442,     6,
     119,   636,  6161,  3317,   763,  4916,  4501,   247,   117,   301,
       6,    12,   124,   366,   179,   124,  5751,   371,  2073,   373,
     180,  2076,   182,  5758,   136,  5069,  2758,   301,  2760,   269,
    4074,  4074,  3274,   601,  3611,   181,   262,   763,  2770,  5083,
     763,  2801,  2774,  3595,  5947,  3946,   714,   301,  3600,  4494,
    5094,   600,  5096,  2813,  4275,   301,   410,  2538,  4315,  4316,
     216,    68,  3862,    17,    65,  3923,  5442,   763,  4682,   295,
    4684,  4378,    68,  4687,    10,   763,   707,   186,    32,  4693,
    4694,  4223,   707,   444,   438,   180,  4343,   182,   272,   763,
     301,   571,   763,   180,    57,   182,  4710,   216,   578,   301,
     212,  4879,   180,   301,   182,   654,   586,  2867,   500,   501,
    2591,  4368,     9,    10,  1423,    99,     6,   478,   111,  4626,
     180,  3793,   182,   515,  4431,   180,    89,   182,  4029,   180,
     145,   182,  2613,    69,   762,  6011,  6012,   180,   769,   182,
    2621,   301,   122,     3,   769,   180,  5799,   182,     9,    10,
      26,   763,  1461,  1462,  1359,  1360,   122,   180,   173,   182,
     279,    57,  4564,   180,   763,   182,   459,  4569,    28,  4426,
    3006,   137,  3008,    33,  1112,  5650,   763,    37,   297,   659,
      40,   421,   145,  4346,  2983,   721,    98,  6063,  1393,  4227,
    4228,  4229,   553,  4231,   233,  5578,   764,  5580,  4498,   763,
     404,  4239,  4240,  4241,  4242,  1143,   301,   411,     9,    10,
     173,   148,     9,    10,   301,   181,   769,   762,  2699,   573,
     612,   613,   325,   301,   769,   161,   579,  2143,     9,    10,
      11,   763,    10,   697,   200,    95,  2996,   701,   402,   719,
    3076,   301,  3078,   179,  3916,  2161,   301,   657,     6,   145,
     301,    76,  4697,    78,  2170,   609,   666,  3611,   301,   753,
    2176,   671,   568,    94,     9,    10,   301,   763,  2184,   763,
     764,  6006,  6007,   634,  5174,  5186,   763,   173,   301,  2195,
       9,    10,  2198,   180,   301,   182,   633,    96,    94,   763,
    4734,   122,     9,    10,  3966,   655,    28,  3611,   158,   235,
     236,    33,  3062,  3063,  3064,    37,   137,   763,  3068,   272,
      68,  3071,     9,    10,  3062,  3063,  3064,   167,   168,   180,
    3080,   182,   131,   183,   655,  3062,  3063,  3064,  3088,   260,
    3090,   768,  3092,   686,  3094,  3095,  3096,  3097,  3098,  3099,
    2821,  3101,   689,   763,  5051,   692,   147,  2828,  2829,  3109,
     181,  3111,   763,   764,  3114,  3115,  3116,  3117,     9,    10,
    3120,  3121,   762,  4384,  3124,    33,  3126,  4388,  3128,    37,
    3130,   664,   719,   666,  3134,   443,   272,   111,   763,   180,
     727,   182,  3142,   180,  3144,   182,  3146,  3147,  3148,  3149,
    3150,   763,   764,  3153,  3154,  3155,  4068,  3157,   648,   180,
    3160,   182,  4446,  4446,   301,   720,   721,   763,   723,   446,
     725,  4894,  4895,  3173,  3062,  3063,  3064,  4446,  3178,   763,
     114,  3181,    92,  3183,  3184,  3185,  1274,   327,  3188,   763,
     764,  4876,  1280,  1281,  3194,   180,   114,   182,   114,  3199,
     301,  3683,  3684,  3685,  3686,   763,   764,   337,  3062,  3063,
    3064,   180,   312,   182,  3214,  3215,  3883,  3884,  3885,  3886,
    5074,  3221,   769,   180,  3224,   182,  3214,   137,   763,   764,
    3230,   763,   142,   718,   129,   763,   764,  3237,  3214,  3239,
     763,   764,  5260,   180,  3244,   182,    49,   245,   246,   763,
     260,   381,    84,   383,   991,   643,    10,   255,   763,   764,
     301,   421,   362,   727,   301,   247,  1523,  1524,  4475,   763,
    1527,   181,   167,   168,  1011,   415,    76,   763,   276,   762,
     301,  1018,  1019,   267,  3284,     5,  3286,   763,   764,   180,
     768,   182,  3828,   768,  4475,   764,  3284,  4438,   455,  3847,
     109,   110,  6017,  3815,   199,    94,    36,  3284,  3284,     9,
      10,  5319,   763,  3313,  3981,    69,   301,  3317,   752,   753,
     129,   763,  4463,  4464,  5351,   763,  3214,   763,   764,  3317,
    5157,   471,   301,    84,  3284,  5353,  5157,  3284,  3284,  3284,
    3317,  3317,  3284,  4769,   301,   674,   476,   752,   753,   754,
     755,   756,   757,     9,    10,   763,   764,   124,   167,   168,
    3214,    91,  4902,   763,   301,   517,   518,  4651,  4651,   521,
     522,   523,   263,   763,   764,   593,  4645,   633,  3378,   762,
     520,   276,  5540,  3459,   114,   188,   763,   764,   437,    57,
     199,   763,   764,   460,  4049,   525,  3284,   200,   570,   129,
     688,  3883,  3884,  3885,  3886,   763,   764,   161,   176,   509,
     301,  5657,   763,   764,  3490,  3491,   267,   557,   176,  5193,
     764,    89,   763,   764,   412,   179,   763,   764,   763,  3317,
    3284,  4223,     9,    10,   113,   484,   763,   763,   764,  3439,
    4924,   342,    57,   573,   768,   763,   546,   547,   763,   764,
     550,   763,   764,   553,   554,  4813,   762,   260,  4229,   762,
    4231,   459,   192,   763,  3540,  3465,   269,   276,   763,   199,
    4241,  4242,   763,   368,    89,   762,  3448,   145,   762,  3479,
     763,   235,   236,   333,   334,    83,   762,  4035,   763,   104,
     762,   300,   762,  3214,   109,   110,  4799,   762,   547,  3981,
     763,   762,  3502,  4819,   762,   173,   763,  4823,   517,   518,
     763,   764,   521,   522,   523,   193,    83,   763,   764,   619,
     370,   721,   120,  4071,   180,   762,   182,    17,  3528,  3529,
     145,   762,   632,   663,   674,  4813,   763,   764,   638,   137,
    5548,   762,   591,   762,  5091,   327,  4095,  4096,   763,   764,
    4099,  4100,  3552,   120,   684,  5327,  4105,  4106,   173,   368,
     660,   762,   412,  3563,    49,  4077,   762,   667,    34,   669,
     137,  4855,   763,   764,   750,   751,   752,   753,   754,   755,
     756,   757,   762,   181,   684,   480,   368,     9,    10,   729,
     763,   764,   762,  3593,  3594,   762,  5280,   697,  4882,  4882,
     762,   701,   702,   180,   272,   182,     9,    10,    11,   762,
    5107,  3611,   762,  4882,   181,   715,  5390,  4886,   421,   109,
     110,   763,   764,  3611,   764,   721,   763,   109,   110,   729,
    3630,   763,   764,   415,  3611,  3611,   366,   762,   294,     9,
      10,    11,  3630,   446,   762,   301,   763,   764,   763,   764,
    5335,   433,  3652,  3630,  3630,   763,   764,   272,   758,   763,
     764,   162,   763,   763,  5691,   765,   664,   665,   666,   667,
     762,   480,  5690,   762,  3674,   763,   764,   275,   762,  5687,
    5688,   763,   764,  3630,  5431,   785,   263,   762,  5435,   471,
     327,    17,  4239,  4240,   794,    32,   762,  3697,   747,   748,
     749,   160,  3702,  5806,   762,   805,    32,   807,   275,  3709,
    4267,  4296,  3712,   187,  3702,   200,  5543,  5544,   763,   764,
     762,    58,  5543,  5544,   301,  3702,   763,   762,     9,    10,
     762,   368,    58,    70,   762,  3735,  3736,   762,   520,   589,
     762,   841,  3630,   843,    70,   845,   205,   847,   848,   849,
     850,   851,   852,    90,   854,   762,   606,  3611,   180,  3759,
     182,  3761,   247,  3763,    90,  3765,   763,   764,   762,   551,
     260,   762,  5056,  5056,   187,   557,  3630,   180,   763,   182,
     187,   631,   762,  4450,  4451,   762,   123,  3787,   247,  4325,
     763,   764,   762,  4275,   763,   762,   433,   123,  3519,  3520,
    3521,  3522,   762,  3524,  3525,   905,   763,   907,  3808,  3809,
     180,  4466,   182,    94,  3702,   915,   762,   917,   763,   764,
     670,   763,   764,   762,    15,   734,   763,  5835,  3828,  4466,
     763,   764,   932,  3833,   471,   320,   763,   764,   762,  3839,
    5587,   644,   762,     9,    10,  5403,   262,    34,  3702,   579,
    3571,  3572,  3852,  3574,   769,  3576,  3577,  3578,  3579,  3580,
    3581,  3582,   762,  3584,   763,   764,  3587,   763,   764,   762,
    3591,   208,  4466,  5624,    61,  4411,   762,  4791,    69,   301,
     762,   394,   762,   520,   763,   764,   762,  3887,  3888,  4585,
     763,   764,   674,  4648,   763,   764,   763,   764,   301,   180,
    5303,   182,  3902,  5303,   763,   764,   762,     9,    10,   368,
     762,   401,  4466,   398,   551,   368,   719,   763,   764,  6022,
     557,   380,   109,   110,   727,   415,   735,   417,   183,   763,
     764,   301,   762,   124,   763,   764,   421,  2228,  5712,   762,
    5948,   278,   129,     9,    10,   136,   762,   729,   762,   116,
     463,   762,   278,   763,   764,  2272,   686,   447,   762,  3959,
     127,   446,   763,   764,   290,   763,   764,   134,  4450,  4451,
     161,   762,   462,   763,   764,  4051,   167,   168,  4674,   762,
     167,   168,   764,   762,  1084,   172,   763,   764,   179,   176,
     763,   764,    94,   763,   764,   193,   750,   751,   752,   753,
     754,   755,   756,   757,   368,   495,   763,   764,   193,   494,
    1713,  1714,   199,    11,   180,   528,   182,   530,   471,  5704,
     301,   212,   535,   513,   483,  4025,   762,    11,    94,  5569,
    4030,  4686,   495,   762,   762,   762,    34,   674,   762,     9,
      10,   762,   764,   762,   235,   236,  1146,  1147,   762,  4597,
     762,   415,  1152,   762,   391,   762,   393,   224,    42,   762,
     762,  4061,  1162,    61,   762,   391,   762,   393,   762,  1169,
    4042,  1171,  4072,   762,  5477,  1175,  1176,  5477,   180,  4627,
     182,   762,   762,   747,   570,   762,   599,   762,   255,   276,
     762,   762,   729,   762,   176,   554,    80,   263,   551,    83,
     762,   762,   762,   593,   557,  1205,    94,   471,    92,   762,
     600,   109,   110,   300,   180,    99,   182,   762,   762,   103,
     610,   762,    69,  4878,    94,  5672,   762,   176,   233,   642,
     769,   129,   116,   623,  5046,   301,   120,  4176,   122,  1239,
     769,   328,   769,   127,  1244,  1245,  1246,   769,   769,   769,
     134,   769,  4689,   137,   672,   608,   769,   769,   142,   644,
    1260,   769,   769,   648,   654,  4165,   655,   657,   762,   167,
     168,  1271,   420,   137,   172,  5722,    92,   124,   176,   163,
    5387,   368,   672,  1283,   672,   688,   373,   551,   661,  5006,
     495,   414,   176,   557,    92,   764,   764,   181,   688,   301,
     661,   199,   152,  1303,   689,   282,  5387,   544,   545,   342,
     180,   764,   182,  4252,   161,   376,   200,   764,   731,   545,
     764,   674,  4222,  1323,   565,   683,   747,    80,   727,   742,
     446,   762,   179,   763,   719,   301,   286,   229,  5522,  5522,
     224,    69,   727,   234,   608,  5157,    61,   390,   770,   233,
      57,     5,   569,  5522,   509,   389,  1356,     4,   727,   412,
     713,    42,   334,    69,   768,  1365,  1366,   762,   768,  5954,
     762,   255,   198,  1373,  1374,    69,   729,  1377,   276,   373,
     193,   762,    89,   762,  5568,   762,   769,  1387,   235,   236,
      34,   275,   762,   480,    92,    92,    14,   104,   282,   295,
     764,   769,   300,  4999,   498,   176,   500,   501,  5004,  5005,
     674,   295,   769,   297,   415,  4036,   300,   147,   124,   629,
     688,   515,  4322,  4323,   763,  4325,   652,  5874,   762,   111,
     328,   301,    67,   161,  4334,   116,  4336,   464,   145,  4339,
     906,   492,   908,   909,   910,  4066,   127,   122,   914,   713,
     916,   179,  4352,   134,  4354,   161,  4356,   294,  4358,  5662,
    5663,    94,  5665,   700,   236,   729,   173,   161,   762,    34,
     368,  4371,  4372,   179,   700,   294,  1476,   147,   768,  1479,
     764,  1481,   163,   762,     6,   179,   412,   763,   763,   763,
      68,  1491,   342,   318,   763,   176,    61,   723,  1498,   764,
     764,   763,  1502,  1503,  5962,   763,   769,   235,   236,  5693,
    5693,  4411,  5006,  2730,    42,   634,   769,  5686,   612,   613,
      92,    92,    57,   763,  5693,   160,   769,   763,  1528,   235,
     236,  1531,   167,   168,   763,   297,   136,  1537,   388,   762,
     762,   235,   236,   224,   109,   110,    99,  6132,   764,   267,
     448,    49,  5006,   764,    89,   192,   764,   769,  1558,   646,
      92,  6146,  6009,   764,   129,   272,  4466,  6152,   764,   104,
     205,   662,   672,  6158,   255,   754,   124,   685,  4466,   435,
    4556,  5622,   480,    92,   764,   475,  1586,   420,   116,  4466,
    4466,   672,   764,   762,   412,   770,  4496,    95,    69,   127,
     124,   282,   167,   168,  5259,   764,   134,   172,   192,   234,
     145,   176,   247,   345,   213,   495,   114,   495,  5821,   469,
    5823,  5824,   495,   495,  2815,  2816,   342,  6085,   495,   495,
    4530,   764,   764,   747,   199,   163,   267,   658,   173,   581,
      84,  2832,  4618,   727,    26,    94,    69,   754,   735,    42,
     763,  2842,  2843,   764,   403,   465,   762,  5841,  5841,   750,
     751,   752,   753,   754,   755,   756,   757,   764,  5264,   465,
     580,   763,  5841,    29,  5843,   764,   718,   294,  4466,   281,
     762,   531,    17,   114,   373,    33,   292,   292,    36,  1689,
     161,   210,   173,  4593,   687,   764,   224,   181,  1698,   549,
     550,   764,    94,  5115,   554,   555,   556,  5521,   179,  1709,
     764,   276,   762,  5754,   115,  2906,  2907,  2908,  2909,   122,
    1720,   267,  4622,   116,   763,   419,   763,   255,   763,  4629,
     754,  5543,  5544,   368,   127,   300,  1736,   272,   161,  4639,
     412,   134,   240,    91,   763,   380,   763,    95,   646,   763,
     905,   763,    94,   753,   762,   764,   179,   763,  5799,   763,
    5477,  4683,   260,   328,   235,   236,   114,   763,   763,   234,
     163,   763,   622,  1773,  4696,  1775,   763,   763,   276,   763,
     763,   129,  4704,   176,   764,   763,   762,  5281,   763,  4711,
     764,  4713,  4714,   764,  1794,   764,    15,   762,  4419,    18,
     763,  1801,  1802,   368,   763,   769,   757,   762,   192,  1809,
    1810,   763,   235,   236,  5855,   762,   360,  4717,   576,  1819,
     670,   262,   320,   747,  4724,  4725,   262,  5281,   262,   267,
     762,   224,    98,  1833,  1834,    94,   764,   735,    57,  1839,
    1840,  1841,  1842,  1843,  1844,  1845,  1846,  1847,   483,   733,
      92,   199,    92,  1853,   762,  4727,   762,   489,   769,   764,
     764,   763,   255,   747,  5312,    94,   769,    86,  1868,  1869,
      89,  1871,   769,   424,   225,   769,   600,   764,   233,   763,
     764,    62,     6,   767,   768,   104,   105,   764,   717,   764,
      92,   176,   240,  1893,   176,   262,   279,   124,  4798,    99,
     398,   764,   763,   750,   751,   752,   753,   754,   755,   756,
     757,  4532,   643,   762,   543,   480,   247,   247,   247,   554,
     247,  6124,   247,   297,   176,    92,   145,   762,   276,   263,
     747,  4552,  4553,   747,   764,   747,   747,   368,   747,   747,
     747,  4562,   747,   747,   375,   164,    42,   747,   747,   718,
     747,  1951,   747,   172,   173,   747,   747,   747,   747,   390,
     747,  1961,  4862,   747,  4864,   747,  4942,  1967,  5462,   747,
     747,   747,  1972,   747,  4595,   125,   494,  4877,   763,   412,
    3197,   303,   763,  5477,   415,   278,  4925,   747,   763,   769,
    1990,   764,  1147,   763,  4894,  4895,   282,  1152,  1998,  1999,
    2000,  2001,  2002,  2003,  2004,  2005,   137,  2007,  5462,  5566,
     769,  4632,   764,  4913,    72,   315,   267,    49,   366,   769,
     116,   769,   267,  5477,   752,   753,   754,   755,   756,   757,
     267,   127,   267,   738,  5482,   764,   492,   374,   134,   122,
     412,   763,  4663,   262,   750,   751,   752,   753,   754,   755,
     756,   757,   271,   272,   273,   121,   750,   751,   752,   753,
     754,   755,   756,   757,   121,   769,   187,   163,   763,   769,
     763,   763,   763,   769,   753,  2075,   763,   753,   763,  5018,
     176,   646,   114,    26,   764,   763,   763,   681,   519,  1244,
     320,   762,   267,   762,   229,   570,  5072,  2097,    94,    94,
      94,   532,    94,   262,   262,   206,  5006,   477,   769,   764,
     753,   424,   173,  5525,  6155,   127,   762,  2117,  5006,   127,
     551,   184,    11,   768,  5063,   308,   762,  5066,   224,  5006,
    5006,   747,   630,  5033,   764,   747,   764,   315,   529,    91,
     176,   764,  5064,   769,   650,    26,   644,   103,   769,  5049,
     648,  2151,   763,   762,   764,   262,   188,   390,   390,   255,
     262,   214,   262,  5657,    11,   762,   385,   762,   200,   762,
     735,    99,   173,   173,   393,   444,   220,   769,  5735,   754,
     147,   763,   570,   267,   754,   176,  2186,  2187,   113,   334,
     147,   123,   123,    29,   692,   763,   763,   763,   173,   763,
     769,  1356,    38,  5657,   762,   764,   229,   764,  3425,   763,
     181,  1366,    26,   769,  2214,   762,  2216,   747,  2218,  1374,
    2220,   719,   763,   763,    60,   763,   763,   215,   762,    94,
     763,   579,  2232,  2233,    94,   127,   229,   269,   769,  2239,
     763,   206,   763,   674,   127,  5145,  2246,  2247,   763,  2249,
    2250,    87,  5006,   764,    93,   762,    92,  5145,   689,   147,
    5160,    97,   762,   294,  2264,   762,   206,  2267,  5145,   762,
     540,   747,   764,  2273,   674,   111,   674,   390,   403,  2279,
     751,   752,   753,   754,   755,   756,   757,   403,  2288,  5189,
     126,  2291,   192,   725,   762,   627,   762,   133,   733,   533,
     764,  5856,   762,   262,   763,   192,  3523,   366,   192,   267,
     192,   147,    26,   192,  3505,  3506,   128,  3508,  3509,   128,
     689,   192,   192,   689,  1479,  4946,  1481,   750,   751,   752,
     753,   754,   755,   756,   757,  6149,   172,   192,   686,   577,
     192,  4962,   192,   267,    11,   763,   424,   225,    98,   409,
    3567,   487,  3569,  3570,   763,    18,    26,  5145,  3575,   231,
     297,  5261,   489,  5263,   763,  5304,  3583,   763,   629,   763,
     181,  3588,    26,   763,    33,   764,   763,    36,   763,   215,
     138,  5281,  1537,   764,   192,   221,   222,   764,   127,   421,
     127,  5145,   763,  5281,    57,   142,   764,   431,   737,   235,
     762,   762,    93,   763,  5281,  5281,  5027,  3598,   211,   763,
     769,   764,   176,    11,   446,   222,   763,   661,   763,   173,
     764,   173,   763,    86,   725,   111,    89,   129,    93,   725,
     344,   199,    91,   590,  5846,   176,    95,   351,   176,  2439,
     470,   104,   105,   263,   226,  2445,   368,   424,     9,    10,
     570,   297,   412,   367,   122,   114,   763,   763,   137,   483,
     296,  2461,   494,   377,   378,   379,   533,   600,   123,    32,
     129,   763,   763,   387,   764,  5375,    26,   669,   697,   763,
     769,   700,   145,   282,   282,   762,   562,   763,    10,   764,
     709,  5112,    53,    54,    55,    56,   763,   762,   334,   762,
     762,   164,   762,  5403,   129,   129,    11,    11,   640,   172,
     173,   360,    11,  5413,   763,  5415,   764,   764,   122,   355,
     129,   764,   297,   129,   763,   654,   260,  5281,   372,   147,
    6087,   407,   763,   192,  1689,   533,   764,   430,   763,   763,
     199,   762,   282,  1698,    10,   106,   107,   108,  2548,  2549,
    2550,   763,  5452,   282,  1709,   267,  5456,   589,   569,  2559,
     282,   404,  5462,  2563,  2564,  2565,  2566,  2567,  2568,   762,
    2570,   344,   762,   769,  5462,  6023,    33,  5477,   351,   412,
     769,   240,   764,   763,    67,  5462,  5462,   176,   764,  5477,
    5512,   763,   139,   429,   367,    84,   157,   158,   630,   262,
    5477,  5477,  2602,  2603,   377,   378,   379,   762,   271,   272,
     273,    84,   260,   527,   387,  2615,   648,   276,   762,   180,
     297,   182,   570,   279,   763,   763,   635,   541,   425,   763,
     348,   173,   762,   588,   588,   763,   762,   150,   300,  1794,
     762,  5541,   186,   762,    26,   768,   764,    26,  5624,    79,
      26,   768,    61,  5541,  2654,    61,   768,   689,   763,   669,
     692,   193,  2662,    10,  5541,   763,   680,   228,   695,   763,
    2670,   762,   762,  2673,  2674,   176,   762,   129,  2678,  2679,
    2680,   686,   725,   129,   172,   279,  1841,   719,  5588,   321,
    1845,  5591,  1847,    61,    11,   727,    26,    26,    26,   122,
     413,   763,   570,   707,  2704,   635,    33,   366,  5462,    33,
     762,  6159,   626,   403,   403,  5615,   762,   415,    92,   169,
     574,   763,   385,  5477,   762,  5625,   226,   641,  2728,   762,
     393,   721,   568,  5633,   762,   570,   570,   762,  1893,   768,
     301,   302,   768,   764,   762,   681,   142,   320,   763,   762,
     334,   412,    92,  5541,   527,   762,   407,  5657,  2758,    26,
    2760,  2761,    26,   677,   176,   762,   314,  2767,   541,  5657,
    2770,   176,  2772,   762,  2774,    63,  5676,   691,   225,   764,
    5657,  5657,  5682,  2783,   279,   763,   193,  5541,   707,  2789,
     465,   763,   412,   763,    75,    26,   173,   635,   113,   762,
     233,  3284,   764,  3994,  3995,  3996,  3997,  3998,   923,  4000,
    4001,  4002,  4003,  4004,  1264,  4006,  4007,  4008,  4009,  4010,
    4011,  4012,  4013,  4014,  4015,  1926,  3959,  4018,  4019,  3589,
    5125,  5121,  5123,   394,  5462,  5460,  1222,  5471,  3440,  5459,
    5462,  5586,  5659,  4116,  5299,  6024,  5746,  5817,  1351,  2004,
    2005,  5751,  4038,  3441,  5024,  4226,  5479,  2857,  5758,  5934,
    5933,  3630,  4925,  2863,  3614,   818,  4252,  1396,   641,  5657,
    1784,  2204,  2708,  3966,   942,  3699,  3675,  4782,  2872,  4503,
     798,    29,  2294,  2297,  2295,  2084,  2296,  1392,  5788,  2221,
      38,  5594,  5280,    53,    54,    55,    56,  3552,  5440,  5875,
    4170,  5801,   463,  5657,   677,  5087,  4428,  5199,  4868,  4432,
    2533,  5862,    60,  4130,  4131,  4132,  5403,  5957,   691,  5203,
     579,  6085,  2922,  6042,  6087,  5735,  4444,  4882,   764,  4165,
    4020,  2931,  2749,  5833,  5977,  5458,  4720,  4171,  4993,    87,
    6012,  5798,  2097,  5676,    92,  5788,   106,   107,   108,    97,
    3716,  2958,  5801,  4144,  5856,  3490,  2145,  3798,  4149,  4385,
    4388,  4380,  6048,   111,   485,   485,  6007,   528,  6006,   530,
    5443,  5889,  4189,  4190,   535,  4192,  5758,  2169,   126,  5751,
    5432,  4170,  1236,  2983,  4717,   133,  3417,  3421,  2863,  5889,
    5611,  1370,  2992,  5893,  2994,  5851,  1981,   157,   158,   147,
    5326,  5977,  5518,  2120,  2550,  2680,  3006,  3689,  3008,  3009,
    4287,  3040,  1327,  4075,  5523,  3813,  5056,  2811,  5841,  1324,
    2045,  3475,  3022,  5932,   172,  3025,  5926,   686,  4419,  3146,
    3142,  1717,  3847,    17,   697,  1775,  1627,   700,   599,  3357,
    1595,  3932,  3351,  4903,  4400,  6046,   709,  3345,  5743,  4933,
    6047,  1601,  4061,  5582,  5314,  5955,  5313,  3231,  3837,  5193,
    5335,  5712,  5962,  2218,  6040,  5189,  3916,   215,   228,  5232,
    2792,  5312,  4051,   221,   222,  2992,  3076,   485,  3078,  1537,
    1794,   642,  3034,  4876,  4530,  4494,  3516,   235,   673,  5954,
     841,  2246,  2247,  2214,  2249,  2250,   842,  2651,  2650,   670,
    3340,   670,  1859,  2702,  6004,  1322,  6006,  6007,   509,  5255,
    4290,  5244,  2267,  1971,  6083,  5492,  6111,  5669,  2273,  6152,
    1016,  6158,  2673,  3933,  4443,   109,   110,  5748,  3214,   942,
    3315,  4466,   669,  2475,  6073,   669,  2595,  2273,  1998,  1803,
    3294,  3293,   302,   667,  4129,  3273,  3677,  3432,   296,  6049,
    4367,  2857,  1155,  1533,  5369,  4176,   707,  6057,  1272,  4485,
    6136,  4906,   485,  5784,  3927,  3345,  6142,  6106,  5846,   485,
     731,   485,  4389,  2768,  2014,  6019,  6071,    -1,    -1,    -1,
      -1,   742,    -1,    -1,    -1,  6085,   334,    -1,    -1,    -1,
      11,    -1,  3192,    -1,  6094,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3233,   394,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5869,  5870,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,
    3260,  6161,    83,    -1,    -1,  3265,    -1,    -1,    -1,    -1,
    3270,    92,    -1,  3273,  3274,  3275,    -1,    -1,    99,  5900,
      -1,   429,   103,    -1,  2439,  3285,    -1,    -1,    -1,    -1,
    2445,    -1,   113,    -1,    -1,   116,    -1,    -1,    -1,   120,
      -1,   122,    -1,   463,    -1,    -1,   127,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,   137,  3317,    -1,    -1,
      -1,   142,    -1,    -1,    -1,    -1,  4543,  4544,  4545,  4546,
      -1,    -1,    -1,  4550,  4551,    -1,    -1,    -1,  4555,    -1,
      -1,  4558,   163,    -1,  4561,  5966,    -1,  4564,  5969,    -1,
    4541,  4568,  4569,    -1,    -1,   176,  3356,    -1,    -1,    -1,
     181,    -1,    -1,  4554,    -1,    -1,    -1,    -1,   528,    -1,
     530,    -1,    -1,    -1,    -1,   535,    -1,    -1,    -1,   200,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2550,     5,    -1,     7,     8,
      -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,  2563,  2564,
    2565,  2566,   233,    -1,    -1,    -1,    -1,   401,    -1,    -1,
     568,    -1,    31,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      39,   415,     7,   417,   255,    -1,    -1,  3437,  3438,   599,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3448,    -1,
    3450,    -1,    61,    -1,   275,  3455,    -1,    -1,    -1,  3459,
     281,   282,    -1,   447,    73,    -1,    41,    -1,    -1,    -1,
      -1,    80,    -1,    -1,   295,    -1,   297,    -1,   462,   300,
      -1,    -1,   642,    -1,    -1,    -1,    -1,    -1,    63,    -1,
    3490,  3491,    -1,    -1,    -1,    -1,    -1,    -1,    73,  2654,
     109,   110,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,
      -1,   495,    -1,    -1,    -1,  2670,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    32,  2680,    34,    -1,    -1,   513,
      -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,   114,
    3540,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    61,    -1,    -1,  3556,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,   177,   717,
      -1,   731,   181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,   742,   192,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,   214,   114,    -1,    -1,   593,
      -1,    -1,  2767,    -1,    -1,    -1,   600,    -1,    -1,    -1,
      -1,   442,    -1,    -1,    -1,    -1,   610,    -1,    -1,    -1,
      -1,    -1,    -1,  3633,    -1,    -1,   211,    -1,    -1,   623,
      -1,   250,   251,   252,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   275,    -1,    -1,    -1,
     654,    -1,    -1,   657,    -1,    60,    -1,  3677,    -1,    -1,
      -1,   189,  3682,  3683,  3684,  3685,  3686,    -1,   672,  3689,
      -1,   300,    -1,    -1,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    87,    -1,   279,   280,    -1,    92,    -1,    -1,
      -1,   320,    97,    -1,    -1,    -1,    -1,    -1,    -1,   328,
      -1,   330,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     349,   126,   250,   251,   252,    -1,    -1,   356,   133,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   368,
      -1,    -1,   147,    -1,    -1,    -1,   375,   275,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   390,    -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,
      -1,   400,   300,    -1,  3794,   404,   405,    -1,    -1,    -1,
      -1,    -1,   411,    -1,    -1,    -1,   415,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   423,    -1,    -1,    -1,    -1,    -1,
     328,    -1,   330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,    -1,    -1,   442,    -1,    -1,   221,   222,    -1,   347,
      -1,   349,    -1,    -1,    -1,    -1,   421,    -1,  3848,    -1,
     235,   426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,
     368,   436,  3862,   472,    -1,  3865,    -1,   375,    -1,    -1,
    3025,    -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   390,  3883,  3884,  3885,  3886,    -1,    -1,    -1,
      -1,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3900,  3901,    -1,    -1,  5121,    -1,  5123,   415,  5125,    -1,
     519,   296,   733,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   532,    -1,   534,   747,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   763,   764,    -1,    -1,   767,   768,    -1,   334,
      -1,  3951,    -1,    -1,    -1,    -1,    -1,  3957,    -1,    -1,
      -1,    -1,    -1,   572,   472,    -1,    -1,    -1,  5185,   578,
     355,    32,    -1,    34,   482,    -1,    -1,    -1,    -1,    -1,
    5197,  3981,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3989,
      -1,    -1,    -1,  3993,    -1,    -1,   605,    -1,    -1,    -1,
      61,    -1,    -1,    -1,    -1,    -1,    -1,   616,   617,   618,
      -1,   519,    -1,    -1,    -1,    -1,    -1,  4017,    -1,   594,
    4020,    -1,    -1,    -1,   532,    -1,    -1,    29,   637,    -1,
      -1,    -1,    -1,    -1,    -1,   644,    38,    -1,    -1,    -1,
     615,    -1,  4042,    -1,   429,   620,    -1,    -1,   109,   110,
      -1,  4051,  4052,   114,    -1,    -1,    -1,    -1,    60,    -1,
      -1,    -1,    -1,    -1,   572,   674,  4066,    -1,    -1,    -1,
     578,    -1,    -1,    -1,    -1,   136,   651,    -1,    -1,    -1,
     689,   690,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      92,    -1,    -1,   702,    -1,    97,   705,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3260,    -1,   682,    -1,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3275,    -1,    -1,    -1,   126,    -1,    -1,    -1,   189,   637,
      -1,   133,    -1,    -1,    -1,    -1,   644,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   147,    32,    -1,    34,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   768,
      -1,    -1,    -1,    -1,    -1,    -1,   674,    -1,    -1,    -1,
     172,  4171,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,
      -1,   689,   690,   568,    -1,    -1,    -1,    -1,    -1,   250,
     251,   252,    -1,    -1,   702,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   215,   275,    -1,    -1,    -1,    -1,   221,
     222,  4221,    -1,   109,   110,    -1,  4226,    -1,   114,    -1,
      -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,   300,
      -1,    -1,    16,    17,    -1,    -1,    -1,    -1,    22,    23,
      -1,    -1,  4252,    -1,    -1,    -1,   764,  4257,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   328,    -1,   330,
      -1,    -1,    -1,    -1,    -1,  4275,    -1,    -1,    -1,    -1,
      -1,    -1,  3437,  3438,    58,    -1,   347,    -1,   349,    -1,
      -1,    -1,    -1,    -1,   296,    -1,    70,    -1,    -1,    -1,
    3455,    -1,    -1,   189,    -1,    -1,   308,   368,    -1,    -1,
      -1,    -1,    -1,    -1,   375,    -1,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   390,
      -1,    -1,   334,    -1,    -1,    -1,    -1,    -1,    -1,   400,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,   355,   415,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   250,   251,   252,    -1,    -1,   143,
     144,    -1,   146,    -1,    -1,    -1,  4376,    -1,    -1,    -1,
     154,   155,   156,    -1,    -1,    -1,    -1,    -1,    -1,   275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,  4406,    -1,    -1,    -1,
     412,   472,    -1,    -1,   300,    -1,    -1,    -1,    -1,  4419,
      -1,   482,    -1,    -1,    -1,    -1,    -1,   429,    -1,    -1,
      -1,    -1,  4432,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   328,  4443,   330,  4445,    -1,    -1,    -1,  4449,
    4450,  4451,    -1,    -1,    -1,    -1,    -1,    -1,   519,   233,
      -1,   347,    -1,   349,    -1,   239,  4466,  4467,    -1,    -1,
      -1,   532,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     264,   265,   266,    -1,  4494,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   390,  4505,    -1,    -1,    -1,    -1,
      -1,   572,    -1,    -1,   400,   289,   290,   578,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   415,
      -1,    -1,    -1,    -1,  3689,    -1,  5727,  5728,    -1,  5730,
    5731,  5732,  5733,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4556,    -1,  5749,    -1,
      -1,    -1,   336,    -1,   338,   339,   568,    -1,    -1,    -1,
    4570,  4571,    -1,  4573,    -1,    -1,   637,    -1,    61,    -1,
     354,    -1,    -1,   644,    -1,    -1,   472,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4595,   482,    80,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   674,    -1,    -1,    -1,   391,  4618,   393,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,   689,   690,
    4630,   114,  4632,   519,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   702,   416,    -1,    -1,    -1,   532,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   438,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4673,    -1,   449,   450,  5868,  5895,    -1,
    5871,    -1,    -1,    -1,    -1,  4685,   572,    -1,  5879,    -1,
      -1,    -1,   578,    -1,    -1,  4695,    -1,  4697,    -1,    -1,
      -1,   762,  4702,  4703,    -1,    -1,   189,   481,  4708,    -1,
      -1,    -1,    -1,    -1,    -1,  4715,   490,    -1,    -1,    -1,
    4720,    -1,    -1,    -1,    16,    17,    -1,  4727,    -1,    -1,
      22,    23,  4732,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   637,    -1,    -1,    -1,    -1,    -1,    -1,   644,    -1,
      -1,  4761,   536,   537,   538,    -1,    58,   250,   251,   252,
     544,   545,    -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   560,   561,   674,    -1,
      -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,    90,    -1,
      -1,    -1,    -1,   689,   690,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   702,   300,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,
      -1,   123,    -1,    -1,  3989,    -1,    -1,    -1,  3993,    -1,
      -1,    -1,    -1,    -1,    -1,   328,    -1,   330,    -1,    -1,
      -1,   143,   144,    -1,   146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   154,   155,   156,    -1,   349,    -1,  4868,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4876,    -1,    -1,    -1,
      -1,    -1,   174,    -1,    -1,   368,    -1,    -1,    -1,    -1,
      -1,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   390,    -1,    -1,
      -1,    -1,    29,    -1,    -1,    -1,   208,   400,    -1,    -1,
     694,    38,    -1,   697,    -1,  4925,   700,    -1,    -1,    -1,
      -1,    -1,   415,  4933,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,  4942,    60,  4944,  4945,    -1,   239,    -1,   723,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    76,
      -1,    78,    -1,    -1,    -1,    -1,    -1,    -1,   742,    -1,
      87,    -1,   264,   265,   266,    92,    -1,    -1,    -1,    -1,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   472,
      -1,    -1,    -1,  4993,   111,    -1,    -1,   289,   290,   482,
    5000,    -1,  5002,    -1,    -1,    -1,    -1,  5007,    -1,   126,
      -1,    -1,    -1,    -1,    -1,    -1,   133,  5017,    -1,    -1,
      -1,    -1,    -1,    -1,  5024,    -1,    -1,    -1,    -1,    -1,
     147,    -1,    -1,    -1,    -1,    -1,   519,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   336,    -1,   338,   339,    -1,   532,
      -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
      -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,  5068,  5069,
    5070,    -1,  5072,  5073,    -1,  5075,    -1,    -1,    -1,  5079,
    5080,    -1,    -1,  5083,    -1,    -1,    -1,    -1,    -1,   572,
      -1,    -1,    -1,  5093,  5094,   578,  5096,    -1,   215,   391,
      -1,   393,  5102,    -1,   221,   222,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5117,   235,    -1,
      -1,    -1,    -1,    -1,   416,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   438,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   637,    -1,    -1,   449,   450,    -1,
      -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     6,    -1,    -1,   294,    -1,   296,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,   481,
      -1,   674,    -1,    -1,    -1,    -1,    -1,    -1,   490,    -1,
      32,  5201,   651,    -1,    -1,    -1,   689,   690,    40,    41,
      -1,    -1,  5212,    -1,    -1,    -1,    -1,   334,    50,   702,
      -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,    -1,
      -1,  5231,    -1,    65,    66,    -1,    -1,    -1,   355,    -1,
      -1,  5241,   691,    -1,   536,   537,   538,    -1,    -1,  5249,
      -1,    -1,   544,   545,    -1,  5255,    -1,    -1,  5258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5267,   560,   561,
      29,  5271,  5272,    -1,    -1,    -1,    -1,   109,   110,    38,
      -1,    -1,   114,    71,    -1,   768,    -1,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   412,   128,    -1,    -1,    -1,
      -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   603,   429,    -1,  5314,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   112,  5325,    -1,    -1,    87,  5329,
      61,    -1,    -1,    92,    -1,  5335,    -1,    -1,    97,    -1,
      -1,    -1,  5342,    -1,    -1,    -1,    -1,    -1,   797,    -1,
      -1,    -1,   111,    -1,    -1,    -1,   188,    -1,    -1,    -1,
      -1,   149,    29,    -1,    -1,  5365,    -1,   126,   200,    -1,
      -1,    38,  5372,    -1,   133,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,   147,    -1,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   694,    -1,    -1,   697,    -1,    -1,   700,    -1,
      -1,    -1,    -1,   172,    -1,    -1,  4571,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    92,    -1,    -1,   260,    -1,
      97,   723,  5432,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5442,    -1,   111,  5445,   895,    -1,    -1,    -1,
     742,   568,    -1,    -1,    -1,    -1,   215,  5457,   189,   126,
      -1,    -1,   221,   222,    -1,    -1,   133,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,  5479,
     147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   326,    -1,   945,    -1,    -1,    -1,
      -1,   950,  5502,   335,    -1,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5514,   347,    -1,    -1,    -1,   250,
     251,   252,    -1,    -1,    -1,    -1,   358,    -1,    -1,    -1,
      -1,   980,  5532,  5533,   983,    -1,    -1,   296,    -1,    -1,
      -1,   990,    -1,    -1,   275,    -1,    -1,  4702,   215,    -1,
     382,    -1,    -1,    -1,   221,   222,    -1,    -1,  5558,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,   300,
      -1,  5571,    -1,  5573,    -1,   334,    -1,    -1,    -1,  1028,
      -1,    -1,   414,   415,    -1,    -1,   418,    -1,   420,    -1,
      -1,    -1,    -1,  5593,    -1,    -1,   355,   328,    -1,   330,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,    -1,    -1,   349,    -1,
      -1,   453,   454,    -1,  5624,    -1,    -1,    -1,    -1,   296,
    1079,  1080,  1081,  1082,    -1,    -1,  1085,   368,   470,    -1,
      -1,    -1,  1091,    -1,   375,    -1,    -1,  5647,    -1,  5649,
    5650,    -1,    -1,   412,    -1,    -1,    -1,    -1,    -1,   390,
     492,    -1,    -1,    -1,    -1,    -1,    -1,   334,    -1,   400,
     429,    -1,    -1,    -1,    29,    -1,    -1,    -1,   466,    -1,
      -1,   513,    -1,    38,   415,    -1,    -1,    -1,   355,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5704,    60,    -1,    -1,   496,   497,
      -1,   499,   500,   501,   502,   503,    -1,   505,   506,   507,
     508,   509,   510,   511,   512,    -1,   514,   515,   516,    -1,
      -1,    -1,    87,    -1,    -1,    -1,   568,    92,    -1,    -1,
      -1,   472,    97,    -1,    -1,   412,    -1,    -1,    -1,    -1,
     582,   482,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,   593,   429,    -1,   596,   597,    -1,  5767,    -1,    -1,
      -1,   126,    -1,  5773,    -1,  5775,  5776,    -1,   133,   611,
      -1,    -1,    -1,    -1,  5784,    -1,    -1,    -1,   519,    -1,
      -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   532,    -1,  1252,    -1,    -1,  1255,    -1,    -1,   568,
      -1,    -1,    -1,    -1,  5814,   647,  5816,   172,    -1,    -1,
      -1,    -1,   654,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     672,   572,   674,    -1,    -1,  5000,    -1,   578,    -1,    -1,
      -1,  5851,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,    -1,  5862,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5875,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1338,
      -1,    -1,   724,    -1,    -1,    -1,    -1,    -1,   730,    -1,
    5900,   568,    -1,    -1,  5904,  5905,   637,    -1,    -1,    -1,
      -1,  5911,    -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1378,
      -1,    -1,  1381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   296,    -1,   674,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5954,    -1,    -1,    -1,   689,   690,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   702,    -1,    -1,    -1,    -1,    -1,  5977,    -1,   334,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5997,    -1,    -1,
     355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  6017,    -1,    -1,
      -1,  6021,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6040,    -1,    -1,    -1,    -1,    -1,  6046,  6047,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   412,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6070,  6071,    -1,    -1,   429,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1575,    -1,    -1,    -1,
      -1,    -1,  6132,    -1,    -1,    -1,  6136,    -1,    -1,  1588,
    1589,    -1,  6142,    -1,    -1,  1594,  6146,    -1,    -1,  1598,
    1599,  1600,  6152,    -1,    -1,    -1,    -1,    -1,  6158,    -1,
    1609,  1610,  1611,    -1,    -1,    -1,  1615,    -1,  1617,  1618,
    1619,  1620,  1621,    -1,  1623,    -1,    -1,  1626,  1627,    -1,
      -1,    -1,    -1,    -1,    -1,  1634,    -1,  1636,    -1,    -1,
    1639,  1640,    -1,  1642,  1643,  1644,    -1,  1646,  1647,  1648,
      -1,    -1,    -1,    -1,  1653,    -1,    -1,  1656,    -1,    -1,
      -1,    -1,    -1,   568,    -1,  1664,  1665,  5372,  1667,  1668,
    1669,    -1,    -1,  1672,  1673,  1674,  1675,  1676,  1677,  1678,
      -1,  1680,  1681,  1682,  1683,  1684,  1685,    -1,  1687,  1688,
      -1,  1690,  1691,  1692,  1693,  1694,  1695,  1696,    -1,    -1,
    1699,  1700,  1701,  1702,    -1,  1704,  1705,  1706,    -1,  1708,
      -1,  1710,    -1,  1712,    -1,    -1,    -1,  1716,  1717,  1718,
      -1,    -1,  1721,  1722,  1723,  1724,  1725,    -1,  1727,    -1,
      -1,    -1,    -1,    -1,    -1,  1734,    -1,    -1,    -1,    -1,
      -1,    -1,  1741,  1742,  1743,  1744,    -1,    29,    -1,    -1,
      -1,    -1,    -1,  1752,  1753,  1754,    38,  1756,  1757,  1758,
    1759,  1760,  1761,   651,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  1770,    -1,    -1,     5,  1774,     7,    -1,    60,    -1,
    1779,    -1,    -1,    -1,    -1,    -1,  1785,   675,    -1,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,
      31,    -1,    -1,    -1,    -1,    87,    -1,    -1,    39,  5514,
      92,    -1,    -1,    -1,    -1,    97,    -1,    -1,  1817,    -1,
      60,    -1,    -1,  1822,    -1,    -1,    -1,    -1,    -1,   111,
      61,    -1,    -1,  1832,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,   126,    -1,    -1,    87,    -1,    -1,
      -1,   133,    92,    -1,    -1,    -1,    -1,    97,    -1,    -1,
      -1,    -1,    -1,    -1,  1863,   147,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,   114,    -1,    -1,   126,    -1,    -1,    -1,
     172,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1900,    -1,    -1,    -1,    -1,    -1,   147,    -1,   797,
      -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1925,    -1,    -1,    -1,
      -1,    -1,   172,   215,    -1,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     181,  1950,    -1,   235,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,   222,   214,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   895,    -1,    -1,
      -1,    -1,    -1,    -1,   296,    -1,    -1,    -1,    -1,   250,
     251,   252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   334,    -1,    -1,    -1,   296,    -1,    -1,    -1,
      -1,  2060,   950,    -1,    -1,    -1,    -1,    -1,    -1,   300,
      -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
      -1,    -1,   980,    -1,   334,    -1,    -1,   328,    -1,   330,
      -1,    -1,   990,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5816,    -1,    -1,    -1,   355,    -1,    -1,   349,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     412,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,    -1,
      -1,    -1,    -1,    -1,   375,    -1,    -1,   429,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   390,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,
      -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,
     411,    -1,    -1,    -1,   415,    -1,    -1,    -1,    -1,   429,
      -1,    -1,    -1,    -1,  1082,    -1,    -1,    -1,    -1,    -1,
    2199,  2200,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   442,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   568,    -1,   519,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2297,    -1,
    2299,   532,    -1,   534,    -1,    -1,    -1,    -1,  2307,  2308,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   568,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   572,    -1,    -1,    -1,    -1,    -1,   578,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1252,    -1,    -1,    -1,    -1,  2368,
    2369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2393,  2394,  2395,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,  2407,    -1,
      -1,    -1,    -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   674,    -1,    -1,    -1,    -1,    -1,    -1,
    1338,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   689,   690,
      -1,  2460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   702,  2471,    -1,    -1,  2474,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1378,    -1,    -1,  1381,  2493,    -1,    -1,    -1,    -1,    -1,
      -1,  2500,    -1,    -1,  2503,    -1,  2505,    -1,    -1,    -1,
      -1,    -1,  2511,    -1,  2513,  2514,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2537,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2552,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2569,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2592,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2614,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2632,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1575,    -1,    -1,
      -1,    -1,    -1,    -1,  2693,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1594,  2706,    -1,  2708,
    1598,    -1,  1600,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1609,  1610,    -1,    -1,    -1,    -1,  1615,    -1,  1617,
    1618,  1619,  1620,  1621,    -1,  1623,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1634,    -1,  1636,    -1,
      -1,  1639,  1640,    -1,  1642,  1643,    -1,    -1,  1646,  1647,
    1648,    -1,    -1,    -1,    -1,  1653,    -1,    -1,  1656,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1664,  1665,    -1,  1667,
      -1,  1669,    -1,    -1,  1672,  1673,  1674,  1675,  1676,  1677,
    1678,    -1,  1680,  1681,  1682,  1683,  1684,    -1,    -1,  1687,
    1688,    -1,  2801,  1691,  1692,  1693,    -1,    -1,    -1,    -1,
      -1,  1699,  1700,  1701,  2813,    -1,  1704,  1705,  1706,    -1,
    1708,    -1,  1710,    -1,  1712,    -1,    -1,    -1,  1716,  1717,
    1718,    -1,    -1,  1721,  1722,  1723,  1724,  1725,    -1,  1727,
      -1,    -1,    -1,    -1,    -1,    -1,  1734,    -1,    -1,    -1,
      -1,    -1,    -1,  1741,  1742,  1743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2867,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1817,
      -1,    -1,    -1,    -1,  1822,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1832,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2996,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1900,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1925,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3068,
      -1,    -1,  3071,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3080,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3088,
      -1,  3090,    -1,  3092,    -1,  3094,  3095,  3096,  3097,  3098,
    3099,    -1,  3101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3109,    -1,  3111,    -1,    -1,  3114,  3115,  3116,  3117,    -1,
      -1,  3120,  3121,    -1,    -1,  3124,    -1,  3126,    -1,  3128,
      -1,  3130,    -1,    -1,    -1,  3134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3142,    -1,  3144,    -1,  3146,  3147,  3148,
    3149,  3150,    -1,    -1,  3153,  3154,  3155,    -1,  3157,    -1,
      -1,  3160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3173,    -1,    -1,    -1,    -1,  3178,
      -1,    -1,  3181,    -1,  3183,  3184,  3185,    -1,    -1,  3188,
      -1,    -1,    -1,    -1,    -1,  3194,    -1,    -1,    -1,    -1,
    3199,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3215,    -1,    -1,    -1,
      -1,    -1,  3221,    -1,    -1,  3224,    -1,    -1,    -1,    -1,
      -1,  3230,    -1,    -1,    -1,    -1,    -1,    -1,  3237,  3238,
    3239,    -1,    -1,    -1,    -1,  3244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3256,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3286,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2199,  2200,    -1,  3313,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3329,    -1,    -1,  3332,  3333,  3334,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3378,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2297,
      -1,  2299,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2307,
    2308,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3465,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2393,  2394,  2395,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3563,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2493,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2503,    -1,  2505,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2537,
      -1,    -1,    -1,  3652,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3660,    -1,    -1,  2552,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3674,    -1,    -1,    -1,    -1,
      -1,  2569,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3697,    -1,
      -1,    -1,    -1,    -1,  2592,    -1,    -1,    -1,    -1,    -1,
    3709,    -1,    -1,  3712,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2614,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3735,  3736,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3759,    -1,  3761,    -1,  3763,    -1,  3765,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3787,    -1,
      -1,    -1,    -1,    -1,  3793,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2693,    -1,    -1,    -1,  3808,
    3809,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3828,
      -1,    -1,    -1,    -1,  3833,    -1,    -1,    -1,    -1,    -1,
    3839,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3852,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3887,  3888,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3902,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2801,    -1,    -1,    -1,  3916,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2813,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3959,    -1,    -1,    -1,    -1,    -1,    -1,  3966,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2867,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4061,    -1,    -1,    -1,    -1,    -1,    -1,  4068,
      -1,    -1,    -1,  4072,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2996,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3068,    -1,    -1,  3071,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3088,    -1,    -1,    -1,  3092,    -1,  3094,  3095,  3096,  3097,
    3098,  3099,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3109,    -1,  3111,    -1,    -1,  3114,  3115,  3116,  3117,
      -1,    -1,  3120,  3121,    -1,    -1,  3124,    -1,  3126,    -1,
    3128,    -1,  3130,    -1,    -1,    -1,  3134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3142,    -1,  3144,    -1,  3146,    -1,
    3148,  3149,  3150,    -1,    -1,  3153,  3154,  3155,    -1,  3157,
      -1,    -1,  3160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3181,    -1,  3183,  3184,  3185,    -1,    -1,
    3188,    -1,    -1,    -1,    -1,    -1,  3194,    -1,    -1,    -1,
      -1,  3199,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4322,  4323,    -1,  4325,  3215,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4334,    -1,  4336,    -1,    -1,
    4339,    -1,  3230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3239,    -1,  4352,    -1,  4354,    -1,  4356,    -1,  4358,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4371,  4372,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3286,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3313,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3378,    -1,    -1,    -1,    -1,    -1,    -1,  4496,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4530,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3465,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4622,    -1,    -1,    -1,    -1,    -1,    -1,
    4629,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4639,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3563,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4724,  4725,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3674,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4798,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3697,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3709,    -1,    -1,  3712,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3735,  3736,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4862,    -1,  4864,    -1,    -1,    -1,    -1,
      -1,  3759,    -1,  3761,    -1,  3763,    -1,  3765,  4877,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4894,  4895,    -1,    -1,  3787,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4913,    -1,    -1,    -1,    -1,    -1,
    3808,  3809,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3839,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3852,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3887,
    3888,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3902,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5033,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5046,    -1,    -1,
    5049,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3959,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5157,    -1,
      -1,  5160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4061,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4072,    -1,    -1,    -1,    -1,    -1,
    5189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5403,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5413,    -1,  5415,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4322,  4323,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4334,    -1,  4336,    -1,
      -1,  4339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4352,    -1,  4354,    -1,  4356,    -1,
    4358,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4371,  4372,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5543,  5544,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4496,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5625,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4530,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5676,    -1,    -1,
      -1,    -1,    -1,  5682,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4622,    -1,    -1,    -1,    -1,    -1,
      -1,  4629,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4639,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5788,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5833,    -1,  4724,  4725,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4798,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5955,    -1,    -1,    -1,
      -1,    -1,    -1,  5962,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4862,    -1,  4864,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4877,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4894,  4895,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4913,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6085,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5033,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5049,  6161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5413,    -1,  5415,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5682,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
    5788,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,  5833,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,
     159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,
      -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5955,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,
      -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,
      -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,  6161,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,     6,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,
      -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,
      -1,    -1,   167,    -1,   169,    -1,   171,   172,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,
     195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,
     285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    25,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   132,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,
     151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,
     161,    -1,    -1,   164,    -1,    -1,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,
      -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,
      -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,   268,    -1,   270,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,
     291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,   150,   151,    -1,   153,    -1,    -1,    -1,
      -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,
     197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,
      -1,    -1,    -1,    -1,   291,    -1,   293,   294,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    94,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,
     153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,
      -1,   164,    -1,    -1,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
     253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,
     293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,
     159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,
      -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,
      -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,
      -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    94,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,
      -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,
      -1,    -1,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,
     195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,
     285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,   113,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,
     151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,
     161,    -1,    -1,   164,    -1,    -1,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,
      -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,
      -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,
     291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,   150,   151,    -1,   153,    -1,    -1,    -1,
      -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,
     197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,
      -1,    -1,    -1,    -1,   291,    -1,   293,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,
     153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,
      -1,   164,    -1,    -1,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
     253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,
     293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,
     159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,
      -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,
      -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,
      -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,
      -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,
      -1,    -1,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,
     195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,
     285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,
     151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,
     161,    -1,    -1,   164,    -1,    -1,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,
      -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,
      -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,
     291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,   150,   151,   152,   153,    -1,    -1,    -1,
      -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,
     167,    -1,   169,    -1,   171,   172,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,
     197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,
      -1,    -1,    -1,    -1,   291,    -1,   293,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,
     153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,
      -1,   164,    -1,    -1,   167,    -1,   169,    -1,   171,   172,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
     253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,
     293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,
     159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,    -1,
     169,    -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,
      -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,
      -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,
      -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,
      -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,
      -1,    -1,   167,    -1,   169,    -1,   171,   172,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,
     195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,
     285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,
     151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,
     161,    -1,    -1,   164,    -1,    -1,   167,    -1,   169,    -1,
     171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,
      -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,
      -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,
     291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,   150,   151,    -1,   153,    -1,    -1,    -1,
      -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,
     167,    -1,   169,    -1,   171,   172,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,
     197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,
      -1,    -1,    -1,    -1,   291,    -1,   293,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,
     153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,
      -1,   164,    -1,    -1,   167,    -1,   169,    -1,   171,   172,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
     253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,
     293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,
     150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,
      -1,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
      -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,
      -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    18,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   762,    -1,    -1,    -1,   766,    -1,    -1,   769,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   172,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    24,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    24,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    32,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    32,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,     6,
       7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    46,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   211,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,     6,     7,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,     6,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,     6,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,     7,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    27,    -1,    29,    -1,    31,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,    63,
      -1,    65,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   140,    -1,   142,    -1,
      -1,    -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,   192,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,   202,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   213,
     214,   215,   216,    -1,   218,    -1,    -1,    -1,    -1,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,   237,   238,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   277,    -1,   279,    -1,   281,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   296,   297,    -1,    -1,    -1,    -1,    -1,    -1,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,    -1,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
      -1,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,    -1,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,     7,
       8,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,
      -1,    29,    -1,    31,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    60,    -1,    -1,    63,    -1,    65,    66,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   140,    -1,   142,    -1,    -1,    -1,    -1,   147,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,   192,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   201,   202,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   213,   214,   215,   216,    -1,
     218,    -1,    -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,   237,
     238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   277,
      -1,   279,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,   297,
      -1,    -1,    -1,    -1,    -1,    -1,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,    -1,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
      -1,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,     7,     8,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    27,    -1,    -1,    -1,    31,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    63,    -1,    65,    66,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   140,    -1,
     142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
     192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,
     202,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,    -1,    -1,
      -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   277,    -1,   279,    -1,   281,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,    -1,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,    -1,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    35,   739,   740,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    36,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,   114,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   240,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    36,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    11,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    17,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,    16,    17,    -1,    -1,   747,    -1,
      22,    23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   143,   144,    -1,   146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   154,   155,   156,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,   239,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,   265,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,    -1,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,    -1,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
      -1,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,    -1,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,    16,    17,    -1,    -1,    -1,    -1,    22,    23,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,   144,
      -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   154,
     155,   156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
      -1,    -1,    -1,    -1,   239,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
     265,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   289,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,    -1,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,    -1,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,    -1,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,    -1,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    16,    17,
      -1,    -1,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   143,   144,    -1,   146,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   154,   155,   156,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,
      -1,   239,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   264,   265,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   289,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,    -1,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,    -1,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,    -1,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,    -1,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    16,    17,    -1,    -1,    -1,
      -1,    22,    23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   143,   144,    -1,   146,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   154,   155,   156,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,   239,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,   265,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,    -1,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,    -1,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,    -1,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,    -1,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,    17,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    17,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    17,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      18,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    24,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    45,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,    -1,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      37,    38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    45,    46,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    45,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    46,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    47,   739,   740,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      57,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    57,    -1,    -1,    -1,
      61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,    57,    -1,    -1,    -1,    61,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    61,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      61,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    61,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    61,   739,   740,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    61,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    61,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    61,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,    -1,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,    -1,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   763,    -1,    -1,    -1,    -1,    -1,   769,   770,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,   770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,   770,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   769,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   763,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   122,    -1,    -1,    -1,    -1,    -1,
     762,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     762,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   104,   739,   740,   741,
     742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   167,
     168,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   183,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   753,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    94,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
     747,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,    -1,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,    -1,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,    -1,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,    -1,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,    -1,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,    -1,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,    -1,   632,   633,   634,
     635,   636,   637,   638,    -1,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,    -1,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
      -1,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,    -1,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,    -1,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,    -1,    -1,    -1,   336,   337,   338,   339,   340,
      -1,    -1,   343,   344,   345,   346,    -1,    -1,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,   360,
      -1,    -1,    -1,    -1,    -1,    -1,   367,    -1,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,    -1,    -1,
      -1,    -1,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,    -1,   456,   457,    -1,    -1,   460,
      -1,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,    -1,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   109,   110,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,   580,
     581,   582,   583,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,    -1,   617,    -1,   619,   620,
      -1,   622,   623,    -1,   625,   626,   627,   628,   629,   630,
      -1,   632,   633,   634,   635,   636,   637,   638,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,   649,   650,
      -1,    -1,   653,    -1,    -1,   656,   657,   658,    -1,   660,
      -1,   662,   663,   664,   665,    -1,   667,   668,   669,    -1,
     671,   672,    -1,   674,    -1,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,    -1,   697,   698,   699,   700,
     701,   702,   703,   704,    -1,   706,   707,   708,    -1,   710,
     711,   712,   713,    -1,    -1,   716,   717,    -1,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,   736,    -1,    -1,   739,    -1,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,    -1,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,    -1,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,    -1,   336,   337,   338,   339,   340,    -1,
      -1,   343,   344,   345,   346,    -1,    -1,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,   360,    -1,
      -1,    -1,    -1,    -1,    -1,   367,    -1,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,    -1,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,    -1,    -1,    -1,
      -1,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,   456,   457,    -1,    -1,   460,    -1,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,    -1,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   109,   110,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,   580,   581,
     582,   583,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,    -1,   617,    -1,   619,   620,    -1,
     622,   623,    -1,   625,   626,   627,   628,   629,   630,    -1,
     632,   633,   634,   635,   636,   637,   638,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,   649,   650,    -1,
      -1,   653,    -1,    -1,   656,   657,   658,    -1,   660,    -1,
     662,   663,   664,   665,    -1,   667,   668,   669,    -1,   671,
     672,    -1,   674,    -1,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,    -1,   697,   698,   699,   700,   701,
     702,   703,   704,    -1,   706,   707,   708,    -1,   710,   711,
     712,   713,    -1,    -1,   716,   717,    -1,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,   736,    -1,    -1,   739,    -1,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,    -1,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
      -1,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,    -1,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,   345,   346,    -1,    -1,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,   360,    -1,    -1,
      -1,    -1,    -1,    -1,   367,    -1,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,    -1,    -1,    -1,    -1,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,    -1,   456,   457,    -1,    -1,   460,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   109,   110,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,   580,   581,   582,
     583,   584,   585,    -1,    -1,    -1,    -1,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,    -1,   617,    -1,   619,   620,    -1,   622,
     623,    -1,   625,   626,   627,   628,   629,   630,    -1,   632,
     633,   634,   635,   636,   637,   638,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,   649,   650,    -1,    -1,
     653,    -1,    -1,   656,   657,   658,   200,   660,    -1,   662,
     663,   664,   665,    -1,   667,   668,   669,    -1,   671,   672,
      -1,   674,    -1,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,    -1,   697,   698,   699,   700,   701,   702,
     703,   704,    -1,   706,   707,   708,    -1,   710,   711,   712,
     713,    -1,    -1,   716,   717,    -1,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,   736,    -1,    -1,   739,    -1,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
      -1,   335,    -1,   337,    -1,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,    -1,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,    -1,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
      -1,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,    -1,    -1,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,    -1,    -1,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
      -1,    -1,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,    -1,    -1,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,    -1,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
      -1,   695,   696,    -1,   698,   699,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,    -1,    -1,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    60,    63,
      65,    66,    73,    80,    92,    98,   109,   110,   111,   119,
     130,   140,   142,   147,   177,   191,   192,   201,   202,   213,
     214,   215,   216,   218,   223,   233,   237,   238,   277,   279,
     281,   296,   297,   304,   305,   306,   307,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   348,   349,   350,   351,   352,
     353,   354,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     441,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     739,   740,   741,   742,   772,   775,   776,   777,   778,   779,
     782,   789,   791,   804,   875,   927,   928,   935,   936,   952,
     953,   988,  1009,  1040,  1105,  1167,  1217,  1319,  1366,  1369,
    1379,  1384,  1390,  1403,  1406,  1412,  1415,  1420,  1427,  1439,
    1689,  1691,  1703,  1706,  1736,  1744,  1758,  1767,  1781,  1785,
    1786,  1790,  1804,  1812,  1816,  1821,  1822,  1823,  1855,  1856,
    1875,  1877,  1885,  1899,  1900,  1903,  1905,  1906,  1907,  1908,
    1912,  1942,  1949,  1951,  1958,  1961,  1998,  2000,  2005,  2006,
    2007,  2008,  2066,  2075,  2076,  2077,    49,   200,   320,   398,
     446,   494,   644,   648,   689,   719,  1320,  2033,  2034,  2035,
    2036,   170,   443,   492,  1414,  1788,   308,   334,   335,   342,
     347,   349,   355,   370,   380,   395,   407,   412,   426,   439,
     440,   446,   452,   455,   458,   473,   483,   554,   568,   587,
     589,   618,   621,   631,   639,   651,   670,   673,   705,   715,
     733,   740,   863,  1877,  1884,  1894,  1900,  1901,  1902,  1903,
    1904,  1905,  1906,  1907,   989,   513,  1407,   182,   494,   689,
    1011,  1745,    49,   114,   188,   200,   269,   421,   446,   494,
     630,   648,   689,   692,   719,   727,  1702,  1043,   862,   954,
    1704,  1817,   114,   390,   741,  1828,   260,   688,  1945,  1041,
    1414,  1218,  1106,  1813,   233,   243,   924,   929,   931,  1884,
     639,   719,  1945,  1045,  1707,   929,   930,   862,   671,  1909,
    1768,   929,  1950,  1737,  1884,  1042,   209,  1858,  1999,   167,
     168,  1008,  1496,   262,   770,  1878,   114,  1945,  1884,   736,
    2002,  1690,   467,  1884,  1414,   385,   937,   769,  1872,  1874,
    1884,   790,   583,   661,  1884,  1414,  1805,  2002,  1884,     6,
     654,   701,     6,   654,  1759,   583,   661,   333,   334,   370,
     412,   589,   606,   631,   670,  2069,     0,    80,   773,   589,
      49,    95,   240,   276,   630,   719,   819,  1298,  1299,  1300,
    1702,  2033,  2034,  2035,  2036,   432,   443,   576,  1787,  1788,
    1872,  1884,   229,   286,   762,  1440,  2021,   234,   769,  1334,
    1884,   863,   747,   747,   863,    99,   111,  1701,   135,  1878,
    1884,  1889,  1048,  1049,  1052,  1075,  1884,  1701,  1358,  1359,
     247,  1483,  2037,  2038,  2033,   747,  1945,  1439,  1703,  1706,
    1736,  1744,  1784,   876,   769,   294,   990,   991,   994,   998,
     802,   803,  1878,   727,  1404,  1945,   216,    99,  1050,  1075,
      37,    38,    47,   428,   429,   733,   899,   900,   902,   903,
     910,   911,   912,   914,   920,   947,   948,  1877,  1885,  1897,
    1900,  1901,  1902,  1903,  1905,  1907,   113,   148,   460,   601,
    1747,  1756,  1757,  1701,   111,  1700,    24,  1701,  1701,  1701,
    1701,  1701,    99,  1701,  1701,  1075,  1701,  1701,   644,  1945,
    1025,  1885,     6,     7,    41,    46,    63,    73,    98,   114,
     119,   142,   211,   229,   237,   269,   279,   280,   421,   426,
     436,   594,   598,   615,   620,   651,   682,  1889,  1962,  1966,
    1967,  1969,  1971,  1972,   983,   984,   148,   399,   459,  1709,
     456,   660,  1818,   122,  1824,  1943,    38,    87,    97,   126,
     133,   172,   221,   222,   235,   355,   429,   568,   896,   950,
     951,   953,   958,   959,   960,   961,   965,   966,   967,   968,
     969,   978,   979,   980,   981,   988,  1003,  1004,  1009,  1027,
    1033,  1040,  1887,  1888,  1945,    17,    18,    19,    20,    21,
      29,    30,    32,    39,    40,    43,    44,    45,    46,    48,
      49,    51,    52,    57,    61,    64,    84,    85,    86,    88,
      89,   100,   101,   102,   104,   105,   109,   110,   111,   119,
     121,   134,   145,   150,   151,   153,   159,   161,   164,   167,
     168,   169,   171,   172,   173,   175,   190,   194,   195,   196,
     197,   204,   215,   216,   224,   227,   247,   253,   254,   256,
     257,   258,   262,   270,   271,   272,   273,   283,   284,   285,
     291,   293,   316,   323,   331,   347,   356,   358,   359,   361,
     362,   363,   364,   365,   380,   392,   393,   394,   396,   397,
     443,   449,   451,   463,   485,   486,   490,   528,   530,   535,
     536,   537,   538,   547,   548,   564,   578,   584,   585,   592,
     599,   629,   635,   636,   642,   649,   678,   697,   698,   699,
     700,   704,   705,   719,   721,   731,   732,   734,   742,   752,
     753,   758,   762,   765,   766,   769,   770,  1490,  1491,  1492,
    1493,  1497,  1509,  1511,  1512,  1513,  1514,  1515,  1516,  1517,
    1518,  1519,  1520,  1521,  1529,  1533,  1534,  1535,  1536,  1537,
    1539,  1542,  1847,  1850,  1852,  1853,  1854,  1869,  1876,  1877,
    1884,  1894,    26,  1107,    17,   513,  1773,  1814,   344,   351,
     367,   377,   378,   379,   387,   527,   541,   641,   677,   691,
     932,   934,   721,   925,   931,  1884,   862,  1416,   896,  1030,
     148,   399,  1710,  1743,   931,     6,   315,   598,  1959,  1960,
    1967,  1969,  1910,    32,    61,   347,   446,   453,   492,   542,
     578,   630,   647,   701,   733,   770,  1262,  1877,  1882,  1884,
    1898,  1900,  1901,  1902,  1904,  1905,  1906,  1907,  1917,  1929,
    1933,     6,    40,    41,    50,   114,   128,   188,   200,   260,
     326,   335,   347,   358,   382,   415,   418,   420,   445,   446,
     453,   454,   470,   492,   513,   568,   582,   593,   596,   597,
     611,   647,   654,   674,   730,  1262,  1297,  1769,  1773,  1774,
    1776,  1785,  1877,  1930,   931,  1945,  1743,  1028,  1490,  1857,
    2002,  1010,   325,  1889,  1421,  1380,   769,    10,  2003,  1490,
    1562,   780,   781,   783,  1791,   402,  1884,   568,   206,   355,
     769,  1889,  1884,  1878,    94,  1385,   513,   600,   654,  1806,
    1807,   267,  2003,   655,   802,   206,   297,  1370,  1371,  1372,
     655,   802,   260,  1762,  1884,  1878,    18,   104,   105,   262,
    1848,  1849,  1879,  2068,  2068,  2068,   443,  2067,  2068,  2068,
     768,  1884,   111,  1166,  1166,  1166,   648,   846,   114,   114,
     114,   260,   644,   188,   200,   269,   421,  2037,   319,   446,
     446,  2033,  1783,  1782,  1465,  1466,  2022,   762,  1442,  1443,
    1444,    83,   120,   275,  2009,  2011,  2015,  2016,  1913,  1884,
    1322,   718,  1323,   526,   693,   711,    45,  1889,  1890,  1891,
    1966,  1324,  1054,  1076,  1884,    84,  1329,  1328,     5,    31,
      73,   168,   207,   604,  1077,   862,   260,   113,   567,  1360,
    1361,  1362,   643,   421,   727,  2037,  1889,  1391,   762,   877,
    1884,   999,    76,  1001,  1490,   998,   267,  1405,  1695,  1696,
    1872,  1053,  1076,     5,  1885,  1012,   901,   912,   914,    16,
      17,    22,    23,    32,    58,    70,    90,   123,   143,   144,
     146,   154,   155,   156,   174,   208,   233,   239,   264,   265,
     266,   289,   290,   336,   338,   339,   354,   391,   393,   416,
     438,   449,   450,   481,   490,   536,   537,   538,   544,   545,
     560,   561,   584,   585,   603,   635,   694,   697,   700,   723,
     733,   742,   905,   947,  1224,  1226,  1228,  1230,  1231,  1232,
    1233,  1234,  1235,  1236,  1237,  1238,  1239,  1260,  1877,  1900,
    1903,  1905,  1907,   768,   768,   455,   764,    35,   308,    94,
    1748,    94,  1748,  1749,  1753,  1754,  1884,  1756,  1884,    84,
    1884,  1701,   863,   863,   863,   863,  1884,  1076,   862,  1889,
    1086,  1774,   862,  1693,  1701,  1701,  1044,   124,  1026,   593,
    1970,   633,   633,   689,   692,   719,   727,   762,  1489,   460,
     570,  1974,   688,  1976,  1973,    50,   727,  1975,   176,   352,
     654,   267,   176,   764,   412,  1490,   113,  1357,   375,   600,
    1819,   342,   148,   374,  1830,  1872,  1946,  1947,   294,   373,
     446,  1877,  1886,  1895,  1903,  1905,  1906,  1907,    94,   547,
    1884,  1886,  1886,  1886,  1886,  1884,   294,  1886,  1884,   412,
     950,   768,   776,   955,  1885,   962,   982,  1884,    60,   334,
      92,   147,   215,   296,   951,  1888,  1413,   121,   752,   753,
    1514,   762,   762,   762,   294,  1490,  1565,  1566,   762,   762,
     762,   762,   762,  1489,  1489,  1489,   762,  1488,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,  1490,   762,   109,   110,   359,   762,  1563,  1564,
    1869,  1876,  1894,   762,   762,   762,   762,  1490,  1488,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     193,   762,   762,   762,   762,  1488,   762,   262,  1849,  1489,
    1488,  1488,   762,   762,   762,   762,   762,   762,   762,   762,
     173,  1876,   762,   762,   762,   762,   762,   762,   762,   262,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   721,   762,   762,
     762,   762,   762,   721,   762,   762,   762,   762,   762,   762,
     762,   262,   762,   762,   762,   262,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   121,  1514,   121,  1514,  1514,
    1219,  1490,  2027,  2028,  1884,  1876,  1543,     9,    10,   180,
     182,   301,  1494,  1495,    81,    96,   125,   131,   165,   747,
     748,   749,  1498,    15,    69,   124,   136,   161,   179,   212,
     235,   236,   662,   750,   751,   752,   753,   754,   755,   756,
     757,  1496,  1514,    34,   162,   187,   187,   734,  1879,   769,
     762,   193,  1108,   495,   764,   747,  1879,  1417,  1890,  1892,
    1418,  1419,  1872,   717,   122,  1697,  1711,  1712,  1872,  1970,
     570,   176,    94,   176,    61,  1884,  1916,  1932,   233,   630,
     769,    17,    61,   234,   747,  1263,  1264,  1720,  1889,    92,
    1720,  1939,  1720,  1889,  1919,   770,  1889,    17,    61,  1266,
    1267,  1889,  1720,   769,  1920,  1918,   655,   762,    49,   188,
     200,   260,   269,   421,   446,   644,   719,   727,   136,   295,
    1780,    24,   672,   357,   672,   672,   420,  1780,     6,  1178,
    1889,   137,  1657,  1658,  1659,    94,   124,  1775,  1777,   357,
     672,    92,   672,   688,   661,     6,   337,   381,   383,   476,
     525,   573,   663,   684,  1763,  1764,  1765,   802,   462,   672,
     803,  1657,  1780,  1777,   495,   414,   360,   595,   688,   703,
      92,  1481,   672,   724,  1357,   147,  1859,  1860,  1864,  1884,
    1013,  1018,   764,  1422,  1423,  1424,  1425,  1872,  1695,  1884,
     345,   554,   213,   554,  2004,   764,   784,  1490,   282,   785,
      17,   401,   415,   417,   447,   462,   495,   513,   593,   600,
     610,   623,   654,   657,   672,  1792,  1797,  1798,  1877,  1945,
      35,   770,   938,   939,   940,   941,  1876,    11,   747,  1624,
    1625,  1952,  1884,   661,   780,   727,  1382,  1945,  1809,   342,
    1808,   764,   639,  1884,  2004,  1373,  1374,  1373,   566,   738,
     376,   764,  1373,  1373,  1696,   764,   565,  2071,   683,  2072,
     747,   127,   625,  2070,    80,   774,  1496,  1884,   862,   862,
    1166,  1166,  1166,  1166,  1166,  1166,    24,  1166,   814,   813,
     815,   727,   446,   817,   816,  2037,  1784,  1789,  1848,  1884,
      94,   122,   181,  1454,  1463,  1464,  1467,  1468,  1469,  1653,
    1659,  1685,  2017,     6,    68,   245,   246,   255,   276,   459,
     664,   665,   666,   667,  1471,  1476,  1477,  2032,   762,  1717,
    1726,  1442,   763,  2021,   229,     6,    68,  2019,  2017,     6,
      17,    61,   176,  1490,  1941,   234,    61,  1163,  1164,  1175,
    1176,  1271,   390,   865,  1489,   770,   865,     5,  1055,  1872,
     569,   389,  1072,  1072,  1072,     4,  1890,  1891,  1892,  1982,
    1986,  1872,  1362,   398,   474,   863,  1872,   727,  1392,  1393,
    1696,   878,   879,  1490,  1490,   897,   898,   412,   992,   792,
    1695,    92,   346,   432,   434,   524,   601,   764,  1408,  1409,
    1410,  1055,  1072,   913,   334,   903,   904,   768,   768,   762,
    1244,  1246,  1244,  1245,   373,  1244,  1253,  1254,   762,  1241,
    1242,  1244,   198,  1241,  1253,    17,   323,   341,   714,  1227,
    1254,  1262,  1272,  1274,    32,   289,  1227,  1234,  1236,  1253,
    1227,  1241,   762,  1253,  1227,  1244,  1246,  1227,  1245,   762,
    1241,  1253,    32,   290,   290,   292,  1241,  1244,   762,   909,
    1245,  1245,  1245,  1244,  1245,   193,   769,    34,  1269,  1241,
     292,  1246,  1246,  1244,  1244,  1245,   762,  1242,  1249,    61,
     234,   949,    92,  1884,    92,  1872,    14,  1746,  1698,  1699,
    1873,  1884,   295,  1627,   764,  1750,   769,  1755,   176,   863,
     769,  1086,  1965,  1967,   557,   729,  1087,  1088,   415,  1892,
    1981,  1695,  1694,  1692,   147,   629,  1024,   688,   763,   762,
    1987,  1987,  1987,  1987,  1892,  1982,   188,   200,   260,   446,
    1968,   421,   426,   436,   594,   615,   620,   651,   682,  1972,
     111,   263,  1711,   464,   719,  1490,  1820,  1428,   492,  1829,
    1625,   558,   729,   764,  1944,   963,   964,   294,  1884,    94,
     122,   236,   963,   294,   762,   977,   147,   768,   769,   956,
    1490,   764,  1006,  1005,  1036,  1034,  1039,  1035,  1695,   762,
       6,  1553,  1626,  1553,  1553,  1490,  1566,    76,   294,   412,
    1490,  1562,  1490,    68,  1553,  1626,   763,    57,    89,   104,
     145,   173,   272,   763,  1667,  1671,  1672,   763,  1490,  1490,
    1869,   763,  2027,    53,    54,    55,    56,   106,   107,   108,
     157,   158,   228,   302,   394,   463,   528,   530,   535,   599,
     642,   731,   742,  1621,  1622,  1490,    68,  1545,  1490,  1490,
    1490,  1490,  1490,  1621,  1490,  1876,  1564,   318,   764,   769,
      68,  1553,  1490,    68,  1553,  1490,  1490,  1490,   763,  1490,
    1490,  1493,   763,  1490,  1490,  1490,   763,   634,  1553,  1553,
    1490,    68,  1553,    25,   132,   268,  1490,  1510,  1553,  1553,
    1490,  1490,    68,  1553,  1490,  1562,  1490,   769,  1490,  1490,
    1490,  1506,  1507,  1490,  1490,  1490,  1490,  1490,  1490,  1490,
    1490,  1490,  1562,   391,   393,   697,   700,  1623,  1490,  1490,
    1562,  1872,  1562,  1490,  1490,  1490,  1562,  1562,  1562,    92,
    1872,  1490,  1490,  1490,  1562,    92,  1490,  1490,  1490,   763,
    1490,  1872,  1490,  1490,  1622,  1622,  1490,  1510,  1490,   763,
     359,   769,  1870,  1884,  1490,  1490,  1490,  1490,  1490,  1490,
     763,   764,  1855,  1490,   769,   770,  1544,  1889,  1490,  1490,
    1490,  1492,    86,   172,   271,   716,  1496,     6,   322,  1492,
    1499,  1493,  1493,   762,  1493,  1493,  1493,  1493,  1493,  1493,
     136,  1493,  1493,   121,  1493,   121,  1493,  1493,  1493,  1493,
    1493,    15,   124,   136,   212,  1268,  1889,  1514,   762,  1541,
    1638,  1884,   762,    99,  1876,  1522,   444,   478,   553,   634,
    1508,   138,   203,   491,   687,  1109,  1113,    14,   267,  1815,
     934,   393,   697,   700,   933,  1542,  1852,  1869,   764,   267,
     764,  1944,  1031,  1712,  1708,   192,  1581,  1582,   764,    92,
    1892,  1891,  1983,   188,   200,   446,  1968,   769,   769,  1720,
     764,  1911,  1967,  1884,  1269,  1490,  1892,   262,   564,   578,
    1940,  1941,   206,   477,  1934,  1935,  1936,  1937,   453,   492,
     647,  1931,  1720,  1941,  1884,   701,  1921,  1932,   764,  1923,
     672,   754,  1166,    24,   863,   863,  1872,   863,   863,   863,
    1872,  1892,  1872,  1481,  1481,   357,   672,  1780,   863,  1780,
    1775,   124,  1778,   495,   539,   672,  1772,  1772,   145,   173,
     225,   272,   359,  1660,  1661,  1850,  1876,  1780,  1884,   863,
    1780,  1891,  1775,  1780,  1878,   475,   685,   435,    92,  1766,
     764,   420,   672,  1872,  1777,  1775,  1775,  1490,  1780,  1780,
    1780,   762,   766,  1568,  1569,  1570,  1571,  1572,  1583,  1584,
    1585,  1586,  1029,   764,   762,  1862,   895,   412,   770,   124,
     764,   192,  1433,  1435,  1436,   432,   601,  1381,   234,   345,
     213,  1490,   785,   786,   495,   495,   495,   495,   342,   495,
     802,   495,   764,  1481,  1793,   933,   943,  1889,   764,   747,
     446,  1877,  1881,  1893,  1900,  1901,  1902,  1903,  1904,  1905,
    1906,  1907,   437,   547,  1884,  1953,  1954,  1878,  1383,  1695,
     267,  1811,   802,  1807,  1884,  1368,   614,   668,  1375,  1376,
    1367,   658,  1372,  1944,  1848,   581,  2073,  1889,    84,   810,
    1965,  1982,  1889,  1884,  1884,  1884,  1872,  1872,  1166,   863,
    1166,  2059,  2063,  1483,  2047,   850,  1483,  1166,   818,   842,
    1166,  2053,  2056,  2062,  1166,  2062,   727,    74,  1470,  1569,
     185,   408,  1680,  1681,  1686,    26,    92,   142,  1478,   200,
    1675,  1685,  2017,  1478,  1627,  1657,  1467,  1468,   754,  1479,
    1480,  1483,  1477,  1727,   764,   763,  2011,  2015,  1460,  1463,
    1468,  1465,  2012,  1914,  1164,    34,  1262,   403,   160,   205,
     247,   368,   380,   483,   554,   867,   874,  1889,   607,   712,
    1073,  1074,   471,  1069,  1070,  1071,  1078,  1086,  1088,  1330,
     762,  1878,   327,   520,  1063,  1064,  1065,  1078,  1079,  1080,
    1086,  1088,  1056,  1057,  1063,   465,   217,   764,  1990,  1944,
    1327,  1326,  1872,   764,   580,  1394,   763,   764,  1000,   896,
      29,   294,   993,   995,    71,   112,   149,   466,   496,   497,
     499,   500,   501,   502,   503,   505,   506,   507,   508,   509,
     510,   511,   512,   514,   515,   516,   612,   613,   793,   794,
     801,    92,  1411,   718,  1696,  1409,   368,   551,   608,   713,
    1066,  1067,  1068,  1078,  1082,  1083,  1084,  1085,  1086,  1088,
     281,  1051,   762,   916,  1018,    57,   145,   173,   272,  1253,
    1252,  1720,  1253,   173,   278,   303,   652,  1243,  1243,  1272,
    1273,  1274,  1263,    17,  1275,   373,  1255,  1253,  1227,  1243,
    1318,  1848,  1253,  1318,  1243,   292,  1243,  1253,   906,   907,
     908,  1885,   949,  1227,  1227,  1243,   226,   707,  1884,    61,
    1268,  1270,   210,  1240,  1273,  1275,  1227,  1253,  1243,   173,
    1243,  1490,  1490,   915,   104,   753,   923,   924,  1664,  1666,
    1581,   687,   764,  1751,   769,  1755,  1628,  1652,  1653,  1754,
      94,   754,  1884,  1872,  1884,  1087,   764,  1720,  1721,   764,
      28,   219,  1363,  1695,  1695,   896,   762,   971,   974,  1884,
    1988,  1989,   267,   297,  1964,    24,   754,  1872,  1884,  1980,
    1980,  1980,  1980,   985,  1705,  1892,  1429,  1430,  1431,  1432,
    1872,   115,   148,   206,   738,  1948,  1666,  1947,  1490,   963,
     122,  1884,   963,   971,   972,   976,  1884,   877,  1884,   899,
    1018,  1025,  1027,  1030,  1028,  1944,  1490,   763,  1554,   763,
     763,   263,   412,  1490,  1490,    11,   282,   763,   282,   764,
    1530,   763,   754,   763,   764,   764,   763,   763,    94,   763,
    1532,   763,   764,   763,   764,   764,   764,   764,   753,   764,
     763,   762,  1869,  1876,  1553,   763,   763,  1553,   763,   764,
     763,   764,   763,   763,   124,   764,   764,   764,   763,   763,
      94,   764,  1553,   763,    94,  1490,    94,  1490,    94,  1490,
      94,   763,   763,   763,   764,   763,  1553,   763,   763,   763,
     763,  1876,   764,   763,   764,   763,   764,   764,   764,   764,
     764,   763,   763,   764,   764,   764,   763,   764,   763,   763,
     764,   763,   763,   763,   763,   763,   763,   763,   763,  1872,
     763,   763,   763,   764,   763,  1872,   763,   763,   764,   763,
     764,   764,   763,   764,   764,   764,   763,   763,   764,  1876,
    1884,   763,   769,   763,   764,    11,   489,   764,  1286,   764,
     763,  1621,  1621,  1562,   229,   762,  2020,  2021,  2023,  2024,
    2025,  2026,   767,  1876,  1931,   234,    86,   172,   271,   716,
     762,    10,  1490,  2027,   419,  1631,  1493,  1490,  1490,  1493,
     762,  1493,  1493,  1639,   192,  1641,   762,   762,   769,  1483,
    1526,  1527,  1528,   360,   762,  1118,  1119,  1111,  1118,  1112,
     576,  1121,   129,   457,  1490,  1878,   747,  1892,  1892,  1419,
     267,  1490,   233,   286,   721,   762,  1096,  1713,  1716,  1855,
     762,    98,  1967,    94,   764,    24,  1980,  1980,  1980,  1980,
    1884,  1884,  1941,  1932,    92,    92,  1720,  1720,   762,   762,
     566,   738,   489,   764,   764,   769,   769,   769,    61,   446,
     733,  1877,  1878,  1883,  1896,  1900,  1901,  1902,  1903,  1904,
    1906,  1907,  1490,  1720,  1934,  1922,  1924,  1925,   763,  1884,
     863,  1878,  1490,   863,  1780,  1780,  1878,    94,  1779,   424,
    1876,   225,   563,   764,   769,   862,  1780,   600,  1657,  1765,
    1778,  1775,  1872,  1780,  1780,  1603,  1884,    42,   116,   127,
     134,   163,   224,   255,  1579,  1580,   233,   764,  1872,   896,
    1860,  1863,  1884,  1861,   950,  1019,  1889,    61,  1426,  1884,
    1424,  1872,  1104,  1435,   114,   129,  1295,  1437,  1915,    61,
     113,   787,   788,  1490,  1732,    62,  1800,   802,  1798,  1695,
    1799,   941,   944,   945,   940,   559,   560,   636,   942,    96,
     131,   437,   484,   547,   591,   747,   748,   749,  1955,  1957,
    1627,  1695,   432,   601,   720,  1386,  1387,  1388,  1666,     6,
    1810,   764,   717,  1377,  1760,   764,    92,  2074,  1162,  1163,
     297,  1963,  1990,   847,   282,   707,  1308,   176,   176,   805,
     806,   863,   871,   872,   863,   863,   864,  1166,  1166,  1872,
    1166,  2053,   863,  1884,   864,  1166,   262,  1880,  1880,   770,
    1682,  1683,  1684,  1884,  1889,  1654,   279,   124,  1884,  1675,
    1685,  1455,    99,  1632,  1652,   764,  1490,  1867,  1876,  1483,
    1729,  1731,   762,  1724,  1460,   229,   762,  1441,  2021,  1941,
    1721,  1721,   543,   247,   247,   643,  1878,   247,   247,   247,
    1878,  1878,  1721,   764,  1071,   152,   342,   388,   469,   531,
     549,   550,   554,   555,   556,   622,   670,   844,   845,    49,
     461,   571,   578,   586,   659,   719,   848,   849,  1721,  1721,
     764,  1065,  1058,  1059,  1078,  1079,  1080,    26,   297,   726,
    1984,   248,   350,   479,   552,   679,   739,  1978,  1979,  1986,
     297,  1993,  1321,   176,   858,  1331,   762,  2039,  1325,  1393,
      92,  1490,   263,   996,   995,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   764,
     718,  1721,  1721,  1721,  1721,   764,  1068,   494,   433,  1060,
    1061,  1062,  1078,  1079,  1080,  1081,  1084,  1085,  1086,  1088,
     881,   882,   883,  1884,   125,   412,   763,   763,   763,   763,
    1884,   764,   303,   278,  1252,   763,   764,   763,  1260,   763,
     764,   949,   949,   769,   747,  1275,   183,   242,   244,   921,
     922,   923,   926,  1496,  1884,    57,    89,   145,   173,   272,
     697,   701,  1472,  1473,  1516,  1699,  1884,   282,  1884,  1490,
     137,  1663,  1569,   769,  1755,  1944,  1967,  1177,  1889,  1892,
    1944,   412,   917,   918,   975,    72,   763,   764,  1982,   315,
    1980,   769,   769,   267,   267,   267,   267,   897,  1713,   764,
    1433,  1435,  1880,   738,   492,   374,   122,   973,   763,   764,
     957,  1007,   412,  1037,  1002,  1032,  1886,  1032,  1032,   764,
    1490,  1490,   263,    17,    32,    58,    70,    90,   123,   278,
     290,   391,   393,   545,   652,   700,   723,  1555,  1559,  1560,
    1263,  1263,  1555,  1562,   763,   121,   121,  1490,  1562,  1490,
    1490,  1490,  1490,  1490,  1490,  1490,  1493,   763,   763,  1490,
    1490,  1490,  1490,  1490,  1490,  1490,  1490,   763,  1490,    94,
    1490,    94,  1490,    94,  1490,   121,  1490,   763,  1507,  1490,
    1506,  1562,  1490,  1490,  1490,  1490,  1490,  1567,  1490,  1490,
    1490,  1490,  1562,   145,   752,  1664,  1668,   121,  1490,  1490,
    1490,  1490,  1490,   769,   769,  1884,  1490,    17,    32,  1281,
    1282,  1283,  1284,  1285,  1667,  1666,   763,  1490,   753,   753,
    1592,  1593,  1594,   762,  1451,  1452,  1453,  1478,  2017,  1591,
    2009,  2018,  2029,  1883,  1490,  2027,  1492,   763,   764,   763,
    1514,  1621,  1621,    10,  1490,  2027,  1631,  1640,  1884,    26,
     763,  1538,  1561,  1562,  1876,  1490,   763,   764,   762,  1127,
    1493,  1119,   121,   137,  1153,  1667,   681,  1122,   320,  1114,
    1110,   933,   267,  1872,   412,  1714,  1717,  1717,   763,  1155,
    1715,  1855,  1865,  1866,  1870,  1884,   229,  1620,  1884,   570,
    1981,  1891,  1980,    94,    94,    94,    94,  1720,  1720,   775,
    1892,  1941,   262,   262,   206,   619,   645,  1938,  1936,  1935,
     769,   769,  1720,  1941,  1923,   764,  1927,  1929,  1933,   418,
     730,  1664,  1669,  1770,  1661,  1662,   424,  1661,  1661,  1876,
     173,  1779,  1627,  1775,   229,   286,  1587,  1595,  1596,  1597,
    1598,  1603,  1604,  2028,  1568,   127,   127,   184,  1606,   134,
     224,  1579,  1606,  1568,  1739,  1740,  1870,  1570,  1581,   412,
     763,   764,    11,   768,   308,  1020,  1434,   762,  1941,   764,
     747,    92,   297,  1794,  1795,   747,   764,  1956,  1657,    94,
    1389,  1387,  1376,   498,   801,  1378,    73,   628,  1761,  1666,
     529,   315,  1993,    91,   340,   457,   638,  1314,  1314,   176,
    1872,  1872,   114,   136,   189,   250,   251,   252,   275,   300,
     328,   330,   349,   368,   375,   390,   400,   415,   472,   482,
     519,   532,   572,   578,   637,   644,   674,   689,   690,   702,
     762,  1090,  1094,  1168,  1170,  1171,  1174,  1175,  1176,  1877,
     843,   844,   871,    11,   125,  2065,   368,   868,   869,   870,
     874,  2060,  2048,   863,   811,  1884,  2057,   627,  1872,  1687,
    1889,   764,   769,  1490,  1655,  1868,  1944,   650,  1676,  2010,
    2011,    26,   103,  1629,  1657,  1480,  1484,  1484,   769,  1732,
     763,   764,  1725,  1478,  1465,   762,  1446,  1447,  2011,  2015,
    1270,  1264,   390,   390,   398,   474,   104,   145,   173,   272,
    1089,  1670,  1671,  1877,  1071,  1721,  1721,    26,  1721,  1723,
    1721,   152,   531,   297,  1721,  1722,  1722,   845,  1878,  1878,
    1878,  1878,  1666,  1878,  1878,   763,   764,  1089,  1089,  1065,
     764,  1059,   262,   578,  1889,   262,   262,   262,    10,  1977,
     517,   518,   521,   522,   523,  1991,  1992,     5,     7,     8,
      31,    33,    39,    73,   142,   177,   181,   192,   214,   320,
     356,   404,   405,   411,   423,   442,   468,   534,   605,   616,
     617,   618,   705,  1102,  1169,  1171,  1335,  1339,  1341,  1344,
    1350,  1351,  1352,  1354,  1355,  1649,   372,   640,   214,  1332,
    1884,  2040,    11,  2039,     6,   360,  1395,   897,  1490,   762,
     762,  1666,   762,  1666,  1666,  1878,  1878,  1669,  1878,  1666,
    1878,  1878,  1878,  1878,  1878,  1878,  1878,  1666,  1878,   386,
     554,   656,  1853,  1878,  1666,   794,  1878,  1667,  1089,  1089,
    1068,    99,  1721,   764,  1062,   763,   764,    17,   289,   603,
     635,   723,   947,  1225,  1226,  1229,  1230,  1231,  1232,  1234,
    1235,  1236,  1237,  1261,   918,   173,  1273,  1848,  1273,   907,
    1884,   173,   764,   950,   444,   262,  1493,   769,  1569,  1755,
     225,  1661,   220,  1752,  1627,  1363,   147,   919,   763,  1490,
     974,  1989,   297,  1995,   570,   267,   754,   754,  1982,  1982,
    1982,  1982,   986,   176,  1733,  1431,  1872,  1435,   113,  1438,
    1825,  1490,   972,   877,   334,  1002,   147,  1490,  1490,  1245,
    1245,  1241,  1249,   123,  1244,  1245,  1245,   123,  1245,  1244,
     763,   763,   763,   763,  1531,  1490,  1490,   763,   181,  1547,
     763,   763,   764,   764,   763,   764,   763,   124,  1523,  1524,
     763,   763,   763,   763,   764,   763,    92,   763,   763,   764,
    1490,  1490,  1490,  1490,   763,   763,    11,  1500,   763,    11,
     763,   763,   764,   763,   764,   763,   764,   763,   764,   763,
     763,   763,   763,   145,   173,   173,   763,   764,  1490,   763,
     763,   764,   764,   763,  1876,  1884,   769,   763,   762,  1276,
    1276,    12,    65,   629,   752,  1278,  1279,  1280,   764,   764,
     763,  1490,  1490,  1468,  2030,  2031,  2032,  1451,   763,  2021,
     229,  1478,  2019,  1589,  2024,  2025,   769,   763,  1562,  1492,
     763,   764,   763,  1641,  1633,  1868,   181,  1540,   763,  1484,
    1528,  1115,  1116,  1117,  1884,   763,  1490,  1669,    26,   762,
    1129,   747,   762,  1119,  1892,   215,  1718,  1719,  1870,   762,
    1716,   763,   763,   764,   229,   769,  1156,  1157,   763,   764,
      94,    94,  1983,  1983,  1983,  1983,  1941,  1941,   763,   763,
     369,   710,   206,  1884,  1884,  1941,  1926,  1928,    57,    89,
     145,   173,   272,  1657,  1662,  1771,  1780,  1605,  1599,   763,
    2015,  2018,  1478,  2017,  1571,  1856,   767,   127,  1606,  1606,
    1583,   127,   176,   282,   764,  1738,  1720,    93,  1474,   147,
    1884,   762,   294,  1021,  1022,   762,   199,  1617,  1618,  1619,
    1884,   788,   762,  1796,   206,   344,   351,   367,   377,   378,
     379,   387,   527,   541,   626,   641,   677,   691,   946,   945,
     762,   540,   747,   764,   674,   674,  1891,   390,  1872,   808,
     809,   403,  1872,  1721,  1721,  1721,  1721,  1721,   725,  1721,
    1721,  1721,  1721,  1721,   403,  1721,  1721,  1721,  1721,  1721,
    1721,  1721,  1721,  1721,  1721,   406,   525,  1884,  1721,  1721,
      36,   136,   579,   769,  1155,  1182,  1183,  1184,  1185,  1186,
    1194,  1195,  1199,  1200,  1201,  1295,  1299,  1300,  1871,  1884,
    1100,  1101,  1102,   764,  1170,  1720,  1168,  2065,  1483,  1878,
     868,   762,   890,   892,   894,   863,   851,  2039,   762,   888,
     892,   893,    58,   123,   208,   676,  1181,   812,  1262,  1265,
    1683,  1884,   764,    12,    65,  1656,   533,   762,  1633,  1630,
     733,  1635,    11,  1486,  1878,  1884,   754,  1876,  1484,  1483,
    1728,  1730,  1732,  1456,  1464,  1467,  1468,  1446,   763,   229,
    1445,  2021,  1668,  1668,  1668,  1668,  1668,  1668,   849,  1059,
     262,    11,   282,  1985,  1978,  1666,  1666,  1666,  1853,   752,
    1664,  1665,  1991,    36,   192,   366,   579,   686,  1186,  1194,
    1195,  1356,  1356,   192,  1356,   192,   267,    36,    91,   192,
     579,   686,  1198,  1295,  1356,  1721,   192,    26,  1104,    11,
     267,   747,  1365,  1721,   192,   128,   689,   128,   192,   689,
    1356,   192,   577,   192,   192,   192,  1169,   764,  1101,  1339,
     762,  1185,  1496,  2001,   324,   422,   852,   267,   404,   411,
     854,   763,   764,  2041,  2042,    11,     6,   762,  1396,   997,
     797,   798,  1666,   799,   800,  1666,   795,   796,  1666,  1884,
    1089,  1062,   883,  1244,  1248,  1244,  1247,  1247,   909,  1247,
     193,   769,  1269,  1248,  1248,  1247,  1247,   763,   922,  1884,
    1627,   424,   225,  1479,  1439,    98,  1982,  1990,  1990,  1990,
    1990,    76,    78,   987,   409,  1438,   487,   113,   216,  1831,
    1018,   896,  1556,  1557,  1558,   763,  1621,  1621,    26,   231,
    1546,  1490,  1490,  1562,   163,   339,   763,   297,  1525,  1490,
    1490,  1490,  1621,    58,    70,    90,   123,   208,   278,   391,
     393,   544,   545,   700,  1234,  1235,  1501,  1502,  1503,  1504,
    1555,  1490,  1490,  1490,  1490,    86,   271,  1666,  1674,  1621,
    1490,  1490,  1884,  1667,   763,  1286,  1281,  1279,  1281,  1282,
    1666,  1479,  2032,   763,  2015,  1593,  1590,  1884,   763,  1562,
     181,  1642,   764,  1656,    26,   763,  1486,   763,   764,  1621,
    1113,   192,  1130,  1131,  1667,  1115,   764,  1720,  1098,  1099,
    1716,  1865,  1156,   754,  1884,  1159,  1467,  1468,  2017,  1471,
    1104,  1884,  1983,  1983,  1720,  1720,  1927,  1932,  1657,  1600,
    1601,  1717,  1474,  1588,  1591,  1478,  2026,  1568,  1583,   127,
     127,  1568,  1583,  1573,  1574,  1740,  1627,  1732,     6,    11,
      15,    94,  1475,  1625,  1481,  1023,  1022,     6,  1340,  1348,
    1349,  1884,   763,   764,  1669,  1801,  1802,   431,   142,  1730,
    1878,   801,   737,   807,   762,   762,  1721,    61,  1666,  1673,
      61,  1666,    61,  1666,    61,  1666,  1172,  1669,  1666,  1666,
    1878,  1878,  1721,  1666,  1889,   437,   484,   554,  1180,  1666,
    1669,  1669,    61,  1666,  1878,    61,   371,   373,   410,   438,
     573,   609,  1179,  1673,  1666,  1673,  1317,  1871,  1872,    93,
    1884,   763,   763,   764,    33,    91,   199,   276,  1197,  1294,
     211,  1288,  1166,  1295,  1296,  1296,  1202,   769,  1095,  1831,
    1170,    61,  1670,  1878,  1884,  1483,   820,   891,   866,    14,
     317,  1046,   176,    11,   889,   222,  2054,   661,  2039,  1264,
    1688,  1868,  1944,  1483,  1677,  1678,  1679,   298,   299,  1634,
    1490,  1541,  1636,  1637,  1878,  1884,   769,  1732,   763,   764,
    1478,  2017,  1478,   763,  2011,  2015,  1465,  1461,  1464,  1468,
    1878,   173,   173,   111,  1166,   725,   111,  1165,  1700,  1414,
    1700,  1340,  1262,  1700,   129,  1701,    93,   725,   199,  1700,
    1700,    61,  1884,  1414,  1650,  1651,  1870,  1103,  1872,    61,
    1884,  1414,  1349,  1700,  1414,  1414,  1414,  1340,     5,    73,
    1352,  1182,   317,   437,  1364,   590,  1490,  1490,   176,   858,
     863,   176,   368,   859,  1884,  1855,  2041,  1397,   470,   263,
     763,   764,   763,   764,   763,   764,  1273,   226,  1884,  1273,
    1275,  1273,  1275,   424,   570,  1990,   297,  1994,  1994,  1994,
    1994,   897,   983,  1734,   122,   412,   412,  1273,  1273,  1273,
     763,   763,  1548,  1868,  1848,   137,  1549,  1550,  1551,   763,
     764,   763,   483,   533,   600,   763,   763,   763,   763,  1241,
     123,  1245,    32,  1245,  1505,   763,   763,   763,   763,   764,
     763,   763,   763,  1277,   763,   764,  1468,  1591,   763,    26,
     203,   225,  1643,  1644,  1868,  1868,  1117,   669,  1154,   129,
     457,  1132,   763,   764,   763,  1719,  1732,  2011,  2015,  1158,
    1159,  1468,   769,  1160,  1478,  2017,  1160,  1479,  1941,  1941,
    1471,  1625,  1589,  2029,   176,  1576,  1583,  1583,   176,  1578,
    1490,   762,  1652,   562,  1473,  1473,  1615,  1616,  2027,   921,
     763,   764,  1618,   763,   764,    10,  1803,   763,  1889,   762,
    1315,  1316,  1884,  1315,  1878,   762,  1878,   763,   762,  1092,
    1093,  1091,  1184,   762,   129,   129,  1296,  1166,  1872,  1317,
    1884,  1166,  1166,   646,   947,  1203,  1223,  1224,  1884,    11,
    1161,   821,   200,   446,   839,   840,   841,   882,   884,   885,
     886,   867,   873,  2001,  2061,    63,   119,   279,  1047,   640,
    2041,   880,   881,  2055,   866,  1878,    11,   360,  1832,  1656,
    1490,   763,   764,    11,   764,   754,  1484,  1732,  1457,  1461,
    1496,  1414,  1496,  1871,  1340,  1871,  1337,  1264,  1871,  1700,
    1348,   129,  1871,  1871,  1340,   764,  1656,  1107,  1667,   297,
    1201,  1340,  1345,  1340,   763,  1884,  1621,   654,  1878,   407,
    1333,   229,   762,  2021,  2043,  1400,  1884,     6,   762,  1398,
     897,   798,   800,   796,   193,   769,  1994,    98,  1991,  1996,
    1997,   129,   260,  1002,   147,   764,  1656,   763,  1552,  1661,
    1490,   533,   430,  1273,  1669,   763,  1666,  1652,  1655,   763,
      15,   385,   393,   697,   700,   709,  1645,  1646,  1852,  1656,
    1656,  1666,  1114,   762,  1120,  1133,  1884,  1131,  1160,   754,
    1097,  1479,   763,  1575,   282,  1577,   282,  1620,  1663,  1473,
      10,   267,  1613,  1614,  1482,   263,  1349,  1802,   404,   569,
    1315,   763,   764,  1656,   762,   763,  1799,  1884,  2011,  2015,
    1168,  1490,  1166,  1317,  1884,   762,  1289,   282,  1307,   707,
    1317,  1317,  1205,   769,  1196,  1197,  1204,   769,  1096,   200,
     446,   825,   826,   827,   833,   838,   841,   911,   831,   970,
     829,   970,   412,   841,   117,   124,   186,   887,   763,   764,
      67,  2065,   176,   852,   763,  1261,  2058,  2041,    79,    82,
     178,   261,  1833,  1834,   139,  1835,  1484,  1679,  1638,  1637,
    2010,  1478,    84,  1342,    84,    73,   233,  1201,  1408,  1269,
    1871,  1363,  1336,  1651,   260,  1364,  1346,  1348,  1338,   853,
     860,   861,  1465,   762,  1449,  1450,  2009,  2013,  2015,   297,
    2044,   763,   764,  1399,   226,   707,  1884,   570,  1997,   279,
    1872,  1038,  1868,   563,   764,   763,   763,   763,  1657,   709,
    1646,  1647,  1852,   635,   588,   425,  1648,   588,   762,  1127,
    1123,    61,   287,   288,   385,   460,  1134,  2010,  1602,  1474,
    1490,   762,  1490,   762,   763,  1473,  1473,   113,   281,   442,
    1608,  1609,  1612,   763,   897,   348,   762,   763,  1944,  1316,
     173,  1944,   763,   764,  1100,   763,  1317,  1307,   707,  1290,
    1884,   150,  1291,  1314,  1187,  1314,  1189,  1190,   199,   276,
     300,   368,   480,   735,  1206,  1207,  1216,  1257,  1258,  1259,
    1287,  1496,  1877,  1224,    34,    61,   172,   176,   328,   448,
     646,  1210,  1212,  1250,  1251,  1258,  1884,  1173,  1174,   831,
     829,   822,   827,   838,   833,   768,   768,   828,   768,   828,
    1485,   186,   635,   947,  1261,   886,  1014,  1015,  1483,   857,
     858,  2065,    26,    26,    79,    26,  1834,   249,   261,  1836,
    1837,  1871,   576,   762,  1343,    61,    61,  1364,  1414,  1872,
    1347,  1386,   669,   855,   950,  1458,  1467,  1468,  2017,  1449,
     763,   229,  1448,  2021,  2019,    33,   343,   492,  1884,   199,
    1401,  1402,  1884,   193,  1735,  1581,  1032,  1656,  1661,  1661,
    1478,   441,    10,   441,    99,   385,   554,   696,  1125,  1126,
    1884,   763,   680,  1128,  1136,   695,   114,   368,   375,   390,
     519,   532,   551,   689,  1150,  1151,  1152,  1774,  1468,  1625,
    1620,  1620,  1295,  1295,  1609,   848,  1944,   297,   368,   482,
    1302,  1306,  1310,  1313,  1877,  1656,   763,  1303,  1305,  1310,
    1312,  1884,  1095,  1193,  1191,  1314,   763,   764,   445,   575,
     653,   176,  1292,   762,  1188,   762,   762,   129,  1878,   686,
    1258,   725,   129,   172,  1720,  1268,   752,   753,   762,  1220,
    1221,  1222,  1511,  1851,  1877,   279,   321,    61,    11,   373,
    1251,  1256,   836,  2065,   834,  2065,   334,   412,   824,  1884,
    1884,   864,   909,   193,   769,   899,  2049,   854,  1014,  1848,
    1848,    26,  1848,    26,    26,  1837,  1197,  1667,  1130,  1222,
    1104,   122,  1490,   413,   856,  2017,  1478,  1478,   763,  2013,
    2015,  1465,  1462,  1467,  1468,  2017,  2014,   570,    33,    33,
     763,   764,   707,  1741,  1742,  1870,  1826,  1647,   635,   183,
     310,   763,   764,  1667,   762,  1138,  1140,  1135,   403,  1721,
    1721,   403,  1721,  1721,  1721,  1721,   762,  1145,  1152,   415,
     763,   763,    92,  1607,  1607,   763,   282,   707,  1301,  1304,
    1309,  1310,  1311,   574,  1878,  1721,  1353,  1354,  1355,  1313,
    1720,  1353,  1312,   763,   762,   762,  1192,  1884,    63,   279,
    1315,   762,  1315,  1315,    61,  1670,  1878,  1884,  1853,  1853,
    1219,   169,   721,   635,  1220,  1252,  1250,   768,   970,   768,
     970,  1018,   823,   832,   830,   226,  1884,  1016,  1872,   859,
    1848,  1848,  1848,   763,   762,  1490,  1478,  1459,  1462,  2017,
    2043,   570,   570,  1402,   764,  1720,  1265,  1124,  1126,   762,
    1139,  1140,  1141,   152,  1137,  1140,  1721,  1878,  1878,  1721,
    1670,  1670,  1667,  1889,   681,  1146,  1147,  1721,    99,   127,
     181,  1611,  1610,  1314,  1314,  1353,  1311,  1877,  1666,  1355,
    1354,    61,  1670,  1878,  1884,  1315,  1315,   762,    28,   219,
     233,   554,  1293,  1293,   763,  1315,   763,   763,   763,   762,
    1487,   412,   670,  1211,   837,   835,   412,  1485,   894,   893,
     193,   769,   334,    92,   407,  1130,  2013,  1478,  1742,  1732,
    1827,  1128,   763,   764,   152,  1143,  1144,  1493,  1878,  1878,
    1148,   763,   764,  1177,    26,    26,   762,   762,   763,   763,
    1315,    61,   172,   314,   176,   176,  1301,   763,  1302,  1303,
     763,  1667,  1208,  1209,  1257,  1208,   580,   675,   728,  1213,
    1014,  1014,   864,   866,  2054,   226,   707,  1884,  1018,  1483,
     860,   763,   225,  1838,  1140,   764,  1142,  1149,  1889,  1147,
    1617,  1619,  1288,  1301,   763,   279,    63,  1301,   763,  1257,
    1214,  1215,  1216,  1884,  2064,  2064,   866,   193,  1017,  2050,
     465,  1832,  1144,   763,  1150,   763,   763,  1301,  1293,  1293,
    1216,   707,   412,    75,    26,  1835,   635,  1848,   113,  1839,
    2051,   173,   762,  1841,   440,   587,  2045,  2046,   139,   225,
    1840,   763,   770,  1842,  1843,  1870,   233,  1844,  1889,  2052,
    1889,   763,   764,  1845,  1846,  1870,   950,  1843,   764,  1720,
    1846,  1483,  1732,  1484
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   771,   772,   773,   772,   772,   774,   774,   775,   775,
     775,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   777,
     778,   778,   779,   781,   780,   783,   782,   784,   782,   785,
     786,   785,   787,   787,   788,   790,   789,   792,   791,   793,
     793,   794,   794,   794,   794,   794,   794,   794,   794,   794,
     794,   794,   794,   794,   794,   794,   794,   794,   794,   794,
     794,   795,   795,   795,   796,   797,   797,   797,   798,   799,
     799,   799,   800,   801,   801,   801,   801,   801,   801,   801,
     802,   802,   803,   805,   804,   806,   804,   807,   804,   808,
     804,   809,   804,   810,   804,   811,   804,   812,   804,   813,
     804,   814,   804,   815,   804,   816,   804,   817,   804,   818,
     804,   804,   804,   804,   804,   819,   804,   820,   804,   821,
     822,   823,   804,   824,   824,   825,   825,   825,   826,   826,
     827,   827,   828,   830,   829,   832,   831,   833,   833,   833,
     835,   834,   837,   836,   838,   839,   839,   840,   840,   841,
     841,   842,   842,   843,   843,   844,   844,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   847,   846,   848,   848,   849,   849,   849,   849,   849,
     849,   849,   851,   850,   853,   852,   852,   854,   854,   854,
     854,   855,   855,   856,   856,   857,   857,   858,   859,   859,
     861,   860,   862,   863,   863,   864,   864,   865,   865,   866,
     866,   867,   867,   867,   867,   867,   867,   867,   868,   868,
     869,   869,   870,   870,   872,   871,   873,   873,   874,   874,
     876,   875,   877,   877,   878,   878,   879,   879,   880,   880,
     881,   881,   882,   883,   883,   883,   883,   883,   883,   884,
     884,   885,   885,   886,   886,   886,   886,   886,   886,   887,
     887,   887,   887,   887,   889,   888,   891,   890,   892,   893,
     893,   894,   894,   895,   895,   896,   896,   898,   897,   899,
     899,   901,   900,   900,   902,   902,   903,   903,   904,   904,
     905,   905,   905,   906,   907,   908,   908,   909,   910,   911,
     911,   911,   911,   912,   912,   912,   913,   912,   915,   914,
     916,   916,   917,   919,   918,   920,   920,   920,   920,   921,
     921,   922,   923,   923,   924,   925,   925,   926,   926,   926,
     926,   926,   926,   927,   927,   928,   929,   929,   930,   930,
     931,   931,   932,   932,   933,   933,   933,   934,   934,   934,
     934,   934,   934,   934,   934,   934,   934,   934,   934,   935,
     936,   937,   937,   938,   938,   939,   939,   940,   941,   941,
     942,   942,   942,   943,   944,   944,   945,   946,   946,   946,
     946,   946,   946,   946,   946,   946,   946,   946,   946,   946,
     947,   947,   948,   948,   949,   949,   949,   950,   950,   950,
     950,   950,   950,   951,   951,   951,   951,   951,   951,   951,
     951,   951,   951,   951,   951,   951,   952,   952,   952,   952,
     954,   953,   955,   956,   955,   957,   955,   959,   958,   960,
     960,   962,   961,   961,   964,   963,   965,   965,   965,   965,
     966,   966,   966,   966,   967,   968,   969,   970,   971,   973,
     972,   975,   974,   976,   976,   977,   977,   978,   979,   979,
     979,   980,   981,   982,   982,   984,   985,   986,   983,   987,
     987,   987,   989,   988,   991,   992,   990,   990,   993,   993,
     994,   994,   996,   997,   995,   999,  1000,   998,  1001,  1001,
    1002,  1002,  1003,  1005,  1004,  1006,  1007,  1004,  1008,  1008,
    1010,  1009,  1011,  1012,  1009,  1013,  1015,  1016,  1017,  1014,
    1019,  1018,  1020,  1020,  1021,  1021,  1023,  1022,  1024,  1024,
    1025,  1026,  1026,  1026,  1027,  1029,  1028,  1031,  1030,  1032,
    1034,  1033,  1035,  1033,  1036,  1037,  1038,  1033,  1039,  1033,
    1041,  1040,  1042,  1040,  1043,  1044,  1040,  1045,  1040,  1046,
    1046,  1047,  1047,  1047,  1048,  1049,  1050,  1051,  1051,  1052,
    1052,  1053,  1054,  1055,  1055,  1057,  1056,  1058,  1058,  1058,
    1059,  1059,  1059,  1060,  1061,  1061,  1061,  1062,  1062,  1062,
    1062,  1062,  1062,  1062,  1062,  1063,  1064,  1064,  1064,  1065,
    1065,  1065,  1065,  1065,  1066,  1067,  1067,  1067,  1068,  1068,
    1068,  1068,  1068,  1068,  1068,  1069,  1070,  1070,  1070,  1071,
    1071,  1071,  1072,  1073,  1074,  1075,  1076,  1077,  1077,  1077,
    1078,  1079,  1080,  1081,  1082,  1083,  1084,  1085,  1086,  1087,
    1087,  1088,  1088,  1089,  1089,  1091,  1090,  1090,  1090,  1092,
    1090,  1093,  1090,  1090,  1094,  1094,  1095,  1095,  1097,  1096,
    1096,  1096,  1098,  1096,  1099,  1096,  1100,  1101,  1101,  1103,
    1102,  1104,  1106,  1105,  1108,  1107,  1109,  1110,  1109,  1109,
    1109,  1111,  1109,  1109,  1112,  1109,  1113,  1113,  1114,  1114,
    1115,  1115,  1116,  1116,  1117,  1118,  1119,  1120,  1121,  1121,
    1122,  1123,  1122,  1124,  1122,  1125,  1125,  1126,  1127,  1128,
    1128,  1129,  1129,  1130,  1130,  1132,  1131,  1133,  1134,  1135,
    1134,  1136,  1134,  1134,  1134,  1134,  1137,  1137,  1138,  1138,
    1139,  1139,  1141,  1142,  1140,  1143,  1143,  1144,  1144,  1145,
    1145,  1146,  1146,  1148,  1147,  1149,  1150,  1150,  1151,  1151,
    1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1153,
    1153,  1153,  1154,  1154,  1155,  1157,  1156,  1158,  1158,  1159,
    1159,  1160,  1161,  1161,  1162,  1162,  1163,  1163,  1164,  1164,
    1165,  1165,  1166,  1166,  1167,  1167,  1168,  1168,  1169,  1169,
    1170,  1170,  1170,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1172,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1173,  1173,  1174,  1175,  1176,  1177,  1178,  1179,
    1179,  1179,  1179,  1179,  1179,  1179,  1180,  1180,  1180,  1181,
    1181,  1181,  1181,  1182,  1183,  1183,  1184,  1184,  1184,  1184,
    1185,  1185,  1187,  1186,  1188,  1186,  1189,  1186,  1190,  1186,
    1191,  1186,  1192,  1186,  1193,  1186,  1194,  1195,  1196,  1196,
    1197,  1198,  1198,  1199,  1199,  1200,  1202,  1201,  1204,  1203,
    1205,  1203,  1206,  1206,  1207,  1207,  1208,  1208,  1209,  1209,
    1210,  1210,  1210,  1210,  1211,  1210,  1210,  1210,  1212,  1212,
    1213,  1213,  1213,  1213,  1214,  1214,  1215,  1215,  1216,  1216,
    1216,  1216,  1218,  1217,  1219,  1219,  1219,  1220,  1221,  1221,
    1222,  1222,  1223,  1223,  1224,  1224,  1224,  1224,  1224,  1225,
    1225,  1225,  1225,  1225,  1226,  1226,  1226,  1226,  1226,  1226,
    1226,  1226,  1226,  1226,  1227,  1227,  1227,  1227,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1229,  1229,  1229,  1229,
    1229,  1229,  1229,  1229,  1230,  1230,  1230,  1230,  1230,  1231,
    1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,
    1231,  1231,  1231,  1231,  1231,  1232,  1232,  1233,  1233,  1233,
    1233,  1233,  1233,  1233,  1233,  1234,  1235,  1235,  1236,  1236,
    1237,  1237,  1237,  1237,  1237,  1238,  1238,  1238,  1238,  1238,
    1239,  1239,  1239,  1240,  1240,  1241,  1241,  1241,  1242,  1243,
    1243,  1243,  1243,  1243,  1243,  1244,  1244,  1244,  1244,  1245,
    1245,  1246,  1246,  1247,  1247,  1248,  1248,  1249,  1249,  1250,
    1250,  1251,  1251,  1251,  1251,  1251,  1251,  1251,  1252,  1252,
    1253,  1253,  1254,  1255,  1256,  1257,  1257,  1257,  1258,  1258,
    1258,  1258,  1258,  1258,  1259,  1259,  1260,  1261,  1262,  1262,
    1263,  1263,  1264,  1264,  1265,  1265,  1266,  1266,  1267,  1267,
    1268,  1269,  1269,  1270,  1270,  1271,  1271,  1272,  1272,  1272,
    1273,  1273,  1274,  1274,  1274,  1274,  1275,  1275,  1277,  1276,
    1278,  1278,  1279,  1280,  1280,  1280,  1280,  1281,  1282,  1283,
    1283,  1284,  1285,  1285,  1286,  1286,  1287,  1287,  1288,  1289,
    1289,  1290,  1290,  1291,  1291,  1291,  1291,  1292,  1292,  1292,
    1292,  1292,  1293,  1293,  1293,  1293,  1293,  1294,  1294,  1295,
    1295,  1296,  1296,  1297,  1297,  1297,  1298,  1298,  1299,  1300,
    1301,  1301,  1302,  1302,  1303,  1303,  1304,  1304,  1305,  1305,
    1306,  1306,  1307,  1307,  1308,  1308,  1308,  1309,  1309,  1310,
    1310,  1310,  1310,  1310,  1310,  1311,  1311,  1312,  1313,  1313,
    1314,  1314,  1314,  1315,  1315,  1316,  1316,  1317,  1317,  1318,
    1318,  1320,  1321,  1319,  1322,  1319,  1319,  1323,  1319,  1324,
    1319,  1325,  1319,  1326,  1319,  1327,  1319,  1319,  1319,  1319,
    1319,  1328,  1319,  1319,  1329,  1330,  1319,  1331,  1331,  1331,
    1331,  1332,  1332,  1333,  1333,  1334,  1334,  1335,  1335,  1335,
    1335,  1335,  1335,  1335,  1335,  1335,  1335,  1336,  1335,  1335,
    1337,  1335,  1338,  1335,  1335,  1335,  1335,  1335,  1339,  1340,
    1340,  1342,  1341,  1343,  1343,  1343,  1345,  1344,  1346,  1347,
    1346,  1348,  1348,  1349,  1350,  1350,  1351,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1353,  1353,  1353,  1353,  1353,  1354,
    1354,  1355,  1355,  1356,  1356,  1357,  1357,  1359,  1358,  1360,
    1360,  1361,  1361,  1362,  1362,  1363,  1363,  1363,  1364,  1364,
    1364,  1365,  1365,  1365,  1365,  1367,  1366,  1368,  1366,  1366,
    1366,  1369,  1370,  1370,  1371,  1371,  1372,  1372,  1372,  1374,
    1373,  1375,  1375,  1376,  1376,  1376,  1377,  1377,  1377,  1378,
    1378,  1380,  1379,  1381,  1381,  1381,  1382,  1383,  1382,  1385,
    1384,  1386,  1386,  1387,  1387,  1388,  1388,  1388,  1389,  1389,
    1391,  1390,  1392,  1392,  1393,  1394,  1394,  1395,  1395,  1396,
    1397,  1396,  1398,  1399,  1398,  1400,  1400,  1400,  1401,  1401,
    1401,  1402,  1402,  1403,  1403,  1404,  1405,  1404,  1407,  1406,
    1408,  1408,  1409,  1409,  1410,  1410,  1410,  1410,  1410,  1410,
    1411,  1411,  1413,  1412,  1414,  1414,  1414,  1416,  1415,  1415,
    1417,  1417,  1418,  1418,  1419,  1421,  1420,  1422,  1422,  1423,
    1423,  1424,  1425,  1426,  1426,  1428,  1427,  1429,  1429,  1430,
    1430,  1431,  1432,  1434,  1433,  1436,  1435,  1437,  1437,  1438,
    1438,  1439,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1443,  1442,  1444,  1442,
    1442,  1445,  1445,  1447,  1446,  1446,  1448,  1448,  1450,  1449,
    1449,  1452,  1451,  1453,  1451,  1451,  1455,  1454,  1454,  1457,
    1456,  1456,  1458,  1459,  1458,  1458,  1458,  1460,  1460,  1461,
    1461,  1462,  1462,  1462,  1463,  1463,  1463,  1464,  1464,  1464,
    1464,  1464,  1466,  1465,  1467,  1468,  1468,  1469,  1470,  1470,
    1471,  1471,  1472,  1472,  1472,  1473,  1473,  1473,  1474,  1474,
    1475,  1475,  1475,  1475,  1476,  1476,  1477,  1477,  1477,  1478,
    1478,  1478,  1479,  1479,  1479,  1480,  1480,  1481,  1482,  1483,
    1484,  1485,  1486,  1486,  1486,  1486,  1486,  1487,  1487,  1487,
    1488,  1488,  1488,  1489,  1489,  1490,  1490,  1490,  1490,  1490,
    1490,  1490,  1490,  1490,  1490,  1490,  1491,  1491,  1491,  1491,
    1491,  1491,  1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,
    1492,  1492,  1492,  1492,  1492,  1492,  1493,  1493,  1493,  1493,
    1493,  1493,  1493,  1493,  1493,  1493,  1493,  1493,  1493,  1493,
    1493,  1493,  1493,  1493,  1493,  1494,  1494,  1495,  1495,  1496,
    1496,  1497,  1497,  1498,  1498,  1498,  1498,  1498,  1498,  1499,
    1499,  1500,  1500,  1501,  1501,  1501,  1502,  1502,  1502,  1502,
    1502,  1502,  1503,  1503,  1503,  1505,  1504,  1504,  1506,  1507,
    1507,  1508,  1508,  1508,  1508,  1509,  1510,  1510,  1510,  1510,
    1510,  1510,  1510,  1510,  1511,  1511,  1511,  1511,  1511,  1511,
    1511,  1511,  1511,  1511,  1511,  1511,  1511,  1511,  1511,  1511,
    1511,  1511,  1511,  1511,  1511,  1511,  1511,  1511,  1511,  1511,
    1511,  1511,  1511,  1512,  1512,  1512,  1513,  1513,  1514,  1514,
    1514,  1514,  1514,  1514,  1515,  1515,  1516,  1516,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1518,
    1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,
    1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,
    1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,
    1518,  1519,  1519,  1519,  1519,  1519,  1519,  1519,  1519,  1519,
    1519,  1519,  1519,  1519,  1519,  1519,  1519,  1519,  1519,  1519,
    1519,  1519,  1519,  1519,  1519,  1519,  1519,  1519,  1520,  1520,
    1520,  1520,  1520,  1520,  1520,  1520,  1520,  1522,  1521,  1521,
    1523,  1523,  1524,  1524,  1525,  1525,  1526,  1526,  1527,  1527,
    1528,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1530,  1531,
    1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,
    1529,  1532,  1529,  1533,  1533,  1534,  1534,  1535,  1535,  1535,
    1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,
    1536,  1538,  1537,  1537,  1539,  1539,  1540,  1541,  1543,  1542,
    1544,  1544,  1544,  1544,  1545,  1545,  1546,  1546,  1547,  1547,
    1548,  1548,  1549,  1549,  1550,  1551,  1552,  1552,  1552,  1554,
    1553,  1555,  1556,  1555,  1557,  1555,  1558,  1555,  1555,  1555,
    1555,  1559,  1559,  1559,  1559,  1559,  1559,  1559,  1559,  1560,
    1560,  1560,  1561,  1561,  1562,  1562,  1563,  1563,  1564,  1564,
    1565,  1565,  1566,  1566,  1567,  1567,  1568,  1568,  1569,  1570,
    1570,  1571,  1571,  1572,  1573,  1572,  1574,  1572,  1572,  1575,
    1572,  1576,  1572,  1572,  1577,  1572,  1578,  1572,  1572,  1579,
    1579,  1579,  1580,  1580,  1581,  1581,  1582,  1583,  1583,  1585,
    1584,  1586,  1586,  1587,  1587,  1588,  1587,  1587,  1587,  1587,
    1589,  1589,  1590,  1589,  1591,  1592,  1594,  1593,  1595,  1596,
    1596,  1597,  1599,  1598,  1601,  1602,  1600,  1603,  1604,  1605,
    1606,  1606,  1607,  1607,  1607,  1607,  1608,  1608,  1610,  1609,
    1611,  1609,  1612,  1612,  1613,  1614,  1613,  1616,  1615,  1617,
    1617,  1618,  1618,  1619,  1619,  1620,  1620,  1621,  1621,  1621,
    1621,  1621,  1621,  1621,  1621,  1621,  1621,  1621,  1621,  1622,
    1622,  1622,  1622,  1622,  1622,  1622,  1622,  1622,  1623,  1623,
    1623,  1623,  1624,  1624,  1624,  1625,  1625,  1626,  1626,  1627,
    1628,  1627,  1629,  1630,  1629,  1631,  1631,  1632,  1632,  1633,
    1633,  1634,  1634,  1634,  1635,  1635,  1636,  1636,  1637,  1639,
    1638,  1640,  1640,  1641,  1641,  1642,  1642,  1643,  1643,  1644,
    1644,  1645,  1645,  1646,  1646,  1646,  1647,  1647,  1647,  1648,
    1648,  1648,  1648,  1648,  1648,  1649,  1650,  1650,  1651,  1652,
    1652,  1654,  1653,  1655,  1655,  1656,  1656,  1656,  1657,  1657,
    1658,  1659,  1659,  1659,  1660,  1660,  1660,  1661,  1661,  1661,
    1661,  1661,  1661,  1662,  1663,  1663,  1663,  1663,  1664,  1664,
    1665,  1665,  1666,  1666,  1666,  1666,  1666,  1666,  1667,  1667,
    1667,  1667,  1667,  1668,  1668,  1668,  1668,  1669,  1669,  1669,
    1669,  1669,  1670,  1670,  1670,  1670,  1670,  1671,  1672,  1672,
    1673,  1673,  1674,  1674,  1674,  1676,  1675,  1677,  1677,  1678,
    1678,  1679,  1681,  1680,  1682,  1682,  1683,  1684,  1684,  1684,
    1685,  1687,  1688,  1686,  1686,  1686,  1690,  1689,  1692,  1691,
    1691,  1691,  1691,  1691,  1691,  1691,  1691,  1691,  1691,  1693,
    1691,  1691,  1691,  1691,  1691,  1691,  1694,  1691,  1695,  1695,
    1696,  1697,  1698,  1698,  1699,  1700,  1700,  1701,  1701,  1702,
    1702,  1704,  1705,  1703,  1707,  1708,  1706,  1709,  1709,  1709,
    1709,  1710,  1710,  1711,  1711,  1712,  1713,  1713,  1713,  1714,
    1713,  1715,  1715,  1716,  1716,  1716,  1717,  1717,  1718,  1718,
    1719,  1720,  1720,  1721,  1721,  1722,  1722,  1723,  1723,  1725,
    1724,  1727,  1726,  1728,  1728,  1729,  1729,  1730,  1730,  1731,
    1731,  1732,  1732,  1732,  1733,  1734,  1735,  1733,  1737,  1738,
    1736,  1739,  1739,  1740,  1741,  1741,  1742,  1743,  1743,  1745,
    1744,  1746,  1746,  1747,  1747,  1748,  1749,  1750,  1749,  1751,
    1749,  1752,  1752,  1753,  1753,  1754,  1754,  1755,  1755,  1756,
    1756,  1757,  1757,  1757,  1759,  1760,  1758,  1761,  1761,  1761,
    1762,  1762,  1763,  1763,  1764,  1764,  1765,  1765,  1765,  1765,
    1765,  1765,  1765,  1765,  1765,  1766,  1766,  1768,  1767,  1769,
    1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,
    1769,  1769,  1769,  1770,  1769,  1771,  1769,  1769,  1769,  1769,
    1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,
    1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,
    1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,
    1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,  1769,
    1772,  1772,  1772,  1773,  1773,  1774,  1774,  1775,  1775,  1776,
    1776,  1777,  1777,  1778,  1778,  1779,  1779,  1780,  1780,  1780,
    1782,  1781,  1783,  1781,  1784,  1784,  1784,  1784,  1784,  1785,
    1785,  1786,  1787,  1787,  1787,  1788,  1788,  1789,  1789,  1789,
    1791,  1790,  1793,  1792,  1792,  1794,  1794,  1795,  1796,  1795,
    1797,  1797,  1798,  1798,  1798,  1798,  1798,  1798,  1798,  1798,
    1798,  1798,  1798,  1798,  1798,  1798,  1798,  1798,  1799,  1799,
    1800,  1800,  1801,  1801,  1801,  1802,  1803,  1803,  1805,  1804,
    1806,  1806,  1808,  1807,  1809,  1807,  1807,  1810,  1810,  1811,
    1811,  1813,  1812,  1814,  1815,  1815,  1817,  1816,  1818,  1818,
    1818,  1819,  1819,  1819,  1819,  1820,  1820,  1821,  1822,  1824,
    1825,  1826,  1827,  1823,  1828,  1828,  1829,  1829,  1830,  1830,
    1830,  1831,  1831,  1831,  1832,  1832,  1833,  1833,  1834,  1834,
    1834,  1834,  1835,  1835,  1836,  1836,  1837,  1837,  1838,  1838,
    1839,  1839,  1840,  1840,  1841,  1841,  1841,  1842,  1842,  1843,
    1843,  1844,  1844,  1845,  1845,  1846,  1847,  1847,  1847,  1847,
    1848,  1848,  1849,  1849,  1849,  1850,  1850,  1850,  1851,  1851,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1853,  1853,  1853,  1853,  1853,  1854,  1854,  1854,  1855,  1855,
    1857,  1856,  1858,  1858,  1859,  1859,  1861,  1860,  1862,  1862,
    1863,  1863,  1864,  1865,  1865,  1866,  1866,  1867,  1867,  1868,
    1869,  1869,  1869,  1869,  1869,  1870,  1870,  1870,  1870,  1870,
    1871,  1871,  1871,  1871,  1872,  1872,  1872,  1873,  1873,  1874,
    1875,  1875,  1876,  1876,  1876,  1877,  1878,  1879,  1880,  1881,
    1881,  1882,  1882,  1883,  1883,  1883,  1884,  1884,  1885,  1885,
    1886,  1886,  1887,  1887,  1888,  1889,  1889,  1889,  1890,  1890,
    1890,  1891,  1891,  1892,  1893,  1893,  1893,  1893,  1893,  1893,
    1893,  1893,  1893,  1894,  1894,  1894,  1894,  1894,  1894,  1894,
    1894,  1894,  1894,  1895,  1895,  1895,  1895,  1895,  1895,  1896,
    1896,  1896,  1896,  1896,  1896,  1896,  1896,  1896,  1897,  1897,
    1897,  1897,  1897,  1897,  1897,  1898,  1898,  1898,  1898,  1898,
    1898,  1898,  1898,  1898,  1899,  1899,  1899,  1899,  1899,  1899,
    1899,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,
    1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,
    1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,
    1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,
    1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,
    1900,  1900,  1900,  1900,  1900,  1900,  1901,  1901,  1901,  1901,
    1901,  1901,  1902,  1902,  1902,  1902,  1902,  1902,  1902,  1902,
    1902,  1902,  1903,  1903,  1903,  1904,  1904,  1904,  1905,  1905,
    1905,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1909,  1908,  1910,
    1911,  1908,  1913,  1912,  1914,  1912,  1915,  1912,  1916,  1916,
    1918,  1917,  1919,  1917,  1920,  1917,  1922,  1921,  1921,  1923,
    1923,  1925,  1924,  1926,  1924,  1928,  1927,  1927,  1929,  1929,
    1929,  1930,  1930,  1930,  1930,  1931,  1931,  1931,  1931,  1932,
    1932,  1932,  1933,  1933,  1933,  1933,  1933,  1933,  1933,  1933,
    1933,  1933,  1933,  1933,  1933,  1933,  1933,  1934,  1934,  1934,
    1934,  1935,  1936,  1937,  1937,  1938,  1938,  1938,  1938,  1939,
    1939,  1940,  1940,  1940,  1941,  1941,  1941,  1941,  1941,  1943,
    1942,  1944,  1944,  1944,  1945,  1945,  1946,  1946,  1947,  1948,
    1948,  1948,  1948,  1948,  1950,  1949,  1951,  1951,  1952,  1951,
    1953,  1953,  1954,  1954,  1955,  1955,  1955,  1955,  1956,  1955,
    1957,  1957,  1957,  1957,  1957,  1958,  1959,  1959,  1959,  1959,
    1959,  1959,  1959,  1959,  1960,  1960,  1961,  1962,  1962,  1962,
    1962,  1962,  1962,  1962,  1963,  1963,  1964,  1964,  1965,  1965,
    1966,  1967,  1967,  1968,  1968,  1969,  1969,  1970,  1970,  1971,
    1971,  1973,  1972,  1974,  1972,  1975,  1972,  1976,  1972,  1972,
    1972,  1972,  1972,  1972,  1972,  1972,  1972,  1972,  1972,  1972,
    1972,  1972,  1972,  1972,  1972,  1972,  1972,  1972,  1972,  1972,
    1972,  1972,  1972,  1972,  1972,  1972,  1977,  1977,  1978,  1978,
    1979,  1979,  1979,  1980,  1980,  1980,  1980,  1981,  1981,  1982,
    1982,  1983,  1983,  1984,  1984,  1985,  1985,  1986,  1986,  1986,
    1986,  1986,  1987,  1987,  1988,  1988,  1989,  1990,  1990,  1990,
    1990,  1990,  1991,  1991,  1991,  1991,  1991,  1992,  1992,  1993,
    1993,  1994,  1994,  1995,  1995,  1996,  1996,  1997,  1997,  1999,
    1998,  2000,  2001,  2001,  2002,  2002,  2003,  2003,  2003,  2004,
    2004,  2004,  2005,  2006,  2006,  2006,  2007,  2008,  2009,  2009,
    2009,  2010,  2010,  2012,  2011,  2014,  2013,  2016,  2015,  2017,
    2017,  2018,  2019,  2019,  2019,  2020,  2020,  2022,  2021,  2023,
    2024,  2024,  2025,  2025,  2026,  2026,  2026,  2027,  2028,  2029,
    2030,  2030,  2031,  2031,  2032,  2032,  2032,  2032,  2032,  2032,
    2032,  2032,  2032,  2033,  2033,  2034,  2035,  2036,  2036,  2036,
    2037,  2037,  2038,  2038,  2039,  2039,  2040,  2040,  2042,  2041,
    2043,  2043,  2043,  2043,  2043,  2043,  2043,  2044,  2044,  2044,
    2044,  2045,  2045,  2046,  2046,  2048,  2049,  2050,  2051,  2052,
    2047,  2053,  2055,  2054,  2057,  2058,  2056,  2060,  2061,  2059,
    2062,  2063,  2064,  2064,  2065,  2065,  2066,  2066,  2066,  2066,
    2066,  2066,  2067,  2067,  2068,  2068,  2068,  2069,  2069,  2069,
    2070,  2070,  2070,  2071,  2071,  2072,  2073,  2072,  2074,  2074,
    2075,  2075,  2076,  2076,  2077
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     4,     0,     2,     0,     4,     0,     5,     0,
       0,     3,     3,     1,     1,     0,     3,     0,     6,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       0,     1,     1,     0,     7,     0,     8,     0,    15,     0,
      14,     0,    14,     0,     6,     0,    10,     0,    11,     0,
       5,     0,     5,     0,     5,     0,     5,     0,     5,     0,
       6,     7,     6,     4,     3,     0,     3,     0,    13,     0,
       0,     0,    16,     1,     3,     1,     1,     2,     1,     2,
       1,     2,     0,     0,     7,     0,     6,     4,     4,     1,
       0,     5,     0,     5,     2,     0,     1,     1,     2,     3,
       3,     1,     1,     0,     1,     1,     2,     3,     2,     1,
       3,     2,     1,     3,     3,     3,     1,     1,     1,     1,
       3,     0,    12,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     0,    12,     0,     6,     2,     0,     1,     3,
       1,     0,     2,     0,     2,     0,     1,     4,     0,     2,
       0,     2,     0,     3,     1,     0,     1,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     2,     1,
       1,     2,     0,     1,     0,     2,     1,     2,     3,     3,
       0,     4,     0,     3,     0,     1,     3,     1,     0,     1,
       3,     1,     1,     2,     6,     8,     4,     6,     3,     0,
       1,     3,     1,     3,     7,     9,     5,     7,     4,     0,
       1,     1,     1,     2,     0,     4,     0,     4,     0,     1,
       1,     1,     1,     0,     3,     2,     3,     0,     2,     0,
       1,     0,     3,     1,     2,     3,     2,     3,     0,     1,
       1,     3,     5,     1,     2,     1,     3,     3,     1,     3,
       5,     5,     4,     1,     4,     2,     0,     6,     0,     6,
       0,     3,     0,     0,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     3,     0,     1,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     1,     1,     0,     1,
       0,     2,     3,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       4,     0,     1,     1,     3,     1,     3,     3,     1,     2,
       1,     1,     1,     1,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     0,     2,     2,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     5,     1,     0,     3,     0,     5,     0,     2,     1,
       1,     0,     3,     1,     0,     2,     1,     2,     3,     4,
       1,     2,     3,     4,     2,     2,     2,     0,     0,     0,
       3,     0,     3,     1,     3,     0,     3,     3,     3,     4,
       5,     2,     2,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     0,     6,     0,     0,     4,     1,     1,     2,
       1,     2,     0,     0,     6,     0,     0,     6,     0,     2,
       0,     1,     1,     0,     6,     0,     0,     9,     0,     2,
       0,     5,     0,     0,     7,     0,     0,     0,     0,     7,
       0,     4,     0,     2,     1,     2,     0,     5,     0,     1,
       2,     5,     3,     5,     3,     0,     6,     0,     6,     1,
       0,     5,     0,     5,     0,     0,     0,    11,     0,     5,
       0,     3,     0,     3,     0,     0,     8,     0,     3,     1,
       1,     1,     1,     1,     2,     4,     5,     0,     4,     4,
       4,     3,     3,     2,     2,     0,     2,     1,     2,     3,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     2,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     3,     1,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     0,
       1,     1,     1,     1,     1,     0,     7,     3,     3,     0,
       5,     0,     5,     1,     2,     4,     0,     4,     0,     7,
       5,     3,     0,     5,     0,     5,     1,     0,     1,     0,
       4,     0,     0,     3,     0,     6,     6,     0,     4,     2,
       2,     0,     3,     2,     0,     3,     0,     1,     0,     3,
       0,     1,     1,     3,     1,     4,     3,     3,     0,     2,
       0,     0,     7,     0,    10,     1,     3,     1,     1,     0,
       2,     0,     3,     1,     3,     0,     6,     1,     0,     0,
       4,     0,     3,     1,     1,     1,     1,     1,     1,     3,
       1,     3,     0,     0,     5,     1,     3,     1,     1,     0,
       3,     1,     3,     0,     4,     1,     0,     1,     2,     1,
       3,     4,     3,     3,     3,     3,     4,     4,     3,     0,
       4,     2,     0,     2,     5,     0,     3,     1,     1,     2,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     1,
       0,     3,     0,     3,     1,     3,     0,     1,     1,     2,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     0,     6,     1,     1,     3,     4,     4,
       2,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     1,     0,     1,     2,     4,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     2,     0,     9,     0,    10,     0,     9,     0,     9,
       0,    10,     0,    11,     0,    10,     2,     7,     0,     1,
       4,     0,     1,     0,     1,     2,     0,     4,     0,     3,
       0,     3,     0,     1,     2,     1,     0,     1,     2,     1,
       0,     1,     2,     3,     0,     6,     5,     5,     0,     2,
       0,     1,     1,     1,     0,     1,     2,     1,     1,     2,
       2,     1,     0,     3,     1,     1,     3,     3,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     2,     1,     1,
       3,     3,     3,     3,     0,     1,     2,     2,     3,     3,
       2,     3,     3,     4,     3,     3,     3,     3,     2,     3,
       3,     3,     2,     2,     3,     1,     2,     2,     2,     2,
       3,     3,     2,     3,     2,     2,     3,     3,     2,     3,
       2,     2,     2,     2,     2,     5,     5,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       2,     1,     2,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     2,     0,     3,     0,     1,     1,     5,     0,
       1,     1,     1,     2,     2,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     0,     1,     0,     1,     2,
       1,     1,     2,     4,     1,     3,     2,     1,     0,     2,
       0,     1,     2,     2,     2,     2,     2,     1,     1,     3,
       3,     3,     3,     2,     1,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     0,     1,     2,     1,     1,
       0,     1,     1,     2,     1,     2,     0,     1,     0,     4,
       1,     1,     1,     0,     1,     2,     1,     1,     2,     1,
       3,     3,     1,     1,     0,     2,     0,     1,     5,     0,
       3,     3,     1,     0,     2,     2,     2,     0,     3,     3,
       6,     6,     1,     1,     2,     2,     2,     2,     2,     1,
       1,     0,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     2,     1,     2,
       1,     2,     0,     2,     0,     2,     2,     2,     2,     3,
       2,     3,     3,     3,     3,     1,     1,     1,     1,     3,
       1,     1,     1,     4,     2,     1,     4,     0,     1,     1,
       3,     0,     0,     8,     0,     5,     7,     0,     5,     0,
       5,     0,    10,     0,     9,     0,    11,     3,     4,     3,
       3,     0,     8,     7,     0,     0,     7,     0,     3,     1,
       4,     0,     3,     0,     2,     0,     1,     0,     2,     2,
       2,     2,     1,     1,     1,     4,     4,     0,     6,     4,
       0,     5,     0,     6,     4,     3,     1,     7,     2,     1,
       1,     0,     6,     0,     3,     2,     0,     5,     0,     0,
       6,     1,     3,     1,     1,     3,     3,     3,     2,     2,
       4,     2,     7,     6,     5,     5,     4,     5,     4,     4,
       2,     2,     7,     6,     3,     5,     1,     1,     1,     1,
       1,     3,     3,     3,     0,     1,     1,     2,     2,     3,
       3,     3,     3,     0,     1,     0,     1,     0,     2,     0,
       1,     2,     1,     1,     1,     0,     1,     1,     0,     2,
       1,     0,     1,     1,     1,     0,     6,     0,     5,     4,
       4,     3,     0,     1,     1,     3,     3,     2,     2,     0,
       2,     1,     3,     0,     1,     1,     0,     2,     4,     1,
       3,     0,     5,     0,     1,     1,     3,     0,     4,     0,
       4,     0,     1,     1,     2,     1,     1,     1,     0,     2,
       0,     5,     1,     3,     2,     0,     3,     1,     4,     1,
       0,     4,     1,     0,     4,     0,     1,     3,     0,     1,
       3,     1,     1,     2,     6,     3,     0,     4,     0,     3,
       0,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       0,     2,     0,     6,     0,     1,     1,     0,     4,     4,
       3,     5,     1,     3,     4,     0,     6,     1,     1,     1,
       3,     2,     3,     1,     1,     0,     6,     1,     1,     1,
       3,     3,     4,     0,     6,     0,     2,     0,     4,     0,
       2,     2,     3,     1,     2,     2,     3,     4,     4,     3,
       1,     2,     2,     3,     4,     4,     0,     3,     0,     5,
       3,     4,     2,     0,     2,     3,     4,     2,     0,     2,
       3,     0,     2,     0,     7,     3,     0,     4,     2,     0,
       4,     2,     2,     0,     4,     2,     3,     1,     1,     1,
       1,     1,     1,     2,     1,     2,     3,     1,     4,     2,
       2,     3,     0,     3,     5,     0,     1,     2,     1,     1,
       0,     1,     0,     1,     1,     2,     1,     2,     0,     2,
       3,     1,     4,     4,     2,     1,     1,     1,     1,     0,
       3,     5,     3,     1,     1,     3,     4,     0,     0,     0,
       0,     0,     0,     2,     2,     1,     1,     0,     2,     3,
       0,     2,     3,     0,     2,     3,     3,     3,     2,     3,
       4,     3,     4,     3,     4,     1,     3,     4,     3,     3,
       6,     1,     5,     6,     5,     7,     6,     8,     5,     6,
       4,     4,     5,     3,     4,     1,     3,     3,     3,     3,
       3,     3,     3,     5,     5,     5,     6,     6,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     2,     1,     1,
       1,     2,     1,     2,     2,     0,     3,     1,     4,     1,
       3,     1,     1,     1,     1,     3,     1,     4,     4,     4,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     6,     4,     4,     7,     6,
       3,     4,     6,     6,     4,     4,     4,     4,     4,     4,
       6,     8,    10,     1,     1,     3,     1,     3,     1,     2,
       2,     2,     2,     2,     1,     3,     4,     6,     4,     6,
       2,     2,     4,     4,     4,    10,     6,     8,     6,     4,
       4,     6,     4,     3,     4,     1,     4,     3,     4,     6,
       8,     2,     2,     8,     8,     6,     8,     6,     6,     6,
       6,     2,     6,     6,     8,     8,     6,     8,     6,     2,
       8,     8,     4,     2,     2,     2,     6,     6,     4,     4,
       8,     4,     4,     4,     4,     3,     8,     6,     8,     4,
       6,     4,     6,     4,     4,     4,     6,     8,     4,     3,
       6,     4,     6,     5,     8,     7,    10,     1,     6,     4,
       4,     4,     4,     4,     6,     4,     6,     0,     5,     6,
       2,     3,     0,     4,     0,     3,     0,     1,     1,     3,
       4,     4,     5,     4,     4,     4,     5,     4,     0,     0,
       7,     4,     5,     4,     5,     4,     4,     4,     4,     4,
       5,     0,     9,     3,     3,     1,     1,     3,     3,     3,
       3,     3,     4,     4,     4,     6,     4,     6,     4,     6,
       5,     0,     7,     4,     4,     4,     4,     1,     0,     3,
       3,     1,     3,     5,     0,     1,     0,     2,     0,     3,
       4,     2,     0,     1,     1,     2,     1,     3,     3,     0,
       3,     2,     0,     4,     0,     4,     0,     4,     2,     1,
       1,     1,     1,     2,     1,     2,     2,     1,     2,     1,
       2,     2,     0,     1,     1,     3,     1,     3,     1,     3,
       4,     5,     1,     3,     3,     3,     1,     1,     1,     1,
       4,     1,     3,     3,     0,     6,     0,     8,     4,     0,
       8,     0,    10,     6,     0,     8,     0,    10,     6,     1,
       2,     1,     1,     2,     0,     1,     5,     1,     1,     0,
       6,     6,     9,     1,     2,     0,     4,     2,     3,     3,
       1,     1,     0,     3,     2,     1,     0,     3,     2,     1,
       1,     3,     0,     3,     0,     0,     5,     0,     1,     0,
       0,     1,     0,     2,     3,     3,     1,     1,     0,     7,
       0,     7,     1,     2,     0,     0,     2,     0,     2,     0,
       1,     1,     1,     1,     3,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     0,
       0,     3,     0,     0,     3,     2,     0,     0,     4,     4,
       2,     0,     1,     1,     0,     2,     3,     1,     3,     0,
       7,     0,     1,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     4,     2,     2,     2,     1,     2,     2,     0,
       3,     2,     2,     3,     3,     3,     3,     1,     2,     0,
       1,     0,     4,     4,     2,     0,     1,     1,     0,     1,
       1,     2,     5,     4,     1,     3,     3,     1,     3,     1,
       1,     1,     1,     1,     0,     2,     3,     4,     0,     1,
       2,     2,     2,     1,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     2,     1,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     6,     0,     1,     3,
       1,     3,     0,     2,     3,     1,     1,     2,     1,     3,
       2,     0,     0,     7,     2,     1,     0,     3,     0,     8,
       7,     4,     4,     5,     6,     4,     4,     5,     5,     0,
       6,     4,     4,     5,     6,     4,     0,     6,     1,     3,
       1,     2,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     0,     0,     8,     0,     0,     6,     0,     1,     1,
       1,     1,     1,     2,     1,     1,     1,     3,     4,     0,
       3,     3,     1,     2,     2,     1,     3,     1,     3,     1,
       3,     1,     1,     0,     1,     1,     1,     1,     1,     0,
       4,     0,     4,     0,     1,     0,     1,     3,     1,     5,
       3,     1,     1,     1,     0,     0,     0,     7,     0,     0,
      11,     3,     1,     3,     3,     1,     3,     0,     1,     0,
       3,     0,     3,     2,     3,     3,     5,     0,     5,     0,
       6,     0,     2,     1,     3,     2,     4,     0,     2,     0,
       2,     1,     1,     1,     0,     0,     7,     0,     2,     2,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     3,     3,
       6,     2,     2,     0,     6,     0,     7,     5,     2,     1,
       1,     1,     5,     5,     2,     2,     1,     4,     3,     2,
       3,     2,     2,     1,     4,     4,     3,     3,     3,     2,
       3,     2,     3,     3,     3,     3,     4,     3,     2,     3,
       3,     3,     3,     4,     3,     3,     4,     3,     3,     3,
       1,     1,     1,     1,     1,     0,     1,     0,     2,     0,
       1,     1,     1,     0,     2,     0,     2,     0,     3,     3,
       0,     4,     0,     4,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     0,     3,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     1,     4,     0,     3,
       3,     1,     2,     2,     2,     2,     3,     3,     2,     1,
       1,     1,     1,     2,     1,     1,     1,     2,     0,     1,
       0,     5,     0,     1,     3,     1,     0,     3,     0,     3,
       3,     1,     0,     4,     0,     3,     2,     0,     1,     0,
       2,     0,     3,     3,     2,     2,     0,     5,     0,     1,
       1,     0,     1,     1,     2,     1,     2,     1,     2,     0,
       0,     0,     0,    22,     1,     1,     0,     1,     0,     1,
       1,     0,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     5,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     2,     2,     0,     1,
       0,     4,     0,     1,     1,     3,     0,     9,     0,     3,
       1,     3,     1,     1,     1,     3,     5,     3,     5,     1,
       1,     3,     4,     5,     4,     1,     3,     4,     4,     5,
       1,     5,     3,     2,     1,     3,     2,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     0,
       0,     7,     0,     4,     0,     6,     0,     7,     1,     3,
       0,     3,     0,     3,     0,     3,     0,     3,     2,     0,
       2,     0,     2,     0,     4,     0,     3,     1,     1,     1,
       1,     0,     1,     1,     1,     0,     2,     2,     2,     3,
       5,     5,     3,     5,     5,     4,     6,     8,     8,     2,
       3,     3,     3,     5,     2,     3,     3,     1,     1,     3,
       3,     1,     3,     2,     2,     2,     2,     2,     1,     1,
       3,     1,     4,     4,     1,     1,     1,     1,     1,     0,
       5,     0,     2,     1,     1,     1,     1,     3,     3,     1,
       1,     2,     2,     2,     0,     3,     4,     3,     0,     7,
       1,     2,     1,     1,     1,     1,     1,     1,     0,     5,
       1,     1,     1,     1,     1,     3,     6,     6,     6,     6,
       7,     7,     5,     3,     4,     1,     3,     8,     8,     8,
       8,     9,     6,     4,     0,     3,     0,     3,     1,     3,
       2,     1,     1,     0,     1,     1,     2,     0,     1,     1,
       3,     0,     3,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     2,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     1,     3,     1,     1,     1,     1,     4,     5,     4,
       6,     1,     0,     3,     3,     1,     1,     0,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     0,
       2,     0,     2,     0,     3,     2,     1,     2,     1,     0,
       3,     1,     0,     1,     0,     1,     0,     3,     2,     0,
       1,     2,     4,     4,     5,     4,     2,     3,     1,     1,
       1,     0,     1,     0,     4,     0,     4,     0,     2,     2,
       1,     2,     0,     1,     1,     1,     1,     0,     3,     3,
       3,     4,     2,     3,     1,     1,     2,     4,     0,     0,
       0,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     3,     3,     3,
       0,     1,     3,     3,     0,     3,     1,     3,     0,     4,
       3,     1,     2,     2,     3,     4,     4,     0,     3,     4,
       4,     1,     1,     0,     2,     0,     0,     0,     0,     0,
      19,     6,     0,     3,     0,     0,     9,     0,     0,     8,
       2,     2,     0,     1,     1,     1,     4,     4,     3,     4,
       3,     3,     0,     3,     1,     3,     5,     1,     1,     1,
       0,     1,     1,     0,     2,     0,     0,     3,     0,     2,
       5,     3,     3,     3,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(!thd->bootstrap) &&
                unlikely(!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 1675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 1700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 1781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 24207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 1795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "PREPARE..FROM"));
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].ident_sys);
          }
#line 24220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 1806 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 24226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 1808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->prepared_stmt_code= (yyvsp[0].item);
            Lex->expr_allows_subselect= true;
          }
#line 24235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 1816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 24245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 1822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 1824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE IMMEDIATE"));
            Lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
          }
#line 24262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 1831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 1836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 24274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 1838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE..USING"));
            Lex->expr_allows_subselect= true;
          }
#line 24285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 1853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->prepared_stmt_params.push_back((yyvsp[0].item),
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 24295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 1864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 24304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 1869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 24314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 1880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 24322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 1884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 1894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 24336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 1898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 24344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 1902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 24352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 1906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 1910 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 1914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 1924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 1929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 24399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 1933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 24407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 1937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 24415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 1941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 24423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 1945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 24431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 1949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 1954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 24448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 1958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 24456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 1963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 1991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 1995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 1999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 2014 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2040 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 24544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 24563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 24571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 24581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 24591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 24601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 24611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 24620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 24632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-3].num),
                                                     (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
               MYSQL_YYABORT;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 24660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 24670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                           TL_OPTION_UPDATING,
                                                           TL_WRITE,
                                                           MDL_EXCLUSIVE)))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 24703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->select_lex.table_list.first->db.str,
                       lex->select_lex.table_list.first->table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            lex->current_select= &lex->select_lex;
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 24731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 24742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 24760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2222 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 24778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 24793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 24805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                              DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid),
                                              (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 24816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 24831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2272 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2276 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2280 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
            Lex->udf.type= UDFTYPE_AGGREGATE;
          }
#line 24906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2291 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-6].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 24922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 24932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 24940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 24948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 24954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 24960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE,
                                                &sp_handler_package_spec,
                                                (yyvsp[-3].spname), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_chistics(Lex->sp_chistics);
          }
#line 24975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-5].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 24984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE_BODY,
                                                &sp_handler_package_body,
                                                (yyvsp[-3].spname), (yyvsp[-8].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_chistics(Lex->sp_chistics);
            Lex->sp_block_init(thd);
          }
#line 25000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 25009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 25019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2364 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-10].spname), (yyvsp[0].spname), (yyvsp[-7].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 25028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 25038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 25044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex)= new (thd->mem_root)
                           sp_lex_local(thd, thd->lex))))
              MYSQL_YYABORT;
            thd->m_parser_state->m_yacc.reset_before_substatement();
          }
#line 25073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_FUNCTION;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_function)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
            (void) is_native_function_with_warn(thd, &(yyvsp[0].ident_sys));
          }
#line 25091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-6].lex);
            (yyval.lex)= (yyvsp[-5].lex);
          }
#line 25102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2444 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_procedure)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
          }
#line 25119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2458 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
            (yyval.lex)= (yyvsp[-4].lex);

          }
#line 25131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 25161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2501 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2524 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                        thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_FUNCTION; }
#line 25246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 25325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 25337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2634 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 25349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 25361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 25373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 25385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 25401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 25418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 25428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 25434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 25443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 25452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 25461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 2726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 25470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 2731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 25479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 25488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2741 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 25496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 25517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2769 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 25529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 25538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 25546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 25572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 2807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 2816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 25593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 25601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 25609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 25626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 2852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 2854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 25641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 2861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 25677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 2893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->event_parse_data->body_changed= TRUE;
          }
#line 25691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 2906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= null_clex_str;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
#line 25707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 2921 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 25716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 2926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 25725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 2933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= NULL; }
#line 25731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 2934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= (yyvsp[0].spname); }
#line 25737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 2938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 25743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 2939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 25749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 2943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 25755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 2944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 25761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 2950 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 25767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 2952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 25773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 2954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 25779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 2956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 25785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 2958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 25791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 2960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 25797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 2962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 25803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 2967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 25809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 2969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 25815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 2973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 25821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 2974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 2979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 2983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.init(); }
#line 25839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 2989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 2990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 25851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 2994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_SUID; }
#line 25857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 2995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 25863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 25872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 25878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 25886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 25894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 25903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 25912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 25921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 25930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 25939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 25948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 25957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spvar)->mode= (yyvsp[-1].spvar_mode);
            if (unlikely(Lex->sp_param_fill_definition((yyvsp[-2].spvar))))
              MYSQL_YYABORT;
          }
#line 25967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 25977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-8].spvar)->mode= (yyvsp[-7].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-8].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 25987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spvar)->mode= (yyvsp[-3].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-4].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 25997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spvar)->mode= (yyvsp[-2].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyvsp[-3].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 26017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 26035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 26055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 26071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 26088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3187 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 26108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 26117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 26125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 26131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 26140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 26148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3226 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3232 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 26182 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!((yyval.spvar_definition)= new (thd->mem_root) Spvar_definition())))
              MYSQL_YYABORT;
            Lex->init_last_field((yyval.spvar_definition), &(yyvsp[0].ident_sys), thd->variables.collation_database);
          }
#line 26225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar_definition_list)= new (thd->mem_root) Row_definition_list())) ||
                unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint unused;
            if (unlikely((yyvsp[-2].spvar_definition_list)->find_row_field_by_name(&(yyvsp[0].spvar_definition)->field_name, &unused)))
              my_yyabort_error((ER_DUP_FIELDNAME, MYF(0), (yyvsp[0].spvar_definition)->field_name.str));
            (yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list);
            if (unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 26254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 26262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 26274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 26284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 26294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 26304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3350 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 26337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 26351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 26360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 3390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 26371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3405 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 26382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 26391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 26403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 26409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 3431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 26415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 3432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 26421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 26427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 3439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 3441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 26439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 3446 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 26455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 3461 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 3473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 3492 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 3493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 3498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 26508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 3502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 26518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 3508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3514 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 26567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 26576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 26585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!cond->has_sql_state()))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 26604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 26616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 26630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 26642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 26656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3619 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 26696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 26702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 26708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 26714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3651 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 26720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3653 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 26726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 3655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 26732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 26738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 3659 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 26744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 3661 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 26750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 3663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 26756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 3665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 26762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 3670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 26771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 3678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 26787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 3693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 3695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 3700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 26809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 3706 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 26819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 3715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 3722 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 26840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 3731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 26850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 3740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 26859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 3745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 26869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 3754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 26875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 3756 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 26881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 3758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 26887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 3767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 3772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 3779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 26914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 3788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 26924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 3797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 26930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 3799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 26936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 3801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 26942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 3803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 26948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 3805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 26954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 3807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 26960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 3809 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 26966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 3811 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 26972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 3813 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 26978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 3815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 26984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 3817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 26990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 3819 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 26996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 3821 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 27002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 3827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 27011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 3835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 27027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 3847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 27043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 3861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 27049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 3862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 3863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 3872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 3888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 3900 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 27083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 3906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 27089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 3912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // Direct procedure call (without the CALL keyword)
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 3919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 3927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 27120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 3935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            /* "USE db" doesn't work in a procedure */
            if (unlikely(lex->sql_command == SQLCOM_CHANGE_DB))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "USE"));
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new (thd->mem_root)
                sp_instr_stmt(sp->instructions(), lex->spcont, lex);
              if (unlikely(i == NULL))
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;;
              if (unlikely(!(i->m_query.str= strmake_root(thd->mem_root,
                                                          sp->m_tmp_query,
                                                          i->m_query.length))) ||
                  unlikely(sp->add_instr(i)))
                MYSQL_YYABORT;
            }
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 3986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 3988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 3997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 27197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4017 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4028 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex)= thd->lex;
          }
#line 27320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 27331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 27340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4108 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 27362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 27385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 4143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 27394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 4150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 27400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 4151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 27406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 4156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 27415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 4164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 4169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 4174 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 4181 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 4186 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 27467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 27485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 27503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 27545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 27555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 4279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 27609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 4332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 27627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 4348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 27633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 4350 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 4357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 4359 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 4374 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 27664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 4378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 4390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 27688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 4398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 27696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 4402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 4412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 27718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 4420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 27733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 4434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 27739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 4435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 27745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 4440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 27755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 4450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 27765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 4458 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 27774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 4464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 27782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 4468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 27791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 4476 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 27801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 4490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 27813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 4499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 27822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 4504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 27832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 4510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 27841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 4517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 27851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 4525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 27857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 4529 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 27865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 4533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 27874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 4539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 27884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 4550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 27893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 4555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 27903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 4563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 4564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num); }
#line 27915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 4568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 4569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 27927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 4574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 27936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 4581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 27945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 4589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 4590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 27957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 4595 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 27966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 4604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 27974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 4608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 27985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 4615 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 27995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 4624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 4638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 4646 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 28031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 4654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 4656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 28056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 4674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 4682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 4687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 4689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 28090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 4695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 4697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 4702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 4711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 4716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 28134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 4721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 4726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 4731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 4736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 4740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 28176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 4746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 4750 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 4757 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 4766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 4774 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 4779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 4786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 28241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 4788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 28247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 4793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 28253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 4795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 28259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 4797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 28265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 4831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 4833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 28280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 4843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 28288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 4849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 28296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 4872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 4966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 28311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 4974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 28320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 4982 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 28329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 4990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 28343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 5003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 28357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 5016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 28366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 5021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 28375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 28384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5034 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 28393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 28402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 28411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 28420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 28429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 28438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 28449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 28460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 28472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 28481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 28492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 28498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 28507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 28513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 5147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 5148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 28531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 28543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->select_lex.add_table_to_list(thd,
                                        (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 28564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 28570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5174 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 28576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Select->set_braces(0);
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 28591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 5192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 28599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 5197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 28605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 5197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 5199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 28617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 5199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 5204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 28637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 5240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 5246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 28658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 5261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 28674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 5276 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 28691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 5288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 5293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 28703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 5299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 28714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 5306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 28720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 5307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 5309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 28732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 5311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 28738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 5313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 28746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 5317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 28755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 5322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 28761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 5324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 28770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 5332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 5334 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 28782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 5339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 28788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 5341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 28806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 5357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 5358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 5362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 5363 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 5368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 28845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 5382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 28855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 5392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 28867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 5403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 28876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 5411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 5413 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 28896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 5425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 5427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 28908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 5428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 5431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 28924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 5436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 5440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 5441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 5446 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 28957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 5460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 28970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 5471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 5473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 28989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 5485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 29003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 5495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 29026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 5516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 5517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 5522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 29058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 5541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 5546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 29076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 5557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 29096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 5573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 29113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 5585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 5587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 29136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 5599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 5601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 29151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 5606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 29160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 5611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 29181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 5631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 29203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 5648 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 5653 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 29240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 5680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 29253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 5691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 5692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 5697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 29279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 5706 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 5708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 29310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 5731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 5732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 5737 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 29337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 5748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 29355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 5766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 29373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 5780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 29400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 5805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 5806 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 5811 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 29449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 5843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 5848 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 29465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 5856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 5857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 5861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 5862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 5867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 29495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 5869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 29505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 5875 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 29515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 5881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 29521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 5883 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 29527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 5885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 29533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 5887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 29539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 5889 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 29545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 5891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 29551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 5895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 5897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 29567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 5903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 29582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 5918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           (yyval.ulong_num)= thd->query_start();
         }
#line 29590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 5922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 29604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 5940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 29612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 5946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 29631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 5961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 29639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 5978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 29651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 5988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 5989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 5993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 5994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 5998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 5999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 29707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6013 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 29715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 29723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 29731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 29739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6035 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 29747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 29766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 29775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6078 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 29784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6083 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 29793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 29802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 29811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 29820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 29839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 29849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 29868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 29877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 29896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 29906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 29928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 29937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 29946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 29955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 29964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 29973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 29982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 29990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list.first;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 30016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 30025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 30034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 30043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 6256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 30049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 6258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 30055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 6260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 30061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6262 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 30071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 30080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 30089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6296 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 30125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 30144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_TEMPORARY, MYF(0));
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 30164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 30173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 30189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6364 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 30200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6374 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 30212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6387 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 6388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 6389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 30254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 6394 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 6395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 6396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 6400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 30304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 6420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 6428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 30316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 6430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 30322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 6435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 6440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 6442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 6447 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 6449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 6454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 6456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 6461 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 6465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 6470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 6473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 6478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 6480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 30432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 6490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 30462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 6519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 30470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 6527 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_system_time((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 30479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 6534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 30485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 6535 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 30491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 6540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 30502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 6549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 6550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 6554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 30520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 6555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 30526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 6559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 30532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 6564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 30552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 6580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 30575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 6601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 30581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 6604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
          }
#line 30591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 6613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 6614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 6618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 6623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 6624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 6628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 6633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 6638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 30642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 6644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 30651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 6649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 30660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 6656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 6657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 6662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 30680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 6666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 30688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 6670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 30696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 6674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 30704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 6680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 6681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 6685 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 6691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 30732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 6697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 30742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 6702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 30748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 6704 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 30756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 6711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
          }
#line 30769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 6720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
          }
#line 30780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 6730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 30790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 6737 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 30801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 6747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 30813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 6761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 30822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 6769 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 30830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 6773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 30839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 6798 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 30845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 6799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 30851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 6801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 30871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 6817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 30879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 6821 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 30887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 6825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 30895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 6829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 30901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 6831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 30912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 6838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 30918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 6840 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 30924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 6853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 30932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 6857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 30941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 6862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 30950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 6867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 30958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 6871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 30966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 6875 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 30975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 6880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 30984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 6885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 30993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 6894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 6898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 6903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 6908 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 6912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 6916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 6921 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 6926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 6935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 31084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 6952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 31090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 6954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 31101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 6961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 31112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 6968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 31120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 6976 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 31129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 6981 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 31138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 6986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 31147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 6991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 6996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 31171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7017 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 31210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 31216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7028 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7030 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7034 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7036 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7044 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 31255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 31261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 31267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 31273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 31279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 31285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 31291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 31297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 31303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 31309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7078 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7083 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 31375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7084 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 31381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 31387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7086 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 31393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 31399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 31409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 31415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 31421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 31427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 31435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 31441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 31447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 31453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 31459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 7123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 31477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 31483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 31489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 31495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 31525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 31531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 7143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 31537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 7144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 31543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("4000", "4000"); }
#line 31549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 31555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("2000", "2000"); }
#line 31561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 31567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 31573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 31579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7187 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 31591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 31597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 31608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 31614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 31635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 7214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 31641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 7215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 31647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 7219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7220 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 31668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 31677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 31687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 7250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 31695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 7254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 7265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 31718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 7274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 31731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 7283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 31741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 7289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 31751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 7295 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 31765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 7308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 31775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 31785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type)));

          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 31800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type)));
            
          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 31815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 31836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7361 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 31842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 31848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7366 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 31854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 31860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 7371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 31866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 31877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 31883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 7386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 31889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 7387 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 31895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 7392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 31904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 7399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 31910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 7400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 31916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 31922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7405 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 31928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 31946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 31952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 7417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 31961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 7424 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 31967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 31979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 7430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 31985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 31991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 31997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 7436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 32003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 32009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 32021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 7454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 32039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 32045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 7462 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 7463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 7464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 32063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 7465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 32069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 7470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 32078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 7478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 32086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 7484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 7485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 32098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 7490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 32109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 7499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 7500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 7504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 7505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 7519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 32141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 7526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 32147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 7532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 7539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 7551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 32177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 7553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 32183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 7555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 32189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 7557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 32195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 7562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 7568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 7574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 7581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 7588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 7596 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 7597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 7598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 7599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 7600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 32275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 7604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 32281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 7605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 32287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 7609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 7610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 7614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 7619 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 7620 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 7621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 7625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 32329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 7626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 32335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 7630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 32341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 7635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 32354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 7646 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 7647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 32366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 7651 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 7652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 32378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 7656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 7657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 32390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 7676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 32396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 7677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 32402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 7682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 32408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 7683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 32414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 7684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 32420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 7689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 32426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 7691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 32432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 7696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 32441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 7701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 32447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 7703 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 32459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 7711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 32471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 7719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 32481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 7725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 32491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 7744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 32502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 7753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 7754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 7755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 7760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 32528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 7764 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 32536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 7771 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 32546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 7777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 32559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 7788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 32565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 7789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 32571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 7794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 32577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 7796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 32583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 7805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR; 
            Lex->select_lex.init_order();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 32601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 7819 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->select_lex.db= (Lex->select_lex.table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 32616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 7830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
          }
#line 32630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 7840 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 32639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 7845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 32652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 7854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 32664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 7862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->sp_chistics.init();
          }
#line 32676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 7870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 7877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->sp_chistics.init();
          }
#line 32699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 7885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 7892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 32719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 7897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 7904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 32734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 7909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 7911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 32761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 7932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
          }
#line 32779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 7946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 32788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 7951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 32797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 7956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 32806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 7961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 32815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 7966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 32825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 7970 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 7974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-4].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 32840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 7979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
#line 32854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 7989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->create_info.seq_create_info=
                           new (thd->mem_root) sequence_definition())) ||
                unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_SEQUENCE,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 32869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 8000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 32880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 8009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8011 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 32923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 8029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 8030 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8034 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 32941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 32953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 8049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 32965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 32975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8078 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 32985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 8085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 33015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 8109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 8121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 8133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 33055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 8140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 8152 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->select_lex.db= (yyvsp[-1].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.partition_flags|= ALTER_PARTITION_EXCHANGE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 33101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 8182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 33109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 8203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 8209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 33140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 33148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 8221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 33169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 8238 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 33177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 8242 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 33186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 8249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 8250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 8255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 33208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 33236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 33255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 8304 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 33264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 8318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 8325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 33300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 8335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 33315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 8346 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 33329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 8356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 33344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 8367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 33358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 33368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 33378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 33387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8394 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 33397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 8400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.db= (yyvsp[0].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 33415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 8414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 33433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 8428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 33442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 8433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 33450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 33459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 8444 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 33468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 8449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 33477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 8454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 33485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 8469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 33494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 8474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 8482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 33512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 8487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 8494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 8495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 8499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 33539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 8500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 33545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 8504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 33551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 8518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 33557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 8520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 33566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 8528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 33572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 8529 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 33578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 8530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 33584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 8534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 33590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 8536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 33599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 8541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 33609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 8549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 8550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 8551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 8552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 8557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 33644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 8564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 8566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 33661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 8572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 8574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 33678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 8581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 33689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 8591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 33706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 8607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 33714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 8611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 8618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 8622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 33738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 8629 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 33746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 8633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 33754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 8637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 33762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 8643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 33768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 8645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 8654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 8655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 33786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 8656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 33792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 8660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 8662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 33811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 8671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 33819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 8683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 33830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 8690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 8694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 33842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 8695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 33848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 8696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 33854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 8702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 33860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 8708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 33874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 8718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 8728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 33892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 8729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 8733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 8734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 8738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 33916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 8739 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 33922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 8740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 33928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 8744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 33934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 8745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 33940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 8750 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 33954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 8760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 8780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 8782 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 33980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 8789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 8791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 8795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 8797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 34009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 8808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 8810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 34026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 8822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 8824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 8829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 8837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 8844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 34066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 8851 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 34077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 8861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 34088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 8869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 34098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 8879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 34104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 8884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 8894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 8906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 34138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 8907 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 8911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 8912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 8916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 34162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 8917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 34168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 8918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 34174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 8919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 34180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 8920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 34186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 8921 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 8925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 8926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 8931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 8941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 8951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 8952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 8953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 8958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 34256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 8962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 8964 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 34270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 8971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 8977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 8991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 34306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 9006 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 34314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 34324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 9029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9040 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 34354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 34360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 9056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 34370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 9077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 9088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 9099 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 34408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 9106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        INDEX_HINT_MASK_ALL);
          }
#line 34418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 9115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 9121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 9122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 34436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 9132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->current_select->set_with_clause((yyvsp[-1].with_clause));
          }
#line 34446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 34454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 9164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 9168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 34474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 9177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 9190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 34494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 9198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 9211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 34514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9227 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 34530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 9231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 34539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 9236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 34547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 9244 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 34556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9248 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 34562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 9271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 9278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 9287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 34606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 9291 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 34614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 9296 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 34622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 9300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 34630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 9340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 34642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 9348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 34650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 9376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 34660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 9391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 34670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 9400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 34678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 9404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 34686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 9408 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 34694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 9415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                                MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 34706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 9423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 34714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 9427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 34722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 9434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 34730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 9438 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 34738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 9445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 34746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 9449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 34754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 9453 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 34762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 9457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 34770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 9470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));

            Lex->safe_to_cache_query=0;
            Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
#line 34791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 9487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));

            Lex->safe_to_cache_query=1;
            Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
          }
#line 34812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 9508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_WRITE;
            lex->current_select->set_lock_for_tables(TL_WRITE, false);
            lex->safe_to_cache_query=0;
          }
#line 34823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 9515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_READ_WITH_SHARED_LOCKS;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS, false);
            lex->safe_to_cache_query=0;
          }
#line 34835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 9528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 34850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 9542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 34859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 9547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 34882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 9568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 34890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 9574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_end();
          }
#line 34898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 9580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 34906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 9586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 34914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 9592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 34925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 9601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 34931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 9602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 34937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 9603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 9604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 34949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 9605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 9609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 34961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 9610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 34967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 9611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 34973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 9615 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 34979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 9616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 34985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 9617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 34991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 9621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 9622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 9628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 35058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 9679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 9686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 35116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 9729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 9735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 9741 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 9747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 9753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 9759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 9765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 9775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 9781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 9787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 9793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 9799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 9809 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-4].item), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 9815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 9824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 9830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 9838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 9844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 35304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 9853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 9859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 35326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 9867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 9877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                   Lex->escape_used);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 9884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                             Lex->escape_used);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 35363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 9892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 9898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 9911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 9917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 9923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 9929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 9935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 9942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 9948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 9954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 9960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 9967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 9973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 9979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 9985 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 9991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 9997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10044 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 35573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 35579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 35585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 35591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10048 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 35597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 35603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 35609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 35615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 35624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 35630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 35636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10068 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 35642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 35648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 35654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 35660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 35666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 35672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 35678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10078 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 35684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 35690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10083 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 35696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 10084 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 35702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 10089 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 35708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 10091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 35716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 10095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 35725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 10103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 35749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 10126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 35760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 10133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 35769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 10141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 35775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 10142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 35781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 10143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 35787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 10144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 35793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 10149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 35802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 10157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 35808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 10158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 35814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 10159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 35820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 10160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 35826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 10161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 35832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 10162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 35838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 10163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 35844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 10164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 35850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 10202 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 35856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 10208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 10215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 10221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 35886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 10226 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 35900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 10236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 35909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 10241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 35918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 10246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 35928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 10252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 35937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 10257 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 10263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 35962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 10274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 10281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 35982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 10286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 35991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 10291 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 36000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 10296 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 36009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 10301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 36018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 10306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 36027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 10311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 36036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 10320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 10326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 36051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 10335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 36061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 10341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 36069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 10345 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 10351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 10357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 10367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 10376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 10383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_add_time(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 10397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 10403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 10409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 36163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 10418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 36176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 10427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 10433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 10439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 10445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 10451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 10466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 10477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 10483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 10489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 10495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 10501 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 10507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 36312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 10515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 10522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 36331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 10526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 36340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 10531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 36352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 10539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 10560 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 10567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 10573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 10580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 10587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 10593 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 10599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 10605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 10611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 10617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 10623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 10629 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 10635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 10642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 10648 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 10655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 10661 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 10666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 10671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 10676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 10681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 10699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 10705 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 10711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 36614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 10716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 10723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 10730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 10738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 10745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 10752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 10759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 10766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 10783 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 10789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 10795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 10801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 10807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 10814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 10820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 10826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 10835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 10846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 10853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 10859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 10865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 10872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 36850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 10880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 10886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 10892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 10897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 10903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 36901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 10911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 10917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 10923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 10929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 10935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 10943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 10955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 10962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 36996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 10977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 37006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 10983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 37017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 10990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 37028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 10997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 37039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 11004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 37050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11011 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 37061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 37069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 37080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 37089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 37112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 37165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 11124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 37186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 11129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 11133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 11134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 11138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 37216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 37222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 11144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 37233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 11151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 37242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 11159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 37270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 11186 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 11204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 11210 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 11216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 11225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 37349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 11233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 37355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 11264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 11270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11276 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 11294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 11300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 11306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 37471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 11310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 37493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 11331 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 37505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 11340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 37524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 11360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 37532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 11367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 11374 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 11381 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 11388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 11395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 11402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 11409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 11416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 11423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 11430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 11441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 11448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 11459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 11471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 37689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 11489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 37695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 11491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 37703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 11495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 11512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 11518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 11527 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 37750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 11536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 37760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 11545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 37769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 11550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 11557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 37791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 11567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 37803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 11575 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 37812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 11580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 37821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 11587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 11588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 11593 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 37843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 11598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 37849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 11608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 37858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 11613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 37867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 11620 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 11621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 11625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 37885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 11630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 37893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 11637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 37904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 11644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 37915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 11651 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 37926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 11663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 37939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 11672 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 37948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 11680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 37954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 11682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 37960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 11684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 37966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 11686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 37972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 11688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 37978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 11690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 37984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 11692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 37990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 11694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 37999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 11698 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 38005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 11699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 38011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 11703 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 38017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 11704 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 38023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 11705 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 38029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 11706 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 38035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 11707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 38041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 11708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 38047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 11709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 38053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 11710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 38059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 11714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 38065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 11715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 38071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 11716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 38077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 11720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 38083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 11721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 38089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 11726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 11733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 11740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 11741 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 38121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 11746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 11753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 11761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 11770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 11781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 11790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 38188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 11799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 11810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 38204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 11812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 11823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 38223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 11834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 38229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 11835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 38235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 11841 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 38241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 11843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 38249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 11861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));

            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 38260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 11869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 38272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 11877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 38283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 11885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 38291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 11889 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 38301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 11895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 38311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 11904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 38323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 11912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 38335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 11920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 38343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 11924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 38353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 11930 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 38364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 11940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 38376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 11948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 38389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 11957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 38397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 11961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 38408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 11968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 38420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 11979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 11980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 11981 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 11985 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 38444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 11986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 11994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 38456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 12000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 12019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Select);
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 38474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 12025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                         Select->get_table_join_options(),
                                                         YYPS->m_lock_type,
                                                         YYPS->m_mdl_type,
                                                         Select->
                                                         pop_index_hints(),
                                                         (yyvsp[-3].string_list)))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 38492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
                !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-3].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              lex->check_automatic_up(UNSPECIFIED_TYPE);
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new (thd->mem_root) Table_ident(unit);
              if (unlikely(ti == NULL))
                MYSQL_YYABORT;
              if (unlikely(!((yyval.table_list)= sel->add_table_to_list(thd,
                                                        ti, (yyvsp[0].lex_str_ptr), 0,
                                                        TL_READ,
                                                        MDL_SHARED_READ))))
                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (unlikely((yyvsp[0].lex_str_ptr) != NULL))
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-3].table_list);
            }
            /*
              Fields in derived table can be used in upper select in
              case of merge. We do not add HAVING fields because we do
              not merge such derived. We do not add union because
              also do not merge them
            */
            if ((yyval.table_list) && (yyval.table_list)->derived &&
                !(yyval.table_list)->derived->first_select()->next_select())
              (yyval.table_list)->select_lex->add_where_field((yyval.table_list)->derived->first_select());
            if ((yyvsp[-1].num))
            {
              MYSQL_YYABORT_UNLESS(!(yyvsp[-3].table_list));
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
            }
          }
#line 38561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= (yyvsp[-7].select_lex);
            SELECT_LEX_UNIT *unit= (yyvsp[-4].select_lex)->master_unit();
            Table_ident *ti= new (thd->mem_root) Table_ident(unit);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            (yyvsp[-4].select_lex)->set_with_clause((yyvsp[-5].with_clause));
            lex->current_select= sel;
            if (unlikely(!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                                      ti, (yyvsp[0].lex_str_ptr), 0,
                                                      TL_READ,
                                                      MDL_SHARED_READ))))
              MYSQL_YYABORT;
            sel->add_joined_table((yyval.table_list));
            if ((yyvsp[-1].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 38584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12170 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 12178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 12192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 38614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 12193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 38620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 12194 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 38626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_braces(0);
          }
#line 38634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 38646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 12220 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 38654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12228 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            /* for normal joins, $2 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (unlikely(!((yyval.table_list)= (yyvsp[-1].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list)))
              MYSQL_YYABORT;
            if (unlikely(!(yyvsp[0].table_list) && (yyval.table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 12244 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 38678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 12245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 38684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 12254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].num))
              Select->set_braces(1);
            (yyval.table_list)= NULL;
          }
#line 38694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 12263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->tvc_start();
          }
#line 38702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 12267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->tvc_finalize_derived())
              MYSQL_YYABORT;
            (yyval.table_list)= NULL;
          }
#line 38712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12276 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                unlikely(mysql_new_select(lex, 1, NULL)))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 38733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 38741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 12300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= Select; }
#line 38747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely((yyvsp[0].select_lex)->init_nested_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 38757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            TABLE_LIST *embedding= lex->current_select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 38770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 38776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 38782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 12330 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 38790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 12333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 38796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12334 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 38802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 38808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 12339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 38814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 12340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 38820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 12345 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 38828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 12350 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 38836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 12363 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 38842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 38848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 12372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 38854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 12373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 38860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 12378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 38866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 12380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 38872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 12390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 38887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 12414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 38908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 12415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 38914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 12416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 38920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 12417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 38926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 12418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 38932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 12419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 38938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 12420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 38944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 12421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 38950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 12422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 38956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 12423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 38962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 12424 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 38968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 12425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 38974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 12429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 38980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 12430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 38986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 12431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 38992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 12432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 38998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 12433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 39004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 12434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 39010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 12435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 12436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 12437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 12441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 39034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 12442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 39040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 12443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 12444 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 12454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 39058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 12456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 12469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 39074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 12471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 39082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 12475 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 39094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 12487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 39102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 12491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 39114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 12502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
#line 39123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 12507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string_ascii(thd, "", 0) :
                 new (thd->mem_root) Item_string_ascii(thd, "\\", 1));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 12528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 39145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 12533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 12540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 12542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 39181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 12559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 39200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 12581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 12584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 12594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 39225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 12606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 39231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 12613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 12615 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 39247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 12623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 39253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 12628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 39259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 12633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 12635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 39280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 12648 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 39286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 12649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 39292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 12654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 39306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 12664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 39316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 12673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 12680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 12687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 12696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 39355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 12698 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 12705 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 12714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 39383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 12716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 39389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 12718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 39395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 12720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 39401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 12722 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 39407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 12724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 39413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 12742 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 39423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 12760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (unlikely(sel->linkage != GLOBAL_OPTIONS_TYPE &&
                         sel->olap != UNSPECIFIED_OLAP_TYPE &&
                         (sel->linkage != UNION_TYPE || sel->braces)))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE &&
                !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been
                created yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (unlikely(!unit->is_unit_op() &&
                          (first_sl->order_list.elements ||
                           first_sl->select_limit) &&
                           unit->add_fake_select_lex(thd)))
                MYSQL_YYABORT;
            }
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
               /*
                 At this point we don't know yet whether this is the last
                 select in union or not, but we move ORDER BY to
                 fake_select_lex anyway. If there would be one more select
                 in union mysql_new_select will correctly throw error.
               */
               DBUG_ASSERT(sel->master_unit()->fake_select_lex);
               lex->current_select= sel->master_unit()->fake_select_lex;
             }
          }
#line 39470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 12803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {

          }
#line 39478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 12810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 39487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 12815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 12822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 39502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 12823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 39508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 12824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 39514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 12828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 12829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 12834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->current_select= sel->master_unit()->fake_select_lex;
              DBUG_ASSERT(Select);
            }
          }
#line 39540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 12847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (!sel->select_limit->basic_const_item() ||
                sel->select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 12855 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 12859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 12866 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 39578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 12873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 39589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 12880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 39600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 12890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 39609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 12895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 39618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 12900 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 39626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 12904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 12910 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 12916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 12925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 39665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 12933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 39674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 12938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 39685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 12944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 39691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 12945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 39697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 12954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 12955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 12959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 12960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 39721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 12961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 12962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 12963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 12964 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 12968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 12969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 39757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 12970 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 12971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 12972 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 12976 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 12977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 12978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 12979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 12983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 12984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 12985 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 12986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 12987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 12991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 12992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 12993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 39847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 12994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 39853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 12995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 39865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 13009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 39871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 13010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 39877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 13014 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 39883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 13015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 39889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 13016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 39895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 13021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            DBUG_ASSERT(&lex->select_lex == lex->current_select);

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so set expr_allows_subselect as false to disallow any subqueries
              further. Reset expr_allows_subselect back to true once the
              parameters are reduced.
            */
            Lex->expr_allows_subselect= false;
          }
#line 39925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 13047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->expr_allows_subselect= true;
          }
#line 39934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 13054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 13065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 39957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 39969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 13087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 13091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 40002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 13111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 40010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 40019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 40028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 13132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 40043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 13143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 40049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 13146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 40068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 13161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 40076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 13172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 40086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 13178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
          }
#line 40094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 13189 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 40105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 13196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 13198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
          }
#line 40132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 40142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 13221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE"));
            lex->spname= (yyvsp[0].spname);
          }
#line 40154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 13229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE_BODY, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE BODY"));
            lex->spname= (yyvsp[0].spname);
          }
#line 40166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 13237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 40184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 40203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 40215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 40223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 40231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 40242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 13289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13291 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 40257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13296 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 40267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 13302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 40276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 13307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 40285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 13312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 40294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 13318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 40306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 13326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 13336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 40324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 40338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 40352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 40361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 40370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 13391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 40378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 13395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 40386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 13401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 13402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 40398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 13410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 40409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 13418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 40418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 13423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mark_first_table_as_inserting();
          }
#line 40426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 13430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 40437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 13437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 40446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 13442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mark_first_table_as_inserting();
          }
#line 40454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 13449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 40467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 13457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 13459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 40484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 13465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 13469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 13471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 40506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 13479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 13480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 13485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 40529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 13494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 13495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 13496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 13498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 13510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 40565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 13511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 40571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 13515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 13516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 13517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 13532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 13541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 13542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 13546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 13547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 13551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 13552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 13556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 13557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 13562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 40657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 13567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 13577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 40677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 13582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 13591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 13596 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 13602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 13607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 13615 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 40730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 13623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 40742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 13633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 40748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 13635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 13641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 13650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 40774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 13652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 40782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 13656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 40790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 13665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 40801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 13673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= &Lex->select_lex;
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (unlikely(slex->get_table_list()->derived))
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 40824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 13691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 13701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))) ||
                unlikely(add_value_to_list(thd, (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 40840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 13715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 13724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 13725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 13732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 40878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 13747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 40886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 13751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 40894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 13757 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 13759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
          }
#line 40908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 13766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 40924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 13784 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 13786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 40940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 13792 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 40949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 13797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 40959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 13803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 40968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 13821 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 40987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 13836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 13853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 13854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 13858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 13859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 13863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 41036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 13864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 41042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 13865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 41048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 13870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 13881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 41075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 13888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 41081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 13912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 41089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 13916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 41097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 13920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 41105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 13924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 41113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 13928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 41121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 13932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 41129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 13936 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 41137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 13940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 41145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 13944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 41153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 13951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 41161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 13955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 41169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 13964 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 41182 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 13973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 41190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 13980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 41201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 13987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES)))
               MYSQL_YYABORT;
           }
#line 41213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 13995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TRIGGERS)))
               MYSQL_YYABORT;
           }
#line 41225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_EVENTS)))
               MYSQL_YYABORT;
           }
#line 41237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14011 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLES)))
               MYSQL_YYABORT;
           }
#line 41249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].lex_str);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES)))
              MYSQL_YYABORT;
          }
#line 41261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 41272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14034 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 41283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 41293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 41299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 41305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 41318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 41326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14064 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 41334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14068 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 41343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 41352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 41365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 41376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 41385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 41394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 41403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 41412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 41421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 41427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 41433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 41439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 41450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 41462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 41468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 41480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 41491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2412:
#line 14158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 41502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 41514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 41524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 41533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,0)))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 41545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 41557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14200 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 41569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2419:
#line 14208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 41577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 14212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 41586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 41597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 41606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 41617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 41628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14243 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 41638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 41648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 41658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 14261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 41670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 14269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 41679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 14274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 41690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 14281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 41701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 41712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14295 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 41723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 41732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 14307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 41741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 14312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 41750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 14317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 41759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 14322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 41770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 14329 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 41793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 14351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 41799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 14353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 41805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 14355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 41811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 41817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 14370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 41823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2449:
#line 14374 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 41829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 14375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 41835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 14384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 41841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 14385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 41847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 14389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 41853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 14390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 41859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14394 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 41865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 41877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 41888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 41903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 14426 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 41911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 14430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 41917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 14432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
#line 41926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 14453 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 41934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 14459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 41940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 14460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 41946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 14461 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 14465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 14467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 41972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 14479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 14480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 41984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 14482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 41996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 14496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 42007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 14503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 14508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 42027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 14518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 14523 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 14525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 42055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 14540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 42061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 14542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 42075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 14550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 14556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 14561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 42093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 14563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 42099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 14565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 42105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 14567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 42111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 14569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 42117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 14571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 42129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 14579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 42135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 14581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 42141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 14583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 42147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 14585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 42156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 14590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 42162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 14592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 42174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 14600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 42180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 14602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 42186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2506:
#line 14604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 42192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 14606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 42210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 14622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 14623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 14627 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 14629 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 14639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 42251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 14654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 42257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 14655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 42263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 14660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 42272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 14665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 14674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 42284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 14676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 14678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 42299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 14683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 42305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 14687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 42311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 14688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 42317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 14692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 14694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 42331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 14701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 42341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 14707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 14716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 42355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 14720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 42366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 14732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 42378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 14740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-2].num) | (yyvsp[-1].num));
          }
#line 42386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 14746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 42392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 14747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 42398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 14748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 42404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 14752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 42410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 14753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 42416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 14754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 42422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 14756 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
          }
#line 42431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 14764 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 42439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 14768 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 42448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 14776 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 42454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 14783 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].ident_sys);
          }
#line 42464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 14794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 42479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 14805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 42494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 14816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 42511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 14829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 42517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 14833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mark_first_table_as_inserting();
          }
#line 42525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 14839 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 42531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 14840 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 42537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 14844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 42543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 14845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 42549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 14849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 14851 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 42567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 14858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 14862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 42579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 14863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 42585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 14864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 42591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2568:
#line 14879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 42600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2569:
#line 14884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 42611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2570:
#line 14891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 42620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2571:
#line 14896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 42629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 14914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 42638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 14919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 42647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 14926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 14928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 42659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 14934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 42668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 14941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 14942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 14946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 14947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 14948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2587:
#line 14953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2588:
#line 14955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 14959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 42716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 14961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 14969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 14970 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 14980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 42750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 14993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 42759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 14998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 42768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 15003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 42777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 15008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 42786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 15016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 42798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 15023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 42804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2602:
#line 15029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 42821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 15042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 42834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 15051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 42851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 15067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 42862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 15074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 42872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 15080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 42883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 15089 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 42889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 15091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 42898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 15098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 42904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 15099 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 42910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 15100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 42916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 15102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 42934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 15116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 15122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 15128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 15134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 15140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 15146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 43004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 15165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 43018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 15175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 43032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 15185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 43042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 15191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 43053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 15198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 43063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 15208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATE,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 43075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2626:
#line 15216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_TIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 43087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2627:
#line 15224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATETIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 43099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 15235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= 0; }
#line 43105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 15237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= (yyvsp[0].with_clause);
          }
#line 43113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 15245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             Lex->derived_tables|= DERIVED_WITH;
             Lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
          }
#line 43127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 15255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 43136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 15263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 43142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 15264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 43148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 15277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 43159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 15284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            char *spec_start= (yyvsp[-3].simple_string) + 1;
            With_element *elem= new With_element((yyvsp[-8].lex_str_ptr), *(yyvsp[-7].lex_str_list), (yyvsp[-2].select_lex)->master_unit());
	    if (unlikely(elem == NULL) ||
                unlikely(Lex->curr_with_clause->add_with_element(elem)))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].simple_string),
                                        spec_start - query_start))
              MYSQL_YYABORT;
	  }
#line 43177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 15302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 43183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 15304 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 43189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 15310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 43198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 15315 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 43207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 15324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 43217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 15338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 43223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 15339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 43229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 15344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 15349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 15357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 15362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 15369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 43271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 15375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 15380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 43369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 43384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 43396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15452 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 43402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 43470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 43479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15523 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 43488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 43497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 43506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 43542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 43575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 43581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 43591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 43597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 43603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 43609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);
            (yyval.lex_user)->host= null_clex_str; // User or Role, see get_current_user()
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 43626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 43660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->plugin= empty_clex_str;
            (yyval.lex_user)->auth= empty_clex_str;
          }
#line 43672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 43682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 16302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 43693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 16309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 16311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_init();
          }
#line 43707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 16315 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
          }
#line 43719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 16323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 16328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 43736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 16335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 16341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 43757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 16348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            if (unlikely(lex->set_variable(&(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 43769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 16356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 43785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 16368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 16389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 16395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 43813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 16399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 16404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 43830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 16414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 16420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 16434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 43856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 16438 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 16443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 43873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 16447 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 43882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 16456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 43890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 16464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 16465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 16466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 16470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 16471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 16472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 16473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 16477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 43938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 16478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 16479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 16480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 16486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 43965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 16491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 43974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 16496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 43983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 16505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 43992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 16510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 16515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 16520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 16525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 16530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 16535 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 16540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 44064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 16554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 44079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 16565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3242:
#line 16584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3243:
#line 16602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3244:
#line 16614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3245:
#line 16622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3246:
#line 16627 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 16650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 16669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 16686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 44222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 16687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 44228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 16691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 44234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3256:
#line 16692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 44240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3257:
#line 16693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 44246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3258:
#line 16694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 44252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 16699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->plugin= empty_clex_str;
            lex->definer->auth=   empty_clex_str;
          }
#line 44271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 16713 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 44277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 16717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer->pwhash= (yyvsp[0].lex_string_with_metadata);}
#line 44283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3262:
#line 16718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata); }
#line 44289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 16720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->pwhash.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->pwhash.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 44300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 16729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 16730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 44312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 16732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 16738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 16744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 16755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 44354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 16763 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3271:
#line 16768 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3272:
#line 16770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 44376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3273:
#line 16776 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 44386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3274:
#line 16784 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3275:
#line 16785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3278:
#line 16795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 44418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3279:
#line 16813 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 44424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 16814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 44430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3281:
#line 16816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3282:
#line 16820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 44444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3283:
#line 16821 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 44450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3284:
#line 16826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 44462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3285:
#line 16834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3286:
#line 16843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr),
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 44482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 16853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 44496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 16863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 44518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 16881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (unlikely(Lex->uses_stored_routines()))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 44533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 16894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 44539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 16895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 44545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 16899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 44551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 16900 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 44557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 16904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 44563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 16905 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 44569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 16906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 44575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 16907 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 44581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3298:
#line 16909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 44593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3299:
#line 16917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 16921 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 44605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 16922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 44611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 16923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 44617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 16924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 44623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 16925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 44629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 16932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 16937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 44645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 16943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 44655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 16949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 44665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 16956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 44675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 16963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 44685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 16969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 44693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 16973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 44704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 16980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 16989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 44720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 16991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 44726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 16996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3317:
#line 17002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 44742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3318:
#line 17009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 44752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 17016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 44762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 17023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 44772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 17030 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 44782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 17036 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 44793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 17043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 17054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 44811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 17055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 44817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 17059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 44823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 17060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 44829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 17065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3329:
#line 17070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3330:
#line 17078 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->reset_auth();
          }
#line 44858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3331:
#line 17088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 44881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3335:
#line 17115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3336:
#line 17117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 44896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 17135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 44902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 17136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 17138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 44914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 17139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 17141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 44926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 17142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 17144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 44938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 17145 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 17146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 44950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 17147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 17148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 44962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 17149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 44968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 17150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 44974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 17151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 44980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 17152 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 44986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3356:
#line 17153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 44992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3357:
#line 17154 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 44998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3358:
#line 17155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 45004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3359:
#line 17156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 45010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3360:
#line 17157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3361:
#line 17158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 45022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3362:
#line 17159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 45028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 17160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 45034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 17161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 45040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 17162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 45046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 17163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 45052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 17164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 45058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 17165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 45064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 17166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 45070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3370:
#line 17167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 45076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3371:
#line 17168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 45082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3372:
#line 17169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 45088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 17170 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 45094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 17171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 45100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3375:
#line 17172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_HISTORY_ACL; }
#line 45106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3376:
#line 17176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3377:
#line 17177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 17187 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_subject))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->x509_subject=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 17194 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_issuer))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->x509_issuer=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3382:
#line 17201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->ssl_cipher))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->ssl_cipher=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3383:
#line 17211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->current_select->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3384:
#line 17221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3385:
#line 17230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3386:
#line 17239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 45205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3387:
#line 17252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3388:
#line 17257 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3389:
#line 17265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3390:
#line 17270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3391:
#line 17278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3392:
#line 17283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3397:
#line 17294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->pwtext= (yyvsp[0].lex_string_with_metadata);
            if (unlikely(Lex->sql_command == SQLCOM_REVOKE))
              MYSQL_YYABORT;
          }
#line 45270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3398:
#line 17301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->pwhash= (yyvsp[0].lex_string_with_metadata);
          }
#line 45279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3399:
#line 17306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_clex_str;
          }
#line 45289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3400:
#line 17312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
          }
#line 45299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3401:
#line 17318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3402:
#line 17323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 45314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3406:
#line 17337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 45344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3408:
#line 17367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 45352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3409:
#line 17371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 45360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3410:
#line 17375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 45368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3411:
#line 17379 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 45376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3412:
#line 17386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 45386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3413:
#line 17392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 45396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3414:
#line 17398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 45406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3415:
#line 17404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 45416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3416:
#line 17410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.max_statement_time= (yyvsp[0].item_num)->val_real();
            lex->mqh.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 45426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3417:
#line 17418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3418:
#line 17419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3419:
#line 17423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3421:
#line 17429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3422:
#line 17430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3423:
#line 17434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3424:
#line 17435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3425:
#line 17439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3426:
#line 17440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3427:
#line 17444 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3428:
#line 17445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3429:
#line 17450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 45502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3430:
#line 17455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3431:
#line 17460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            Lex->sphead->set_stmt_end(thd);
            Lex->sphead->restore_thd_mem_root(thd);
          }
#line 45518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3432:
#line 17468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 45524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3433:
#line 17469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 45530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3434:
#line 17473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3435:
#line 17474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3436:
#line 17479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3437:
#line 17480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3438:
#line 17481 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3439:
#line 17486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3440:
#line 17487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3441:
#line 17488 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3442:
#line 17493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3443:
#line 17505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3444:
#line 17514 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 45614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3445:
#line 17520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 45624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3446:
#line 17529 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 45634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3447:
#line 17538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 45644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3448:
#line 17551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= UNION_TYPE; }
#line 45650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3449:
#line 17553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= INTERSECT_TYPE; }
#line 45656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3450:
#line 17555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= EXCEPT_TYPE; }
#line 45662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3451:
#line 17559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3453:
#line 17565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 45677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3454:
#line 17570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 45689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3455:
#line 17581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 45698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3456:
#line 17586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_context();
          }
#line 45706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3457:
#line 17592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 45724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3458:
#line 17606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 45733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3461:
#line 17622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), FALSE)))
              MYSQL_YYABORT;
          }
#line 45742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3462:
#line 17629 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 45748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3463:
#line 17630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 45754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3464:
#line 17631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 45760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3465:
#line 17635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 45766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3466:
#line 17636 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 45772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3467:
#line 17641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->tvc_start();
	  }
#line 45780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3468:
#line 17645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select;
            if (Lex->tvc_finalize())
              MYSQL_YYABORT;
	  }
#line 45790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3469:
#line 17663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 45798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3470:
#line 17669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 45804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3471:
#line 17670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 45810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3472:
#line 17674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 45816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3473:
#line 17675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 45822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3474:
#line 17679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 45828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3475:
#line 17680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 45834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3476:
#line 17681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 45840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3477:
#line 17687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].select_lex)->set_with_clause((yyvsp[-2].with_clause));
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 45849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3478:
#line 17694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (unlikely(mysql_new_select(Lex, 1, NULL)))
              MYSQL_YYABORT;
          }
#line 45872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3479:
#line 17715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->check_automatic_up(UNSPECIFIED_TYPE);
            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;

            /*
              A subquery (and all the subsequent query blocks in a UNION) can
              add columns to an outer query block. Reserve space for them.
              Aggregate functions in having clause can also add fields to an
              outer select.
            */
            for (SELECT_LEX *temp= child->master_unit()->first_select();
                 temp != NULL; temp= temp->next_select())
            {
              lex->current_select->select_n_where_fields+=
                temp->select_n_where_fields;
              lex->current_select->select_n_having_items+=
                temp->select_n_having_items;
            }
          }
#line 45902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3484:
#line 17753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 45908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3485:
#line 17755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 45920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3486:
#line 17762 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 45926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3487:
#line 17763 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 45932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3488:
#line 17764 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 45938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3489:
#line 17765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 45944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3490:
#line 17767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 45954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3491:
#line 17773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 45964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3492:
#line 17778 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 45970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3495:
#line 17794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 45985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3496:
#line 17808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
            Lex->ssl_cipher= Lex->x509_subject= Lex->x509_issuer= 0;
            bzero(&(Lex->mqh), sizeof(Lex->mqh));
          }
#line 45996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3497:
#line 17823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 46002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3498:
#line 17824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 46008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3499:
#line 17825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 46014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3500:
#line 17829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 46020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3501:
#line 17830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 46026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3502:
#line 17834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 46032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3503:
#line 17835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 46038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3504:
#line 17840 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3506:
#line 17846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 46054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3507:
#line 17852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 46064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3508:
#line 17860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 46074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3509:
#line 17866 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t len= YYLIP->get_cpp_ptr() - lex->create_view->select.str;
            void *create_view_select= thd->memdup(lex->create_view->select.str, len);
            lex->create_view->select.length= len;
            lex->create_view->select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(),
                            &lex->create_view->select);
            lex->create_view->check= (yyvsp[0].num);
            lex->parsing_options.allows_variable= TRUE;
            lex->current_select->set_with_clause((yyvsp[-2].with_clause));
          }
#line 46091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3517:
#line 17895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 46097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3518:
#line 17896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3519:
#line 17897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3520:
#line 17898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 46115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3521:
#line 17909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 46121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3522:
#line 17911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 46127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3523:
#line 17916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 46137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3524:
#line 17923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 46146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3525:
#line 17932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 46155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3526:
#line 17941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 46163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3527:
#line 17947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 46171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3528:
#line 17952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 46179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3529:
#line 17956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 46203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3530:
#line 17976 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $20 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->check_unresolved_goto()))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(thd);
            sp->restore_thd_mem_root(thd);

            if (unlikely(sp->is_not_allowed_in_function("trigger")))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (unlikely(!lex->select_lex.
                         add_table_to_list(thd, (yyvsp[-9].table), (LEX_CSTRING*) 0,
                                           TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
          }
#line 46233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3531:
#line 18012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->add_create_options_with_check((yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(is_native_function(thd, & (yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].ident_sys).str));
            lex->sql_command= SQLCOM_CREATE_FUNCTION;
            lex->udf.name= (yyvsp[-4].ident_sys);
            lex->udf.returns= (Item_result) (yyvsp[-2].num);
            lex->udf.dl= (yyvsp[0].lex_str).str;
          }
#line 46249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3532:
#line 18028 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 46260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3533:
#line 18035 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 46270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3534:
#line 18045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_function)))
              MYSQL_YYABORT;
          }
#line 46281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3535:
#line 18054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->set_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 46293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3536:
#line 18063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
          }
#line 46307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3537:
#line 18076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_procedure)))
              MYSQL_YYABORT;
          }
#line 46318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3538:
#line 18084 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 46327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3539:
#line 18090 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 46336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3540:
#line 18098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].spname) && !(yyvsp[0].spname)->eq(Lex->sphead)))
              my_yyabort_error((ER_END_IDENTIFIER_DOES_NOT_MATCH, MYF(0),
                                ErrConvDQName((yyvsp[0].spname)).ptr(),
                                ErrConvDQName(Lex->sphead).ptr()));
          }
#line 46347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3541:
#line 18108 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].spname) && !(yyvsp[0].spname)->eq(Lex->sphead)))
              my_yyabort_error((ER_END_IDENTIFIER_DOES_NOT_MATCH, MYF(0),
                                ErrConvDQName((yyvsp[0].spname)).ptr(),
                                ErrConvDQName(Lex->sphead).ptr()));
          }
#line 46358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3542:
#line 18117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 46364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3543:
#line 18118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 46370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3546:
#line 18130 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 46378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3547:
#line 18134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 46386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3548:
#line 18138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 46394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3549:
#line 18142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 46402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3550:
#line 18146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 46410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3551:
#line 18150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 46419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3552:
#line 18157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 46425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3553:
#line 18159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 46442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3554:
#line 18175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 46453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3555:
#line 18182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 46464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3556:
#line 18189 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 46475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3557:
#line 18198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3558:
#line 18199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3559:
#line 18200 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3560:
#line 18204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3561:
#line 18205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 46505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3562:
#line 18206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 46511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3563:
#line 18210 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3564:
#line 18211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 46523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3565:
#line 18216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3566:
#line 18218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 46535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3568:
#line 18223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3569:
#line 18224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 46547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3570:
#line 18229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].ident_sys);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3571:
#line 18236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3572:
#line 18246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].ident_sys);
          }
#line 46579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3573:
#line 18252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3574:
#line 18263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            YYERROR;
          }
#line 46598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;


#line 46602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
