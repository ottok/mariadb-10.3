/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs

/* First part of user prologue.  */
#line 25 "/home/buildbot/git/sql/sql_yacc_ora.yy"

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                          \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void ORAerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}




#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


#line 228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "sql_yacc_ora.hh"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_ABORT_SYM = 3,                  /* ABORT_SYM  */
  YYSYMBOL_ACCESSIBLE_SYM = 4,             /* ACCESSIBLE_SYM  */
  YYSYMBOL_ADD = 5,                        /* ADD  */
  YYSYMBOL_ALL = 6,                        /* ALL  */
  YYSYMBOL_ALTER = 7,                      /* ALTER  */
  YYSYMBOL_ANALYZE_SYM = 8,                /* ANALYZE_SYM  */
  YYSYMBOL_AND_AND_SYM = 9,                /* AND_AND_SYM  */
  YYSYMBOL_AND_SYM = 10,                   /* AND_SYM  */
  YYSYMBOL_AS = 11,                        /* AS  */
  YYSYMBOL_ASC = 12,                       /* ASC  */
  YYSYMBOL_ASENSITIVE_SYM = 13,            /* ASENSITIVE_SYM  */
  YYSYMBOL_BEFORE_SYM = 14,                /* BEFORE_SYM  */
  YYSYMBOL_BETWEEN_SYM = 15,               /* BETWEEN_SYM  */
  YYSYMBOL_BIGINT = 16,                    /* BIGINT  */
  YYSYMBOL_BINARY = 17,                    /* BINARY  */
  YYSYMBOL_BIN_NUM = 18,                   /* BIN_NUM  */
  YYSYMBOL_BIT_AND = 19,                   /* BIT_AND  */
  YYSYMBOL_BIT_OR = 20,                    /* BIT_OR  */
  YYSYMBOL_BIT_XOR = 21,                   /* BIT_XOR  */
  YYSYMBOL_BLOB_MARIADB_SYM = 22,          /* BLOB_MARIADB_SYM  */
  YYSYMBOL_BLOB_ORACLE_SYM = 23,           /* BLOB_ORACLE_SYM  */
  YYSYMBOL_BODY_ORACLE_SYM = 24,           /* BODY_ORACLE_SYM  */
  YYSYMBOL_BOTH = 25,                      /* BOTH  */
  YYSYMBOL_BY = 26,                        /* BY  */
  YYSYMBOL_CALL_SYM = 27,                  /* CALL_SYM  */
  YYSYMBOL_CASCADE = 28,                   /* CASCADE  */
  YYSYMBOL_CASE_SYM = 29,                  /* CASE_SYM  */
  YYSYMBOL_CAST_SYM = 30,                  /* CAST_SYM  */
  YYSYMBOL_CHANGE = 31,                    /* CHANGE  */
  YYSYMBOL_CHAR_SYM = 32,                  /* CHAR_SYM  */
  YYSYMBOL_CHECK_SYM = 33,                 /* CHECK_SYM  */
  YYSYMBOL_COLLATE_SYM = 34,               /* COLLATE_SYM  */
  YYSYMBOL_CONDITION_SYM = 35,             /* CONDITION_SYM  */
  YYSYMBOL_CONSTRAINT = 36,                /* CONSTRAINT  */
  YYSYMBOL_CONTINUE_MARIADB_SYM = 37,      /* CONTINUE_MARIADB_SYM  */
  YYSYMBOL_CONTINUE_ORACLE_SYM = 38,       /* CONTINUE_ORACLE_SYM  */
  YYSYMBOL_CONVERT_SYM = 39,               /* CONVERT_SYM  */
  YYSYMBOL_COUNT_SYM = 40,                 /* COUNT_SYM  */
  YYSYMBOL_CREATE = 41,                    /* CREATE  */
  YYSYMBOL_CROSS = 42,                     /* CROSS  */
  YYSYMBOL_CUME_DIST_SYM = 43,             /* CUME_DIST_SYM  */
  YYSYMBOL_CURDATE = 44,                   /* CURDATE  */
  YYSYMBOL_CURRENT_USER = 45,              /* CURRENT_USER  */
  YYSYMBOL_CURRENT_ROLE = 46,              /* CURRENT_ROLE  */
  YYSYMBOL_CURSOR_SYM = 47,                /* CURSOR_SYM  */
  YYSYMBOL_CURTIME = 48,                   /* CURTIME  */
  YYSYMBOL_DATABASE = 49,                  /* DATABASE  */
  YYSYMBOL_DATABASES = 50,                 /* DATABASES  */
  YYSYMBOL_DATE_ADD_INTERVAL = 51,         /* DATE_ADD_INTERVAL  */
  YYSYMBOL_DATE_SUB_INTERVAL = 52,         /* DATE_SUB_INTERVAL  */
  YYSYMBOL_DAY_HOUR_SYM = 53,              /* DAY_HOUR_SYM  */
  YYSYMBOL_DAY_MICROSECOND_SYM = 54,       /* DAY_MICROSECOND_SYM  */
  YYSYMBOL_DAY_MINUTE_SYM = 55,            /* DAY_MINUTE_SYM  */
  YYSYMBOL_DAY_SECOND_SYM = 56,            /* DAY_SECOND_SYM  */
  YYSYMBOL_DECIMAL_NUM = 57,               /* DECIMAL_NUM  */
  YYSYMBOL_DECIMAL_SYM = 58,               /* DECIMAL_SYM  */
  YYSYMBOL_DECLARE_MARIADB_SYM = 59,       /* DECLARE_MARIADB_SYM  */
  YYSYMBOL_DECLARE_ORACLE_SYM = 60,        /* DECLARE_ORACLE_SYM  */
  YYSYMBOL_DEFAULT = 61,                   /* DEFAULT  */
  YYSYMBOL_DELETE_DOMAIN_ID_SYM = 62,      /* DELETE_DOMAIN_ID_SYM  */
  YYSYMBOL_DELETE_SYM = 63,                /* DELETE_SYM  */
  YYSYMBOL_DENSE_RANK_SYM = 64,            /* DENSE_RANK_SYM  */
  YYSYMBOL_DESC = 65,                      /* DESC  */
  YYSYMBOL_DESCRIBE = 66,                  /* DESCRIBE  */
  YYSYMBOL_DETERMINISTIC_SYM = 67,         /* DETERMINISTIC_SYM  */
  YYSYMBOL_DISTINCT = 68,                  /* DISTINCT  */
  YYSYMBOL_DIV_SYM = 69,                   /* DIV_SYM  */
  YYSYMBOL_DOUBLE_SYM = 70,                /* DOUBLE_SYM  */
  YYSYMBOL_DO_DOMAIN_IDS_SYM = 71,         /* DO_DOMAIN_IDS_SYM  */
  YYSYMBOL_DOT_DOT_SYM = 72,               /* DOT_DOT_SYM  */
  YYSYMBOL_DROP = 73,                      /* DROP  */
  YYSYMBOL_DUAL_SYM = 74,                  /* DUAL_SYM  */
  YYSYMBOL_EACH_SYM = 75,                  /* EACH_SYM  */
  YYSYMBOL_ELSE = 76,                      /* ELSE  */
  YYSYMBOL_ELSEIF_MARIADB_SYM = 77,        /* ELSEIF_MARIADB_SYM  */
  YYSYMBOL_ELSIF_ORACLE_SYM = 78,          /* ELSIF_ORACLE_SYM  */
  YYSYMBOL_ENCLOSED = 79,                  /* ENCLOSED  */
  YYSYMBOL_END_OF_INPUT = 80,              /* END_OF_INPUT  */
  YYSYMBOL_EQUAL_SYM = 81,                 /* EQUAL_SYM  */
  YYSYMBOL_ESCAPED = 82,                   /* ESCAPED  */
  YYSYMBOL_EXCEPT_SYM = 83,                /* EXCEPT_SYM  */
  YYSYMBOL_EXISTS = 84,                    /* EXISTS  */
  YYSYMBOL_EXTRACT_SYM = 85,               /* EXTRACT_SYM  */
  YYSYMBOL_FALSE_SYM = 86,                 /* FALSE_SYM  */
  YYSYMBOL_FETCH_SYM = 87,                 /* FETCH_SYM  */
  YYSYMBOL_FIRST_VALUE_SYM = 88,           /* FIRST_VALUE_SYM  */
  YYSYMBOL_FLOAT_NUM = 89,                 /* FLOAT_NUM  */
  YYSYMBOL_FLOAT_SYM = 90,                 /* FLOAT_SYM  */
  YYSYMBOL_FORCE_LOOKAHEAD = 91,           /* FORCE_LOOKAHEAD  */
  YYSYMBOL_FOREIGN = 92,                   /* FOREIGN  */
  YYSYMBOL_FOR_SYM = 93,                   /* FOR_SYM  */
  YYSYMBOL_FOR_SYSTEM_TIME_SYM = 94,       /* FOR_SYSTEM_TIME_SYM  */
  YYSYMBOL_FROM = 95,                      /* FROM  */
  YYSYMBOL_FULLTEXT_SYM = 96,              /* FULLTEXT_SYM  */
  YYSYMBOL_GE = 97,                        /* GE  */
  YYSYMBOL_GOTO_ORACLE_SYM = 98,           /* GOTO_ORACLE_SYM  */
  YYSYMBOL_GRANT = 99,                     /* GRANT  */
  YYSYMBOL_GROUP_SYM = 100,                /* GROUP_SYM  */
  YYSYMBOL_GROUP_CONCAT_SYM = 101,         /* GROUP_CONCAT_SYM  */
  YYSYMBOL_LAG_SYM = 102,                  /* LAG_SYM  */
  YYSYMBOL_LEAD_SYM = 103,                 /* LEAD_SYM  */
  YYSYMBOL_HAVING = 104,                   /* HAVING  */
  YYSYMBOL_HEX_NUM = 105,                  /* HEX_NUM  */
  YYSYMBOL_HEX_STRING = 106,               /* HEX_STRING  */
  YYSYMBOL_HOUR_MICROSECOND_SYM = 107,     /* HOUR_MICROSECOND_SYM  */
  YYSYMBOL_HOUR_MINUTE_SYM = 108,          /* HOUR_MINUTE_SYM  */
  YYSYMBOL_HOUR_SECOND_SYM = 109,          /* HOUR_SECOND_SYM  */
  YYSYMBOL_IDENT = 110,                    /* IDENT  */
  YYSYMBOL_IDENT_QUOTED = 111,             /* IDENT_QUOTED  */
  YYSYMBOL_IF_SYM = 112,                   /* IF_SYM  */
  YYSYMBOL_IGNORE_DOMAIN_IDS_SYM = 113,    /* IGNORE_DOMAIN_IDS_SYM  */
  YYSYMBOL_IGNORE_SYM = 114,               /* IGNORE_SYM  */
  YYSYMBOL_INDEX_SYM = 115,                /* INDEX_SYM  */
  YYSYMBOL_INFILE = 116,                   /* INFILE  */
  YYSYMBOL_INNER_SYM = 117,                /* INNER_SYM  */
  YYSYMBOL_INOUT_SYM = 118,                /* INOUT_SYM  */
  YYSYMBOL_INSENSITIVE_SYM = 119,          /* INSENSITIVE_SYM  */
  YYSYMBOL_INSERT = 120,                   /* INSERT  */
  YYSYMBOL_INTERSECT_SYM = 121,            /* INTERSECT_SYM  */
  YYSYMBOL_INTERVAL_SYM = 122,             /* INTERVAL_SYM  */
  YYSYMBOL_INTO = 123,                     /* INTO  */
  YYSYMBOL_INT_SYM = 124,                  /* INT_SYM  */
  YYSYMBOL_IN_SYM = 125,                   /* IN_SYM  */
  YYSYMBOL_IS = 126,                       /* IS  */
  YYSYMBOL_ITERATE_SYM = 127,              /* ITERATE_SYM  */
  YYSYMBOL_JOIN_SYM = 128,                 /* JOIN_SYM  */
  YYSYMBOL_KEYS = 129,                     /* KEYS  */
  YYSYMBOL_KEY_SYM = 130,                  /* KEY_SYM  */
  YYSYMBOL_KILL_SYM = 131,                 /* KILL_SYM  */
  YYSYMBOL_LE = 132,                       /* LE  */
  YYSYMBOL_LEADING = 133,                  /* LEADING  */
  YYSYMBOL_LEAVE_SYM = 134,                /* LEAVE_SYM  */
  YYSYMBOL_LEFT = 135,                     /* LEFT  */
  YYSYMBOL_LEX_HOSTNAME = 136,             /* LEX_HOSTNAME  */
  YYSYMBOL_LIKE = 137,                     /* LIKE  */
  YYSYMBOL_LIMIT = 138,                    /* LIMIT  */
  YYSYMBOL_LINEAR_SYM = 139,               /* LINEAR_SYM  */
  YYSYMBOL_LINES = 140,                    /* LINES  */
  YYSYMBOL_LOAD = 141,                     /* LOAD  */
  YYSYMBOL_LOCATOR_SYM = 142,              /* LOCATOR_SYM  */
  YYSYMBOL_LOCK_SYM = 143,                 /* LOCK_SYM  */
  YYSYMBOL_LONGBLOB = 144,                 /* LONGBLOB  */
  YYSYMBOL_LONGTEXT = 145,                 /* LONGTEXT  */
  YYSYMBOL_LONG_NUM = 146,                 /* LONG_NUM  */
  YYSYMBOL_LONG_SYM = 147,                 /* LONG_SYM  */
  YYSYMBOL_LOOP_SYM = 148,                 /* LOOP_SYM  */
  YYSYMBOL_LOW_PRIORITY = 149,             /* LOW_PRIORITY  */
  YYSYMBOL_MASTER_SSL_VERIFY_SERVER_CERT_SYM = 150, /* MASTER_SSL_VERIFY_SERVER_CERT_SYM  */
  YYSYMBOL_MATCH = 151,                    /* MATCH  */
  YYSYMBOL_MAX_SYM = 152,                  /* MAX_SYM  */
  YYSYMBOL_MAXVALUE_SYM = 153,             /* MAXVALUE_SYM  */
  YYSYMBOL_MEDIAN_SYM = 154,               /* MEDIAN_SYM  */
  YYSYMBOL_MEDIUMBLOB = 155,               /* MEDIUMBLOB  */
  YYSYMBOL_MEDIUMINT = 156,                /* MEDIUMINT  */
  YYSYMBOL_MEDIUMTEXT = 157,               /* MEDIUMTEXT  */
  YYSYMBOL_MINUTE_MICROSECOND_SYM = 158,   /* MINUTE_MICROSECOND_SYM  */
  YYSYMBOL_MINUTE_SECOND_SYM = 159,        /* MINUTE_SECOND_SYM  */
  YYSYMBOL_MIN_SYM = 160,                  /* MIN_SYM  */
  YYSYMBOL_MODIFIES_SYM = 161,             /* MODIFIES_SYM  */
  YYSYMBOL_MOD_SYM = 162,                  /* MOD_SYM  */
  YYSYMBOL_MYSQL_CONCAT_SYM = 163,         /* MYSQL_CONCAT_SYM  */
  YYSYMBOL_NATURAL = 164,                  /* NATURAL  */
  YYSYMBOL_NCHAR_STRING = 165,             /* NCHAR_STRING  */
  YYSYMBOL_NE = 166,                       /* NE  */
  YYSYMBOL_NEG = 167,                      /* NEG  */
  YYSYMBOL_NOT2_SYM = 168,                 /* NOT2_SYM  */
  YYSYMBOL_NOT_SYM = 169,                  /* NOT_SYM  */
  YYSYMBOL_NOW_SYM = 170,                  /* NOW_SYM  */
  YYSYMBOL_NO_WRITE_TO_BINLOG = 171,       /* NO_WRITE_TO_BINLOG  */
  YYSYMBOL_NTILE_SYM = 172,                /* NTILE_SYM  */
  YYSYMBOL_NULL_SYM = 173,                 /* NULL_SYM  */
  YYSYMBOL_NUM = 174,                      /* NUM  */
  YYSYMBOL_NUMERIC_SYM = 175,              /* NUMERIC_SYM  */
  YYSYMBOL_NTH_VALUE_SYM = 176,            /* NTH_VALUE_SYM  */
  YYSYMBOL_ON = 177,                       /* ON  */
  YYSYMBOL_OPTIMIZE = 178,                 /* OPTIMIZE  */
  YYSYMBOL_OPTIONALLY = 179,               /* OPTIONALLY  */
  YYSYMBOL_ORACLE_CONCAT_SYM = 180,        /* ORACLE_CONCAT_SYM  */
  YYSYMBOL_OR2_SYM = 181,                  /* OR2_SYM  */
  YYSYMBOL_ORDER_SYM = 182,                /* ORDER_SYM  */
  YYSYMBOL_OR_SYM = 183,                   /* OR_SYM  */
  YYSYMBOL_OTHERS_ORACLE_SYM = 184,        /* OTHERS_ORACLE_SYM  */
  YYSYMBOL_OUTER = 185,                    /* OUTER  */
  YYSYMBOL_OUTFILE = 186,                  /* OUTFILE  */
  YYSYMBOL_OUT_SYM = 187,                  /* OUT_SYM  */
  YYSYMBOL_OVER_SYM = 188,                 /* OVER_SYM  */
  YYSYMBOL_PACKAGE_ORACLE_SYM = 189,       /* PACKAGE_ORACLE_SYM  */
  YYSYMBOL_PAGE_CHECKSUM_SYM = 190,        /* PAGE_CHECKSUM_SYM  */
  YYSYMBOL_PARAM_MARKER = 191,             /* PARAM_MARKER  */
  YYSYMBOL_PARSE_VCOL_EXPR_SYM = 192,      /* PARSE_VCOL_EXPR_SYM  */
  YYSYMBOL_PARTITION_SYM = 193,            /* PARTITION_SYM  */
  YYSYMBOL_PERCENT_ORACLE_SYM = 194,       /* PERCENT_ORACLE_SYM  */
  YYSYMBOL_PERCENT_RANK_SYM = 195,         /* PERCENT_RANK_SYM  */
  YYSYMBOL_PERCENTILE_CONT_SYM = 196,      /* PERCENTILE_CONT_SYM  */
  YYSYMBOL_PERCENTILE_DISC_SYM = 197,      /* PERCENTILE_DISC_SYM  */
  YYSYMBOL_POSITION_SYM = 198,             /* POSITION_SYM  */
  YYSYMBOL_PRECISION = 199,                /* PRECISION  */
  YYSYMBOL_PRIMARY_SYM = 200,              /* PRIMARY_SYM  */
  YYSYMBOL_PROCEDURE_SYM = 201,            /* PROCEDURE_SYM  */
  YYSYMBOL_PURGE = 202,                    /* PURGE  */
  YYSYMBOL_RAISE_ORACLE_SYM = 203,         /* RAISE_ORACLE_SYM  */
  YYSYMBOL_RANGE_SYM = 204,                /* RANGE_SYM  */
  YYSYMBOL_RANK_SYM = 205,                 /* RANK_SYM  */
  YYSYMBOL_READS_SYM = 206,                /* READS_SYM  */
  YYSYMBOL_READ_SYM = 207,                 /* READ_SYM  */
  YYSYMBOL_READ_WRITE_SYM = 208,           /* READ_WRITE_SYM  */
  YYSYMBOL_REAL = 209,                     /* REAL  */
  YYSYMBOL_RECURSIVE_SYM = 210,            /* RECURSIVE_SYM  */
  YYSYMBOL_REF_SYSTEM_ID_SYM = 211,        /* REF_SYSTEM_ID_SYM  */
  YYSYMBOL_REFERENCES = 212,               /* REFERENCES  */
  YYSYMBOL_REGEXP = 213,                   /* REGEXP  */
  YYSYMBOL_RELEASE_SYM = 214,              /* RELEASE_SYM  */
  YYSYMBOL_RENAME = 215,                   /* RENAME  */
  YYSYMBOL_REPEAT_SYM = 216,               /* REPEAT_SYM  */
  YYSYMBOL_REPLACE = 217,                  /* REPLACE  */
  YYSYMBOL_REQUIRE_SYM = 218,              /* REQUIRE_SYM  */
  YYSYMBOL_RESIGNAL_SYM = 219,             /* RESIGNAL_SYM  */
  YYSYMBOL_RESTRICT = 220,                 /* RESTRICT  */
  YYSYMBOL_RETURNING_SYM = 221,            /* RETURNING_SYM  */
  YYSYMBOL_RETURN_MARIADB_SYM = 222,       /* RETURN_MARIADB_SYM  */
  YYSYMBOL_RETURN_ORACLE_SYM = 223,        /* RETURN_ORACLE_SYM  */
  YYSYMBOL_REVOKE = 224,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 225,                    /* RIGHT  */
  YYSYMBOL_ROWS_SYM = 226,                 /* ROWS_SYM  */
  YYSYMBOL_ROWTYPE_ORACLE_SYM = 227,       /* ROWTYPE_ORACLE_SYM  */
  YYSYMBOL_ROW_NUMBER_SYM = 228,           /* ROW_NUMBER_SYM  */
  YYSYMBOL_SECOND_MICROSECOND_SYM = 229,   /* SECOND_MICROSECOND_SYM  */
  YYSYMBOL_SELECT_SYM = 230,               /* SELECT_SYM  */
  YYSYMBOL_SENSITIVE_SYM = 231,            /* SENSITIVE_SYM  */
  YYSYMBOL_SEPARATOR_SYM = 232,            /* SEPARATOR_SYM  */
  YYSYMBOL_SERVER_OPTIONS = 233,           /* SERVER_OPTIONS  */
  YYSYMBOL_SET = 234,                      /* SET  */
  YYSYMBOL_SET_VAR = 235,                  /* SET_VAR  */
  YYSYMBOL_SHIFT_LEFT = 236,               /* SHIFT_LEFT  */
  YYSYMBOL_SHIFT_RIGHT = 237,              /* SHIFT_RIGHT  */
  YYSYMBOL_SHOW = 238,                     /* SHOW  */
  YYSYMBOL_SIGNAL_SYM = 239,               /* SIGNAL_SYM  */
  YYSYMBOL_SMALLINT = 240,                 /* SMALLINT  */
  YYSYMBOL_SPATIAL_SYM = 241,              /* SPATIAL_SYM  */
  YYSYMBOL_SPECIFIC_SYM = 242,             /* SPECIFIC_SYM  */
  YYSYMBOL_SQLEXCEPTION_SYM = 243,         /* SQLEXCEPTION_SYM  */
  YYSYMBOL_SQLSTATE_SYM = 244,             /* SQLSTATE_SYM  */
  YYSYMBOL_SQLWARNING_SYM = 245,           /* SQLWARNING_SYM  */
  YYSYMBOL_SQL_BIG_RESULT = 246,           /* SQL_BIG_RESULT  */
  YYSYMBOL_SQL_SMALL_RESULT = 247,         /* SQL_SMALL_RESULT  */
  YYSYMBOL_SQL_SYM = 248,                  /* SQL_SYM  */
  YYSYMBOL_SSL_SYM = 249,                  /* SSL_SYM  */
  YYSYMBOL_STARTING = 250,                 /* STARTING  */
  YYSYMBOL_STATS_AUTO_RECALC_SYM = 251,    /* STATS_AUTO_RECALC_SYM  */
  YYSYMBOL_STATS_PERSISTENT_SYM = 252,     /* STATS_PERSISTENT_SYM  */
  YYSYMBOL_STATS_SAMPLE_PAGES_SYM = 253,   /* STATS_SAMPLE_PAGES_SYM  */
  YYSYMBOL_STDDEV_SAMP_SYM = 254,          /* STDDEV_SAMP_SYM  */
  YYSYMBOL_STD_SYM = 255,                  /* STD_SYM  */
  YYSYMBOL_STRAIGHT_JOIN = 256,            /* STRAIGHT_JOIN  */
  YYSYMBOL_SUBSTRING = 257,                /* SUBSTRING  */
  YYSYMBOL_SUM_SYM = 258,                  /* SUM_SYM  */
  YYSYMBOL_SYSDATE = 259,                  /* SYSDATE  */
  YYSYMBOL_TABLE_REF_PRIORITY = 260,       /* TABLE_REF_PRIORITY  */
  YYSYMBOL_TABLE_SYM = 261,                /* TABLE_SYM  */
  YYSYMBOL_TERMINATED = 262,               /* TERMINATED  */
  YYSYMBOL_TEXT_STRING = 263,              /* TEXT_STRING  */
  YYSYMBOL_THEN_SYM = 264,                 /* THEN_SYM  */
  YYSYMBOL_TINYBLOB = 265,                 /* TINYBLOB  */
  YYSYMBOL_TINYINT = 266,                  /* TINYINT  */
  YYSYMBOL_TINYTEXT = 267,                 /* TINYTEXT  */
  YYSYMBOL_TO_SYM = 268,                   /* TO_SYM  */
  YYSYMBOL_TRAILING = 269,                 /* TRAILING  */
  YYSYMBOL_TRIGGER_SYM = 270,              /* TRIGGER_SYM  */
  YYSYMBOL_TRIM = 271,                     /* TRIM  */
  YYSYMBOL_TRUE_SYM = 272,                 /* TRUE_SYM  */
  YYSYMBOL_ULONGLONG_NUM = 273,            /* ULONGLONG_NUM  */
  YYSYMBOL_UNDERSCORE_CHARSET = 274,       /* UNDERSCORE_CHARSET  */
  YYSYMBOL_UNDO_SYM = 275,                 /* UNDO_SYM  */
  YYSYMBOL_UNION_SYM = 276,                /* UNION_SYM  */
  YYSYMBOL_UNIQUE_SYM = 277,               /* UNIQUE_SYM  */
  YYSYMBOL_UNLOCK_SYM = 278,               /* UNLOCK_SYM  */
  YYSYMBOL_UNSIGNED = 279,                 /* UNSIGNED  */
  YYSYMBOL_UPDATE_SYM = 280,               /* UPDATE_SYM  */
  YYSYMBOL_USAGE = 281,                    /* USAGE  */
  YYSYMBOL_USE_SYM = 282,                  /* USE_SYM  */
  YYSYMBOL_USING = 283,                    /* USING  */
  YYSYMBOL_UTC_DATE_SYM = 284,             /* UTC_DATE_SYM  */
  YYSYMBOL_UTC_TIMESTAMP_SYM = 285,        /* UTC_TIMESTAMP_SYM  */
  YYSYMBOL_UTC_TIME_SYM = 286,             /* UTC_TIME_SYM  */
  YYSYMBOL_VALUES = 287,                   /* VALUES  */
  YYSYMBOL_VALUES_IN_SYM = 288,            /* VALUES_IN_SYM  */
  YYSYMBOL_VALUES_LESS_SYM = 289,          /* VALUES_LESS_SYM  */
  YYSYMBOL_VARBINARY = 290,                /* VARBINARY  */
  YYSYMBOL_VARCHAR = 291,                  /* VARCHAR  */
  YYSYMBOL_VARIANCE_SYM = 292,             /* VARIANCE_SYM  */
  YYSYMBOL_VARYING = 293,                  /* VARYING  */
  YYSYMBOL_VAR_SAMP_SYM = 294,             /* VAR_SAMP_SYM  */
  YYSYMBOL_WHEN_SYM = 295,                 /* WHEN_SYM  */
  YYSYMBOL_WHERE = 296,                    /* WHERE  */
  YYSYMBOL_WHILE_SYM = 297,                /* WHILE_SYM  */
  YYSYMBOL_WITH = 298,                     /* WITH  */
  YYSYMBOL_WITH_CUBE_SYM = 299,            /* WITH_CUBE_SYM  */
  YYSYMBOL_WITH_ROLLUP_SYM = 300,          /* WITH_ROLLUP_SYM  */
  YYSYMBOL_WITH_SYSTEM_SYM = 301,          /* WITH_SYSTEM_SYM  */
  YYSYMBOL_XOR = 302,                      /* XOR  */
  YYSYMBOL_YEAR_MONTH_SYM = 303,           /* YEAR_MONTH_SYM  */
  YYSYMBOL_ZEROFILL = 304,                 /* ZEROFILL  */
  YYSYMBOL_IMPOSSIBLE_ACTION = 305,        /* IMPOSSIBLE_ACTION  */
  YYSYMBOL_BODY_MARIADB_SYM = 306,         /* BODY_MARIADB_SYM  */
  YYSYMBOL_ELSEIF_ORACLE_SYM = 307,        /* ELSEIF_ORACLE_SYM  */
  YYSYMBOL_ELSIF_MARIADB_SYM = 308,        /* ELSIF_MARIADB_SYM  */
  YYSYMBOL_EXCEPTION_ORACLE_SYM = 309,     /* EXCEPTION_ORACLE_SYM  */
  YYSYMBOL_GOTO_MARIADB_SYM = 310,         /* GOTO_MARIADB_SYM  */
  YYSYMBOL_OTHERS_MARIADB_SYM = 311,       /* OTHERS_MARIADB_SYM  */
  YYSYMBOL_PACKAGE_MARIADB_SYM = 312,      /* PACKAGE_MARIADB_SYM  */
  YYSYMBOL_RAISE_MARIADB_SYM = 313,        /* RAISE_MARIADB_SYM  */
  YYSYMBOL_ROWTYPE_MARIADB_SYM = 314,      /* ROWTYPE_MARIADB_SYM  */
  YYSYMBOL_ACTION = 315,                   /* ACTION  */
  YYSYMBOL_ADMIN_SYM = 316,                /* ADMIN_SYM  */
  YYSYMBOL_ADDDATE_SYM = 317,              /* ADDDATE_SYM  */
  YYSYMBOL_AFTER_SYM = 318,                /* AFTER_SYM  */
  YYSYMBOL_AGAINST = 319,                  /* AGAINST  */
  YYSYMBOL_AGGREGATE_SYM = 320,            /* AGGREGATE_SYM  */
  YYSYMBOL_ALGORITHM_SYM = 321,            /* ALGORITHM_SYM  */
  YYSYMBOL_ALWAYS_SYM = 322,               /* ALWAYS_SYM  */
  YYSYMBOL_ANY_SYM = 323,                  /* ANY_SYM  */
  YYSYMBOL_ASCII_SYM = 324,                /* ASCII_SYM  */
  YYSYMBOL_AT_SYM = 325,                   /* AT_SYM  */
  YYSYMBOL_ATOMIC_SYM = 326,               /* ATOMIC_SYM  */
  YYSYMBOL_AUTHORS_SYM = 327,              /* AUTHORS_SYM  */
  YYSYMBOL_AUTOEXTEND_SIZE_SYM = 328,      /* AUTOEXTEND_SIZE_SYM  */
  YYSYMBOL_AUTO_INC = 329,                 /* AUTO_INC  */
  YYSYMBOL_AUTO_SYM = 330,                 /* AUTO_SYM  */
  YYSYMBOL_AVG_ROW_LENGTH = 331,           /* AVG_ROW_LENGTH  */
  YYSYMBOL_AVG_SYM = 332,                  /* AVG_SYM  */
  YYSYMBOL_BACKUP_SYM = 333,               /* BACKUP_SYM  */
  YYSYMBOL_BEGIN_MARIADB_SYM = 334,        /* BEGIN_MARIADB_SYM  */
  YYSYMBOL_BEGIN_ORACLE_SYM = 335,         /* BEGIN_ORACLE_SYM  */
  YYSYMBOL_BINLOG_SYM = 336,               /* BINLOG_SYM  */
  YYSYMBOL_BIT_SYM = 337,                  /* BIT_SYM  */
  YYSYMBOL_BLOCK_SYM = 338,                /* BLOCK_SYM  */
  YYSYMBOL_BOOL_SYM = 339,                 /* BOOL_SYM  */
  YYSYMBOL_BOOLEAN_SYM = 340,              /* BOOLEAN_SYM  */
  YYSYMBOL_BTREE_SYM = 341,                /* BTREE_SYM  */
  YYSYMBOL_BYTE_SYM = 342,                 /* BYTE_SYM  */
  YYSYMBOL_CACHE_SYM = 343,                /* CACHE_SYM  */
  YYSYMBOL_CASCADED = 344,                 /* CASCADED  */
  YYSYMBOL_CATALOG_NAME_SYM = 345,         /* CATALOG_NAME_SYM  */
  YYSYMBOL_CHAIN_SYM = 346,                /* CHAIN_SYM  */
  YYSYMBOL_CHANGED = 347,                  /* CHANGED  */
  YYSYMBOL_CHARSET = 348,                  /* CHARSET  */
  YYSYMBOL_CHECKPOINT_SYM = 349,           /* CHECKPOINT_SYM  */
  YYSYMBOL_CHECKSUM_SYM = 350,             /* CHECKSUM_SYM  */
  YYSYMBOL_CIPHER_SYM = 351,               /* CIPHER_SYM  */
  YYSYMBOL_CLASS_ORIGIN_SYM = 352,         /* CLASS_ORIGIN_SYM  */
  YYSYMBOL_CLIENT_SYM = 353,               /* CLIENT_SYM  */
  YYSYMBOL_CLOB_MARIADB_SYM = 354,         /* CLOB_MARIADB_SYM  */
  YYSYMBOL_CLOB_ORACLE_SYM = 355,          /* CLOB_ORACLE_SYM  */
  YYSYMBOL_CLOSE_SYM = 356,                /* CLOSE_SYM  */
  YYSYMBOL_COALESCE = 357,                 /* COALESCE  */
  YYSYMBOL_CODE_SYM = 358,                 /* CODE_SYM  */
  YYSYMBOL_COLLATION_SYM = 359,            /* COLLATION_SYM  */
  YYSYMBOL_COLON_ORACLE_SYM = 360,         /* COLON_ORACLE_SYM  */
  YYSYMBOL_COLUMNS = 361,                  /* COLUMNS  */
  YYSYMBOL_COLUMN_ADD_SYM = 362,           /* COLUMN_ADD_SYM  */
  YYSYMBOL_COLUMN_CHECK_SYM = 363,         /* COLUMN_CHECK_SYM  */
  YYSYMBOL_COLUMN_CREATE_SYM = 364,        /* COLUMN_CREATE_SYM  */
  YYSYMBOL_COLUMN_DELETE_SYM = 365,        /* COLUMN_DELETE_SYM  */
  YYSYMBOL_COLUMN_GET_SYM = 366,           /* COLUMN_GET_SYM  */
  YYSYMBOL_COLUMN_SYM = 367,               /* COLUMN_SYM  */
  YYSYMBOL_COLUMN_NAME_SYM = 368,          /* COLUMN_NAME_SYM  */
  YYSYMBOL_COMMENT_SYM = 369,              /* COMMENT_SYM  */
  YYSYMBOL_COMMITTED_SYM = 370,            /* COMMITTED_SYM  */
  YYSYMBOL_COMMIT_SYM = 371,               /* COMMIT_SYM  */
  YYSYMBOL_COMPACT_SYM = 372,              /* COMPACT_SYM  */
  YYSYMBOL_COMPLETION_SYM = 373,           /* COMPLETION_SYM  */
  YYSYMBOL_COMPRESSED_SYM = 374,           /* COMPRESSED_SYM  */
  YYSYMBOL_CONCURRENT = 375,               /* CONCURRENT  */
  YYSYMBOL_CONNECTION_SYM = 376,           /* CONNECTION_SYM  */
  YYSYMBOL_CONSISTENT_SYM = 377,           /* CONSISTENT_SYM  */
  YYSYMBOL_CONSTRAINT_CATALOG_SYM = 378,   /* CONSTRAINT_CATALOG_SYM  */
  YYSYMBOL_CONSTRAINT_NAME_SYM = 379,      /* CONSTRAINT_NAME_SYM  */
  YYSYMBOL_CONSTRAINT_SCHEMA_SYM = 380,    /* CONSTRAINT_SCHEMA_SYM  */
  YYSYMBOL_CONTAINS_SYM = 381,             /* CONTAINS_SYM  */
  YYSYMBOL_CONTEXT_SYM = 382,              /* CONTEXT_SYM  */
  YYSYMBOL_CONTRIBUTORS_SYM = 383,         /* CONTRIBUTORS_SYM  */
  YYSYMBOL_CPU_SYM = 384,                  /* CPU_SYM  */
  YYSYMBOL_CUBE_SYM = 385,                 /* CUBE_SYM  */
  YYSYMBOL_CURRENT_SYM = 386,              /* CURRENT_SYM  */
  YYSYMBOL_CURRENT_POS_SYM = 387,          /* CURRENT_POS_SYM  */
  YYSYMBOL_CURSOR_NAME_SYM = 388,          /* CURSOR_NAME_SYM  */
  YYSYMBOL_CYCLE_SYM = 389,                /* CYCLE_SYM  */
  YYSYMBOL_DATAFILE_SYM = 390,             /* DATAFILE_SYM  */
  YYSYMBOL_DATA_SYM = 391,                 /* DATA_SYM  */
  YYSYMBOL_DATETIME = 392,                 /* DATETIME  */
  YYSYMBOL_DATE_FORMAT_SYM = 393,          /* DATE_FORMAT_SYM  */
  YYSYMBOL_DATE_SYM = 394,                 /* DATE_SYM  */
  YYSYMBOL_DAY_SYM = 395,                  /* DAY_SYM  */
  YYSYMBOL_DEALLOCATE_SYM = 396,           /* DEALLOCATE_SYM  */
  YYSYMBOL_DECODE_MARIADB_SYM = 397,       /* DECODE_MARIADB_SYM  */
  YYSYMBOL_DECODE_ORACLE_SYM = 398,        /* DECODE_ORACLE_SYM  */
  YYSYMBOL_DEFINER_SYM = 399,              /* DEFINER_SYM  */
  YYSYMBOL_DELAYED_SYM = 400,              /* DELAYED_SYM  */
  YYSYMBOL_DELAY_KEY_WRITE_SYM = 401,      /* DELAY_KEY_WRITE_SYM  */
  YYSYMBOL_DES_KEY_FILE = 402,             /* DES_KEY_FILE  */
  YYSYMBOL_DIAGNOSTICS_SYM = 403,          /* DIAGNOSTICS_SYM  */
  YYSYMBOL_DIRECTORY_SYM = 404,            /* DIRECTORY_SYM  */
  YYSYMBOL_DISABLE_SYM = 405,              /* DISABLE_SYM  */
  YYSYMBOL_DISCARD = 406,                  /* DISCARD  */
  YYSYMBOL_DISK_SYM = 407,                 /* DISK_SYM  */
  YYSYMBOL_DO_SYM = 408,                   /* DO_SYM  */
  YYSYMBOL_DUMPFILE = 409,                 /* DUMPFILE  */
  YYSYMBOL_DUPLICATE_SYM = 410,            /* DUPLICATE_SYM  */
  YYSYMBOL_DYNAMIC_SYM = 411,              /* DYNAMIC_SYM  */
  YYSYMBOL_ENABLE_SYM = 412,               /* ENABLE_SYM  */
  YYSYMBOL_END = 413,                      /* END  */
  YYSYMBOL_ENDS_SYM = 414,                 /* ENDS_SYM  */
  YYSYMBOL_ENGINES_SYM = 415,              /* ENGINES_SYM  */
  YYSYMBOL_ENGINE_SYM = 416,               /* ENGINE_SYM  */
  YYSYMBOL_ENUM = 417,                     /* ENUM  */
  YYSYMBOL_ERROR_SYM = 418,                /* ERROR_SYM  */
  YYSYMBOL_ERRORS = 419,                   /* ERRORS  */
  YYSYMBOL_ESCAPE_SYM = 420,               /* ESCAPE_SYM  */
  YYSYMBOL_EVENTS_SYM = 421,               /* EVENTS_SYM  */
  YYSYMBOL_EVENT_SYM = 422,                /* EVENT_SYM  */
  YYSYMBOL_EVERY_SYM = 423,                /* EVERY_SYM  */
  YYSYMBOL_EXCHANGE_SYM = 424,             /* EXCHANGE_SYM  */
  YYSYMBOL_EXAMINED_SYM = 425,             /* EXAMINED_SYM  */
  YYSYMBOL_EXCLUDE_SYM = 426,              /* EXCLUDE_SYM  */
  YYSYMBOL_EXECUTE_SYM = 427,              /* EXECUTE_SYM  */
  YYSYMBOL_EXCEPTION_MARIADB_SYM = 428,    /* EXCEPTION_MARIADB_SYM  */
  YYSYMBOL_EXIT_MARIADB_SYM = 429,         /* EXIT_MARIADB_SYM  */
  YYSYMBOL_EXIT_ORACLE_SYM = 430,          /* EXIT_ORACLE_SYM  */
  YYSYMBOL_EXPANSION_SYM = 431,            /* EXPANSION_SYM  */
  YYSYMBOL_EXPORT_SYM = 432,               /* EXPORT_SYM  */
  YYSYMBOL_EXTENDED_SYM = 433,             /* EXTENDED_SYM  */
  YYSYMBOL_EXTENT_SIZE_SYM = 434,          /* EXTENT_SIZE_SYM  */
  YYSYMBOL_FAST_SYM = 435,                 /* FAST_SYM  */
  YYSYMBOL_FAULTS_SYM = 436,               /* FAULTS_SYM  */
  YYSYMBOL_FILE_SYM = 437,                 /* FILE_SYM  */
  YYSYMBOL_FIRST_SYM = 438,                /* FIRST_SYM  */
  YYSYMBOL_FIXED_SYM = 439,                /* FIXED_SYM  */
  YYSYMBOL_FLUSH_SYM = 440,                /* FLUSH_SYM  */
  YYSYMBOL_FOLLOWS_SYM = 441,              /* FOLLOWS_SYM  */
  YYSYMBOL_FOLLOWING_SYM = 442,            /* FOLLOWING_SYM  */
  YYSYMBOL_FORCE_SYM = 443,                /* FORCE_SYM  */
  YYSYMBOL_FORMAT_SYM = 444,               /* FORMAT_SYM  */
  YYSYMBOL_FOUND_SYM = 445,                /* FOUND_SYM  */
  YYSYMBOL_FULL = 446,                     /* FULL  */
  YYSYMBOL_FUNCTION_SYM = 447,             /* FUNCTION_SYM  */
  YYSYMBOL_GENERAL = 448,                  /* GENERAL  */
  YYSYMBOL_GENERATED_SYM = 449,            /* GENERATED_SYM  */
  YYSYMBOL_GEOMETRYCOLLECTION = 450,       /* GEOMETRYCOLLECTION  */
  YYSYMBOL_GEOMETRY_SYM = 451,             /* GEOMETRY_SYM  */
  YYSYMBOL_GET_FORMAT = 452,               /* GET_FORMAT  */
  YYSYMBOL_GET_SYM = 453,                  /* GET_SYM  */
  YYSYMBOL_GLOBAL_SYM = 454,               /* GLOBAL_SYM  */
  YYSYMBOL_GRANTS = 455,                   /* GRANTS  */
  YYSYMBOL_HANDLER_SYM = 456,              /* HANDLER_SYM  */
  YYSYMBOL_HARD_SYM = 457,                 /* HARD_SYM  */
  YYSYMBOL_HASH_SYM = 458,                 /* HASH_SYM  */
  YYSYMBOL_HELP_SYM = 459,                 /* HELP_SYM  */
  YYSYMBOL_HIGH_PRIORITY = 460,            /* HIGH_PRIORITY  */
  YYSYMBOL_HISTORY_SYM = 461,              /* HISTORY_SYM  */
  YYSYMBOL_HOST_SYM = 462,                 /* HOST_SYM  */
  YYSYMBOL_HOSTS_SYM = 463,                /* HOSTS_SYM  */
  YYSYMBOL_HOUR_SYM = 464,                 /* HOUR_SYM  */
  YYSYMBOL_ID_SYM = 465,                   /* ID_SYM  */
  YYSYMBOL_IDENTIFIED_SYM = 466,           /* IDENTIFIED_SYM  */
  YYSYMBOL_IGNORE_SERVER_IDS_SYM = 467,    /* IGNORE_SERVER_IDS_SYM  */
  YYSYMBOL_IMMEDIATE_SYM = 468,            /* IMMEDIATE_SYM  */
  YYSYMBOL_IMPORT = 469,                   /* IMPORT  */
  YYSYMBOL_INCREMENT_SYM = 470,            /* INCREMENT_SYM  */
  YYSYMBOL_INDEXES = 471,                  /* INDEXES  */
  YYSYMBOL_INITIAL_SIZE_SYM = 472,         /* INITIAL_SIZE_SYM  */
  YYSYMBOL_INSERT_METHOD = 473,            /* INSERT_METHOD  */
  YYSYMBOL_INSTALL_SYM = 474,              /* INSTALL_SYM  */
  YYSYMBOL_INVOKER_SYM = 475,              /* INVOKER_SYM  */
  YYSYMBOL_IO_SYM = 476,                   /* IO_SYM  */
  YYSYMBOL_IPC_SYM = 477,                  /* IPC_SYM  */
  YYSYMBOL_ISOLATION = 478,                /* ISOLATION  */
  YYSYMBOL_ISOPEN_SYM = 479,               /* ISOPEN_SYM  */
  YYSYMBOL_ISSUER_SYM = 480,               /* ISSUER_SYM  */
  YYSYMBOL_INVISIBLE_SYM = 481,            /* INVISIBLE_SYM  */
  YYSYMBOL_JSON_SYM = 482,                 /* JSON_SYM  */
  YYSYMBOL_KEY_BLOCK_SIZE = 483,           /* KEY_BLOCK_SIZE  */
  YYSYMBOL_LANGUAGE_SYM = 484,             /* LANGUAGE_SYM  */
  YYSYMBOL_LAST_SYM = 485,                 /* LAST_SYM  */
  YYSYMBOL_LAST_VALUE = 486,               /* LAST_VALUE  */
  YYSYMBOL_LASTVAL_SYM = 487,              /* LASTVAL_SYM  */
  YYSYMBOL_LEAVES = 488,                   /* LEAVES  */
  YYSYMBOL_LESS_SYM = 489,                 /* LESS_SYM  */
  YYSYMBOL_LEVEL_SYM = 490,                /* LEVEL_SYM  */
  YYSYMBOL_LINESTRING = 491,               /* LINESTRING  */
  YYSYMBOL_LIST_SYM = 492,                 /* LIST_SYM  */
  YYSYMBOL_LOCAL_SYM = 493,                /* LOCAL_SYM  */
  YYSYMBOL_LOCKS_SYM = 494,                /* LOCKS_SYM  */
  YYSYMBOL_LOGFILE_SYM = 495,              /* LOGFILE_SYM  */
  YYSYMBOL_LOGS_SYM = 496,                 /* LOGS_SYM  */
  YYSYMBOL_MASTER_CONNECT_RETRY_SYM = 497, /* MASTER_CONNECT_RETRY_SYM  */
  YYSYMBOL_MASTER_DELAY_SYM = 498,         /* MASTER_DELAY_SYM  */
  YYSYMBOL_MASTER_GTID_POS_SYM = 499,      /* MASTER_GTID_POS_SYM  */
  YYSYMBOL_MASTER_HOST_SYM = 500,          /* MASTER_HOST_SYM  */
  YYSYMBOL_MASTER_LOG_FILE_SYM = 501,      /* MASTER_LOG_FILE_SYM  */
  YYSYMBOL_MASTER_LOG_POS_SYM = 502,       /* MASTER_LOG_POS_SYM  */
  YYSYMBOL_MASTER_PASSWORD_SYM = 503,      /* MASTER_PASSWORD_SYM  */
  YYSYMBOL_MASTER_PORT_SYM = 504,          /* MASTER_PORT_SYM  */
  YYSYMBOL_MASTER_SERVER_ID_SYM = 505,     /* MASTER_SERVER_ID_SYM  */
  YYSYMBOL_MASTER_SSL_CAPATH_SYM = 506,    /* MASTER_SSL_CAPATH_SYM  */
  YYSYMBOL_MASTER_SSL_CA_SYM = 507,        /* MASTER_SSL_CA_SYM  */
  YYSYMBOL_MASTER_SSL_CERT_SYM = 508,      /* MASTER_SSL_CERT_SYM  */
  YYSYMBOL_MASTER_SSL_CIPHER_SYM = 509,    /* MASTER_SSL_CIPHER_SYM  */
  YYSYMBOL_MASTER_SSL_CRL_SYM = 510,       /* MASTER_SSL_CRL_SYM  */
  YYSYMBOL_MASTER_SSL_CRLPATH_SYM = 511,   /* MASTER_SSL_CRLPATH_SYM  */
  YYSYMBOL_MASTER_SSL_KEY_SYM = 512,       /* MASTER_SSL_KEY_SYM  */
  YYSYMBOL_MASTER_SSL_SYM = 513,           /* MASTER_SSL_SYM  */
  YYSYMBOL_MASTER_SYM = 514,               /* MASTER_SYM  */
  YYSYMBOL_MASTER_USER_SYM = 515,          /* MASTER_USER_SYM  */
  YYSYMBOL_MASTER_USE_GTID_SYM = 516,      /* MASTER_USE_GTID_SYM  */
  YYSYMBOL_MASTER_HEARTBEAT_PERIOD_SYM = 517, /* MASTER_HEARTBEAT_PERIOD_SYM  */
  YYSYMBOL_MAX_CONNECTIONS_PER_HOUR = 518, /* MAX_CONNECTIONS_PER_HOUR  */
  YYSYMBOL_MAX_QUERIES_PER_HOUR = 519,     /* MAX_QUERIES_PER_HOUR  */
  YYSYMBOL_MAX_ROWS = 520,                 /* MAX_ROWS  */
  YYSYMBOL_MAX_SIZE_SYM = 521,             /* MAX_SIZE_SYM  */
  YYSYMBOL_MAX_UPDATES_PER_HOUR = 522,     /* MAX_UPDATES_PER_HOUR  */
  YYSYMBOL_MAX_STATEMENT_TIME_SYM = 523,   /* MAX_STATEMENT_TIME_SYM  */
  YYSYMBOL_MAX_USER_CONNECTIONS_SYM = 524, /* MAX_USER_CONNECTIONS_SYM  */
  YYSYMBOL_MEDIUM_SYM = 525,               /* MEDIUM_SYM  */
  YYSYMBOL_MEMORY_SYM = 526,               /* MEMORY_SYM  */
  YYSYMBOL_MERGE_SYM = 527,                /* MERGE_SYM  */
  YYSYMBOL_MESSAGE_TEXT_SYM = 528,         /* MESSAGE_TEXT_SYM  */
  YYSYMBOL_MICROSECOND_SYM = 529,          /* MICROSECOND_SYM  */
  YYSYMBOL_MIGRATE_SYM = 530,              /* MIGRATE_SYM  */
  YYSYMBOL_MINUTE_SYM = 531,               /* MINUTE_SYM  */
  YYSYMBOL_MINVALUE_SYM = 532,             /* MINVALUE_SYM  */
  YYSYMBOL_MIN_ROWS = 533,                 /* MIN_ROWS  */
  YYSYMBOL_MODE_SYM = 534,                 /* MODE_SYM  */
  YYSYMBOL_MODIFY_SYM = 535,               /* MODIFY_SYM  */
  YYSYMBOL_MONTH_SYM = 536,                /* MONTH_SYM  */
  YYSYMBOL_MULTILINESTRING = 537,          /* MULTILINESTRING  */
  YYSYMBOL_MULTIPOINT = 538,               /* MULTIPOINT  */
  YYSYMBOL_MULTIPOLYGON = 539,             /* MULTIPOLYGON  */
  YYSYMBOL_MUTEX_SYM = 540,                /* MUTEX_SYM  */
  YYSYMBOL_MYSQL_SYM = 541,                /* MYSQL_SYM  */
  YYSYMBOL_MYSQL_ERRNO_SYM = 542,          /* MYSQL_ERRNO_SYM  */
  YYSYMBOL_NAMES_SYM = 543,                /* NAMES_SYM  */
  YYSYMBOL_NAME_SYM = 544,                 /* NAME_SYM  */
  YYSYMBOL_NATIONAL_SYM = 545,             /* NATIONAL_SYM  */
  YYSYMBOL_NCHAR_SYM = 546,                /* NCHAR_SYM  */
  YYSYMBOL_NEW_SYM = 547,                  /* NEW_SYM  */
  YYSYMBOL_NEXT_SYM = 548,                 /* NEXT_SYM  */
  YYSYMBOL_NEXTVAL_SYM = 549,              /* NEXTVAL_SYM  */
  YYSYMBOL_NOCACHE_SYM = 550,              /* NOCACHE_SYM  */
  YYSYMBOL_NOCYCLE_SYM = 551,              /* NOCYCLE_SYM  */
  YYSYMBOL_NODEGROUP_SYM = 552,            /* NODEGROUP_SYM  */
  YYSYMBOL_NONE_SYM = 553,                 /* NONE_SYM  */
  YYSYMBOL_NOTFOUND_SYM = 554,             /* NOTFOUND_SYM  */
  YYSYMBOL_NO_SYM = 555,                   /* NO_SYM  */
  YYSYMBOL_NOMAXVALUE_SYM = 556,           /* NOMAXVALUE_SYM  */
  YYSYMBOL_NOMINVALUE_SYM = 557,           /* NOMINVALUE_SYM  */
  YYSYMBOL_NO_WAIT_SYM = 558,              /* NO_WAIT_SYM  */
  YYSYMBOL_NOWAIT_SYM = 559,               /* NOWAIT_SYM  */
  YYSYMBOL_NUMBER_MARIADB_SYM = 560,       /* NUMBER_MARIADB_SYM  */
  YYSYMBOL_NUMBER_ORACLE_SYM = 561,        /* NUMBER_ORACLE_SYM  */
  YYSYMBOL_NVARCHAR_SYM = 562,             /* NVARCHAR_SYM  */
  YYSYMBOL_OF_SYM = 563,                   /* OF_SYM  */
  YYSYMBOL_OFFSET_SYM = 564,               /* OFFSET_SYM  */
  YYSYMBOL_OLD_PASSWORD_SYM = 565,         /* OLD_PASSWORD_SYM  */
  YYSYMBOL_ONE_SYM = 566,                  /* ONE_SYM  */
  YYSYMBOL_ONLY_SYM = 567,                 /* ONLY_SYM  */
  YYSYMBOL_ONLINE_SYM = 568,               /* ONLINE_SYM  */
  YYSYMBOL_OPEN_SYM = 569,                 /* OPEN_SYM  */
  YYSYMBOL_OPTIONS_SYM = 570,              /* OPTIONS_SYM  */
  YYSYMBOL_OPTION = 571,                   /* OPTION  */
  YYSYMBOL_OWNER_SYM = 572,                /* OWNER_SYM  */
  YYSYMBOL_PACK_KEYS_SYM = 573,            /* PACK_KEYS_SYM  */
  YYSYMBOL_PAGE_SYM = 574,                 /* PAGE_SYM  */
  YYSYMBOL_PARSER_SYM = 575,               /* PARSER_SYM  */
  YYSYMBOL_PARTIAL = 576,                  /* PARTIAL  */
  YYSYMBOL_PARTITIONS_SYM = 577,           /* PARTITIONS_SYM  */
  YYSYMBOL_PARTITIONING_SYM = 578,         /* PARTITIONING_SYM  */
  YYSYMBOL_PASSWORD_SYM = 579,             /* PASSWORD_SYM  */
  YYSYMBOL_PERIOD_SYM = 580,               /* PERIOD_SYM  */
  YYSYMBOL_PERSISTENT_SYM = 581,           /* PERSISTENT_SYM  */
  YYSYMBOL_PHASE_SYM = 582,                /* PHASE_SYM  */
  YYSYMBOL_PLUGINS_SYM = 583,              /* PLUGINS_SYM  */
  YYSYMBOL_PLUGIN_SYM = 584,               /* PLUGIN_SYM  */
  YYSYMBOL_POINT_SYM = 585,                /* POINT_SYM  */
  YYSYMBOL_POLYGON = 586,                  /* POLYGON  */
  YYSYMBOL_PORT_SYM = 587,                 /* PORT_SYM  */
  YYSYMBOL_PRECEDES_SYM = 588,             /* PRECEDES_SYM  */
  YYSYMBOL_PRECEDING_SYM = 589,            /* PRECEDING_SYM  */
  YYSYMBOL_PREPARE_SYM = 590,              /* PREPARE_SYM  */
  YYSYMBOL_PRESERVE_SYM = 591,             /* PRESERVE_SYM  */
  YYSYMBOL_PREV_SYM = 592,                 /* PREV_SYM  */
  YYSYMBOL_PREVIOUS_SYM = 593,             /* PREVIOUS_SYM  */
  YYSYMBOL_PRIVILEGES = 594,               /* PRIVILEGES  */
  YYSYMBOL_PROCESS = 595,                  /* PROCESS  */
  YYSYMBOL_PROCESSLIST_SYM = 596,          /* PROCESSLIST_SYM  */
  YYSYMBOL_PROFILE_SYM = 597,              /* PROFILE_SYM  */
  YYSYMBOL_PROFILES_SYM = 598,             /* PROFILES_SYM  */
  YYSYMBOL_PROXY_SYM = 599,                /* PROXY_SYM  */
  YYSYMBOL_QUARTER_SYM = 600,              /* QUARTER_SYM  */
  YYSYMBOL_QUERY_SYM = 601,                /* QUERY_SYM  */
  YYSYMBOL_QUICK = 602,                    /* QUICK  */
  YYSYMBOL_RAW_MARIADB_SYM = 603,          /* RAW_MARIADB_SYM  */
  YYSYMBOL_RAW_ORACLE_SYM = 604,           /* RAW_ORACLE_SYM  */
  YYSYMBOL_READ_ONLY_SYM = 605,            /* READ_ONLY_SYM  */
  YYSYMBOL_REBUILD_SYM = 606,              /* REBUILD_SYM  */
  YYSYMBOL_RECOVER_SYM = 607,              /* RECOVER_SYM  */
  YYSYMBOL_REDOFILE_SYM = 608,             /* REDOFILE_SYM  */
  YYSYMBOL_REDO_BUFFER_SIZE_SYM = 609,     /* REDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_REDUNDANT_SYM = 610,            /* REDUNDANT_SYM  */
  YYSYMBOL_RELAY = 611,                    /* RELAY  */
  YYSYMBOL_RELAYLOG_SYM = 612,             /* RELAYLOG_SYM  */
  YYSYMBOL_RELAY_LOG_FILE_SYM = 613,       /* RELAY_LOG_FILE_SYM  */
  YYSYMBOL_RELAY_LOG_POS_SYM = 614,        /* RELAY_LOG_POS_SYM  */
  YYSYMBOL_RELAY_THREAD = 615,             /* RELAY_THREAD  */
  YYSYMBOL_RELOAD = 616,                   /* RELOAD  */
  YYSYMBOL_REMOVE_SYM = 617,               /* REMOVE_SYM  */
  YYSYMBOL_REORGANIZE_SYM = 618,           /* REORGANIZE_SYM  */
  YYSYMBOL_REPAIR = 619,                   /* REPAIR  */
  YYSYMBOL_REPEATABLE_SYM = 620,           /* REPEATABLE_SYM  */
  YYSYMBOL_REPLICATION = 621,              /* REPLICATION  */
  YYSYMBOL_RESET_SYM = 622,                /* RESET_SYM  */
  YYSYMBOL_RESTART_SYM = 623,              /* RESTART_SYM  */
  YYSYMBOL_RESOURCES = 624,                /* RESOURCES  */
  YYSYMBOL_RESTORE_SYM = 625,              /* RESTORE_SYM  */
  YYSYMBOL_RESUME_SYM = 626,               /* RESUME_SYM  */
  YYSYMBOL_RETURNED_SQLSTATE_SYM = 627,    /* RETURNED_SQLSTATE_SYM  */
  YYSYMBOL_RETURNS_SYM = 628,              /* RETURNS_SYM  */
  YYSYMBOL_REUSE_SYM = 629,                /* REUSE_SYM  */
  YYSYMBOL_REVERSE_SYM = 630,              /* REVERSE_SYM  */
  YYSYMBOL_ROLE_SYM = 631,                 /* ROLE_SYM  */
  YYSYMBOL_ROLLBACK_SYM = 632,             /* ROLLBACK_SYM  */
  YYSYMBOL_ROLLUP_SYM = 633,               /* ROLLUP_SYM  */
  YYSYMBOL_ROUTINE_SYM = 634,              /* ROUTINE_SYM  */
  YYSYMBOL_ROWCOUNT_SYM = 635,             /* ROWCOUNT_SYM  */
  YYSYMBOL_ROW_SYM = 636,                  /* ROW_SYM  */
  YYSYMBOL_ROW_COUNT_SYM = 637,            /* ROW_COUNT_SYM  */
  YYSYMBOL_ROW_FORMAT_SYM = 638,           /* ROW_FORMAT_SYM  */
  YYSYMBOL_RTREE_SYM = 639,                /* RTREE_SYM  */
  YYSYMBOL_SAVEPOINT_SYM = 640,            /* SAVEPOINT_SYM  */
  YYSYMBOL_SCHEDULE_SYM = 641,             /* SCHEDULE_SYM  */
  YYSYMBOL_SCHEMA_NAME_SYM = 642,          /* SCHEMA_NAME_SYM  */
  YYSYMBOL_SECOND_SYM = 643,               /* SECOND_SYM  */
  YYSYMBOL_SECURITY_SYM = 644,             /* SECURITY_SYM  */
  YYSYMBOL_SEQUENCE_SYM = 645,             /* SEQUENCE_SYM  */
  YYSYMBOL_SERIALIZABLE_SYM = 646,         /* SERIALIZABLE_SYM  */
  YYSYMBOL_SERIAL_SYM = 647,               /* SERIAL_SYM  */
  YYSYMBOL_SESSION_SYM = 648,              /* SESSION_SYM  */
  YYSYMBOL_SERVER_SYM = 649,               /* SERVER_SYM  */
  YYSYMBOL_SETVAL_SYM = 650,               /* SETVAL_SYM  */
  YYSYMBOL_SHARE_SYM = 651,                /* SHARE_SYM  */
  YYSYMBOL_SHUTDOWN = 652,                 /* SHUTDOWN  */
  YYSYMBOL_SIGNED_SYM = 653,               /* SIGNED_SYM  */
  YYSYMBOL_SIMPLE_SYM = 654,               /* SIMPLE_SYM  */
  YYSYMBOL_SLAVE = 655,                    /* SLAVE  */
  YYSYMBOL_SLAVES = 656,                   /* SLAVES  */
  YYSYMBOL_SLAVE_POS_SYM = 657,            /* SLAVE_POS_SYM  */
  YYSYMBOL_SLOW = 658,                     /* SLOW  */
  YYSYMBOL_SNAPSHOT_SYM = 659,             /* SNAPSHOT_SYM  */
  YYSYMBOL_SOCKET_SYM = 660,               /* SOCKET_SYM  */
  YYSYMBOL_SOFT_SYM = 661,                 /* SOFT_SYM  */
  YYSYMBOL_SONAME_SYM = 662,               /* SONAME_SYM  */
  YYSYMBOL_SOUNDS_SYM = 663,               /* SOUNDS_SYM  */
  YYSYMBOL_SOURCE_SYM = 664,               /* SOURCE_SYM  */
  YYSYMBOL_SQL_BUFFER_RESULT = 665,        /* SQL_BUFFER_RESULT  */
  YYSYMBOL_SQL_CACHE_SYM = 666,            /* SQL_CACHE_SYM  */
  YYSYMBOL_SQL_CALC_FOUND_ROWS = 667,      /* SQL_CALC_FOUND_ROWS  */
  YYSYMBOL_SQL_NO_CACHE_SYM = 668,         /* SQL_NO_CACHE_SYM  */
  YYSYMBOL_SQL_THREAD = 669,               /* SQL_THREAD  */
  YYSYMBOL_STARTS_SYM = 670,               /* STARTS_SYM  */
  YYSYMBOL_START_SYM = 671,                /* START_SYM  */
  YYSYMBOL_STATEMENT_SYM = 672,            /* STATEMENT_SYM  */
  YYSYMBOL_STATUS_SYM = 673,               /* STATUS_SYM  */
  YYSYMBOL_STOP_SYM = 674,                 /* STOP_SYM  */
  YYSYMBOL_STORAGE_SYM = 675,              /* STORAGE_SYM  */
  YYSYMBOL_STORED_SYM = 676,               /* STORED_SYM  */
  YYSYMBOL_STRING_SYM = 677,               /* STRING_SYM  */
  YYSYMBOL_SUBCLASS_ORIGIN_SYM = 678,      /* SUBCLASS_ORIGIN_SYM  */
  YYSYMBOL_SUBDATE_SYM = 679,              /* SUBDATE_SYM  */
  YYSYMBOL_SUBJECT_SYM = 680,              /* SUBJECT_SYM  */
  YYSYMBOL_SUBPARTITIONS_SYM = 681,        /* SUBPARTITIONS_SYM  */
  YYSYMBOL_SUBPARTITION_SYM = 682,         /* SUBPARTITION_SYM  */
  YYSYMBOL_SUPER_SYM = 683,                /* SUPER_SYM  */
  YYSYMBOL_SUSPEND_SYM = 684,              /* SUSPEND_SYM  */
  YYSYMBOL_SWAPS_SYM = 685,                /* SWAPS_SYM  */
  YYSYMBOL_SWITCHES_SYM = 686,             /* SWITCHES_SYM  */
  YYSYMBOL_SYSTEM = 687,                   /* SYSTEM  */
  YYSYMBOL_SYSTEM_TIME_SYM = 688,          /* SYSTEM_TIME_SYM  */
  YYSYMBOL_TABLES = 689,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 690,               /* TABLESPACE  */
  YYSYMBOL_TABLE_CHECKSUM_SYM = 691,       /* TABLE_CHECKSUM_SYM  */
  YYSYMBOL_TABLE_NAME_SYM = 692,           /* TABLE_NAME_SYM  */
  YYSYMBOL_TEMPORARY = 693,                /* TEMPORARY  */
  YYSYMBOL_TEMPTABLE_SYM = 694,            /* TEMPTABLE_SYM  */
  YYSYMBOL_TEXT_SYM = 695,                 /* TEXT_SYM  */
  YYSYMBOL_THAN_SYM = 696,                 /* THAN_SYM  */
  YYSYMBOL_TIES_SYM = 697,                 /* TIES_SYM  */
  YYSYMBOL_TIMESTAMP = 698,                /* TIMESTAMP  */
  YYSYMBOL_TIMESTAMP_ADD = 699,            /* TIMESTAMP_ADD  */
  YYSYMBOL_TIMESTAMP_DIFF = 700,           /* TIMESTAMP_DIFF  */
  YYSYMBOL_TIME_SYM = 701,                 /* TIME_SYM  */
  YYSYMBOL_TRANSACTION_SYM = 702,          /* TRANSACTION_SYM  */
  YYSYMBOL_TRANSACTIONAL_SYM = 703,        /* TRANSACTIONAL_SYM  */
  YYSYMBOL_TRIGGERS_SYM = 704,             /* TRIGGERS_SYM  */
  YYSYMBOL_TRIM_ORACLE = 705,              /* TRIM_ORACLE  */
  YYSYMBOL_TRUNCATE_SYM = 706,             /* TRUNCATE_SYM  */
  YYSYMBOL_TYPES_SYM = 707,                /* TYPES_SYM  */
  YYSYMBOL_TYPE_SYM = 708,                 /* TYPE_SYM  */
  YYSYMBOL_UDF_RETURNS_SYM = 709,          /* UDF_RETURNS_SYM  */
  YYSYMBOL_UNBOUNDED_SYM = 710,            /* UNBOUNDED_SYM  */
  YYSYMBOL_UNCOMMITTED_SYM = 711,          /* UNCOMMITTED_SYM  */
  YYSYMBOL_UNDEFINED_SYM = 712,            /* UNDEFINED_SYM  */
  YYSYMBOL_UNDOFILE_SYM = 713,             /* UNDOFILE_SYM  */
  YYSYMBOL_UNDO_BUFFER_SIZE_SYM = 714,     /* UNDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_UNICODE_SYM = 715,              /* UNICODE_SYM  */
  YYSYMBOL_UNINSTALL_SYM = 716,            /* UNINSTALL_SYM  */
  YYSYMBOL_UNKNOWN_SYM = 717,              /* UNKNOWN_SYM  */
  YYSYMBOL_UNTIL_SYM = 718,                /* UNTIL_SYM  */
  YYSYMBOL_UPGRADE_SYM = 719,              /* UPGRADE_SYM  */
  YYSYMBOL_USER_SYM = 720,                 /* USER_SYM  */
  YYSYMBOL_USE_FRM = 721,                  /* USE_FRM  */
  YYSYMBOL_VALUE_SYM = 722,                /* VALUE_SYM  */
  YYSYMBOL_VARCHAR2_MARIADB_SYM = 723,     /* VARCHAR2_MARIADB_SYM  */
  YYSYMBOL_VARCHAR2_ORACLE_SYM = 724,      /* VARCHAR2_ORACLE_SYM  */
  YYSYMBOL_VARIABLES = 725,                /* VARIABLES  */
  YYSYMBOL_VERSIONING_SYM = 726,           /* VERSIONING_SYM  */
  YYSYMBOL_VIA_SYM = 727,                  /* VIA_SYM  */
  YYSYMBOL_VIEW_SYM = 728,                 /* VIEW_SYM  */
  YYSYMBOL_VIRTUAL_SYM = 729,              /* VIRTUAL_SYM  */
  YYSYMBOL_WAIT_SYM = 730,                 /* WAIT_SYM  */
  YYSYMBOL_WARNINGS = 731,                 /* WARNINGS  */
  YYSYMBOL_WEEK_SYM = 732,                 /* WEEK_SYM  */
  YYSYMBOL_WEIGHT_STRING_SYM = 733,        /* WEIGHT_STRING_SYM  */
  YYSYMBOL_WINDOW_SYM = 734,               /* WINDOW_SYM  */
  YYSYMBOL_WITHIN = 735,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 736,                  /* WITHOUT  */
  YYSYMBOL_WORK_SYM = 737,                 /* WORK_SYM  */
  YYSYMBOL_WRAPPER_SYM = 738,              /* WRAPPER_SYM  */
  YYSYMBOL_WRITE_SYM = 739,                /* WRITE_SYM  */
  YYSYMBOL_X509_SYM = 740,                 /* X509_SYM  */
  YYSYMBOL_XA_SYM = 741,                   /* XA_SYM  */
  YYSYMBOL_XML_SYM = 742,                  /* XML_SYM  */
  YYSYMBOL_YEAR_SYM = 743,                 /* YEAR_SYM  */
  YYSYMBOL_CONDITIONLESS_JOIN = 744,       /* CONDITIONLESS_JOIN  */
  YYSYMBOL_ON_SYM = 745,                   /* ON_SYM  */
  YYSYMBOL_PREC_BELOW_NOT = 746,           /* PREC_BELOW_NOT  */
  YYSYMBOL_747_ = 747,                     /* '='  */
  YYSYMBOL_748_ = 748,                     /* '>'  */
  YYSYMBOL_749_ = 749,                     /* '<'  */
  YYSYMBOL_750_ = 750,                     /* '|'  */
  YYSYMBOL_751_ = 751,                     /* '&'  */
  YYSYMBOL_752_ = 752,                     /* '-'  */
  YYSYMBOL_753_ = 753,                     /* '+'  */
  YYSYMBOL_754_ = 754,                     /* '*'  */
  YYSYMBOL_755_ = 755,                     /* '/'  */
  YYSYMBOL_756_ = 756,                     /* '%'  */
  YYSYMBOL_757_ = 757,                     /* '^'  */
  YYSYMBOL_758_ = 758,                     /* '~'  */
  YYSYMBOL_PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 759, /* PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE  */
  YYSYMBOL_USER = 760,                     /* USER  */
  YYSYMBOL_PREC_BELOW_CONTRACTION_TOKEN2 = 761, /* PREC_BELOW_CONTRACTION_TOKEN2  */
  YYSYMBOL_762_ = 762,                     /* '('  */
  YYSYMBOL_763_ = 763,                     /* ')'  */
  YYSYMBOL_764_ = 764,                     /* ','  */
  YYSYMBOL_765_ = 765,                     /* '!'  */
  YYSYMBOL_766_ = 766,                     /* '{'  */
  YYSYMBOL_767_ = 767,                     /* '}'  */
  YYSYMBOL_768_ = 768,                     /* ';'  */
  YYSYMBOL_769_ = 769,                     /* '.'  */
  YYSYMBOL_770_ = 770,                     /* '@'  */
  YYSYMBOL_YYACCEPT = 771,                 /* $accept  */
  YYSYMBOL_query = 772,                    /* query  */
  YYSYMBOL_773_1 = 773,                    /* $@1  */
  YYSYMBOL_opt_end_of_input = 774,         /* opt_end_of_input  */
  YYSYMBOL_verb_clause = 775,              /* verb_clause  */
  YYSYMBOL_statement = 776,                /* statement  */
  YYSYMBOL_deallocate = 777,               /* deallocate  */
  YYSYMBOL_deallocate_or_drop = 778,       /* deallocate_or_drop  */
  YYSYMBOL_prepare = 779,                  /* prepare  */
  YYSYMBOL_prepare_src = 780,              /* prepare_src  */
  YYSYMBOL_781_2 = 781,                    /* $@2  */
  YYSYMBOL_execute = 782,                  /* execute  */
  YYSYMBOL_783_3 = 783,                    /* $@3  */
  YYSYMBOL_784_4 = 784,                    /* $@4  */
  YYSYMBOL_execute_using = 785,            /* execute_using  */
  YYSYMBOL_786_5 = 786,                    /* $@5  */
  YYSYMBOL_execute_var_list = 787,         /* execute_var_list  */
  YYSYMBOL_execute_var_ident = 788,        /* execute_var_ident  */
  YYSYMBOL_help = 789,                     /* help  */
  YYSYMBOL_790_6 = 790,                    /* $@6  */
  YYSYMBOL_change = 791,                   /* change  */
  YYSYMBOL_792_7 = 792,                    /* $@7  */
  YYSYMBOL_master_defs = 793,              /* master_defs  */
  YYSYMBOL_master_def = 794,               /* master_def  */
  YYSYMBOL_ignore_server_id_list = 795,    /* ignore_server_id_list  */
  YYSYMBOL_ignore_server_id = 796,         /* ignore_server_id  */
  YYSYMBOL_do_domain_id_list = 797,        /* do_domain_id_list  */
  YYSYMBOL_do_domain_id = 798,             /* do_domain_id  */
  YYSYMBOL_ignore_domain_id_list = 799,    /* ignore_domain_id_list  */
  YYSYMBOL_ignore_domain_id = 800,         /* ignore_domain_id  */
  YYSYMBOL_master_file_def = 801,          /* master_file_def  */
  YYSYMBOL_optional_connection_name = 802, /* optional_connection_name  */
  YYSYMBOL_connection_name = 803,          /* connection_name  */
  YYSYMBOL_create = 804,                   /* create  */
  YYSYMBOL_805_8 = 805,                    /* $@8  */
  YYSYMBOL_806_9 = 806,                    /* $@9  */
  YYSYMBOL_807_10 = 807,                   /* $@10  */
  YYSYMBOL_808_11 = 808,                   /* $@11  */
  YYSYMBOL_809_12 = 809,                   /* $@12  */
  YYSYMBOL_810_13 = 810,                   /* $@13  */
  YYSYMBOL_811_14 = 811,                   /* $@14  */
  YYSYMBOL_812_15 = 812,                   /* $@15  */
  YYSYMBOL_813_16 = 813,                   /* $@16  */
  YYSYMBOL_814_17 = 814,                   /* $@17  */
  YYSYMBOL_815_18 = 815,                   /* $@18  */
  YYSYMBOL_816_19 = 816,                   /* $@19  */
  YYSYMBOL_817_20 = 817,                   /* $@20  */
  YYSYMBOL_818_21 = 818,                   /* $@21  */
  YYSYMBOL_819_22 = 819,                   /* $@22  */
  YYSYMBOL_820_23 = 820,                   /* $@23  */
  YYSYMBOL_821_24 = 821,                   /* $@24  */
  YYSYMBOL_822_25 = 822,                   /* $@25  */
  YYSYMBOL_823_26 = 823,                   /* $@26  */
  YYSYMBOL_package_implementation_executable_section = 824, /* package_implementation_executable_section  */
  YYSYMBOL_package_implementation_declare_section = 825, /* package_implementation_declare_section  */
  YYSYMBOL_package_implementation_declare_section_list1 = 826, /* package_implementation_declare_section_list1  */
  YYSYMBOL_package_implementation_declare_section_list2 = 827, /* package_implementation_declare_section_list2  */
  YYSYMBOL_package_routine_lex = 828,      /* package_routine_lex  */
  YYSYMBOL_package_specification_function = 829, /* package_specification_function  */
  YYSYMBOL_830_27 = 830,                   /* $@27  */
  YYSYMBOL_package_specification_procedure = 831, /* package_specification_procedure  */
  YYSYMBOL_832_28 = 832,                   /* $@28  */
  YYSYMBOL_package_implementation_routine_definition = 833, /* package_implementation_routine_definition  */
  YYSYMBOL_package_implementation_function_body = 834, /* package_implementation_function_body  */
  YYSYMBOL_835_29 = 835,                   /* $@29  */
  YYSYMBOL_package_implementation_procedure_body = 836, /* package_implementation_procedure_body  */
  YYSYMBOL_837_30 = 837,                   /* $@30  */
  YYSYMBOL_package_implementation_item_declaration = 838, /* package_implementation_item_declaration  */
  YYSYMBOL_opt_package_specification_element_list = 839, /* opt_package_specification_element_list  */
  YYSYMBOL_package_specification_element_list = 840, /* package_specification_element_list  */
  YYSYMBOL_package_specification_element = 841, /* package_specification_element  */
  YYSYMBOL_create_function_tail = 842,     /* create_function_tail  */
  YYSYMBOL_opt_sequence = 843,             /* opt_sequence  */
  YYSYMBOL_sequence_defs = 844,            /* sequence_defs  */
  YYSYMBOL_sequence_def = 845,             /* sequence_def  */
  YYSYMBOL_force_lookahead = 846,          /* force_lookahead  */
  YYSYMBOL_server_def = 847,               /* server_def  */
  YYSYMBOL_848_31 = 848,                   /* $@31  */
  YYSYMBOL_server_options_list = 849,      /* server_options_list  */
  YYSYMBOL_server_option = 850,            /* server_option  */
  YYSYMBOL_event_tail = 851,               /* event_tail  */
  YYSYMBOL_852_32 = 852,                   /* $@32  */
  YYSYMBOL_ev_schedule_time = 853,         /* ev_schedule_time  */
  YYSYMBOL_854_33 = 854,                   /* $@33  */
  YYSYMBOL_opt_ev_status = 855,            /* opt_ev_status  */
  YYSYMBOL_ev_starts = 856,                /* ev_starts  */
  YYSYMBOL_ev_ends = 857,                  /* ev_ends  */
  YYSYMBOL_opt_ev_on_completion = 858,     /* opt_ev_on_completion  */
  YYSYMBOL_ev_on_completion = 859,         /* ev_on_completion  */
  YYSYMBOL_opt_ev_comment = 860,           /* opt_ev_comment  */
  YYSYMBOL_ev_sql_stmt = 861,              /* ev_sql_stmt  */
  YYSYMBOL_862_34 = 862,                   /* $@34  */
  YYSYMBOL_clear_privileges = 863,         /* clear_privileges  */
  YYSYMBOL_sp_name = 864,                  /* sp_name  */
  YYSYMBOL_opt_sp_name = 865,              /* opt_sp_name  */
  YYSYMBOL_sp_a_chistics = 866,            /* sp_a_chistics  */
  YYSYMBOL_sp_c_chistics = 867,            /* sp_c_chistics  */
  YYSYMBOL_sp_chistic = 868,               /* sp_chistic  */
  YYSYMBOL_create_package_chistic = 869,   /* create_package_chistic  */
  YYSYMBOL_create_package_chistics = 870,  /* create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics = 871, /* opt_create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics_init = 872, /* opt_create_package_chistics_init  */
  YYSYMBOL_873_35 = 873,                   /* $@35  */
  YYSYMBOL_sp_c_chistic = 874,             /* sp_c_chistic  */
  YYSYMBOL_sp_suid = 875,                  /* sp_suid  */
  YYSYMBOL_call = 876,                     /* call  */
  YYSYMBOL_877_36 = 877,                   /* $@36  */
  YYSYMBOL_878_37 = 878,                   /* $@37  */
  YYSYMBOL_879_38 = 879,                   /* $@38  */
  YYSYMBOL_opt_sp_cparam_list = 880,       /* opt_sp_cparam_list  */
  YYSYMBOL_opt_sp_cparams = 881,           /* opt_sp_cparams  */
  YYSYMBOL_sp_cparams = 882,               /* sp_cparams  */
  YYSYMBOL_sp_fdparam_list = 883,          /* sp_fdparam_list  */
  YYSYMBOL_sp_fdparams = 884,              /* sp_fdparams  */
  YYSYMBOL_sp_param_name = 885,            /* sp_param_name  */
  YYSYMBOL_sp_param_name_and_type = 886,   /* sp_param_name_and_type  */
  YYSYMBOL_sp_pdparam_list = 887,          /* sp_pdparam_list  */
  YYSYMBOL_sp_pdparams = 888,              /* sp_pdparams  */
  YYSYMBOL_sp_pdparam = 889,               /* sp_pdparam  */
  YYSYMBOL_sp_opt_inout = 890,             /* sp_opt_inout  */
  YYSYMBOL_sp_parenthesized_fdparam_list = 891, /* sp_parenthesized_fdparam_list  */
  YYSYMBOL_892_39 = 892,                   /* $@39  */
  YYSYMBOL_sp_parenthesized_pdparam_list = 893, /* sp_parenthesized_pdparam_list  */
  YYSYMBOL_894_40 = 894,                   /* $@40  */
  YYSYMBOL_sp_no_param = 895,              /* sp_no_param  */
  YYSYMBOL_opt_sp_parenthesized_fdparam_list = 896, /* opt_sp_parenthesized_fdparam_list  */
  YYSYMBOL_opt_sp_parenthesized_pdparam_list = 897, /* opt_sp_parenthesized_pdparam_list  */
  YYSYMBOL_sp_proc_stmts = 898,            /* sp_proc_stmts  */
  YYSYMBOL_sp_proc_stmts1 = 899,           /* sp_proc_stmts1  */
  YYSYMBOL_sp_proc_stmts1_implicit_block = 900, /* sp_proc_stmts1_implicit_block  */
  YYSYMBOL_901_41 = 901,                   /* $@41  */
  YYSYMBOL_opt_sp_decl_body_list = 902,    /* opt_sp_decl_body_list  */
  YYSYMBOL_sp_decl_body_list = 903,        /* sp_decl_body_list  */
  YYSYMBOL_904_42 = 904,                   /* $@42  */
  YYSYMBOL_sp_decl_non_handler_list = 905, /* sp_decl_non_handler_list  */
  YYSYMBOL_sp_decl_handler_list = 906,     /* sp_decl_handler_list  */
  YYSYMBOL_opt_sp_decl_handler_list = 907, /* opt_sp_decl_handler_list  */
  YYSYMBOL_optionally_qualified_column_ident = 908, /* optionally_qualified_column_ident  */
  YYSYMBOL_row_field_name = 909,           /* row_field_name  */
  YYSYMBOL_row_field_definition = 910,     /* row_field_definition  */
  YYSYMBOL_row_field_definition_list = 911, /* row_field_definition_list  */
  YYSYMBOL_row_type_body = 912,            /* row_type_body  */
  YYSYMBOL_sp_decl_idents_init_vars = 913, /* sp_decl_idents_init_vars  */
  YYSYMBOL_sp_decl_vars = 914,             /* sp_decl_vars  */
  YYSYMBOL_sp_decl_non_handler = 915,      /* sp_decl_non_handler  */
  YYSYMBOL_916_43 = 916,                   /* $@43  */
  YYSYMBOL_sp_decl_handler = 917,          /* sp_decl_handler  */
  YYSYMBOL_918_44 = 918,                   /* $@44  */
  YYSYMBOL_opt_parenthesized_cursor_formal_parameters = 919, /* opt_parenthesized_cursor_formal_parameters  */
  YYSYMBOL_sp_cursor_stmt_lex = 920,       /* sp_cursor_stmt_lex  */
  YYSYMBOL_sp_cursor_stmt = 921,           /* sp_cursor_stmt  */
  YYSYMBOL_922_45 = 922,                   /* $@45  */
  YYSYMBOL_sp_handler_type = 923,          /* sp_handler_type  */
  YYSYMBOL_sp_hcond_list = 924,            /* sp_hcond_list  */
  YYSYMBOL_sp_hcond_element = 925,         /* sp_hcond_element  */
  YYSYMBOL_sp_cond = 926,                  /* sp_cond  */
  YYSYMBOL_sqlstate = 927,                 /* sqlstate  */
  YYSYMBOL_opt_value = 928,                /* opt_value  */
  YYSYMBOL_sp_hcond = 929,                 /* sp_hcond  */
  YYSYMBOL_raise_stmt_oracle = 930,        /* raise_stmt_oracle  */
  YYSYMBOL_signal_stmt = 931,              /* signal_stmt  */
  YYSYMBOL_signal_value = 932,             /* signal_value  */
  YYSYMBOL_opt_signal_value = 933,         /* opt_signal_value  */
  YYSYMBOL_opt_set_signal_information = 934, /* opt_set_signal_information  */
  YYSYMBOL_signal_information_item_list = 935, /* signal_information_item_list  */
  YYSYMBOL_signal_allowed_expr = 936,      /* signal_allowed_expr  */
  YYSYMBOL_signal_condition_information_item_name = 937, /* signal_condition_information_item_name  */
  YYSYMBOL_resignal_stmt = 938,            /* resignal_stmt  */
  YYSYMBOL_get_diagnostics = 939,          /* get_diagnostics  */
  YYSYMBOL_which_area = 940,               /* which_area  */
  YYSYMBOL_diagnostics_information = 941,  /* diagnostics_information  */
  YYSYMBOL_statement_information = 942,    /* statement_information  */
  YYSYMBOL_statement_information_item = 943, /* statement_information_item  */
  YYSYMBOL_simple_target_specification = 944, /* simple_target_specification  */
  YYSYMBOL_statement_information_item_name = 945, /* statement_information_item_name  */
  YYSYMBOL_condition_number = 946,         /* condition_number  */
  YYSYMBOL_condition_information = 947,    /* condition_information  */
  YYSYMBOL_condition_information_item = 948, /* condition_information_item  */
  YYSYMBOL_condition_information_item_name = 949, /* condition_information_item_name  */
  YYSYMBOL_sp_decl_ident = 950,            /* sp_decl_ident  */
  YYSYMBOL_sp_decl_idents = 951,           /* sp_decl_idents  */
  YYSYMBOL_sp_opt_default = 952,           /* sp_opt_default  */
  YYSYMBOL_sp_proc_stmt = 953,             /* sp_proc_stmt  */
  YYSYMBOL_sp_labelable_stmt = 954,        /* sp_labelable_stmt  */
  YYSYMBOL_sp_proc_stmt_compound_ok = 955, /* sp_proc_stmt_compound_ok  */
  YYSYMBOL_sp_proc_stmt_if = 956,          /* sp_proc_stmt_if  */
  YYSYMBOL_957_46 = 957,                   /* $@46  */
  YYSYMBOL_sp_statement = 958,             /* sp_statement  */
  YYSYMBOL_959_47 = 959,                   /* $@47  */
  YYSYMBOL_960_48 = 960,                   /* $@48  */
  YYSYMBOL_961_49 = 961,                   /* $@49  */
  YYSYMBOL_sp_proc_stmt_statement = 962,   /* sp_proc_stmt_statement  */
  YYSYMBOL_963_50 = 963,                   /* $@50  */
  YYSYMBOL_RETURN_ALLMODES_SYM = 964,      /* RETURN_ALLMODES_SYM  */
  YYSYMBOL_sp_proc_stmt_return = 965,      /* sp_proc_stmt_return  */
  YYSYMBOL_966_51 = 966,                   /* $@51  */
  YYSYMBOL_reset_lex_expr = 967,           /* reset_lex_expr  */
  YYSYMBOL_968_52 = 968,                   /* $@52  */
  YYSYMBOL_sp_proc_stmt_exit_oracle = 969, /* sp_proc_stmt_exit_oracle  */
  YYSYMBOL_sp_proc_stmt_continue_oracle = 970, /* sp_proc_stmt_continue_oracle  */
  YYSYMBOL_sp_proc_stmt_leave = 971,       /* sp_proc_stmt_leave  */
  YYSYMBOL_sp_proc_stmt_iterate = 972,     /* sp_proc_stmt_iterate  */
  YYSYMBOL_sp_proc_stmt_goto_oracle = 973, /* sp_proc_stmt_goto_oracle  */
  YYSYMBOL_remember_lex = 974,             /* remember_lex  */
  YYSYMBOL_assignment_source_lex = 975,    /* assignment_source_lex  */
  YYSYMBOL_assignment_source_expr = 976,   /* assignment_source_expr  */
  YYSYMBOL_977_53 = 977,                   /* $@53  */
  YYSYMBOL_for_loop_bound_expr = 978,      /* for_loop_bound_expr  */
  YYSYMBOL_979_54 = 979,                   /* $@54  */
  YYSYMBOL_cursor_actual_parameters = 980, /* cursor_actual_parameters  */
  YYSYMBOL_opt_parenthesized_cursor_actual_parameters = 981, /* opt_parenthesized_cursor_actual_parameters  */
  YYSYMBOL_sp_proc_stmt_open = 982,        /* sp_proc_stmt_open  */
  YYSYMBOL_sp_proc_stmt_fetch_head = 983,  /* sp_proc_stmt_fetch_head  */
  YYSYMBOL_sp_proc_stmt_fetch = 984,       /* sp_proc_stmt_fetch  */
  YYSYMBOL_sp_proc_stmt_close = 985,       /* sp_proc_stmt_close  */
  YYSYMBOL_sp_fetch_list = 986,            /* sp_fetch_list  */
  YYSYMBOL_sp_if = 987,                    /* sp_if  */
  YYSYMBOL_988_55 = 988,                   /* $@55  */
  YYSYMBOL_989_56 = 989,                   /* $@56  */
  YYSYMBOL_990_57 = 990,                   /* $@57  */
  YYSYMBOL_sp_elseifs = 991,               /* sp_elseifs  */
  YYSYMBOL_case_stmt_specification = 992,  /* case_stmt_specification  */
  YYSYMBOL_993_58 = 993,                   /* $@58  */
  YYSYMBOL_case_stmt_body = 994,           /* case_stmt_body  */
  YYSYMBOL_995_59 = 995,                   /* $@59  */
  YYSYMBOL_996_60 = 996,                   /* $@60  */
  YYSYMBOL_simple_when_clause_list = 997,  /* simple_when_clause_list  */
  YYSYMBOL_searched_when_clause_list = 998, /* searched_when_clause_list  */
  YYSYMBOL_simple_when_clause = 999,       /* simple_when_clause  */
  YYSYMBOL_1000_61 = 1000,                 /* $@61  */
  YYSYMBOL_1001_62 = 1001,                 /* $@62  */
  YYSYMBOL_searched_when_clause = 1002,    /* searched_when_clause  */
  YYSYMBOL_1003_63 = 1003,                 /* $@63  */
  YYSYMBOL_1004_64 = 1004,                 /* $@64  */
  YYSYMBOL_else_clause_opt = 1005,         /* else_clause_opt  */
  YYSYMBOL_sp_opt_label = 1006,            /* sp_opt_label  */
  YYSYMBOL_sp_block_label = 1007,          /* sp_block_label  */
  YYSYMBOL_sp_labeled_block = 1008,        /* sp_labeled_block  */
  YYSYMBOL_1009_65 = 1009,                 /* $@65  */
  YYSYMBOL_1010_66 = 1010,                 /* $@66  */
  YYSYMBOL_1011_67 = 1011,                 /* $@67  */
  YYSYMBOL_opt_not_atomic = 1012,          /* opt_not_atomic  */
  YYSYMBOL_sp_unlabeled_block = 1013,      /* sp_unlabeled_block  */
  YYSYMBOL_1014_68 = 1014,                 /* $@68  */
  YYSYMBOL_1015_69 = 1015,                 /* $@69  */
  YYSYMBOL_1016_70 = 1016,                 /* $@70  */
  YYSYMBOL_sp_instr_addr = 1017,           /* sp_instr_addr  */
  YYSYMBOL_sp_body = 1018,                 /* sp_body  */
  YYSYMBOL_1019_71 = 1019,                 /* $@71  */
  YYSYMBOL_1020_72 = 1020,                 /* $@72  */
  YYSYMBOL_1021_73 = 1021,                 /* $@73  */
  YYSYMBOL_sp_block_statements_and_exceptions = 1022, /* sp_block_statements_and_exceptions  */
  YYSYMBOL_1023_74 = 1023,                 /* $@74  */
  YYSYMBOL_opt_exception_clause = 1024,    /* opt_exception_clause  */
  YYSYMBOL_exception_handlers = 1025,      /* exception_handlers  */
  YYSYMBOL_exception_handler = 1026,       /* exception_handler  */
  YYSYMBOL_1027_75 = 1027,                 /* $@75  */
  YYSYMBOL_opt_sp_for_loop_direction = 1028, /* opt_sp_for_loop_direction  */
  YYSYMBOL_sp_for_loop_index_and_bounds = 1029, /* sp_for_loop_index_and_bounds  */
  YYSYMBOL_sp_for_loop_bounds = 1030,      /* sp_for_loop_bounds  */
  YYSYMBOL_loop_body = 1031,               /* loop_body  */
  YYSYMBOL_while_body = 1032,              /* while_body  */
  YYSYMBOL_1033_76 = 1033,                 /* $@76  */
  YYSYMBOL_repeat_body = 1034,             /* repeat_body  */
  YYSYMBOL_1035_77 = 1035,                 /* $@77  */
  YYSYMBOL_pop_sp_loop_label = 1036,       /* pop_sp_loop_label  */
  YYSYMBOL_sp_labeled_control = 1037,      /* sp_labeled_control  */
  YYSYMBOL_1038_78 = 1038,                 /* $@78  */
  YYSYMBOL_1039_79 = 1039,                 /* $@79  */
  YYSYMBOL_1040_80 = 1040,                 /* $@80  */
  YYSYMBOL_1041_81 = 1041,                 /* $@81  */
  YYSYMBOL_1042_82 = 1042,                 /* $@82  */
  YYSYMBOL_1043_83 = 1043,                 /* $@83  */
  YYSYMBOL_sp_unlabeled_control = 1044,    /* sp_unlabeled_control  */
  YYSYMBOL_1045_84 = 1045,                 /* $@84  */
  YYSYMBOL_1046_85 = 1046,                 /* $@85  */
  YYSYMBOL_1047_86 = 1047,                 /* $@86  */
  YYSYMBOL_1048_87 = 1048,                 /* $@87  */
  YYSYMBOL_1049_88 = 1049,                 /* $@88  */
  YYSYMBOL_trg_action_time = 1050,         /* trg_action_time  */
  YYSYMBOL_trg_event = 1051,               /* trg_event  */
  YYSYMBOL_change_tablespace_access = 1052, /* change_tablespace_access  */
  YYSYMBOL_change_tablespace_info = 1053,  /* change_tablespace_info  */
  YYSYMBOL_tablespace_info = 1054,         /* tablespace_info  */
  YYSYMBOL_opt_logfile_group_name = 1055,  /* opt_logfile_group_name  */
  YYSYMBOL_alter_tablespace_info = 1056,   /* alter_tablespace_info  */
  YYSYMBOL_logfile_group_info = 1057,      /* logfile_group_info  */
  YYSYMBOL_alter_logfile_group_info = 1058, /* alter_logfile_group_info  */
  YYSYMBOL_add_log_file = 1059,            /* add_log_file  */
  YYSYMBOL_change_ts_option_list = 1060,   /* change_ts_option_list  */
  YYSYMBOL_1061_89 = 1061,                 /* $@89  */
  YYSYMBOL_change_ts_options = 1062,       /* change_ts_options  */
  YYSYMBOL_change_ts_option = 1063,        /* change_ts_option  */
  YYSYMBOL_tablespace_option_list = 1064,  /* tablespace_option_list  */
  YYSYMBOL_tablespace_options = 1065,      /* tablespace_options  */
  YYSYMBOL_tablespace_option = 1066,       /* tablespace_option  */
  YYSYMBOL_alter_tablespace_option_list = 1067, /* alter_tablespace_option_list  */
  YYSYMBOL_alter_tablespace_options = 1068, /* alter_tablespace_options  */
  YYSYMBOL_alter_tablespace_option = 1069, /* alter_tablespace_option  */
  YYSYMBOL_logfile_group_option_list = 1070, /* logfile_group_option_list  */
  YYSYMBOL_logfile_group_options = 1071,   /* logfile_group_options  */
  YYSYMBOL_logfile_group_option = 1072,    /* logfile_group_option  */
  YYSYMBOL_alter_logfile_group_option_list = 1073, /* alter_logfile_group_option_list  */
  YYSYMBOL_alter_logfile_group_options = 1074, /* alter_logfile_group_options  */
  YYSYMBOL_alter_logfile_group_option = 1075, /* alter_logfile_group_option  */
  YYSYMBOL_ts_datafile = 1076,             /* ts_datafile  */
  YYSYMBOL_lg_undofile = 1077,             /* lg_undofile  */
  YYSYMBOL_lg_redofile = 1078,             /* lg_redofile  */
  YYSYMBOL_tablespace_name = 1079,         /* tablespace_name  */
  YYSYMBOL_logfile_group_name = 1080,      /* logfile_group_name  */
  YYSYMBOL_ts_access_mode = 1081,          /* ts_access_mode  */
  YYSYMBOL_opt_ts_initial_size = 1082,     /* opt_ts_initial_size  */
  YYSYMBOL_opt_ts_autoextend_size = 1083,  /* opt_ts_autoextend_size  */
  YYSYMBOL_opt_ts_max_size = 1084,         /* opt_ts_max_size  */
  YYSYMBOL_opt_ts_extent_size = 1085,      /* opt_ts_extent_size  */
  YYSYMBOL_opt_ts_undo_buffer_size = 1086, /* opt_ts_undo_buffer_size  */
  YYSYMBOL_opt_ts_redo_buffer_size = 1087, /* opt_ts_redo_buffer_size  */
  YYSYMBOL_opt_ts_nodegroup = 1088,        /* opt_ts_nodegroup  */
  YYSYMBOL_opt_ts_comment = 1089,          /* opt_ts_comment  */
  YYSYMBOL_opt_ts_engine = 1090,           /* opt_ts_engine  */
  YYSYMBOL_opt_ts_wait = 1091,             /* opt_ts_wait  */
  YYSYMBOL_ts_wait = 1092,                 /* ts_wait  */
  YYSYMBOL_size_number = 1093,             /* size_number  */
  YYSYMBOL_create_body = 1094,             /* create_body  */
  YYSYMBOL_1095_90 = 1095,                 /* $@90  */
  YYSYMBOL_1096_91 = 1096,                 /* $@91  */
  YYSYMBOL_1097_92 = 1097,                 /* $@92  */
  YYSYMBOL_create_like = 1098,             /* create_like  */
  YYSYMBOL_opt_create_select = 1099,       /* opt_create_select  */
  YYSYMBOL_create_select_query_expression = 1100, /* create_select_query_expression  */
  YYSYMBOL_1101_93 = 1101,                 /* $@93  */
  YYSYMBOL_1102_94 = 1102,                 /* $@94  */
  YYSYMBOL_1103_95 = 1103,                 /* $@95  */
  YYSYMBOL_opt_create_partitioning = 1104, /* opt_create_partitioning  */
  YYSYMBOL_opt_partitioning = 1105,        /* opt_partitioning  */
  YYSYMBOL_partitioning = 1106,            /* partitioning  */
  YYSYMBOL_1107_96 = 1107,                 /* $@96  */
  YYSYMBOL_have_partitioning = 1108,       /* have_partitioning  */
  YYSYMBOL_partition_entry = 1109,         /* partition_entry  */
  YYSYMBOL_1110_97 = 1110,                 /* $@97  */
  YYSYMBOL_partition = 1111,               /* partition  */
  YYSYMBOL_1112_98 = 1112,                 /* $@98  */
  YYSYMBOL_part_type_def = 1113,           /* part_type_def  */
  YYSYMBOL_1114_99 = 1114,                 /* $@99  */
  YYSYMBOL_1115_100 = 1115,                /* $@100  */
  YYSYMBOL_1116_101 = 1116,                /* $@101  */
  YYSYMBOL_opt_linear = 1117,              /* opt_linear  */
  YYSYMBOL_opt_key_algo = 1118,            /* opt_key_algo  */
  YYSYMBOL_part_field_list = 1119,         /* part_field_list  */
  YYSYMBOL_part_field_item_list = 1120,    /* part_field_item_list  */
  YYSYMBOL_part_field_item = 1121,         /* part_field_item  */
  YYSYMBOL_part_column_list = 1122,        /* part_column_list  */
  YYSYMBOL_part_func = 1123,               /* part_func  */
  YYSYMBOL_sub_part_func = 1124,           /* sub_part_func  */
  YYSYMBOL_opt_num_parts = 1125,           /* opt_num_parts  */
  YYSYMBOL_opt_sub_part = 1126,            /* opt_sub_part  */
  YYSYMBOL_1127_102 = 1127,                /* $@102  */
  YYSYMBOL_1128_103 = 1128,                /* $@103  */
  YYSYMBOL_sub_part_field_list = 1129,     /* sub_part_field_list  */
  YYSYMBOL_sub_part_field_item = 1130,     /* sub_part_field_item  */
  YYSYMBOL_part_func_expr = 1131,          /* part_func_expr  */
  YYSYMBOL_opt_num_subparts = 1132,        /* opt_num_subparts  */
  YYSYMBOL_part_defs = 1133,               /* part_defs  */
  YYSYMBOL_part_def_list = 1134,           /* part_def_list  */
  YYSYMBOL_part_definition = 1135,         /* part_definition  */
  YYSYMBOL_1136_104 = 1136,                /* $@104  */
  YYSYMBOL_part_name = 1137,               /* part_name  */
  YYSYMBOL_opt_part_values = 1138,         /* opt_part_values  */
  YYSYMBOL_1139_105 = 1139,                /* $@105  */
  YYSYMBOL_1140_106 = 1140,                /* $@106  */
  YYSYMBOL_part_func_max = 1141,           /* part_func_max  */
  YYSYMBOL_part_values_in = 1142,          /* part_values_in  */
  YYSYMBOL_part_value_list = 1143,         /* part_value_list  */
  YYSYMBOL_part_value_item = 1144,         /* part_value_item  */
  YYSYMBOL_1145_107 = 1145,                /* $@107  */
  YYSYMBOL_1146_108 = 1146,                /* $@108  */
  YYSYMBOL_part_value_item_list = 1147,    /* part_value_item_list  */
  YYSYMBOL_part_value_expr_item = 1148,    /* part_value_expr_item  */
  YYSYMBOL_opt_sub_partition = 1149,       /* opt_sub_partition  */
  YYSYMBOL_sub_part_list = 1150,           /* sub_part_list  */
  YYSYMBOL_sub_part_definition = 1151,     /* sub_part_definition  */
  YYSYMBOL_1152_109 = 1152,                /* $@109  */
  YYSYMBOL_sub_name = 1153,                /* sub_name  */
  YYSYMBOL_opt_part_options = 1154,        /* opt_part_options  */
  YYSYMBOL_opt_part_option_list = 1155,    /* opt_part_option_list  */
  YYSYMBOL_opt_part_option = 1156,         /* opt_part_option  */
  YYSYMBOL_opt_versioning_rotation = 1157, /* opt_versioning_rotation  */
  YYSYMBOL_1158_110 = 1158,                /* $@110  */
  YYSYMBOL_opt_versioning_interval_start = 1159, /* opt_versioning_interval_start  */
  YYSYMBOL_create_select_query_specification = 1160, /* create_select_query_specification  */
  YYSYMBOL_create_select_part2 = 1161,     /* create_select_part2  */
  YYSYMBOL_1162_111 = 1162,                /* $@111  */
  YYSYMBOL_create_select_part3 = 1163,     /* create_select_part3  */
  YYSYMBOL_create_select_part3_union_not_ready = 1164, /* create_select_part3_union_not_ready  */
  YYSYMBOL_create_select_part4 = 1165,     /* create_select_part4  */
  YYSYMBOL_opt_as = 1166,                  /* opt_as  */
  YYSYMBOL_opt_create_database_options = 1167, /* opt_create_database_options  */
  YYSYMBOL_create_database_options = 1168, /* create_database_options  */
  YYSYMBOL_create_database_option = 1169,  /* create_database_option  */
  YYSYMBOL_opt_if_not_exists_table_element = 1170, /* opt_if_not_exists_table_element  */
  YYSYMBOL_opt_if_not_exists = 1171,       /* opt_if_not_exists  */
  YYSYMBOL_create_or_replace = 1172,       /* create_or_replace  */
  YYSYMBOL_opt_create_table_options = 1173, /* opt_create_table_options  */
  YYSYMBOL_create_table_options_space_separated = 1174, /* create_table_options_space_separated  */
  YYSYMBOL_create_table_options = 1175,    /* create_table_options  */
  YYSYMBOL_create_table_option = 1176,     /* create_table_option  */
  YYSYMBOL_1177_112 = 1177,                /* $@112  */
  YYSYMBOL_opt_versioning_option = 1178,   /* opt_versioning_option  */
  YYSYMBOL_versioning_option = 1179,       /* versioning_option  */
  YYSYMBOL_default_charset = 1180,         /* default_charset  */
  YYSYMBOL_default_collation = 1181,       /* default_collation  */
  YYSYMBOL_storage_engines = 1182,         /* storage_engines  */
  YYSYMBOL_known_storage_engines = 1183,   /* known_storage_engines  */
  YYSYMBOL_row_types = 1184,               /* row_types  */
  YYSYMBOL_merge_insert_types = 1185,      /* merge_insert_types  */
  YYSYMBOL_udf_type = 1186,                /* udf_type  */
  YYSYMBOL_create_field_list = 1187,       /* create_field_list  */
  YYSYMBOL_field_list = 1188,              /* field_list  */
  YYSYMBOL_field_list_item = 1189,         /* field_list_item  */
  YYSYMBOL_column_def = 1190,              /* column_def  */
  YYSYMBOL_key_def = 1191,                 /* key_def  */
  YYSYMBOL_1192_113 = 1192,                /* $@113  */
  YYSYMBOL_1193_114 = 1193,                /* $@114  */
  YYSYMBOL_1194_115 = 1194,                /* $@115  */
  YYSYMBOL_1195_116 = 1195,                /* $@116  */
  YYSYMBOL_1196_117 = 1196,                /* $@117  */
  YYSYMBOL_1197_118 = 1197,                /* $@118  */
  YYSYMBOL_1198_119 = 1198,                /* $@119  */
  YYSYMBOL_constraint_def = 1199,          /* constraint_def  */
  YYSYMBOL_period_for_system_time = 1200,  /* period_for_system_time  */
  YYSYMBOL_opt_check_constraint = 1201,    /* opt_check_constraint  */
  YYSYMBOL_check_constraint = 1202,        /* check_constraint  */
  YYSYMBOL_opt_constraint_no_id = 1203,    /* opt_constraint_no_id  */
  YYSYMBOL_opt_constraint = 1204,          /* opt_constraint  */
  YYSYMBOL_constraint = 1205,              /* constraint  */
  YYSYMBOL_field_spec = 1206,              /* field_spec  */
  YYSYMBOL_1207_120 = 1207,                /* @120  */
  YYSYMBOL_field_type_or_serial = 1208,    /* field_type_or_serial  */
  YYSYMBOL_1209_121 = 1209,                /* $@121  */
  YYSYMBOL_1210_122 = 1210,                /* $@122  */
  YYSYMBOL_opt_serial_attribute = 1211,    /* opt_serial_attribute  */
  YYSYMBOL_opt_serial_attribute_list = 1212, /* opt_serial_attribute_list  */
  YYSYMBOL_opt_asrow_attribute = 1213,     /* opt_asrow_attribute  */
  YYSYMBOL_opt_asrow_attribute_list = 1214, /* opt_asrow_attribute_list  */
  YYSYMBOL_field_def = 1215,               /* field_def  */
  YYSYMBOL_1216_123 = 1216,                /* $@123  */
  YYSYMBOL_opt_generated_always = 1217,    /* opt_generated_always  */
  YYSYMBOL_vcol_opt_specifier = 1218,      /* vcol_opt_specifier  */
  YYSYMBOL_vcol_opt_attribute = 1219,      /* vcol_opt_attribute  */
  YYSYMBOL_vcol_opt_attribute_list = 1220, /* vcol_opt_attribute_list  */
  YYSYMBOL_vcol_attribute = 1221,          /* vcol_attribute  */
  YYSYMBOL_parse_vcol_expr = 1222,         /* parse_vcol_expr  */
  YYSYMBOL_1223_124 = 1223,                /* $@124  */
  YYSYMBOL_parenthesized_expr = 1224,      /* parenthesized_expr  */
  YYSYMBOL_virtual_column_func = 1225,     /* virtual_column_func  */
  YYSYMBOL_expr_or_literal = 1226,         /* expr_or_literal  */
  YYSYMBOL_column_default_expr = 1227,     /* column_default_expr  */
  YYSYMBOL_field_type = 1228,              /* field_type  */
  YYSYMBOL_qualified_field_type = 1229,    /* qualified_field_type  */
  YYSYMBOL_field_type_all = 1230,          /* field_type_all  */
  YYSYMBOL_sp_param_field_type = 1231,     /* sp_param_field_type  */
  YYSYMBOL_field_type_numeric = 1232,      /* field_type_numeric  */
  YYSYMBOL_opt_binary_and_compression = 1233, /* opt_binary_and_compression  */
  YYSYMBOL_field_type_string = 1234,       /* field_type_string  */
  YYSYMBOL_sp_param_field_type_string = 1235, /* sp_param_field_type_string  */
  YYSYMBOL_field_type_temporal = 1236,     /* field_type_temporal  */
  YYSYMBOL_field_type_lob = 1237,          /* field_type_lob  */
  YYSYMBOL_field_type_misc = 1238,         /* field_type_misc  */
  YYSYMBOL_spatial_type = 1239,            /* spatial_type  */
  YYSYMBOL_char = 1240,                    /* char  */
  YYSYMBOL_nchar = 1241,                   /* nchar  */
  YYSYMBOL_varchar = 1242,                 /* varchar  */
  YYSYMBOL_nvarchar = 1243,                /* nvarchar  */
  YYSYMBOL_int_type = 1244,                /* int_type  */
  YYSYMBOL_real_type = 1245,               /* real_type  */
  YYSYMBOL_srid_option = 1246,             /* srid_option  */
  YYSYMBOL_float_options = 1247,           /* float_options  */
  YYSYMBOL_precision = 1248,               /* precision  */
  YYSYMBOL_field_options = 1249,           /* field_options  */
  YYSYMBOL_field_length = 1250,            /* field_length  */
  YYSYMBOL_opt_field_length = 1251,        /* opt_field_length  */
  YYSYMBOL_opt_field_length_default_1 = 1252, /* opt_field_length_default_1  */
  YYSYMBOL_opt_field_length_default_sp_param_varchar = 1253, /* opt_field_length_default_sp_param_varchar  */
  YYSYMBOL_opt_field_length_default_sp_param_char = 1254, /* opt_field_length_default_sp_param_char  */
  YYSYMBOL_opt_precision = 1255,           /* opt_precision  */
  YYSYMBOL_attribute_list = 1256,          /* attribute_list  */
  YYSYMBOL_attribute = 1257,               /* attribute  */
  YYSYMBOL_opt_compression_method = 1258,  /* opt_compression_method  */
  YYSYMBOL_opt_compressed = 1259,          /* opt_compressed  */
  YYSYMBOL_compressed = 1260,              /* compressed  */
  YYSYMBOL_compressed_deprecated_data_type_attribute = 1261, /* compressed_deprecated_data_type_attribute  */
  YYSYMBOL_compressed_deprecated_column_attribute = 1262, /* compressed_deprecated_column_attribute  */
  YYSYMBOL_asrow_attribute = 1263,         /* asrow_attribute  */
  YYSYMBOL_serial_attribute = 1264,        /* serial_attribute  */
  YYSYMBOL_with_or_without_system = 1265,  /* with_or_without_system  */
  YYSYMBOL_sp_param_type = 1266,           /* sp_param_type  */
  YYSYMBOL_charset = 1267,                 /* charset  */
  YYSYMBOL_charset_name = 1268,            /* charset_name  */
  YYSYMBOL_charset_name_or_default = 1269, /* charset_name_or_default  */
  YYSYMBOL_opt_load_data_charset = 1270,   /* opt_load_data_charset  */
  YYSYMBOL_old_or_new_charset_name = 1271, /* old_or_new_charset_name  */
  YYSYMBOL_old_or_new_charset_name_or_default = 1272, /* old_or_new_charset_name_or_default  */
  YYSYMBOL_collation_name = 1273,          /* collation_name  */
  YYSYMBOL_opt_collate = 1274,             /* opt_collate  */
  YYSYMBOL_collation_name_or_default = 1275, /* collation_name_or_default  */
  YYSYMBOL_opt_default = 1276,             /* opt_default  */
  YYSYMBOL_charset_or_alias = 1277,        /* charset_or_alias  */
  YYSYMBOL_collate = 1278,                 /* collate  */
  YYSYMBOL_opt_binary = 1279,              /* opt_binary  */
  YYSYMBOL_binary = 1280,                  /* binary  */
  YYSYMBOL_opt_bin_mod = 1281,             /* opt_bin_mod  */
  YYSYMBOL_ws_nweights = 1282,             /* ws_nweights  */
  YYSYMBOL_1283_125 = 1283,                /* $@125  */
  YYSYMBOL_ws_level_flag_desc = 1284,      /* ws_level_flag_desc  */
  YYSYMBOL_ws_level_flag_reverse = 1285,   /* ws_level_flag_reverse  */
  YYSYMBOL_ws_level_flags = 1286,          /* ws_level_flags  */
  YYSYMBOL_ws_level_number = 1287,         /* ws_level_number  */
  YYSYMBOL_ws_level_list_item = 1288,      /* ws_level_list_item  */
  YYSYMBOL_ws_level_list = 1289,           /* ws_level_list  */
  YYSYMBOL_ws_level_range = 1290,          /* ws_level_range  */
  YYSYMBOL_ws_level_list_or_range = 1291,  /* ws_level_list_or_range  */
  YYSYMBOL_opt_ws_levels = 1292,           /* opt_ws_levels  */
  YYSYMBOL_opt_primary = 1293,             /* opt_primary  */
  YYSYMBOL_references = 1294,              /* references  */
  YYSYMBOL_opt_ref_list = 1295,            /* opt_ref_list  */
  YYSYMBOL_ref_list = 1296,                /* ref_list  */
  YYSYMBOL_opt_match_clause = 1297,        /* opt_match_clause  */
  YYSYMBOL_opt_on_update_delete = 1298,    /* opt_on_update_delete  */
  YYSYMBOL_delete_option = 1299,           /* delete_option  */
  YYSYMBOL_constraint_key_type = 1300,     /* constraint_key_type  */
  YYSYMBOL_key_or_index = 1301,            /* key_or_index  */
  YYSYMBOL_opt_key_or_index = 1302,        /* opt_key_or_index  */
  YYSYMBOL_keys_or_index = 1303,           /* keys_or_index  */
  YYSYMBOL_opt_unique = 1304,              /* opt_unique  */
  YYSYMBOL_fulltext = 1305,                /* fulltext  */
  YYSYMBOL_spatial = 1306,                 /* spatial  */
  YYSYMBOL_normal_key_options = 1307,      /* normal_key_options  */
  YYSYMBOL_fulltext_key_options = 1308,    /* fulltext_key_options  */
  YYSYMBOL_spatial_key_options = 1309,     /* spatial_key_options  */
  YYSYMBOL_normal_key_opts = 1310,         /* normal_key_opts  */
  YYSYMBOL_spatial_key_opts = 1311,        /* spatial_key_opts  */
  YYSYMBOL_fulltext_key_opts = 1312,       /* fulltext_key_opts  */
  YYSYMBOL_opt_USING_key_algorithm = 1313, /* opt_USING_key_algorithm  */
  YYSYMBOL_opt_key_algorithm_clause = 1314, /* opt_key_algorithm_clause  */
  YYSYMBOL_key_using_alg = 1315,           /* key_using_alg  */
  YYSYMBOL_all_key_opt = 1316,             /* all_key_opt  */
  YYSYMBOL_normal_key_opt = 1317,          /* normal_key_opt  */
  YYSYMBOL_spatial_key_opt = 1318,         /* spatial_key_opt  */
  YYSYMBOL_fulltext_key_opt = 1319,        /* fulltext_key_opt  */
  YYSYMBOL_btree_or_rtree = 1320,          /* btree_or_rtree  */
  YYSYMBOL_key_list = 1321,                /* key_list  */
  YYSYMBOL_key_part = 1322,                /* key_part  */
  YYSYMBOL_opt_ident = 1323,               /* opt_ident  */
  YYSYMBOL_string_list = 1324,             /* string_list  */
  YYSYMBOL_alter = 1325,                   /* alter  */
  YYSYMBOL_1326_126 = 1326,                /* $@126  */
  YYSYMBOL_1327_127 = 1327,                /* $@127  */
  YYSYMBOL_1328_128 = 1328,                /* $@128  */
  YYSYMBOL_1329_129 = 1329,                /* $@129  */
  YYSYMBOL_1330_130 = 1330,                /* $@130  */
  YYSYMBOL_1331_131 = 1331,                /* $@131  */
  YYSYMBOL_1332_132 = 1332,                /* $@132  */
  YYSYMBOL_1333_133 = 1333,                /* $@133  */
  YYSYMBOL_1334_134 = 1334,                /* $@134  */
  YYSYMBOL_1335_135 = 1335,                /* $@135  */
  YYSYMBOL_1336_136 = 1336,                /* $@136  */
  YYSYMBOL_ev_alter_on_schedule_completion = 1337, /* ev_alter_on_schedule_completion  */
  YYSYMBOL_opt_ev_rename_to = 1338,        /* opt_ev_rename_to  */
  YYSYMBOL_opt_ev_sql_stmt = 1339,         /* opt_ev_sql_stmt  */
  YYSYMBOL_ident_or_empty = 1340,          /* ident_or_empty  */
  YYSYMBOL_alter_commands = 1341,          /* alter_commands  */
  YYSYMBOL_1342_137 = 1342,                /* $@137  */
  YYSYMBOL_1343_138 = 1343,                /* $@138  */
  YYSYMBOL_1344_139 = 1344,                /* $@139  */
  YYSYMBOL_remove_partitioning = 1345,     /* remove_partitioning  */
  YYSYMBOL_all_or_alt_part_name_list = 1346, /* all_or_alt_part_name_list  */
  YYSYMBOL_add_partition_rule = 1347,      /* add_partition_rule  */
  YYSYMBOL_1348_140 = 1348,                /* $@140  */
  YYSYMBOL_add_part_extra = 1349,          /* add_part_extra  */
  YYSYMBOL_reorg_partition_rule = 1350,    /* reorg_partition_rule  */
  YYSYMBOL_1351_141 = 1351,                /* $@141  */
  YYSYMBOL_reorg_parts_rule = 1352,        /* reorg_parts_rule  */
  YYSYMBOL_1353_142 = 1353,                /* $@142  */
  YYSYMBOL_alt_part_name_list = 1354,      /* alt_part_name_list  */
  YYSYMBOL_alt_part_name_item = 1355,      /* alt_part_name_item  */
  YYSYMBOL_alter_list = 1356,              /* alter_list  */
  YYSYMBOL_add_column = 1357,              /* add_column  */
  YYSYMBOL_alter_list_item = 1358,         /* alter_list_item  */
  YYSYMBOL_opt_index_lock_algorithm = 1359, /* opt_index_lock_algorithm  */
  YYSYMBOL_alter_algorithm_option = 1360,  /* alter_algorithm_option  */
  YYSYMBOL_alter_lock_option = 1361,       /* alter_lock_option  */
  YYSYMBOL_opt_column = 1362,              /* opt_column  */
  YYSYMBOL_opt_ignore = 1363,              /* opt_ignore  */
  YYSYMBOL_alter_options = 1364,           /* alter_options  */
  YYSYMBOL_1365_143 = 1365,                /* $@143  */
  YYSYMBOL_alter_options_part2 = 1366,     /* alter_options_part2  */
  YYSYMBOL_alter_option_list = 1367,       /* alter_option_list  */
  YYSYMBOL_alter_option = 1368,            /* alter_option  */
  YYSYMBOL_opt_restrict = 1369,            /* opt_restrict  */
  YYSYMBOL_opt_place = 1370,               /* opt_place  */
  YYSYMBOL_opt_to = 1371,                  /* opt_to  */
  YYSYMBOL_slave = 1372,                   /* slave  */
  YYSYMBOL_1373_144 = 1373,                /* $@144  */
  YYSYMBOL_1374_145 = 1374,                /* $@145  */
  YYSYMBOL_start = 1375,                   /* start  */
  YYSYMBOL_opt_start_transaction_option_list = 1376, /* opt_start_transaction_option_list  */
  YYSYMBOL_start_transaction_option_list = 1377, /* start_transaction_option_list  */
  YYSYMBOL_start_transaction_option = 1378, /* start_transaction_option  */
  YYSYMBOL_slave_thread_opts = 1379,       /* slave_thread_opts  */
  YYSYMBOL_1380_146 = 1380,                /* $@146  */
  YYSYMBOL_slave_thread_opt_list = 1381,   /* slave_thread_opt_list  */
  YYSYMBOL_slave_thread_opt = 1382,        /* slave_thread_opt  */
  YYSYMBOL_slave_until = 1383,             /* slave_until  */
  YYSYMBOL_slave_until_opts = 1384,        /* slave_until_opts  */
  YYSYMBOL_checksum = 1385,                /* checksum  */
  YYSYMBOL_1386_147 = 1386,                /* $@147  */
  YYSYMBOL_opt_checksum_type = 1387,       /* opt_checksum_type  */
  YYSYMBOL_repair_table_or_view = 1388,    /* repair_table_or_view  */
  YYSYMBOL_1389_148 = 1389,                /* $@148  */
  YYSYMBOL_repair = 1390,                  /* repair  */
  YYSYMBOL_1391_149 = 1391,                /* $@149  */
  YYSYMBOL_opt_mi_repair_type = 1392,      /* opt_mi_repair_type  */
  YYSYMBOL_mi_repair_types = 1393,         /* mi_repair_types  */
  YYSYMBOL_mi_repair_type = 1394,          /* mi_repair_type  */
  YYSYMBOL_opt_view_repair_type = 1395,    /* opt_view_repair_type  */
  YYSYMBOL_analyze = 1396,                 /* analyze  */
  YYSYMBOL_1397_150 = 1397,                /* $@150  */
  YYSYMBOL_analyze_table_list = 1398,      /* analyze_table_list  */
  YYSYMBOL_analyze_table_elem_spec = 1399, /* analyze_table_elem_spec  */
  YYSYMBOL_opt_persistent_stat_clause = 1400, /* opt_persistent_stat_clause  */
  YYSYMBOL_persistent_stat_spec = 1401,    /* persistent_stat_spec  */
  YYSYMBOL_persistent_column_stat_spec = 1402, /* persistent_column_stat_spec  */
  YYSYMBOL_1403_151 = 1403,                /* $@151  */
  YYSYMBOL_persistent_index_stat_spec = 1404, /* persistent_index_stat_spec  */
  YYSYMBOL_1405_152 = 1405,                /* $@152  */
  YYSYMBOL_table_column_list = 1406,       /* table_column_list  */
  YYSYMBOL_table_index_list = 1407,        /* table_index_list  */
  YYSYMBOL_table_index_name = 1408,        /* table_index_name  */
  YYSYMBOL_binlog_base64_event = 1409,     /* binlog_base64_event  */
  YYSYMBOL_check_view_or_table = 1410,     /* check_view_or_table  */
  YYSYMBOL_1411_153 = 1411,                /* $@153  */
  YYSYMBOL_check = 1412,                   /* check  */
  YYSYMBOL_1413_154 = 1413,                /* $@154  */
  YYSYMBOL_opt_mi_check_type = 1414,       /* opt_mi_check_type  */
  YYSYMBOL_mi_check_types = 1415,          /* mi_check_types  */
  YYSYMBOL_mi_check_type = 1416,           /* mi_check_type  */
  YYSYMBOL_opt_view_check_type = 1417,     /* opt_view_check_type  */
  YYSYMBOL_optimize = 1418,                /* optimize  */
  YYSYMBOL_1419_155 = 1419,                /* $@155  */
  YYSYMBOL_opt_no_write_to_binlog = 1420,  /* opt_no_write_to_binlog  */
  YYSYMBOL_rename = 1421,                  /* rename  */
  YYSYMBOL_1422_156 = 1422,                /* $@156  */
  YYSYMBOL_rename_list = 1423,             /* rename_list  */
  YYSYMBOL_table_to_table_list = 1424,     /* table_to_table_list  */
  YYSYMBOL_table_to_table = 1425,          /* table_to_table  */
  YYSYMBOL_keycache = 1426,                /* keycache  */
  YYSYMBOL_1427_157 = 1427,                /* $@157  */
  YYSYMBOL_keycache_list_or_parts = 1428,  /* keycache_list_or_parts  */
  YYSYMBOL_keycache_list = 1429,           /* keycache_list  */
  YYSYMBOL_assign_to_keycache = 1430,      /* assign_to_keycache  */
  YYSYMBOL_assign_to_keycache_parts = 1431, /* assign_to_keycache_parts  */
  YYSYMBOL_key_cache_name = 1432,          /* key_cache_name  */
  YYSYMBOL_preload = 1433,                 /* preload  */
  YYSYMBOL_1434_158 = 1434,                /* $@158  */
  YYSYMBOL_preload_list_or_parts = 1435,   /* preload_list_or_parts  */
  YYSYMBOL_preload_list = 1436,            /* preload_list  */
  YYSYMBOL_preload_keys = 1437,            /* preload_keys  */
  YYSYMBOL_preload_keys_parts = 1438,      /* preload_keys_parts  */
  YYSYMBOL_adm_partition = 1439,           /* adm_partition  */
  YYSYMBOL_1440_159 = 1440,                /* $@159  */
  YYSYMBOL_cache_keys_spec = 1441,         /* cache_keys_spec  */
  YYSYMBOL_1442_160 = 1442,                /* $@160  */
  YYSYMBOL_cache_key_list_or_empty = 1443, /* cache_key_list_or_empty  */
  YYSYMBOL_opt_ignore_leaves = 1444,       /* opt_ignore_leaves  */
  YYSYMBOL_select = 1445,                  /* select  */
  YYSYMBOL_select_init = 1446,             /* select_init  */
  YYSYMBOL_union_list_part2 = 1447,        /* union_list_part2  */
  YYSYMBOL_select_paren = 1448,            /* select_paren  */
  YYSYMBOL_1449_161 = 1449,                /* $@161  */
  YYSYMBOL_1450_162 = 1450,                /* $@162  */
  YYSYMBOL_select_parent_union_query_term_proper = 1451, /* select_parent_union_query_term_proper  */
  YYSYMBOL_select_paren_union_query_term = 1452, /* select_paren_union_query_term  */
  YYSYMBOL_1453_163 = 1453,                /* $@163  */
  YYSYMBOL_select_parent_view_proper = 1454, /* select_parent_view_proper  */
  YYSYMBOL_select_paren_view = 1455,       /* select_paren_view  */
  YYSYMBOL_1456_164 = 1456,                /* $@164  */
  YYSYMBOL_select_paren_derived = 1457,    /* select_paren_derived  */
  YYSYMBOL_1458_165 = 1458,                /* $@165  */
  YYSYMBOL_1459_166 = 1459,                /* $@166  */
  YYSYMBOL_select_init3 = 1460,            /* select_init3  */
  YYSYMBOL_1461_167 = 1461,                /* $@167  */
  YYSYMBOL_select_init3_union_query_term = 1462, /* select_init3_union_query_term  */
  YYSYMBOL_1463_168 = 1463,                /* $@168  */
  YYSYMBOL_select_init3_view = 1464,       /* select_init3_view  */
  YYSYMBOL_1465_169 = 1465,                /* $@169  */
  YYSYMBOL_select_part3 = 1466,            /* select_part3  */
  YYSYMBOL_select_part3_union_query_term = 1467, /* select_part3_union_query_term  */
  YYSYMBOL_select_part3_view = 1468,       /* select_part3_view  */
  YYSYMBOL_select_part3_union_not_ready = 1469, /* select_part3_union_not_ready  */
  YYSYMBOL_select_part3_union_not_ready_noproc = 1470, /* select_part3_union_not_ready_noproc  */
  YYSYMBOL_select_options_and_item_list = 1471, /* select_options_and_item_list  */
  YYSYMBOL_1472_170 = 1472,                /* $@170  */
  YYSYMBOL_table_expression = 1473,        /* table_expression  */
  YYSYMBOL_opt_table_expression = 1474,    /* opt_table_expression  */
  YYSYMBOL_from_clause = 1475,             /* from_clause  */
  YYSYMBOL_table_reference_list = 1476,    /* table_reference_list  */
  YYSYMBOL_select_options = 1477,          /* select_options  */
  YYSYMBOL_opt_history_unit = 1478,        /* opt_history_unit  */
  YYSYMBOL_history_point = 1479,           /* history_point  */
  YYSYMBOL_opt_for_system_time_clause = 1480, /* opt_for_system_time_clause  */
  YYSYMBOL_system_time_expr = 1481,        /* system_time_expr  */
  YYSYMBOL_select_option_list = 1482,      /* select_option_list  */
  YYSYMBOL_select_option = 1483,           /* select_option  */
  YYSYMBOL_opt_select_lock_type = 1484,    /* opt_select_lock_type  */
  YYSYMBOL_select_item_list = 1485,        /* select_item_list  */
  YYSYMBOL_select_item = 1486,             /* select_item  */
  YYSYMBOL_remember_tok_start = 1487,      /* remember_tok_start  */
  YYSYMBOL_remember_tok_end = 1488,        /* remember_tok_end  */
  YYSYMBOL_remember_name = 1489,           /* remember_name  */
  YYSYMBOL_remember_end = 1490,            /* remember_end  */
  YYSYMBOL_remember_end_opt = 1491,        /* remember_end_opt  */
  YYSYMBOL_select_alias = 1492,            /* select_alias  */
  YYSYMBOL_opt_default_time_precision = 1493, /* opt_default_time_precision  */
  YYSYMBOL_opt_time_precision = 1494,      /* opt_time_precision  */
  YYSYMBOL_optional_braces = 1495,         /* optional_braces  */
  YYSYMBOL_expr = 1496,                    /* expr  */
  YYSYMBOL_boolean_test = 1497,            /* boolean_test  */
  YYSYMBOL_predicate = 1498,               /* predicate  */
  YYSYMBOL_bit_expr = 1499,                /* bit_expr  */
  YYSYMBOL_or = 1500,                      /* or  */
  YYSYMBOL_and = 1501,                     /* and  */
  YYSYMBOL_not = 1502,                     /* not  */
  YYSYMBOL_not2 = 1503,                    /* not2  */
  YYSYMBOL_comp_op = 1504,                 /* comp_op  */
  YYSYMBOL_all_or_any = 1505,              /* all_or_any  */
  YYSYMBOL_opt_dyncol_type = 1506,         /* opt_dyncol_type  */
  YYSYMBOL_dyncol_type = 1507,             /* dyncol_type  */
  YYSYMBOL_numeric_dyncol_type = 1508,     /* numeric_dyncol_type  */
  YYSYMBOL_temporal_dyncol_type = 1509,    /* temporal_dyncol_type  */
  YYSYMBOL_string_dyncol_type = 1510,      /* string_dyncol_type  */
  YYSYMBOL_1511_171 = 1511,                /* $@171  */
  YYSYMBOL_dyncall_create_element = 1512,  /* dyncall_create_element  */
  YYSYMBOL_dyncall_create_list = 1513,     /* dyncall_create_list  */
  YYSYMBOL_plsql_cursor_attr = 1514,       /* plsql_cursor_attr  */
  YYSYMBOL_explicit_cursor_attr = 1515,    /* explicit_cursor_attr  */
  YYSYMBOL_trim_operands = 1516,           /* trim_operands  */
  YYSYMBOL_column_default_non_parenthesized_expr = 1517, /* column_default_non_parenthesized_expr  */
  YYSYMBOL_primary_expr = 1518,            /* primary_expr  */
  YYSYMBOL_string_factor_expr = 1519,      /* string_factor_expr  */
  YYSYMBOL_simple_expr = 1520,             /* simple_expr  */
  YYSYMBOL_mysql_concatenation_expr = 1521, /* mysql_concatenation_expr  */
  YYSYMBOL_function_call_keyword_timestamp = 1522, /* function_call_keyword_timestamp  */
  YYSYMBOL_function_call_keyword = 1523,   /* function_call_keyword  */
  YYSYMBOL_function_call_nonkeyword = 1524, /* function_call_nonkeyword  */
  YYSYMBOL_function_call_conflict = 1525,  /* function_call_conflict  */
  YYSYMBOL_geometry_function = 1526,       /* geometry_function  */
  YYSYMBOL_function_call_generic = 1527,   /* function_call_generic  */
  YYSYMBOL_1528_172 = 1528,                /* @172  */
  YYSYMBOL_fulltext_options = 1529,        /* fulltext_options  */
  YYSYMBOL_opt_natural_language_mode = 1530, /* opt_natural_language_mode  */
  YYSYMBOL_opt_query_expansion = 1531,     /* opt_query_expansion  */
  YYSYMBOL_opt_udf_expr_list = 1532,       /* opt_udf_expr_list  */
  YYSYMBOL_udf_expr_list = 1533,           /* udf_expr_list  */
  YYSYMBOL_udf_expr = 1534,                /* udf_expr  */
  YYSYMBOL_sum_expr = 1535,                /* sum_expr  */
  YYSYMBOL_1536_173 = 1536,                /* $@173  */
  YYSYMBOL_1537_174 = 1537,                /* $@174  */
  YYSYMBOL_1538_175 = 1538,                /* $@175  */
  YYSYMBOL_window_func_expr = 1539,        /* window_func_expr  */
  YYSYMBOL_window_func = 1540,             /* window_func  */
  YYSYMBOL_simple_window_func = 1541,      /* simple_window_func  */
  YYSYMBOL_inverse_distribution_function = 1542, /* inverse_distribution_function  */
  YYSYMBOL_percentile_function = 1543,     /* percentile_function  */
  YYSYMBOL_1544_176 = 1544,                /* $@176  */
  YYSYMBOL_inverse_distribution_function_def = 1545, /* inverse_distribution_function_def  */
  YYSYMBOL_order_by_single_element_list = 1546, /* order_by_single_element_list  */
  YYSYMBOL_window_name = 1547,             /* window_name  */
  YYSYMBOL_variable = 1548,                /* variable  */
  YYSYMBOL_1549_177 = 1549,                /* $@177  */
  YYSYMBOL_variable_aux = 1550,            /* variable_aux  */
  YYSYMBOL_opt_distinct = 1551,            /* opt_distinct  */
  YYSYMBOL_opt_gconcat_separator = 1552,   /* opt_gconcat_separator  */
  YYSYMBOL_opt_gorder_clause = 1553,       /* opt_gorder_clause  */
  YYSYMBOL_gorder_list = 1554,             /* gorder_list  */
  YYSYMBOL_opt_glimit_clause = 1555,       /* opt_glimit_clause  */
  YYSYMBOL_glimit_clause_init = 1556,      /* glimit_clause_init  */
  YYSYMBOL_glimit_clause = 1557,           /* glimit_clause  */
  YYSYMBOL_glimit_options = 1558,          /* glimit_options  */
  YYSYMBOL_in_sum_expr = 1559,             /* in_sum_expr  */
  YYSYMBOL_1560_178 = 1560,                /* $@178  */
  YYSYMBOL_cast_type = 1561,               /* cast_type  */
  YYSYMBOL_1562_179 = 1562,                /* $@179  */
  YYSYMBOL_1563_180 = 1563,                /* $@180  */
  YYSYMBOL_1564_181 = 1564,                /* $@181  */
  YYSYMBOL_cast_type_numeric = 1565,       /* cast_type_numeric  */
  YYSYMBOL_cast_type_temporal = 1566,      /* cast_type_temporal  */
  YYSYMBOL_opt_expr_list = 1567,           /* opt_expr_list  */
  YYSYMBOL_expr_list = 1568,               /* expr_list  */
  YYSYMBOL_ident_list_arg = 1569,          /* ident_list_arg  */
  YYSYMBOL_ident_list = 1570,              /* ident_list  */
  YYSYMBOL_when_list = 1571,               /* when_list  */
  YYSYMBOL_when_list_opt_else = 1572,      /* when_list_opt_else  */
  YYSYMBOL_decode_when_list_oracle = 1573, /* decode_when_list_oracle  */
  YYSYMBOL_table_ref = 1574,               /* table_ref  */
  YYSYMBOL_join_table_list = 1575,         /* join_table_list  */
  YYSYMBOL_esc_table_ref = 1576,           /* esc_table_ref  */
  YYSYMBOL_derived_table_list = 1577,      /* derived_table_list  */
  YYSYMBOL_join_table = 1578,              /* join_table  */
  YYSYMBOL_1579_182 = 1579,                /* $@182  */
  YYSYMBOL_1580_183 = 1580,                /* $@183  */
  YYSYMBOL_1581_184 = 1581,                /* $@184  */
  YYSYMBOL_1582_185 = 1582,                /* $@185  */
  YYSYMBOL_1583_186 = 1583,                /* $@186  */
  YYSYMBOL_1584_187 = 1584,                /* $@187  */
  YYSYMBOL_inner_join = 1585,              /* inner_join  */
  YYSYMBOL_normal_join = 1586,             /* normal_join  */
  YYSYMBOL_opt_use_partition = 1587,       /* opt_use_partition  */
  YYSYMBOL_use_partition = 1588,           /* use_partition  */
  YYSYMBOL_table_factor = 1589,            /* table_factor  */
  YYSYMBOL_table_primary_ident = 1590,     /* table_primary_ident  */
  YYSYMBOL_1591_188 = 1591,                /* $@188  */
  YYSYMBOL_table_primary_derived = 1592,   /* table_primary_derived  */
  YYSYMBOL_select_derived_union = 1593,    /* select_derived_union  */
  YYSYMBOL_1594_189 = 1594,                /* $@189  */
  YYSYMBOL_union_list_derived_part2 = 1595, /* union_list_derived_part2  */
  YYSYMBOL_1596_190 = 1596,                /* $@190  */
  YYSYMBOL_union_list_derived = 1597,      /* union_list_derived  */
  YYSYMBOL_select_init2_derived = 1598,    /* select_init2_derived  */
  YYSYMBOL_select_part2_derived = 1599,    /* select_part2_derived  */
  YYSYMBOL_1600_191 = 1600,                /* $@191  */
  YYSYMBOL_select_derived = 1601,          /* select_derived  */
  YYSYMBOL_derived_simple_table = 1602,    /* derived_simple_table  */
  YYSYMBOL_derived_query_specification = 1603, /* derived_query_specification  */
  YYSYMBOL_derived_table_value_constructor = 1604, /* derived_table_value_constructor  */
  YYSYMBOL_1605_192 = 1605,                /* $@192  */
  YYSYMBOL_select_derived2 = 1606,         /* select_derived2  */
  YYSYMBOL_1607_193 = 1607,                /* $@193  */
  YYSYMBOL_1608_194 = 1608,                /* $@194  */
  YYSYMBOL_get_select_lex = 1609,          /* get_select_lex  */
  YYSYMBOL_get_select_lex_derived = 1610,  /* get_select_lex_derived  */
  YYSYMBOL_select_derived_init = 1611,     /* select_derived_init  */
  YYSYMBOL_opt_outer = 1612,               /* opt_outer  */
  YYSYMBOL_index_hint_clause = 1613,       /* index_hint_clause  */
  YYSYMBOL_index_hint_type = 1614,         /* index_hint_type  */
  YYSYMBOL_index_hint_definition = 1615,   /* index_hint_definition  */
  YYSYMBOL_1616_195 = 1616,                /* $@195  */
  YYSYMBOL_1617_196 = 1617,                /* $@196  */
  YYSYMBOL_index_hints_list = 1618,        /* index_hints_list  */
  YYSYMBOL_opt_index_hints_list = 1619,    /* opt_index_hints_list  */
  YYSYMBOL_1620_197 = 1620,                /* $@197  */
  YYSYMBOL_opt_key_definition = 1621,      /* opt_key_definition  */
  YYSYMBOL_1622_198 = 1622,                /* $@198  */
  YYSYMBOL_opt_key_usage_list = 1623,      /* opt_key_usage_list  */
  YYSYMBOL_key_usage_element = 1624,       /* key_usage_element  */
  YYSYMBOL_key_usage_list = 1625,          /* key_usage_list  */
  YYSYMBOL_using_list = 1626,              /* using_list  */
  YYSYMBOL_interval = 1627,                /* interval  */
  YYSYMBOL_interval_time_stamp = 1628,     /* interval_time_stamp  */
  YYSYMBOL_date_time_type = 1629,          /* date_time_type  */
  YYSYMBOL_table_alias = 1630,             /* table_alias  */
  YYSYMBOL_opt_table_alias = 1631,         /* opt_table_alias  */
  YYSYMBOL_opt_all = 1632,                 /* opt_all  */
  YYSYMBOL_opt_where_clause = 1633,        /* opt_where_clause  */
  YYSYMBOL_1634_199 = 1634,                /* $@199  */
  YYSYMBOL_opt_having_clause = 1635,       /* opt_having_clause  */
  YYSYMBOL_1636_200 = 1636,                /* $@200  */
  YYSYMBOL_opt_group_clause = 1637,        /* opt_group_clause  */
  YYSYMBOL_group_list = 1638,              /* group_list  */
  YYSYMBOL_olap_opt = 1639,                /* olap_opt  */
  YYSYMBOL_opt_window_clause = 1640,       /* opt_window_clause  */
  YYSYMBOL_window_def_list = 1641,         /* window_def_list  */
  YYSYMBOL_window_def = 1642,              /* window_def  */
  YYSYMBOL_window_spec = 1643,             /* window_spec  */
  YYSYMBOL_1644_201 = 1644,                /* $@201  */
  YYSYMBOL_opt_window_ref = 1645,          /* opt_window_ref  */
  YYSYMBOL_opt_window_partition_clause = 1646, /* opt_window_partition_clause  */
  YYSYMBOL_opt_window_order_clause = 1647, /* opt_window_order_clause  */
  YYSYMBOL_opt_window_frame_clause = 1648, /* opt_window_frame_clause  */
  YYSYMBOL_window_frame_units = 1649,      /* window_frame_units  */
  YYSYMBOL_window_frame_extent = 1650,     /* window_frame_extent  */
  YYSYMBOL_window_frame_start = 1651,      /* window_frame_start  */
  YYSYMBOL_window_frame_bound = 1652,      /* window_frame_bound  */
  YYSYMBOL_opt_window_frame_exclusion = 1653, /* opt_window_frame_exclusion  */
  YYSYMBOL_alter_order_clause = 1654,      /* alter_order_clause  */
  YYSYMBOL_alter_order_list = 1655,        /* alter_order_list  */
  YYSYMBOL_alter_order_item = 1656,        /* alter_order_item  */
  YYSYMBOL_opt_order_clause = 1657,        /* opt_order_clause  */
  YYSYMBOL_order_clause = 1658,            /* order_clause  */
  YYSYMBOL_1659_202 = 1659,                /* $@202  */
  YYSYMBOL_order_list = 1660,              /* order_list  */
  YYSYMBOL_order_dir = 1661,               /* order_dir  */
  YYSYMBOL_opt_limit_clause = 1662,        /* opt_limit_clause  */
  YYSYMBOL_limit_clause_init = 1663,       /* limit_clause_init  */
  YYSYMBOL_limit_clause = 1664,            /* limit_clause  */
  YYSYMBOL_limit_options = 1665,           /* limit_options  */
  YYSYMBOL_limit_option = 1666,            /* limit_option  */
  YYSYMBOL_limit_rows_option = 1667,       /* limit_rows_option  */
  YYSYMBOL_delete_limit_clause = 1668,     /* delete_limit_clause  */
  YYSYMBOL_opt_plus = 1669,                /* opt_plus  */
  YYSYMBOL_int_num = 1670,                 /* int_num  */
  YYSYMBOL_ulong_num = 1671,               /* ulong_num  */
  YYSYMBOL_real_ulong_num = 1672,          /* real_ulong_num  */
  YYSYMBOL_longlong_num = 1673,            /* longlong_num  */
  YYSYMBOL_ulonglong_num = 1674,           /* ulonglong_num  */
  YYSYMBOL_real_ulonglong_num = 1675,      /* real_ulonglong_num  */
  YYSYMBOL_dec_num_error = 1676,           /* dec_num_error  */
  YYSYMBOL_dec_num = 1677,                 /* dec_num  */
  YYSYMBOL_choice = 1678,                  /* choice  */
  YYSYMBOL_bool = 1679,                    /* bool  */
  YYSYMBOL_procedure_clause = 1680,        /* procedure_clause  */
  YYSYMBOL_1681_203 = 1681,                /* $@203  */
  YYSYMBOL_procedure_list = 1682,          /* procedure_list  */
  YYSYMBOL_procedure_list2 = 1683,         /* procedure_list2  */
  YYSYMBOL_procedure_item = 1684,          /* procedure_item  */
  YYSYMBOL_select_var_list_init = 1685,    /* select_var_list_init  */
  YYSYMBOL_1686_204 = 1686,                /* $@204  */
  YYSYMBOL_select_var_list = 1687,         /* select_var_list  */
  YYSYMBOL_select_var_ident = 1688,        /* select_var_ident  */
  YYSYMBOL_select_outvar = 1689,           /* select_outvar  */
  YYSYMBOL_into = 1690,                    /* into  */
  YYSYMBOL_into_destination = 1691,        /* into_destination  */
  YYSYMBOL_1692_205 = 1692,                /* $@205  */
  YYSYMBOL_1693_206 = 1693,                /* $@206  */
  YYSYMBOL_do = 1694,                      /* do  */
  YYSYMBOL_1695_207 = 1695,                /* $@207  */
  YYSYMBOL_drop = 1696,                    /* drop  */
  YYSYMBOL_1697_208 = 1697,                /* $@208  */
  YYSYMBOL_1698_209 = 1698,                /* $@209  */
  YYSYMBOL_1699_210 = 1699,                /* $@210  */
  YYSYMBOL_table_list = 1700,              /* table_list  */
  YYSYMBOL_table_name = 1701,              /* table_name  */
  YYSYMBOL_table_name_with_opt_use_partition = 1702, /* table_name_with_opt_use_partition  */
  YYSYMBOL_table_alias_ref_list = 1703,    /* table_alias_ref_list  */
  YYSYMBOL_table_alias_ref = 1704,         /* table_alias_ref  */
  YYSYMBOL_opt_if_exists_table_element = 1705, /* opt_if_exists_table_element  */
  YYSYMBOL_opt_if_exists = 1706,           /* opt_if_exists  */
  YYSYMBOL_opt_temporary = 1707,           /* opt_temporary  */
  YYSYMBOL_insert = 1708,                  /* insert  */
  YYSYMBOL_1709_211 = 1709,                /* $@211  */
  YYSYMBOL_1710_212 = 1710,                /* $@212  */
  YYSYMBOL_replace = 1711,                 /* replace  */
  YYSYMBOL_1712_213 = 1712,                /* $@213  */
  YYSYMBOL_1713_214 = 1713,                /* $@214  */
  YYSYMBOL_insert_lock_option = 1714,      /* insert_lock_option  */
  YYSYMBOL_replace_lock_option = 1715,     /* replace_lock_option  */
  YYSYMBOL_insert2 = 1716,                 /* insert2  */
  YYSYMBOL_insert_table = 1717,            /* insert_table  */
  YYSYMBOL_insert_field_spec = 1718,       /* insert_field_spec  */
  YYSYMBOL_1719_215 = 1719,                /* $@215  */
  YYSYMBOL_fields = 1720,                  /* fields  */
  YYSYMBOL_insert_values = 1721,           /* insert_values  */
  YYSYMBOL_values_list = 1722,             /* values_list  */
  YYSYMBOL_ident_eq_list = 1723,           /* ident_eq_list  */
  YYSYMBOL_ident_eq_value = 1724,          /* ident_eq_value  */
  YYSYMBOL_equal = 1725,                   /* equal  */
  YYSYMBOL_opt_equal = 1726,               /* opt_equal  */
  YYSYMBOL_opt_with = 1727,                /* opt_with  */
  YYSYMBOL_opt_by = 1728,                  /* opt_by  */
  YYSYMBOL_no_braces = 1729,               /* no_braces  */
  YYSYMBOL_1730_216 = 1730,                /* $@216  */
  YYSYMBOL_no_braces_with_names = 1731,    /* no_braces_with_names  */
  YYSYMBOL_1732_217 = 1732,                /* $@217  */
  YYSYMBOL_opt_values = 1733,              /* opt_values  */
  YYSYMBOL_opt_values_with_names = 1734,   /* opt_values_with_names  */
  YYSYMBOL_values = 1735,                  /* values  */
  YYSYMBOL_values_with_names = 1736,       /* values_with_names  */
  YYSYMBOL_expr_or_ignore = 1737,          /* expr_or_ignore  */
  YYSYMBOL_expr_or_ignore_or_default = 1738, /* expr_or_ignore_or_default  */
  YYSYMBOL_opt_insert_update = 1739,       /* opt_insert_update  */
  YYSYMBOL_1740_218 = 1740,                /* $@218  */
  YYSYMBOL_1741_219 = 1741,                /* $@219  */
  YYSYMBOL_update = 1742,                  /* update  */
  YYSYMBOL_1743_220 = 1743,                /* $@220  */
  YYSYMBOL_1744_221 = 1744,                /* $@221  */
  YYSYMBOL_update_list = 1745,             /* update_list  */
  YYSYMBOL_update_elem = 1746,             /* update_elem  */
  YYSYMBOL_insert_update_list = 1747,      /* insert_update_list  */
  YYSYMBOL_insert_update_elem = 1748,      /* insert_update_elem  */
  YYSYMBOL_opt_low_priority = 1749,        /* opt_low_priority  */
  YYSYMBOL_delete = 1750,                  /* delete  */
  YYSYMBOL_1751_222 = 1751,                /* $@222  */
  YYSYMBOL_opt_delete_system_time = 1752,  /* opt_delete_system_time  */
  YYSYMBOL_delete_part2 = 1753,            /* delete_part2  */
  YYSYMBOL_delete_single_table = 1754,     /* delete_single_table  */
  YYSYMBOL_single_multi = 1755,            /* single_multi  */
  YYSYMBOL_1756_223 = 1756,                /* $@223  */
  YYSYMBOL_1757_224 = 1757,                /* $@224  */
  YYSYMBOL_opt_select_expressions = 1758,  /* opt_select_expressions  */
  YYSYMBOL_table_wild_list = 1759,         /* table_wild_list  */
  YYSYMBOL_table_wild_one = 1760,          /* table_wild_one  */
  YYSYMBOL_opt_wild = 1761,                /* opt_wild  */
  YYSYMBOL_opt_delete_options = 1762,      /* opt_delete_options  */
  YYSYMBOL_opt_delete_option = 1763,       /* opt_delete_option  */
  YYSYMBOL_truncate = 1764,                /* truncate  */
  YYSYMBOL_1765_225 = 1765,                /* $@225  */
  YYSYMBOL_1766_226 = 1766,                /* $@226  */
  YYSYMBOL_opt_truncate_table_storage_clause = 1767, /* opt_truncate_table_storage_clause  */
  YYSYMBOL_opt_table_sym = 1768,           /* opt_table_sym  */
  YYSYMBOL_opt_profile_defs = 1769,        /* opt_profile_defs  */
  YYSYMBOL_profile_defs = 1770,            /* profile_defs  */
  YYSYMBOL_profile_def = 1771,             /* profile_def  */
  YYSYMBOL_opt_profile_args = 1772,        /* opt_profile_args  */
  YYSYMBOL_show = 1773,                    /* show  */
  YYSYMBOL_1774_227 = 1774,                /* $@227  */
  YYSYMBOL_show_param = 1775,              /* show_param  */
  YYSYMBOL_1776_228 = 1776,                /* $@228  */
  YYSYMBOL_1777_229 = 1777,                /* $@229  */
  YYSYMBOL_show_engine_param = 1778,       /* show_engine_param  */
  YYSYMBOL_master_or_binary = 1779,        /* master_or_binary  */
  YYSYMBOL_opt_storage = 1780,             /* opt_storage  */
  YYSYMBOL_opt_db = 1781,                  /* opt_db  */
  YYSYMBOL_opt_full = 1782,                /* opt_full  */
  YYSYMBOL_from_or_in = 1783,              /* from_or_in  */
  YYSYMBOL_binlog_in = 1784,               /* binlog_in  */
  YYSYMBOL_binlog_from = 1785,             /* binlog_from  */
  YYSYMBOL_wild_and_where = 1786,          /* wild_and_where  */
  YYSYMBOL_describe = 1787,                /* describe  */
  YYSYMBOL_1788_230 = 1788,                /* $@230  */
  YYSYMBOL_1789_231 = 1789,                /* $@231  */
  YYSYMBOL_explainable_command = 1790,     /* explainable_command  */
  YYSYMBOL_describe_command = 1791,        /* describe_command  */
  YYSYMBOL_analyze_stmt_command = 1792,    /* analyze_stmt_command  */
  YYSYMBOL_opt_extended_describe = 1793,   /* opt_extended_describe  */
  YYSYMBOL_opt_format_json = 1794,         /* opt_format_json  */
  YYSYMBOL_opt_describe_column = 1795,     /* opt_describe_column  */
  YYSYMBOL_flush = 1796,                   /* flush  */
  YYSYMBOL_1797_232 = 1797,                /* $@232  */
  YYSYMBOL_flush_options = 1798,           /* flush_options  */
  YYSYMBOL_1799_233 = 1799,                /* $@233  */
  YYSYMBOL_opt_flush_lock = 1800,          /* opt_flush_lock  */
  YYSYMBOL_flush_lock = 1801,              /* flush_lock  */
  YYSYMBOL_1802_234 = 1802,                /* $@234  */
  YYSYMBOL_flush_options_list = 1803,      /* flush_options_list  */
  YYSYMBOL_flush_option = 1804,            /* flush_option  */
  YYSYMBOL_opt_table_list = 1805,          /* opt_table_list  */
  YYSYMBOL_opt_delete_gtid_domain = 1806,  /* opt_delete_gtid_domain  */
  YYSYMBOL_delete_domain_id_list = 1807,   /* delete_domain_id_list  */
  YYSYMBOL_delete_domain_id = 1808,        /* delete_domain_id  */
  YYSYMBOL_optional_flush_tables_arguments = 1809, /* optional_flush_tables_arguments  */
  YYSYMBOL_reset = 1810,                   /* reset  */
  YYSYMBOL_1811_235 = 1811,                /* $@235  */
  YYSYMBOL_reset_options = 1812,           /* reset_options  */
  YYSYMBOL_reset_option = 1813,            /* reset_option  */
  YYSYMBOL_1814_236 = 1814,                /* $@236  */
  YYSYMBOL_1815_237 = 1815,                /* $@237  */
  YYSYMBOL_slave_reset_options = 1816,     /* slave_reset_options  */
  YYSYMBOL_master_reset_options = 1817,    /* master_reset_options  */
  YYSYMBOL_purge = 1818,                   /* purge  */
  YYSYMBOL_1819_238 = 1819,                /* $@238  */
  YYSYMBOL_purge_options = 1820,           /* purge_options  */
  YYSYMBOL_purge_option = 1821,            /* purge_option  */
  YYSYMBOL_kill = 1822,                    /* kill  */
  YYSYMBOL_1823_239 = 1823,                /* $@239  */
  YYSYMBOL_kill_type = 1824,               /* kill_type  */
  YYSYMBOL_kill_option = 1825,             /* kill_option  */
  YYSYMBOL_opt_connection = 1826,          /* opt_connection  */
  YYSYMBOL_kill_expr = 1827,               /* kill_expr  */
  YYSYMBOL_shutdown = 1828,                /* shutdown  */
  YYSYMBOL_use = 1829,                     /* use  */
  YYSYMBOL_load = 1830,                    /* load  */
  YYSYMBOL_1831_240 = 1831,                /* $@240  */
  YYSYMBOL_1832_241 = 1832,                /* $@241  */
  YYSYMBOL_1833_242 = 1833,                /* $@242  */
  YYSYMBOL_1834_243 = 1834,                /* $@243  */
  YYSYMBOL_data_or_xml = 1835,             /* data_or_xml  */
  YYSYMBOL_opt_local = 1836,               /* opt_local  */
  YYSYMBOL_load_data_lock = 1837,          /* load_data_lock  */
  YYSYMBOL_opt_duplicate = 1838,           /* opt_duplicate  */
  YYSYMBOL_opt_field_term = 1839,          /* opt_field_term  */
  YYSYMBOL_field_term_list = 1840,         /* field_term_list  */
  YYSYMBOL_field_term = 1841,              /* field_term  */
  YYSYMBOL_opt_line_term = 1842,           /* opt_line_term  */
  YYSYMBOL_line_term_list = 1843,          /* line_term_list  */
  YYSYMBOL_line_term = 1844,               /* line_term  */
  YYSYMBOL_opt_xml_rows_identified_by = 1845, /* opt_xml_rows_identified_by  */
  YYSYMBOL_opt_ignore_lines = 1846,        /* opt_ignore_lines  */
  YYSYMBOL_lines_or_rows = 1847,           /* lines_or_rows  */
  YYSYMBOL_opt_field_or_var_spec = 1848,   /* opt_field_or_var_spec  */
  YYSYMBOL_fields_or_vars = 1849,          /* fields_or_vars  */
  YYSYMBOL_field_or_var = 1850,            /* field_or_var  */
  YYSYMBOL_opt_load_data_set_spec = 1851,  /* opt_load_data_set_spec  */
  YYSYMBOL_load_data_set_list = 1852,      /* load_data_set_list  */
  YYSYMBOL_load_data_set_elem = 1853,      /* load_data_set_elem  */
  YYSYMBOL_text_literal = 1854,            /* text_literal  */
  YYSYMBOL_text_string = 1855,             /* text_string  */
  YYSYMBOL_hex_or_bin_String = 1856,       /* hex_or_bin_String  */
  YYSYMBOL_param_marker = 1857,            /* param_marker  */
  YYSYMBOL_signed_literal = 1858,          /* signed_literal  */
  YYSYMBOL_literal = 1859,                 /* literal  */
  YYSYMBOL_NUM_literal = 1860,             /* NUM_literal  */
  YYSYMBOL_temporal_literal = 1861,        /* temporal_literal  */
  YYSYMBOL_opt_with_clause = 1862,         /* opt_with_clause  */
  YYSYMBOL_with_clause = 1863,             /* with_clause  */
  YYSYMBOL_1864_244 = 1864,                /* $@244  */
  YYSYMBOL_opt_recursive = 1865,           /* opt_recursive  */
  YYSYMBOL_with_list = 1866,               /* with_list  */
  YYSYMBOL_with_list_element = 1867,       /* with_list_element  */
  YYSYMBOL_1868_245 = 1868,                /* $@245  */
  YYSYMBOL_opt_with_column_list = 1869,    /* opt_with_column_list  */
  YYSYMBOL_with_column_list = 1870,        /* with_column_list  */
  YYSYMBOL_with_element_head = 1871,       /* with_element_head  */
  YYSYMBOL_insert_ident = 1872,            /* insert_ident  */
  YYSYMBOL_table_wild = 1873,              /* table_wild  */
  YYSYMBOL_select_sublist_qualified_asterisk = 1874, /* select_sublist_qualified_asterisk  */
  YYSYMBOL_order_ident = 1875,             /* order_ident  */
  YYSYMBOL_simple_ident = 1876,            /* simple_ident  */
  YYSYMBOL_simple_ident_nospvar = 1877,    /* simple_ident_nospvar  */
  YYSYMBOL_field_ident = 1878,             /* field_ident  */
  YYSYMBOL_table_ident = 1879,             /* table_ident  */
  YYSYMBOL_table_ident_opt_wild = 1880,    /* table_ident_opt_wild  */
  YYSYMBOL_table_ident_nodb = 1881,        /* table_ident_nodb  */
  YYSYMBOL_IDENT_cli = 1882,               /* IDENT_cli  */
  YYSYMBOL_ident_cli = 1883,               /* ident_cli  */
  YYSYMBOL_IDENT_sys = 1884,               /* IDENT_sys  */
  YYSYMBOL_TEXT_STRING_sys = 1885,         /* TEXT_STRING_sys  */
  YYSYMBOL_TEXT_STRING_literal = 1886,     /* TEXT_STRING_literal  */
  YYSYMBOL_TEXT_STRING_filesystem = 1887,  /* TEXT_STRING_filesystem  */
  YYSYMBOL_ident_table_alias = 1888,       /* ident_table_alias  */
  YYSYMBOL_ident_set_usual_case = 1889,    /* ident_set_usual_case  */
  YYSYMBOL_ident_sysvar_name = 1890,       /* ident_sysvar_name  */
  YYSYMBOL_ident = 1891,                   /* ident  */
  YYSYMBOL_ident_directly_assignable = 1892, /* ident_directly_assignable  */
  YYSYMBOL_label_ident = 1893,             /* label_ident  */
  YYSYMBOL_labels_declaration_oracle = 1894, /* labels_declaration_oracle  */
  YYSYMBOL_label_declaration_oracle = 1895, /* label_declaration_oracle  */
  YYSYMBOL_ident_or_text = 1896,           /* ident_or_text  */
  YYSYMBOL_user_maybe_role = 1897,         /* user_maybe_role  */
  YYSYMBOL_user_or_role = 1898,            /* user_or_role  */
  YYSYMBOL_user = 1899,                    /* user  */
  YYSYMBOL_keyword_table_alias = 1900,     /* keyword_table_alias  */
  YYSYMBOL_keyword_ident = 1901,           /* keyword_ident  */
  YYSYMBOL_keyword_label = 1902,           /* keyword_label  */
  YYSYMBOL_keyword_sysvar_name = 1903,     /* keyword_sysvar_name  */
  YYSYMBOL_keyword_sp_decl = 1904,         /* keyword_sp_decl  */
  YYSYMBOL_keyword_set_usual_case = 1905,  /* keyword_set_usual_case  */
  YYSYMBOL_keyword_directly_assignable = 1906, /* keyword_directly_assignable  */
  YYSYMBOL_keyword_sp_var_not_label = 1907, /* keyword_sp_var_not_label  */
  YYSYMBOL_keyword_sp_head = 1908,         /* keyword_sp_head  */
  YYSYMBOL_keyword_verb_clause = 1909,     /* keyword_verb_clause  */
  YYSYMBOL_keyword_set_special_case = 1910, /* keyword_set_special_case  */
  YYSYMBOL_keyword_sp_block_section = 1911, /* keyword_sp_block_section  */
  YYSYMBOL_keyword_sysvar_type = 1912,     /* keyword_sysvar_type  */
  YYSYMBOL_keyword_data_type = 1913,       /* keyword_data_type  */
  YYSYMBOL_keyword_sp_var_and_label = 1914, /* keyword_sp_var_and_label  */
  YYSYMBOL_set = 1915,                     /* set  */
  YYSYMBOL_1916_246 = 1916,                /* $@246  */
  YYSYMBOL_1917_247 = 1917,                /* $@247  */
  YYSYMBOL_1918_248 = 1918,                /* $@248  */
  YYSYMBOL_set_assign = 1919,              /* set_assign  */
  YYSYMBOL_1920_249 = 1920,                /* $@249  */
  YYSYMBOL_1921_250 = 1921,                /* $@250  */
  YYSYMBOL_1922_251 = 1922,                /* $@251  */
  YYSYMBOL_set_stmt_option_value_following_option_type_list = 1923, /* set_stmt_option_value_following_option_type_list  */
  YYSYMBOL_start_option_value_list = 1924, /* start_option_value_list  */
  YYSYMBOL_1925_252 = 1925,                /* $@252  */
  YYSYMBOL_1926_253 = 1926,                /* $@253  */
  YYSYMBOL_1927_254 = 1927,                /* $@254  */
  YYSYMBOL_start_option_value_list_following_option_type = 1928, /* start_option_value_list_following_option_type  */
  YYSYMBOL_1929_255 = 1929,                /* $@255  */
  YYSYMBOL_option_value_list_continued = 1930, /* option_value_list_continued  */
  YYSYMBOL_option_value_list = 1931,       /* option_value_list  */
  YYSYMBOL_1932_256 = 1932,                /* $@256  */
  YYSYMBOL_1933_257 = 1933,                /* $@257  */
  YYSYMBOL_option_value = 1934,            /* option_value  */
  YYSYMBOL_1935_258 = 1935,                /* $@258  */
  YYSYMBOL_option_type = 1936,             /* option_type  */
  YYSYMBOL_opt_var_type = 1937,            /* opt_var_type  */
  YYSYMBOL_opt_var_ident_type = 1938,      /* opt_var_ident_type  */
  YYSYMBOL_option_value_following_option_type = 1939, /* option_value_following_option_type  */
  YYSYMBOL_option_value_no_option_type = 1940, /* option_value_no_option_type  */
  YYSYMBOL_transaction_characteristics = 1941, /* transaction_characteristics  */
  YYSYMBOL_transaction_access_mode = 1942, /* transaction_access_mode  */
  YYSYMBOL_isolation_level = 1943,         /* isolation_level  */
  YYSYMBOL_transaction_access_mode_types = 1944, /* transaction_access_mode_types  */
  YYSYMBOL_isolation_types = 1945,         /* isolation_types  */
  YYSYMBOL_opt_for_user = 1946,            /* opt_for_user  */
  YYSYMBOL_text_or_password = 1947,        /* text_or_password  */
  YYSYMBOL_set_expr_or_default = 1948,     /* set_expr_or_default  */
  YYSYMBOL_lock = 1949,                    /* lock  */
  YYSYMBOL_1950_259 = 1950,                /* $@259  */
  YYSYMBOL_opt_lock_wait_timeout = 1951,   /* opt_lock_wait_timeout  */
  YYSYMBOL_table_or_tables = 1952,         /* table_or_tables  */
  YYSYMBOL_table_lock_list = 1953,         /* table_lock_list  */
  YYSYMBOL_table_lock = 1954,              /* table_lock  */
  YYSYMBOL_lock_option = 1955,             /* lock_option  */
  YYSYMBOL_unlock = 1956,                  /* unlock  */
  YYSYMBOL_1957_260 = 1957,                /* $@260  */
  YYSYMBOL_handler = 1958,                 /* handler  */
  YYSYMBOL_1959_261 = 1959,                /* $@261  */
  YYSYMBOL_handler_read_or_scan = 1960,    /* handler_read_or_scan  */
  YYSYMBOL_handler_scan_function = 1961,   /* handler_scan_function  */
  YYSYMBOL_handler_rkey_function = 1962,   /* handler_rkey_function  */
  YYSYMBOL_1963_262 = 1963,                /* $@262  */
  YYSYMBOL_handler_rkey_mode = 1964,       /* handler_rkey_mode  */
  YYSYMBOL_revoke = 1965,                  /* revoke  */
  YYSYMBOL_revoke_command = 1966,          /* revoke_command  */
  YYSYMBOL_admin_option_for_role = 1967,   /* admin_option_for_role  */
  YYSYMBOL_grant = 1968,                   /* grant  */
  YYSYMBOL_grant_command = 1969,           /* grant_command  */
  YYSYMBOL_opt_with_admin = 1970,          /* opt_with_admin  */
  YYSYMBOL_opt_with_admin_option = 1971,   /* opt_with_admin_option  */
  YYSYMBOL_role_list = 1972,               /* role_list  */
  YYSYMBOL_current_role = 1973,            /* current_role  */
  YYSYMBOL_grant_role = 1974,              /* grant_role  */
  YYSYMBOL_opt_table = 1975,               /* opt_table  */
  YYSYMBOL_grant_privileges = 1976,        /* grant_privileges  */
  YYSYMBOL_opt_privileges = 1977,          /* opt_privileges  */
  YYSYMBOL_object_privilege_list = 1978,   /* object_privilege_list  */
  YYSYMBOL_object_privilege = 1979,        /* object_privilege  */
  YYSYMBOL_1980_263 = 1980,                /* $@263  */
  YYSYMBOL_1981_264 = 1981,                /* $@264  */
  YYSYMBOL_1982_265 = 1982,                /* $@265  */
  YYSYMBOL_1983_266 = 1983,                /* $@266  */
  YYSYMBOL_opt_and = 1984,                 /* opt_and  */
  YYSYMBOL_require_list = 1985,            /* require_list  */
  YYSYMBOL_require_list_element = 1986,    /* require_list_element  */
  YYSYMBOL_grant_ident = 1987,             /* grant_ident  */
  YYSYMBOL_user_list = 1988,               /* user_list  */
  YYSYMBOL_grant_list = 1989,              /* grant_list  */
  YYSYMBOL_user_and_role_list = 1990,      /* user_and_role_list  */
  YYSYMBOL_via_or_with = 1991,             /* via_or_with  */
  YYSYMBOL_using_or_as = 1992,             /* using_or_as  */
  YYSYMBOL_grant_user = 1993,              /* grant_user  */
  YYSYMBOL_opt_column_list = 1994,         /* opt_column_list  */
  YYSYMBOL_column_list = 1995,             /* column_list  */
  YYSYMBOL_column_list_id = 1996,          /* column_list_id  */
  YYSYMBOL_opt_require_clause = 1997,      /* opt_require_clause  */
  YYSYMBOL_resource_option = 1998,         /* resource_option  */
  YYSYMBOL_resource_option_list = 1999,    /* resource_option_list  */
  YYSYMBOL_opt_resource_options = 2000,    /* opt_resource_options  */
  YYSYMBOL_opt_grant_options = 2001,       /* opt_grant_options  */
  YYSYMBOL_opt_grant_option = 2002,        /* opt_grant_option  */
  YYSYMBOL_grant_option_list = 2003,       /* grant_option_list  */
  YYSYMBOL_grant_option = 2004,            /* grant_option  */
  YYSYMBOL_begin_stmt_mariadb = 2005,      /* begin_stmt_mariadb  */
  YYSYMBOL_2006_267 = 2006,                /* $@267  */
  YYSYMBOL_compound_statement = 2007,      /* compound_statement  */
  YYSYMBOL_opt_not = 2008,                 /* opt_not  */
  YYSYMBOL_opt_work = 2009,                /* opt_work  */
  YYSYMBOL_opt_chain = 2010,               /* opt_chain  */
  YYSYMBOL_opt_release = 2011,             /* opt_release  */
  YYSYMBOL_commit = 2012,                  /* commit  */
  YYSYMBOL_rollback = 2013,                /* rollback  */
  YYSYMBOL_savepoint = 2014,               /* savepoint  */
  YYSYMBOL_release = 2015,                 /* release  */
  YYSYMBOL_unit_type_decl = 2016,          /* unit_type_decl  */
  YYSYMBOL_union_clause = 2017,            /* union_clause  */
  YYSYMBOL_union_list = 2018,              /* union_list  */
  YYSYMBOL_2019_268 = 2019,                /* $@268  */
  YYSYMBOL_union_list_view = 2020,         /* union_list_view  */
  YYSYMBOL_2021_269 = 2021,                /* $@269  */
  YYSYMBOL_union_order_or_limit = 2022,    /* union_order_or_limit  */
  YYSYMBOL_2023_270 = 2023,                /* $@270  */
  YYSYMBOL_order_or_limit = 2024,          /* order_or_limit  */
  YYSYMBOL_union_head_non_top = 2025,      /* union_head_non_top  */
  YYSYMBOL_union_option = 2026,            /* union_option  */
  YYSYMBOL_simple_table = 2027,            /* simple_table  */
  YYSYMBOL_table_value_constructor = 2028, /* table_value_constructor  */
  YYSYMBOL_2029_271 = 2029,                /* $@271  */
  YYSYMBOL_query_specification = 2030,     /* query_specification  */
  YYSYMBOL_query_term_union_not_ready = 2031, /* query_term_union_not_ready  */
  YYSYMBOL_query_term_union_ready = 2032,  /* query_term_union_ready  */
  YYSYMBOL_query_expression_body = 2033,   /* query_expression_body  */
  YYSYMBOL_subselect = 2034,               /* subselect  */
  YYSYMBOL_subselect_start = 2035,         /* subselect_start  */
  YYSYMBOL_subselect_end = 2036,           /* subselect_end  */
  YYSYMBOL_opt_query_expression_options = 2037, /* opt_query_expression_options  */
  YYSYMBOL_query_expression_option_list = 2038, /* query_expression_option_list  */
  YYSYMBOL_query_expression_option = 2039, /* query_expression_option  */
  YYSYMBOL_definer_opt = 2040,             /* definer_opt  */
  YYSYMBOL_no_definer = 2041,              /* no_definer  */
  YYSYMBOL_definer = 2042,                 /* definer  */
  YYSYMBOL_view_algorithm = 2043,          /* view_algorithm  */
  YYSYMBOL_opt_view_suid = 2044,           /* opt_view_suid  */
  YYSYMBOL_view_suid = 2045,               /* view_suid  */
  YYSYMBOL_view_list_opt = 2046,           /* view_list_opt  */
  YYSYMBOL_view_list = 2047,               /* view_list  */
  YYSYMBOL_view_select = 2048,             /* view_select  */
  YYSYMBOL_2049_272 = 2049,                /* $@272  */
  YYSYMBOL_query_expression_body_view = 2050, /* query_expression_body_view  */
  YYSYMBOL_view_check_option = 2051,       /* view_check_option  */
  YYSYMBOL_trigger_action_order = 2052,    /* trigger_action_order  */
  YYSYMBOL_trigger_follows_precedes_clause = 2053, /* trigger_follows_precedes_clause  */
  YYSYMBOL_trigger_tail = 2054,            /* trigger_tail  */
  YYSYMBOL_2055_273 = 2055,                /* $@273  */
  YYSYMBOL_2056_274 = 2056,                /* $@274  */
  YYSYMBOL_2057_275 = 2057,                /* $@275  */
  YYSYMBOL_2058_276 = 2058,                /* $@276  */
  YYSYMBOL_2059_277 = 2059,                /* $@277  */
  YYSYMBOL_udf_tail = 2060,                /* udf_tail  */
  YYSYMBOL_sf_return_type = 2061,          /* sf_return_type  */
  YYSYMBOL_2062_278 = 2062,                /* $@278  */
  YYSYMBOL_sf_tail = 2063,                 /* sf_tail  */
  YYSYMBOL_2064_279 = 2064,                /* $@279  */
  YYSYMBOL_2065_280 = 2065,                /* $@280  */
  YYSYMBOL_sp_tail = 2066,                 /* sp_tail  */
  YYSYMBOL_2067_281 = 2067,                /* $@281  */
  YYSYMBOL_2068_282 = 2068,                /* $@282  */
  YYSYMBOL_sf_tail_standalone = 2069,      /* sf_tail_standalone  */
  YYSYMBOL_sp_tail_standalone = 2070,      /* sp_tail_standalone  */
  YYSYMBOL_opt_package_routine_end_name = 2071, /* opt_package_routine_end_name  */
  YYSYMBOL_sp_tail_is = 2072,              /* sp_tail_is  */
  YYSYMBOL_xa = 2073,                      /* xa  */
  YYSYMBOL_opt_format_xid = 2074,          /* opt_format_xid  */
  YYSYMBOL_xid = 2075,                     /* xid  */
  YYSYMBOL_begin_or_start = 2076,          /* begin_or_start  */
  YYSYMBOL_opt_join_or_resume = 2077,      /* opt_join_or_resume  */
  YYSYMBOL_opt_one_phase = 2078,           /* opt_one_phase  */
  YYSYMBOL_opt_suspend = 2079,             /* opt_suspend  */
  YYSYMBOL_2080_283 = 2080,                /* $@283  */
  YYSYMBOL_opt_migrate = 2081,             /* opt_migrate  */
  YYSYMBOL_install = 2082,                 /* install  */
  YYSYMBOL_uninstall = 2083,               /* uninstall  */
  YYSYMBOL_keep_gcc_happy = 2084           /* keep_gcc_happy  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Second part of user prologue.  */
#line 286 "/home/buildbot/git/sql/sql_yacc_ora.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 2350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"


#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  725
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   93151

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  771
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1314
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3590
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6194

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   1004


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   765,     2,     2,     2,   756,   751,     2,
     762,   763,   754,   753,   764,   752,   769,   755,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   768,
     749,   747,   748,     2,   770,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   757,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   766,   750,   767,   758,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   759,   760,   761
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  1690,  1690,  1700,  1699,  1724,  1731,  1733,  1737,  1738,
    1739,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,
    1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,
    1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,
    1783,  1784,  1785,  1786,  1787,  1788,  1789,  1790,  1791,  1792,
    1793,  1794,  1795,  1796,  1797,  1798,  1799,  1800,  1801,  1805,
    1814,  1815,  1819,  1831,  1831,  1841,  1840,  1849,  1848,  1859,
    1861,  1861,  1872,  1873,  1877,  1889,  1888,  1905,  1904,  1913,
    1914,  1918,  1922,  1926,  1930,  1934,  1938,  1948,  1953,  1957,
    1961,  1965,  1969,  1973,  1978,  1982,  1987,  2015,  2019,  2023,
    2028,  2031,  2033,  2034,  2038,  2044,  2046,  2047,  2051,  2057,
    2059,  2060,  2064,  2071,  2075,  2090,  2094,  2100,  2106,  2112,
    2122,  2126,  2130,  2144,  2143,  2174,  2173,  2229,  2226,  2239,
    2237,  2250,  2248,  2260,  2259,  2274,  2272,  2284,  2282,  2291,
    2290,  2295,  2294,  2299,  2298,  2303,  2302,  2307,  2306,  2311,
    2310,  2317,  2324,  2331,  2335,  2339,  2339,  2346,  2342,  2366,
    2378,  2383,  2362,  2396,  2402,  2410,  2411,  2412,  2418,  2419,
    2425,  2426,  2432,  2443,  2442,  2469,  2468,  2494,  2503,  2512,
    2518,  2517,  2541,  2540,  2559,  2562,  2564,  2568,  2569,  2573,
    2580,  2590,  2591,  2595,  2596,  2600,  2601,  2605,  2610,  2616,
    2622,  2630,  2636,  2642,  2650,  2658,  2666,  2674,  2682,  2690,
    2702,  2718,  2718,  2722,  2721,  2733,  2734,  2738,  2743,  2748,
    2753,  2758,  2763,  2768,  2776,  2775,  2808,  2807,  2814,  2821,
    2822,  2828,  2834,  2844,  2850,  2856,  2858,  2865,  2866,  2870,
    2880,  2881,  2889,  2889,  2934,  2948,  2953,  2961,  2962,  2966,
    2967,  2971,  2972,  2977,  2979,  2981,  2983,  2985,  2987,  2989,
    2994,  2996,  3001,  3002,  3005,  3007,  3011,  3011,  3017,  3018,
    3022,  3023,  3028,  3027,  3038,  3037,  3048,  3047,  3060,  3062,
    3065,  3067,  3071,  3075,  3082,  3084,  3088,  3089,  3093,  3101,
    3106,  3111,  3116,  3121,  3126,  3134,  3136,  3140,  3141,  3145,
    3151,  3157,  3163,  3169,  3175,  3184,  3185,  3186,  3187,  3188,
    3193,  3192,  3205,  3204,  3217,  3224,  3225,  3229,  3230,  3234,
    3235,  3239,  3240,  3244,  3244,  3256,  3259,  3264,  3263,  3272,
    3276,  3277,  3284,  3285,  3292,  3293,  3297,  3303,  3309,  3318,
    3330,  3334,  3340,  3352,  3356,  3363,  3373,  3381,  3389,  3400,
    3401,  3408,  3419,  3418,  3437,  3436,  3450,  3452,  3457,  3467,
    3466,  3482,  3483,  3484,  3485,  3490,  3492,  3497,  3512,  3520,
    3524,  3544,  3545,  3549,  3553,  3559,  3565,  3571,  3577,  3587,
    3592,  3600,  3608,  3623,  3629,  3630,  3636,  3639,  3643,  3651,
    3668,  3670,  3688,  3694,  3696,  3698,  3700,  3702,  3704,  3706,
    3708,  3710,  3712,  3714,  3716,  3721,  3729,  3745,  3746,  3751,
    3757,  3766,  3773,  3782,  3791,  3796,  3805,  3807,  3809,  3818,
    3823,  3830,  3839,  3848,  3850,  3852,  3854,  3856,  3858,  3860,
    3862,  3864,  3866,  3868,  3870,  3872,  3877,  3878,  3886,  3898,
    3913,  3914,  3915,  3919,  3920,  3921,  3922,  3923,  3924,  3928,
    3929,  3930,  3931,  3932,  3933,  3934,  3935,  3936,  3937,  3938,
    3939,  3940,  3944,  3945,  3946,  3947,  3952,  3951,  3962,  3964,
    3963,  3975,  3974,  3985,  3984,  3997,  3997,  4050,  4051,  4056,
    4055,  4068,  4081,  4081,  4085,  4090,  4095,  4101,  4110,  4115,
    4120,  4126,  4136,  4144,  4152,  4161,  4167,  4177,  4176,  4195,
    4194,  4210,  4216,  4224,  4225,  4229,  4237,  4242,  4247,  4255,
    4259,  4277,  4292,  4310,  4312,  4328,  4310,  4347,  4349,  4350,
    4355,  4354,  4424,  4426,  4424,  4434,  4439,  4440,  4444,  4445,
    4450,  4454,  4449,  4474,  4478,  4473,  4496,  4506,  4510,  4511,
    4515,  4526,  4524,  4540,  4544,  4538,  4559,  4561,  4566,  4565,
    4580,  4586,  4579,  4601,  4605,  4609,  4615,  4605,  4626,  4624,
    4639,  4640,  4644,  4645,  4650,  4649,  4665,  4666,  4670,  4678,
    4683,  4690,  4699,  4714,  4713,  4730,  4729,  4749,  4758,  4757,
    4765,  4764,  4773,  4778,  4787,  4772,  4797,  4796,  4807,  4806,
    4816,  4815,  4826,  4833,  4825,  4850,  4849,  4861,  4863,  4868,
    4870,  4872,  4889,  4894,  4900,  4907,  4908,  4916,  4922,  4931,
    4937,  4943,  4944,  4948,  4948,  4953,  4954,  4955,  4959,  4960,
    4961,  4965,  4969,  4970,  4971,  4975,  4976,  4977,  4978,  4979,
    4980,  4981,  4982,  4986,  4990,  4991,  4992,  4996,  4997,  4998,
    4999,  5000,  5004,  5008,  5009,  5010,  5014,  5015,  5016,  5017,
    5018,  5019,  5020,  5024,  5028,  5029,  5030,  5034,  5035,  5036,
    5041,  5049,  5057,  5065,  5078,  5091,  5096,  5101,  5109,  5117,
    5125,  5133,  5141,  5149,  5157,  5167,  5177,  5187,  5189,  5193,
    5198,  5208,  5209,  5222,  5221,  5224,  5230,  5232,  5231,  5234,
    5233,  5235,  5249,  5250,  5254,  5255,  5266,  5264,  5271,  5276,
    5278,  5277,  5280,  5279,  5284,  5321,  5322,  5327,  5326,  5342,
    5357,  5356,  5374,  5373,  5379,  5387,  5386,  5389,  5391,  5394,
    5393,  5402,  5405,  5404,  5413,  5414,  5420,  5421,  5438,  5439,
    5443,  5444,  5448,  5462,  5472,  5483,  5492,  5493,  5506,  5508,
    5507,  5512,  5510,  5521,  5522,  5526,  5540,  5552,  5553,  5566,
    5575,  5597,  5598,  5603,  5602,  5626,  5638,  5654,  5653,  5668,
    5667,  5681,  5686,  5691,  5711,  5729,  5733,  5760,  5772,  5773,
    5778,  5787,  5777,  5812,  5813,  5817,  5828,  5847,  5860,  5886,
    5887,  5892,  5891,  5928,  5937,  5938,  5942,  5943,  5947,  5949,
    5955,  5961,  5963,  5965,  5967,  5969,  5971,  5976,  5977,  5977,
    5984,  6000,  6003,  6020,  6030,  6030,  6051,  6052,  6056,  6057,
    6061,  6072,  6073,  6077,  6078,  6082,  6083,  6087,  6088,  6093,
    6096,  6104,  6107,  6114,  6118,  6124,  6126,  6130,  6131,  6135,
    6136,  6137,  6141,  6156,  6161,  6166,  6171,  6176,  6181,  6186,
    6201,  6207,  6222,  6227,  6242,  6248,  6266,  6271,  6276,  6281,
    6286,  6291,  6297,  6296,  6322,  6323,  6324,  6329,  6334,  6339,
    6341,  6343,  6345,  6351,  6356,  6361,  6370,  6379,  6385,  6391,
    6396,  6399,  6401,  6405,  6424,  6432,  6447,  6457,  6468,  6469,
    6470,  6471,  6472,  6473,  6474,  6478,  6479,  6480,  6484,  6485,
    6486,  6487,  6492,  6499,  6500,  6504,  6505,  6506,  6507,  6511,
    6513,  6519,  6518,  6526,  6525,  6533,  6532,  6540,  6539,  6549,
    6546,  6557,  6555,  6564,  6563,  6602,  6610,  6618,  6619,  6623,
    6633,  6634,  6638,  6639,  6643,  6648,  6647,  6685,  6685,  6688,
    6687,  6698,  6699,  6703,  6704,  6708,  6709,  6713,  6714,  6718,
    6719,  6720,  6721,  6723,  6722,  6728,  6733,  6741,  6742,  6747,
    6750,  6754,  6758,  6765,  6766,  6770,  6771,  6775,  6781,  6787,
    6788,  6796,  6795,  6814,  6820,  6821,  6831,  6841,  6841,  6844,
    6845,  6852,  6860,  6864,  6872,  6873,  6874,  6875,  6876,  6881,
    6882,  6883,  6884,  6885,  6890,  6891,  6892,  6908,  6912,  6916,
    6920,  6922,  6929,  6931,  6936,  6938,  6939,  6940,  6944,  6948,
    6953,  6958,  6962,  6966,  6971,  6976,  6985,  6989,  6994,  6999,
    7003,  7007,  7012,  7017,  7026,  7044,  7045,  7052,  7059,  7067,
    7072,  7077,  7082,  7087,  7098,  7103,  7108,  7113,  7115,  7117,
    7119,  7121,  7123,  7125,  7127,  7135,  7137,  7142,  7143,  7144,
    7145,  7146,  7147,  7148,  7149,  7153,  7157,  7158,  7162,  7163,
    7167,  7168,  7169,  7170,  7171,  7175,  7176,  7177,  7178,  7179,
    7183,  7189,  7190,  7195,  7197,  7204,  7205,  7206,  7210,  7214,
    7215,  7216,  7217,  7218,  7219,  7223,  7224,  7225,  7226,  7230,
    7231,  7235,  7236,  7258,  7259,  7263,  7264,  7268,  7269,  7274,
    7275,  7279,  7280,  7281,  7288,  7289,  7295,  7302,  7306,  7307,
    7311,  7312,  7316,  7324,  7332,  7341,  7345,  7351,  7355,  7356,
    7365,  7374,  7380,  7386,  7399,  7405,  7415,  7423,  7424,  7428,
    7433,  7437,  7438,  7442,  7443,  7447,  7454,  7458,  7459,  7463,
    7471,  7472,  7476,  7477,  7481,  7482,  7486,  7487,  7488,  7495,
    7499,  7500,  7504,  7505,  7506,  7507,  7508,  7520,  7524,  7525,
    7530,  7529,  7542,  7543,  7547,  7550,  7551,  7552,  7553,  7557,
    7565,  7572,  7573,  7577,  7587,  7588,  7592,  7593,  7596,  7598,
    7602,  7614,  7615,  7619,  7626,  7639,  7640,  7642,  7644,  7650,
    7655,  7661,  7667,  7674,  7684,  7685,  7686,  7687,  7688,  7692,
    7693,  7697,  7698,  7702,  7703,  7707,  7708,  7709,  7713,  7714,
    7718,  7722,  7734,  7735,  7739,  7740,  7744,  7745,  7749,  7750,
    7754,  7755,  7759,  7760,  7764,  7765,  7770,  7771,  7772,  7776,
    7778,  7783,  7788,  7790,  7798,  7806,  7812,  7821,  7822,  7826,
    7830,  7831,  7841,  7842,  7843,  7847,  7851,  7858,  7864,  7876,
    7877,  7881,  7883,  7893,  7907,  7892,  7928,  7927,  7941,  7950,
    7949,  7965,  7964,  7980,  7979,  7992,  7986,  7999,  7998,  8033,
    8038,  8043,  8048,  8054,  8053,  8060,  8067,  8077,  8066,  8097,
    8098,  8099,  8100,  8104,  8105,  8117,  8118,  8122,  8123,  8126,
    8128,  8136,  8144,  8146,  8148,  8149,  8157,  8158,  8164,  8173,
    8171,  8184,  8197,  8196,  8209,  8207,  8220,  8227,  8237,  8238,
    8262,  8269,  8273,  8279,  8277,  8294,  8296,  8301,  8309,  8308,
    8322,  8326,  8325,  8337,  8338,  8342,  8355,  8356,  8360,  8364,
    8371,  8376,  8380,  8387,  8391,  8396,  8404,  8412,  8422,  8433,
    8443,  8454,  8464,  8470,  8476,  8483,  8489,  8503,  8517,  8522,
    8526,  8531,  8532,  8533,  8538,  8543,  8549,  8551,  8552,  8553,
    8554,  8558,  8563,  8571,  8576,  8584,  8585,  8589,  8590,  8594,
    8594,  8597,  8599,  8603,  8604,  8608,  8609,  8618,  8619,  8620,
    8624,  8625,  8630,  8639,  8640,  8641,  8642,  8647,  8646,  8656,
    8655,  8663,  8670,  8680,  8697,  8700,  8707,  8711,  8718,  8722,
    8726,  8733,  8733,  8739,  8740,  8744,  8745,  8746,  8750,  8751,
    8760,  8767,  8768,  8773,  8772,  8784,  8785,  8786,  8790,  8792,
    8791,  8798,  8797,  8818,  8819,  8823,  8824,  8828,  8829,  8830,
    8834,  8835,  8840,  8839,  8860,  8861,  8865,  8870,  8871,  8878,
    8880,  8885,  8887,  8886,  8898,  8900,  8899,  8912,  8913,  8918,
    8927,  8928,  8929,  8933,  8940,  8950,  8958,  8967,  8969,  8968,
    8974,  8973,  8996,  8997,  9001,  9002,  9006,  9007,  9008,  9009,
    9010,  9011,  9015,  9016,  9021,  9020,  9041,  9042,  9043,  9048,
    9047,  9053,  9060,  9066,  9075,  9076,  9080,  9096,  9095,  9108,
    9109,  9113,  9114,  9118,  9129,  9140,  9141,  9146,  9145,  9156,
    9157,  9161,  9162,  9166,  9177,  9189,  9188,  9196,  9196,  9205,
    9206,  9211,  9212,  9221,  9232,  9233,  9234,  9235,  9236,  9237,
    9238,  9242,  9243,  9244,  9245,  9246,  9247,  9248,  9252,  9252,
    9260,  9260,  9272,  9276,  9278,  9282,  9282,  9293,  9297,  9299,
    9303,  9303,  9314,  9319,  9319,  9328,  9328,  9340,  9346,  9344,
    9351,  9363,  9361,  9368,  9378,  9383,  9382,  9387,  9391,  9402,
    9403,  9407,  9408,  9412,  9413,  9414,  9418,  9419,  9420,  9424,
    9425,  9426,  9427,  9428,  9432,  9432,  9450,  9457,  9459,  9463,
    9467,  9473,  9480,  9482,  9491,  9495,  9499,  9506,  9514,  9518,
    9526,  9529,  9536,  9540,  9544,  9548,  9555,  9556,  9560,  9561,
    9578,  9597,  9599,  9606,  9617,  9618,  9619,  9633,  9638,  9660,
    9666,  9672,  9678,  9684,  9693,  9694,  9695,  9696,  9697,  9701,
    9702,  9703,  9707,  9708,  9709,  9713,  9714,  9719,  9770,  9777,
    9820,  9826,  9830,  9836,  9842,  9848,  9854,  9860,  9866,  9872,
    9878,  9884,  9890,  9896,  9900,  9906,  9915,  9921,  9929,  9935,
    9944,  9950,  9958,  9968,  9974,  9981,  9988,  9996, 10002, 10011,
   10015, 10021, 10027, 10033, 10039, 10046, 10052, 10058, 10064, 10070,
   10077, 10083, 10089, 10095, 10101, 10107, 10113, 10119, 10125, 10129,
   10130, 10134, 10135, 10139, 10140, 10144, 10145, 10149, 10150, 10151,
   10152, 10153, 10154, 10158, 10159, 10164, 10168, 10172, 10173, 10174,
   10178, 10179, 10180, 10181, 10182, 10183, 10187, 10188, 10189, 10194,
   10193, 10199, 10207, 10230, 10237, 10246, 10247, 10248, 10249, 10253,
   10262, 10263, 10264, 10265, 10266, 10267, 10268, 10269, 10301, 10302,
   10303, 10304, 10305, 10306, 10307, 10308, 10309, 10310, 10311, 10312,
   10319, 10325, 10330, 10340, 10345, 10350, 10356, 10361, 10367, 10378,
   10385, 10390, 10395, 10400, 10405, 10410, 10415, 10423, 10424, 10425,
   10429, 10430, 10438, 10439, 10445, 10449, 10455, 10461, 10470, 10471,
   10480, 10487, 10501, 10507, 10513, 10522, 10531, 10537, 10543, 10549,
   10555, 10570, 10581, 10587, 10593, 10599, 10605, 10611, 10619, 10626,
   10630, 10635, 10643, 10664, 10671, 10677, 10684, 10691, 10697, 10703,
   10709, 10715, 10721, 10727, 10733, 10739, 10746, 10752, 10759, 10765,
   10770, 10775, 10780, 10785, 10803, 10809, 10815, 10820, 10827, 10834,
   10842, 10849, 10856, 10863, 10870, 10887, 10893, 10899, 10905, 10911,
   10918, 10924, 10930, 10939, 10950, 10957, 10963, 10969, 10976, 10984,
   10990, 10996, 11001, 11007, 11015, 11021, 11027, 11033, 11039, 11047,
   11059, 11066, 11081, 11087, 11094, 11101, 11108, 11115, 11122, 11126,
   11133, 11151, 11150, 11218, 11223, 11231, 11233, 11238, 11239, 11243,
   11244, 11248, 11249, 11253, 11260, 11268, 11295, 11301, 11307, 11313,
   11319, 11325, 11334, 11341, 11343, 11340, 11350, 11361, 11367, 11373,
   11379, 11385, 11391, 11397, 11403, 11409, 11416, 11415, 11440, 11449,
   11467, 11469, 11473, 11480, 11487, 11494, 11501, 11508, 11515, 11522,
   11529, 11536, 11547, 11554, 11565, 11576, 11596, 11595, 11601, 11618,
   11624, 11633, 11642, 11652, 11651, 11663, 11673, 11681, 11686, 11694,
   11695, 11700, 11705, 11708, 11710, 11714, 11719, 11727, 11728, 11732,
   11736, 11743, 11750, 11757, 11770, 11769, 11786, 11789, 11788, 11793,
   11792, 11797, 11796, 11800, 11805, 11806, 11810, 11811, 11812, 11813,
   11814, 11815, 11816, 11817, 11821, 11822, 11823, 11827, 11828, 11832,
   11839, 11847, 11848, 11852, 11859, 11867, 11876, 11886, 11887, 11896,
   11905, 11917, 11918, 11930, 11941, 11942, 11948, 11949, 11967, 11976,
   11974, 11992, 11990, 12001, 12011, 12009, 12027, 12026, 12036, 12047,
   12045, 12064, 12063, 12074, 12086, 12087, 12088, 12092, 12093, 12101,
   12102, 12106, 12121, 12122, 12126, 12126, 12166, 12232, 12275, 12276,
   12285, 12284, 12293, 12294, 12295, 12299, 12300, 12301, 12301, 12305,
   12311, 12319, 12319, 12334, 12351, 12352, 12360, 12370, 12369, 12384,
   12401, 12384, 12408, 12412, 12421, 12432, 12433, 12438, 12441, 12442,
   12443, 12447, 12448, 12453, 12452, 12458, 12457, 12465, 12466, 12469,
   12471, 12471, 12475, 12475, 12480, 12481, 12485, 12487, 12492, 12493,
   12497, 12508, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529,
   12530, 12531, 12532, 12533, 12537, 12538, 12539, 12540, 12541, 12542,
   12543, 12544, 12545, 12549, 12550, 12551, 12552, 12555, 12557, 12558,
   12562, 12563, 12571, 12573, 12577, 12579, 12578, 12592, 12595, 12594,
   12612, 12614, 12618, 12623, 12631, 12632, 12649, 12672, 12673, 12679,
   12680, 12684, 12697, 12696, 12704, 12705, 12714, 12715, 12719, 12720,
   12724, 12725, 12739, 12740, 12744, 12754, 12763, 12770, 12777, 12787,
   12788, 12795, 12805, 12806, 12808, 12810, 12812, 12814, 12823, 12827,
   12828, 12832, 12844, 12846, 12851, 12850, 12908, 12913, 12921, 12922,
   12923, 12927, 12928, 12932, 12946, 12953, 12958, 12965, 12972, 12979,
   12989, 12994, 12999, 13003, 13009, 13015, 13024, 13033, 13037, 13044,
   13045, 13048, 13050, 13054, 13055, 13059, 13060, 13061, 13062, 13063,
   13064, 13068, 13069, 13070, 13071, 13072, 13076, 13077, 13078, 13079,
   13083, 13084, 13085, 13086, 13087, 13091, 13092, 13093, 13094, 13095,
   13099, 13104, 13105, 13109, 13110, 13114, 13115, 13116, 13121, 13120,
   13154, 13155, 13159, 13160, 13164, 13174, 13174, 13186, 13187, 13190,
   13210, 13214, 13219, 13227, 13232, 13243, 13231, 13245, 13260, 13272,
   13271, 13291, 13290, 13299, 13316, 13322, 13330, 13338, 13352, 13367,
   13375, 13379, 13384, 13383, 13392, 13397, 13403, 13408, 13413, 13420,
   13418, 13432, 13433, 13437, 13448, 13461, 13462, 13466, 13480, 13484,
   13493, 13496, 13503, 13504, 13512, 13520, 13511, 13534, 13541, 13533,
   13555, 13563, 13564, 13571, 13575, 13576, 13585, 13586, 13590, 13600,
   13601, 13602, 13604, 13603, 13615, 13617, 13621, 13622, 13623, 13627,
   13628, 13632, 13633, 13637, 13647, 13648, 13652, 13653, 13657, 13658,
   13662, 13663, 13668, 13667, 13683, 13682, 13697, 13698, 13702, 13703,
   13707, 13712, 13720, 13728, 13739, 13740, 13749, 13750, 13758, 13760,
   13762, 13760, 13775, 13783, 13774, 13809, 13810, 13814, 13821, 13829,
   13830, 13834, 13844, 13845, 13852, 13851, 13871, 13874, 13881, 13882,
   13889, 13904, 13910, 13909, 13921, 13920, 13935, 13937, 13941, 13942,
   13946, 13961, 13979, 13980, 13984, 13985, 13989, 13990, 13991, 13996,
   14007, 13995, 14017, 14019, 14020, 14023, 14025, 14028, 14030, 14033,
   14034, 14037, 14041, 14045, 14049, 14053, 14057, 14061, 14065, 14069,
   14077, 14080, 14090, 14089, 14105, 14112, 14120, 14128, 14136, 14144,
   14152, 14159, 14166, 14172, 14174, 14176, 14185, 14189, 14194, 14193,
   14200, 14199, 14204, 14213, 14220, 14225, 14230, 14235, 14240, 14245,
   14247, 14249, 14251, 14258, 14266, 14268, 14276, 14283, 14290, 14298,
   14304, 14309, 14317, 14325, 14333, 14337, 14342, 14349, 14354, 14361,
   14368, 14374, 14380, 14386, 14394, 14399, 14406, 14413, 14420, 14427,
   14432, 14437, 14442, 14447, 14454, 14476, 14478, 14480, 14485, 14486,
   14489, 14491, 14495, 14496, 14500, 14501, 14505, 14506, 14510, 14511,
   14515, 14516, 14520, 14521, 14529, 14541, 14540, 14556, 14555, 14565,
   14566, 14567, 14568, 14569, 14573, 14574, 14578, 14585, 14586, 14587,
   14591, 14592, 14605, 14606, 14607, 14622, 14621, 14634, 14633, 14645,
   14649, 14650, 14665, 14668, 14667, 14680, 14681, 14686, 14688, 14690,
   14692, 14694, 14696, 14704, 14706, 14708, 14710, 14715, 14717, 14725,
   14727, 14729, 14731, 14748, 14749, 14753, 14754, 14757, 14759, 14760,
   14764, 14780, 14781, 14786, 14785, 14795, 14796, 14800, 14800, 14804,
   14803, 14809, 14813, 14814, 14818, 14819, 14827, 14826, 14837, 14841,
   14845, 14858, 14857, 14872, 14873, 14874, 14878, 14879, 14880, 14889,
   14890, 14894, 14898, 14906, 14912, 14924, 14935, 14946, 14959, 14923,
   14971, 14972, 14976, 14977, 14981, 14982, 14990, 14994, 14995, 14996,
   14999, 15001, 15005, 15006, 15010, 15015, 15022, 15027, 15034, 15036,
   15040, 15041, 15045, 15050, 15058, 15059, 15063, 15065, 15073, 15074,
   15078, 15079, 15080, 15084, 15086, 15091, 15092, 15101, 15102, 15106,
   15107, 15111, 15124, 15129, 15134, 15139, 15147, 15155, 15160, 15173,
   15182, 15198, 15205, 15211, 15221, 15222, 15230, 15231, 15232, 15233,
   15247, 15253, 15259, 15265, 15271, 15277, 15296, 15306, 15316, 15322,
   15329, 15339, 15347, 15355, 15367, 15368, 15377, 15376, 15397, 15398,
   15403, 15404, 15411, 15409, 15437, 15438, 15444, 15449, 15458, 15478,
   15479, 15483, 15488, 15496, 15501, 15509, 15514, 15519, 15524, 15530,
   15535, 15543, 15548, 15553, 15558, 15564, 15572, 15573, 15584, 15592,
   15596, 15602, 15608, 15618, 15624, 15633, 15643, 15644, 15648, 15649,
   15650, 15654, 15662, 15670, 15678, 15686, 15687, 15695, 15696, 15704,
   15705, 15710, 15719, 15720, 15728, 15729, 15738, 15739, 15747, 15748,
   15752, 15761, 15762, 15763, 15767, 15780, 15810, 15820, 15820, 15822,
   15832, 15833, 15834, 15835, 15836, 15837, 15838, 15839, 15840, 15845,
   15846, 15847, 15848, 15849, 15850, 15851, 15852, 15853, 15854, 15862,
   15863, 15864, 15865, 15866, 15867, 15871, 15872, 15873, 15874, 15875,
   15876, 15877, 15878, 15879, 15883, 15884, 15885, 15886, 15887, 15888,
   15889, 15893, 15894, 15895, 15896, 15897, 15898, 15899, 15900, 15901,
   15905, 15906, 15907, 15908, 15909, 15910, 15911, 15924, 15925, 15926,
   15927, 15928, 15929, 15930, 15931, 15932, 15933, 15934, 15935, 15936,
   15937, 15938, 15939, 15940, 15941, 15942, 15943, 15944, 15945, 15946,
   15947, 15948, 15949, 15950, 15951, 15952, 15953, 15954, 15955, 15956,
   15957, 15958, 15959, 15960, 15961, 15962, 15963, 15964, 15965, 15966,
   15967, 15968, 15969, 15970, 15971, 15972, 15973, 15974, 15975, 15976,
   15977, 15978, 16019, 16020, 16021, 16022, 16023, 16024, 16035, 16036,
   16037, 16038, 16039, 16040, 16041, 16042, 16043, 16044, 16048, 16049,
   16050, 16057, 16058, 16059, 16063, 16064, 16065, 16074, 16075, 16076,
   16077, 16078, 16079, 16080, 16081, 16082, 16083, 16084, 16085, 16086,
   16087, 16088, 16089, 16090, 16091, 16092, 16093, 16094, 16095, 16096,
   16097, 16098, 16099, 16100, 16101, 16102, 16103, 16104, 16105, 16106,
   16107, 16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123,
   16124, 16125, 16126, 16127, 16128, 16129, 16130, 16131, 16132, 16133,
   16134, 16135, 16136, 16137, 16138, 16139, 16140, 16141, 16142, 16143,
   16144, 16145, 16146, 16147, 16148, 16149, 16150, 16151, 16152, 16153,
   16154, 16155, 16156, 16157, 16158, 16159, 16160, 16165, 16166, 16167,
   16168, 16169, 16170, 16171, 16172, 16173, 16174, 16175, 16176, 16177,
   16178, 16179, 16180, 16181, 16182, 16183, 16184, 16185, 16186, 16187,
   16188, 16189, 16190, 16191, 16192, 16193, 16194, 16195, 16196, 16197,
   16198, 16199, 16200, 16201, 16202, 16203, 16204, 16205, 16206, 16207,
   16208, 16209, 16210, 16211, 16212, 16213, 16214, 16215, 16216, 16217,
   16218, 16219, 16220, 16221, 16222, 16223, 16224, 16225, 16226, 16227,
   16228, 16229, 16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237,
   16238, 16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247,
   16248, 16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257,
   16258, 16259, 16260, 16261, 16262, 16263, 16264, 16265, 16266, 16267,
   16268, 16269, 16270, 16271, 16272, 16273, 16274, 16275, 16276, 16277,
   16278, 16279, 16280, 16281, 16282, 16283, 16284, 16285, 16286, 16287,
   16288, 16289, 16290, 16291, 16292, 16293, 16294, 16295, 16296, 16297,
   16298, 16299, 16300, 16301, 16302, 16303, 16304, 16305, 16306, 16307,
   16308, 16309, 16310, 16311, 16312, 16313, 16314, 16315, 16316, 16317,
   16318, 16319, 16320, 16321, 16322, 16323, 16324, 16325, 16326, 16327,
   16328, 16329, 16330, 16331, 16332, 16333, 16334, 16335, 16336, 16337,
   16338, 16339, 16340, 16341, 16342, 16343, 16344, 16345, 16346, 16347,
   16348, 16349, 16350, 16351, 16352, 16353, 16354, 16355, 16356, 16357,
   16358, 16359, 16360, 16361, 16362, 16363, 16364, 16365, 16366, 16367,
   16368, 16369, 16370, 16371, 16372, 16373, 16374, 16375, 16376, 16377,
   16378, 16379, 16380, 16381, 16382, 16383, 16384, 16385, 16386, 16387,
   16388, 16389, 16390, 16391, 16392, 16393, 16394, 16395, 16396, 16397,
   16398, 16399, 16400, 16401, 16402, 16403, 16404, 16405, 16406, 16407,
   16408, 16409, 16410, 16411, 16412, 16413, 16414, 16415, 16416, 16417,
   16418, 16419, 16420, 16421, 16422, 16423, 16424, 16425, 16426, 16427,
   16428, 16429, 16430, 16442, 16441, 16454, 16458, 16453, 16471, 16470,
   16484, 16483, 16499, 16498, 16525, 16526, 16532, 16531, 16538, 16537,
   16547, 16546, 16557, 16556, 16562, 16570, 16572, 16577, 16577, 16586,
   16585, 16599, 16598, 16603, 16607, 16608, 16609, 16613, 16614, 16615,
   16616, 16620, 16621, 16622, 16623, 16628, 16633, 16638, 16647, 16652,
   16657, 16662, 16667, 16672, 16677, 16682, 16696, 16707, 16726, 16744,
   16756, 16764, 16769, 16785, 16786, 16787, 16788, 16792, 16811, 16829,
   16830, 16834, 16835, 16836, 16837, 16841, 16856, 16860, 16861, 16862,
   16872, 16873, 16874, 16880, 16886, 16898, 16897, 16911, 16912, 16918,
   16927, 16928, 16932, 16933, 16937, 16956, 16957, 16958, 16963, 16964,
   16969, 16968, 16985, 16995, 17006, 17005, 17037, 17038, 17042, 17043,
   17047, 17048, 17049, 17050, 17052, 17051, 17064, 17065, 17066, 17067,
   17068, 17074, 17079, 17085, 17091, 17097, 17104, 17111, 17115, 17122,
   17131, 17133, 17138, 17143, 17150, 17157, 17164, 17171, 17178, 17185,
   17197, 17198, 17202, 17203, 17207, 17212, 17220, 17230, 17249, 17252,
   17254, 17258, 17259, 17266, 17268, 17272, 17273, 17278, 17277, 17281,
   17280, 17284, 17283, 17287, 17286, 17289, 17290, 17291, 17292, 17293,
   17294, 17295, 17296, 17297, 17298, 17299, 17300, 17301, 17302, 17303,
   17304, 17305, 17306, 17307, 17308, 17309, 17310, 17311, 17312, 17313,
   17314, 17315, 17319, 17320, 17324, 17325, 17329, 17336, 17343, 17353,
   17363, 17372, 17381, 17394, 17399, 17407, 17412, 17420, 17425, 17432,
   17432, 17433, 17433, 17436, 17443, 17448, 17454, 17460, 17466, 17470,
   17474, 17475, 17479, 17507, 17509, 17513, 17517, 17521, 17528, 17534,
   17540, 17546, 17552, 17561, 17562, 17566, 17567, 17572, 17573, 17577,
   17578, 17582, 17583, 17587, 17588, 17593, 17592, 17602, 17611, 17612,
   17616, 17617, 17622, 17623, 17624, 17629, 17630, 17631, 17635, 17647,
   17656, 17662, 17671, 17680, 17693, 17695, 17697, 17702, 17703, 17708,
   17707, 17724, 17723, 17735, 17735, 17756, 17757, 17764, 17772, 17773,
   17774, 17778, 17779, 17784, 17783, 17805, 17812, 17813, 17817, 17818,
   17822, 17823, 17824, 17829, 17837, 17858, 17885, 17887, 17891, 17892,
   17896, 17897, 17905, 17906, 17907, 17908, 17909, 17915, 17921, 17931,
   17932, 17937, 17950, 17966, 17967, 17968, 17972, 17973, 17977, 17978,
   17983, 17984, 17988, 17994, 18003, 18003, 18031, 18032, 18033, 18034,
   18035, 18036, 18037, 18041, 18042, 18043, 18044, 18054, 18056, 18062,
   18068, 18078, 18087, 18093, 18098, 18102, 18076, 18156, 18174, 18173,
   18191, 18200, 18189, 18222, 18230, 18221, 18243, 18253, 18263, 18264,
   18268, 18269, 18275, 18279, 18283, 18287, 18291, 18295, 18303, 18304,
   18320, 18327, 18334, 18344, 18345, 18346, 18350, 18351, 18352, 18356,
   18357, 18362, 18364, 18363, 18369, 18370, 18374, 18381, 18391, 18397,
   18408
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "ABORT_SYM",
  "ACCESSIBLE_SYM", "ADD", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM",
  "AND_SYM", "AS", "ASC", "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM",
  "BIGINT", "BINARY", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR",
  "BLOB_MARIADB_SYM", "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY",
  "CALL_SYM", "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM",
  "CHECK_SYM", "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT",
  "CONTINUE_MARIADB_SYM", "CONTINUE_ORACLE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CREATE", "CROSS", "CUME_DIST_SYM", "CURDATE",
  "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM", "CURTIME", "DATABASE",
  "DATABASES", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DAY_HOUR_SYM",
  "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FORCE_LOOKAHEAD", "FOREIGN", "FOR_SYM",
  "FOR_SYSTEM_TIME_SYM", "FROM", "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM",
  "GRANT", "GROUP_SYM", "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM",
  "HAVING", "HEX_NUM", "HEX_STRING", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "POSITION_SYM", "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE",
  "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM", "REF_SYSTEM_ID_SYM",
  "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REPLACE",
  "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT", "ROWS_SYM",
  "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM", "SECOND_MICROSECOND_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERVER_OPTIONS", "SET",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SIGNAL_SYM", "SMALLINT",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_SMALL_RESULT", "SQL_SYM",
  "SSL_SYM", "STARTING", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM",
  "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM",
  "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM",
  "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM",
  "COLON_ORACLE_SYM", "COLUMNS", "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM",
  "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPORT_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM",
  "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOTFOUND_SYM", "NO_SYM",
  "NOMAXVALUE_SYM", "NOMINVALUE_SYM", "NO_WAIT_SYM", "NOWAIT_SYM",
  "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM", "NVARCHAR_SYM", "OF_SYM",
  "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM", "ONLY_SYM", "ONLINE_SYM",
  "OPEN_SYM", "OPTIONS_SYM", "OPTION", "OWNER_SYM", "PACK_KEYS_SYM",
  "PAGE_SYM", "PARSER_SYM", "PARTIAL", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM", "PERSISTENT_SYM",
  "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM", "STOP_SYM",
  "STORAGE_SYM", "STORED_SYM", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSTEM",
  "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TEXT_SYM", "THAN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIM_ORACLE",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM", "PREC_BELOW_NOT",
  "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'.'", "'@'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_var_list", "execute_var_ident",
  "help", "$@6", "change", "$@7", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "do_domain_id_list",
  "do_domain_id", "ignore_domain_id_list", "ignore_domain_id",
  "master_file_def", "optional_connection_name", "connection_name",
  "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15",
  "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23", "$@24",
  "$@25", "$@26", "package_implementation_executable_section",
  "package_implementation_declare_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2", "package_routine_lex",
  "package_specification_function", "$@27",
  "package_specification_procedure", "$@28",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@29",
  "package_implementation_procedure_body", "$@30",
  "package_implementation_item_declaration",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "create_function_tail", "opt_sequence", "sequence_defs", "sequence_def",
  "force_lookahead", "server_def", "$@31", "server_options_list",
  "server_option", "event_tail", "$@32", "ev_schedule_time", "$@33",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@34",
  "clear_privileges", "sp_name", "opt_sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "create_package_chistic",
  "create_package_chistics", "opt_create_package_chistics",
  "opt_create_package_chistics_init", "$@35", "sp_c_chistic", "sp_suid",
  "call", "$@36", "$@37", "$@38", "opt_sp_cparam_list", "opt_sp_cparams",
  "sp_cparams", "sp_fdparam_list", "sp_fdparams", "sp_param_name",
  "sp_param_name_and_type", "sp_pdparam_list", "sp_pdparams", "sp_pdparam",
  "sp_opt_inout", "sp_parenthesized_fdparam_list", "$@39",
  "sp_parenthesized_pdparam_list", "$@40", "sp_no_param",
  "opt_sp_parenthesized_fdparam_list", "opt_sp_parenthesized_pdparam_list",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_proc_stmts1_implicit_block",
  "$@41", "opt_sp_decl_body_list", "sp_decl_body_list", "$@42",
  "sp_decl_non_handler_list", "sp_decl_handler_list",
  "opt_sp_decl_handler_list", "optionally_qualified_column_ident",
  "row_field_name", "row_field_definition", "row_field_definition_list",
  "row_type_body", "sp_decl_idents_init_vars", "sp_decl_vars",
  "sp_decl_non_handler", "$@43", "sp_decl_handler", "$@44",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@45", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt", "sp_labelable_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@46", "sp_statement",
  "$@47", "$@48", "$@49", "sp_proc_stmt_statement", "$@50",
  "RETURN_ALLMODES_SYM", "sp_proc_stmt_return", "$@51", "reset_lex_expr",
  "$@52", "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "remember_lex", "assignment_source_lex", "assignment_source_expr",
  "$@53", "for_loop_bound_expr", "$@54", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@55", "$@56", "$@57", "sp_elseifs",
  "case_stmt_specification", "$@58", "case_stmt_body", "$@59", "$@60",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@61", "$@62", "searched_when_clause", "$@63",
  "$@64", "else_clause_opt", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@65", "$@66", "$@67", "opt_not_atomic",
  "sp_unlabeled_block", "$@68", "$@69", "$@70", "sp_instr_addr", "sp_body",
  "$@71", "$@72", "$@73", "sp_block_statements_and_exceptions", "$@74",
  "opt_exception_clause", "exception_handlers", "exception_handler",
  "$@75", "opt_sp_for_loop_direction", "sp_for_loop_index_and_bounds",
  "sp_for_loop_bounds", "loop_body", "while_body", "$@76", "repeat_body",
  "$@77", "pop_sp_loop_label", "sp_labeled_control", "$@78", "$@79",
  "$@80", "$@81", "$@82", "$@83", "sp_unlabeled_control", "$@84", "$@85",
  "$@86", "$@87", "$@88", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@89", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@90", "$@91", "$@92", "create_like", "opt_create_select",
  "create_select_query_expression", "$@93", "$@94", "$@95",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@96",
  "have_partitioning", "partition_entry", "$@97", "partition", "$@98",
  "part_type_def", "$@99", "$@100", "$@101", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@102", "$@103", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@104", "part_name",
  "opt_part_values", "$@105", "$@106", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@107", "$@108",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@109", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "$@110", "opt_versioning_interval_start",
  "create_select_query_specification", "create_select_part2", "$@111",
  "create_select_part3", "create_select_part3_union_not_ready",
  "create_select_part4", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@112", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list", "field_list",
  "field_list_item", "column_def", "key_def", "$@113", "$@114", "$@115",
  "$@116", "$@117", "$@118", "$@119", "constraint_def",
  "period_for_system_time", "opt_check_constraint", "check_constraint",
  "opt_constraint_no_id", "opt_constraint", "constraint", "field_spec",
  "@120", "field_type_or_serial", "$@121", "$@122", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@123", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@124", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "qualified_field_type", "field_type_all",
  "sp_param_field_type", "field_type_numeric",
  "opt_binary_and_compression", "field_type_string",
  "sp_param_field_type_string", "field_type_temporal", "field_type_lob",
  "field_type_misc", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "srid_option", "float_options",
  "precision", "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1",
  "opt_field_length_default_sp_param_varchar",
  "opt_field_length_default_sp_param_char", "opt_precision",
  "attribute_list", "attribute", "opt_compression_method",
  "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "sp_param_type", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "collate", "opt_binary", "binary",
  "opt_bin_mod", "ws_nweights", "$@125", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@126", "$@127", "$@128", "$@129", "$@130", "$@131", "$@132",
  "$@133", "$@134", "$@135", "$@136", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@137", "$@138", "$@139", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@140",
  "add_part_extra", "reorg_partition_rule", "$@141", "reorg_parts_rule",
  "$@142", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@143", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@144", "$@145", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@146",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@147", "opt_checksum_type",
  "repair_table_or_view", "$@148", "repair", "$@149", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@150", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@151", "persistent_index_stat_spec",
  "$@152", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@153", "check", "$@154",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@155", "opt_no_write_to_binlog",
  "rename", "$@156", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@157", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@158", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@159", "cache_keys_spec", "$@160", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "union_list_part2",
  "select_paren", "$@161", "$@162",
  "select_parent_union_query_term_proper", "select_paren_union_query_term",
  "$@163", "select_parent_view_proper", "select_paren_view", "$@164",
  "select_paren_derived", "$@165", "$@166", "select_init3", "$@167",
  "select_init3_union_query_term", "$@168", "select_init3_view", "$@169",
  "select_part3", "select_part3_union_query_term", "select_part3_view",
  "select_part3_union_not_ready", "select_part3_union_not_ready_noproc",
  "select_options_and_item_list", "$@170", "table_expression",
  "opt_table_expression", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "opt_select_lock_type", "select_item_list",
  "select_item", "remember_tok_start", "remember_tok_end", "remember_name",
  "remember_end", "remember_end_opt", "select_alias",
  "opt_default_time_precision", "opt_time_precision", "optional_braces",
  "expr", "boolean_test", "predicate", "bit_expr", "or", "and", "not",
  "not2", "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "$@171", "dyncall_create_element", "dyncall_create_list",
  "plsql_cursor_attr", "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@172", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@173", "$@174", "$@175",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@176",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@177", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@178", "cast_type", "$@179", "$@180",
  "$@181", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@182", "$@183", "$@184", "$@185", "$@186", "$@187", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident", "$@188", "table_primary_derived",
  "select_derived_union", "$@189", "union_list_derived_part2", "$@190",
  "union_list_derived", "select_init2_derived", "select_part2_derived",
  "$@191", "select_derived", "derived_simple_table",
  "derived_query_specification", "derived_table_value_constructor",
  "$@192", "select_derived2", "$@193", "$@194", "get_select_lex",
  "get_select_lex_derived", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@195",
  "$@196", "index_hints_list", "opt_index_hints_list", "$@197",
  "opt_key_definition", "$@198", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@199", "opt_having_clause", "$@200",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@201",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@202", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause_init", "limit_clause", "limit_options", "limit_option",
  "limit_rows_option", "delete_limit_clause", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "longlong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "choice", "bool",
  "procedure_clause", "$@203", "procedure_list", "procedure_list2",
  "procedure_item", "select_var_list_init", "$@204", "select_var_list",
  "select_var_ident", "select_outvar", "into", "into_destination", "$@205",
  "$@206", "do", "$@207", "drop", "$@208", "$@209", "$@210", "table_list",
  "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "opt_if_exists_table_element",
  "opt_if_exists", "opt_temporary", "insert", "$@211", "$@212", "replace",
  "$@213", "$@214", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "$@215", "fields", "insert_values",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "opt_with", "opt_by", "no_braces", "$@216", "no_braces_with_names",
  "$@217", "opt_values", "opt_values_with_names", "values",
  "values_with_names", "expr_or_ignore", "expr_or_ignore_or_default",
  "opt_insert_update", "$@218", "$@219", "update", "$@220", "$@221",
  "update_list", "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@222", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "single_multi", "$@223", "$@224",
  "opt_select_expressions", "table_wild_list", "table_wild_one",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate",
  "$@225", "$@226", "opt_truncate_table_storage_clause", "opt_table_sym",
  "opt_profile_defs", "profile_defs", "profile_def", "opt_profile_args",
  "show", "$@227", "show_param", "$@228", "$@229", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "wild_and_where", "describe", "$@230",
  "$@231", "explainable_command", "describe_command",
  "analyze_stmt_command", "opt_extended_describe", "opt_format_json",
  "opt_describe_column", "flush", "$@232", "flush_options", "$@233",
  "opt_flush_lock", "flush_lock", "$@234", "flush_options_list",
  "flush_option", "opt_table_list", "opt_delete_gtid_domain",
  "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@235", "reset_options",
  "reset_option", "$@236", "$@237", "slave_reset_options",
  "master_reset_options", "purge", "$@238", "purge_options",
  "purge_option", "kill", "$@239", "kill_type", "kill_option",
  "opt_connection", "kill_expr", "shutdown", "use", "load", "$@240",
  "$@241", "$@242", "$@243", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "hex_or_bin_String", "param_marker",
  "signed_literal", "literal", "NUM_literal", "temporal_literal",
  "opt_with_clause", "with_clause", "$@244", "opt_recursive", "with_list",
  "with_list_element", "$@245", "opt_with_column_list", "with_column_list",
  "with_element_head", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "ident_directly_assignable", "label_ident",
  "labels_declaration_oracle", "label_declaration_oracle", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case",
  "keyword_directly_assignable", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@246", "$@247", "$@248",
  "set_assign", "$@249", "$@250", "$@251",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@252", "$@253", "$@254",
  "start_option_value_list_following_option_type", "$@255",
  "option_value_list_continued", "option_value_list", "$@256", "$@257",
  "option_value", "$@258", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@259",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@260", "handler", "$@261",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@262", "handler_rkey_mode", "revoke", "revoke_command",
  "admin_option_for_role", "grant", "grant_command", "opt_with_admin",
  "opt_with_admin_option", "role_list", "current_role", "grant_role",
  "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@263", "$@264", "$@265",
  "$@266", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@267", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_clause", "union_list",
  "$@268", "union_list_view", "$@269", "union_order_or_limit", "$@270",
  "order_or_limit", "union_head_non_top", "union_option", "simple_table",
  "table_value_constructor", "$@271", "query_specification",
  "query_term_union_not_ready", "query_term_union_ready",
  "query_expression_body", "subselect", "subselect_start", "subselect_end",
  "opt_query_expression_options", "query_expression_option_list",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@272", "query_expression_body_view",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@273", "$@274",
  "$@275", "$@276", "$@277", "udf_tail", "sf_return_type", "$@278",
  "sf_tail", "$@279", "$@280", "sp_tail", "$@281", "$@282",
  "sf_tail_standalone", "sp_tail_standalone",
  "opt_package_routine_end_name", "sp_tail_is", "xa", "opt_format_xid",
  "xid", "begin_or_start", "opt_join_or_resume", "opt_one_phase",
  "opt_suspend", "$@283", "opt_migrate", "install", "uninstall",
  "keep_gcc_happy", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-5492)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3517)

#define yytable_value_is_error(Yyn) \
  0

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
   38981,  3512,  1617, 85960, -5492,    78, -5492,   314, -5492, -5492,
   -5492, -5492,  4768, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,   246,  1094, -5492,  1116, -5492, -5492, -5492, 81522,    -6,
    1103, -5492, -5492, 82790, -5492,   846, -5492, 82790, -5492, -5492,
   85960, -5492,  1761, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492,  2628,   351, -5492, -5492, -5492, -5492, -5492, -5492,
    1893, -5492, -5492, -5492, -5492, -5492,  1094, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, 85960, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,  1474, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  1717,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, 86594, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  2201,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
    1090, -5492, -5492, 70724, -5492, -5492,  1154, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
      16, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, 85960, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,  1116, -5492, -5492,  1851, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492,  1474, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, 85960, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492,   277, -5492, -5492,   356, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,  1926, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,  1913, -5492, -5492,  2253,  2178, -5492, -5492,  1792, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,  3359, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, 71358,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,   414, -5492,
   -5492, -5492,    95, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, 85960, 85960,  1629,  1683,
   85960,  2180,  2381, 82156, 85960,  2381, -5492,   459, -5492, -5492,
    2128, -5492,  1843, -5492,  1094,  2657, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,  1863, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,  2394,  2445,   121,  2526,  2661, 85960, 51626,
    1390,  2381,  2715,  2242,  2381,  2381,  2381,  2381,  2667,  2381,
    2381, 85960, -5492,  2381,  2381,   939, 90398, 36184, -5492,  1399,
     912,  2714, -5492, -5492, -5492, -5492, -5492, -5492,  8856,  1094,
   22152,  2814,   371,  5086,  2135, -5492,  2634, -5492, -5492, 85960,
   -5492, -5492,  8856,  1507, -5492,  2634, 36922, -5492, 34739,  7905,
    2634,  1094,  2722, -5492, 22152, -5492, -5492,  1474, -5492, -5492,
   -5492,  2554, -5492, 82156, -5492, -5492, -5492,  2114, -5492,  2888,
   22152,   405, -5492, -5492, -5492,  2501, 85960,  2347,  1819,   -49,
   82156, 85960,  2445,  2843, -5492,  2007,  1358, -5492,  2287,  2445,
    1735,  2290,  2445,  2690, 85960,  2445, -5492, -5492,  1998,  1998,
    1998,  2515,  1998, -5492,  1998, -5492, -5492,  2199, 85960,  2864,
   -5492, -5492, -5492,  2864,  2864,  2359,  2903,  2908,  2921,  1012,
    2480,  1988,  2597,  2128,  1688,  1843,  3192, -5492, -5492, -5492,
    2283, -5492, -5492,   134, -5492,  2580, -5492, 85960, -5492,  2344,
   -5492,  2296,  1859, 52325, -5492, 85960,  3029, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,  1984, -5492, -5492,  2854,   267,
    2460,  2724,  2405, -5492,  2906, 82156, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, 85960,  2374, -5492,  3080, 22152,  2394, -5492,
    2914, -5492, -5492, -5492, -5492, 70724, -5492, 85960, -5492,  3171,
   -5492, -5492, 90398, -5492, -5492,   465, -5492, -5492, 54404,  1434,
   44671, -5492,  2420,  2425,  2753, -5492,  2450,  1578,  1592, -5492,
    1605, -5492, -5492,  1681,  1696,  1807, -5492, -5492,  3122, -5492,
   -5492, 73904,   612, 85960,  3140, 85960,  2381, 85960, 85960, 85960,
   85960, 85960, 85960, -5492, 82156,  2567, -5492, -5492,  2381,  2381,
   -5492,  3121,  2654,  2626,  2360,  2510,  2821, -5492,  2704, -5492,
   -5492,  2633, -5492, -5492,   253, -5492, -5492, -5492,   128,   135,
     209,   223,  3174,   312,  1080,   366,   387, -5492, -5492, -5492,
    3070,  3178,  2595, -5492,  2940, 22152, -5492, -5492, -5492,  3248,
   -5492, -5492,   139,  3030,   360, 70724, 91032, 74548, 91950, 91950,
   91950, -5492, -5492,   195, 91950, 85960, 91491, 85960,  6949,  2622,
   -5492, -5492, -5492, 40455, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, 85960, -5492, -5492, -5492,   452, -5492, -5492, -5492,
   -5492, -5492,  8888, -5492, -5492, 27430, -5492,  2630,  2639,  2643,
   17628,  2645,  2650,  2668,  2671,  2673,  2510,  2510,  2510,  2679,
    2691,  2701,  2703, -5492,  2707,  2716,  2732,  2748, -5492,  2754,
   -5492,  2758,  2763,  2769, -5492, -5492,   365,   403,  2781,  2790,
   22906,  2798, -5492, 66286,  2801,  2805,  2807,  2809, -5492, -5492,
   22152,  2679,  2822, -5492, -5492,  2834, -5492,  2840,  2855,  2857,
    2861,  2868,  2872,  2878,  2882,  2885,  3194,  2894,  2898,  2900,
    2905,  2679, -5492,  2919, -5492, -5492,  2311,  2510,  2679,  2679,
    2923,  2926,  2939,  2947,  2953,  2956,  2957,  2963, 83424,  2972,
    2974,  2976,  2981,  2985,  2991,  2997,   401,  3003,  3028,  3034,
    3036,  3039,  3041,  3043,  3050,  3074,  3079,  3083,  3093,  3097,
    3101,  3103,  3111,  2695,  3113,  3116,  3119,  3125,  3127,  2698,
    3129,  3132,  3136,  3142,  3175,  3182,  3190,   404,  3198,  3223,
     421,  3235,  3239,  3244,  3250,  3255,  3259,  3282,  3284, 28184,
   28938, 27430, 22152, -5492, 85960, 87228, -5492,  3583,  2544,  2717,
    4482, 27430, -5492, -5492, -5492,  3392, -5492,  3350, -5492, -5492,
   -5492, -5492, -5492, -5492,  3285, -5492,  3370, -5492, -5492,  3420,
    3052, -5492,  3763, -5492, -5492, -5492, -5492, -5492,  3260,  3293,
    3847,  3874, -5492, -5492, -5492, -5492,  3584, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
    3318,  3339, -5492,  3763, -5492, -5492, 53019, 70724,  3713, -5492,
   -5492, -5492, 66920, -5492, -5492,  2654,  3518,  3914, -5492,  4015,
   -5492,  3945, 57821,  3895,  1643,   428,  3365,   474,   508, 43943,
     208, 78986,   509,  1411,  3367, 62480, 47561,  3377,   137,  3381,
   -5492,  3386,  3407,  3408,  3417,  3427,  3439,  3443, -5492, -5492,
   -5492,  3476,  3382,  3267,  1734, -5492, -5492,   270,   119,  3466,
   -5492,  3795, -5492,  1734, -5492, 37583,  4080,   546, -5492,   964,
   -5492,  4132, -5492, -5492,  3556,  3542,  3575, -5492,  2623, -5492,
    2445, -5492,  1297, -5492,  4080,  1734,   546, -5492,  3747,  3831,
    1247,  4158, -5492,  2053, -5492, -5492,  3248, -5492,  3870, 85960,
   -5492, -5492, -5492,  3503, 70724, 70724, 85960,   999,  1061,  3583,
    3505, -5492, 22152,  3987,  4948, 41159, -5492,   228, -5492, -5492,
   85960, -5492,  3609, -5492, -5492,   742, -5492,  3931, -5492,  3514,
   -5492, 87862,  1061, -5492, -5492,  1313,  3906, -5492,  3520, -5492,
   -5492, -5492, -5492, 70724, -5492, -5492, -5492, -5492, -5492, -5492,
    3523, -5492, -5492,  3723,  3606, -5492,  3544, -5492, -5492,   564,
    4217, -5492,  2628, 85960, -5492, -5492,  2864, -5492,  2864,  2864,
    2864,  2864,  2864,  2354, -5492, -5492, -5492,  3570,  3854, -5492,
   -5492,  2906,  2657, 49582,  2520,  2403,  3543,   134,  3550,  4020,
    4081, -5492, -5492, -5492,   565, -5492, -5492,  2598, 15366,  4082,
    4258,  3932, -5492, 85960, -5492, -5492, -5492,  2510,  3554, -5492,
   -5492, -5492, -5492, -5492,  4320, -5492, -5492, 70724,  3758,  3942,
    3942,  3942,  4331, -5492, -5492, -5492, 52325, 70724, -5492, -5492,
   -5492,   267, -5492,  1510, 85960, 70724,  3610, -5492, 70724,  3572,
   22152, -5492, 22152, -5492,  3930,  3583, -5492, -5492, 70724,   222,
   -5492, -5492, -5492,  4320,  3942, -5492,  4009,  1434,  3577,  3578,
   -5492,  3585,  3585,    36, -5492,  3586,  4150,  3586, -5492,  3979,
     363,  3548,  3979, -5492,   363,  3586, -5492,  3596, -5492,  3979,
   -5492,   363,  3585, -5492,  3585, -5492, -5492,   363,  3585, -5492,
    3597,  3586, -5492, -5492,  3979, -5492, -5492, -5492, -5492,   561,
    1861,  3586, -5492, -5492, -5492,  3585,  3603,  3585,  3585,  3585,
    3585, -5492,  3585,  4162,  3602,  1464, -5492, -5492, -5492, -5492,
   -5492, -5492,  3586,   434,  3585,  3585,  3585,  3585,  3604, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492,  4280, 85960,  4284, -5492,
   70724,  4364, 70724,  4085, -5492,  3619, -5492,  3615, -5492, -5492,
   -5492,  4208, 85960, -5492, -5492, -5492, -5492,  3622,  2567, 53712,
   -5492,  1488,  3972, 53019, 70724, -5492, -5492,  4244,  3769, -5492,
   -5492, -5492, -5492, -5492, -5492,  3704, -5492, -5492,  3639, -5492,
   -5492, -5492,  3642, -5492,  3642,  3642, -5492, -5492,  3642, 53019,
   -5492, -5492, 52325,  1702,  5990,  4297,  3909, -5492, 66920, -5492,
   23660, -5492, 24414, -5492, -5492, -5492,  3917,   493,  1318, -5492,
   -5492, -5492, -5492, -5492,  4116, -5492, -5492, -5492, -5492, -5492,
   85960,  4317,  4290, -5492, -5492, -5492,  4179, -5492, -5492,  4126,
    3661,  4286,  3667, -5492, -5492, -5492,   252, 22152,  3672, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, 70724,  3675,
   27430, 27430, -5492,  4433,  4433,  4433, 22152,  3565,   438,  4030,
   22152, 22152, 22152,  1433,  3681, -5492, -5492, -5492,   449, -5492,
    3685, 22152, 22152, 67554,  3688, -5492,  4582, 22152,  4392, 22152,
   22152, 22152, 22152, 22152,  4746, 22152, -5492, -5492, 87228, 67554,
    4142,  3698, -5492,  3695, -5492,  2476, 22152,  2532, 22152, -5492,
   -5492, 22152, 22152,  3702, 22152, 22152, 29692,  3706, 22152, 22152,
   22152,  3707,  3836,  4433,  4433, 22152,  2604, -5492, 16874, -5492,
   -5492, -5492, -5492, -5492,  4433,  4433, 22152, 22152,  2678, 22152,
   22152, 22152, -5492,  3703, 22152, 22152, 22152, 22152, 22152, 22152,
   22152, -5492, 22152, 22152, 22152, 22152, 22152, 22152,  2252, 22152,
   22152, 70724, 22152, 22152, 22152, 22152, 22152, 22152, 22152,  4382,
   70724, 22152, 22152, 22152, 22152,  4383, 22152, 22152, 22152,  3716,
   22152, 70724, 22152, -5492, 22152,  2846,  2846, -5492, 22152, 16874,
   22152,  3718, 68188, 22152, 22152, 22152, 22152, 22906, -5492, 22906,
   -5492, -5492,  3719,   324, -5492,  4187, 22152,  3720, 63115, -5492,
   -5492, -5492, -5492, 22152, 22152, 22152, 29692, -5492,   322, -5492,
   -5492, -5492, -5492, -5492, 16120, 29692,  3725, 29692, 29692,  4351,
    2317, 29692, 29692, 29692, 29692, 29692, 29692, 29692, 30446, 31200,
   29692, 29692, 29692, 29692, -5492, 82156, 27430, 72626,  3729,  4395,
   -5492, 87228, -5492,  2342,  1086,  1535,  5086, 32674, -5492,  3728,
   -5492,  4228,  3734, -5492,   835, -5492, 70724, -5492, -5492, -5492,
    4306,  3737,  4411, 53019, 52325,  2267,  3736,   666,  3743, -5492,
   -5492, 53712, 85960, -5492, -5492, -5492, -5492, -5492,  4474, 22152,
   -5492, 53019, -5492,  1380, 15366, -5492,  1614,  1694,   137, -5492,
   -5492, -5492, -5492, -5492, 15366, 85960, 58499,  3746,  3840,  3757,
    2864, 50225, 85960, 70724, 85960, 85960, 85960, 70724, 53019, 70724,
   -5492, -5492, -5492,   995,  1734, 85960,  1734,   546,  4390, -5492,
    1590,  1590, -5492, -5492, -5492, 79620, -5492, -5492, -5492,  1734,
   85960, 85960,  1734, 52325, -5492,   546,  2330, -5492,  4041,  3833,
   -5492, -5492, -5492,  4084, -5492, -5492,  4429,  3759, -5492,  4103,
   -5492, -5492,  3858, -5492, -5492, 70724, -5492, -5492,   546, -5492,
     546,   546, 22152,  1734,  1734,  1734,  2089, -5492,  3768, -5492,
    3765, -5492, -5492,  4120,  3766,  4410,  3773, -5492, -5492,  4350,
     966,  4310, -5492,  4202, -5492,  4339, -5492, 22152,  3987,  3583,
   -5492, -5492,  4070, -5492,  4072,  4075,  4076, -5492, -5492, -5492,
   -5492,  4226,  4078, -5492,  2445,  4079, -5492, -5492,  3814, -5492,
   -5492, -5492, 32674, 82156, -5492,  3815, -5492,  3830, -5492, -5492,
   -5492, 89130, -5492, 88496, -5492,  2445, -5492, -5492, -5492, 70724,
    4312, -5492,  2445,  2007, 85960, -5492, -5492, -5492,   888, -5492,
   -5492, -5492,  3922,  1735, -5492, -5492,   835,  1998,  4000, -5492,
   -5492, -5492, 82156, -5492, -5492, -5492, -5492, -5492,  4501, -5492,
   53712, 52325, 82156, 85960, 85960, 85960, 70724, 70724,  2864, 85960,
    2864, -5492, -5492,  2864, -5492,  2864,  2864,  3860, -5492, -5492,
   -5492, -5492,   175,  1729,  4560, -5492,   522, -5492,  2780,   522,
    4085,  4080, -5492,  4494, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492,  3837,  2403, -5492, -5492,
   -5492,  3829, -5492,  3832,  2580,  2520, -5492, -5492, -5492, -5492,
   -5492, -5492, 27430,  2707, -5492,  3583, -5492, -5492, -5492,   215,
   -5492, -5492, -5492,   442,  4198,  2583, -5492, -5492, 82156,  2583,
     838,  1801, -5492,  3845,  2445,  2113, -5492,  2113, -5492,  4144,
   -5492,  4148,   169, -5492,   835, -5492, -5492, -5492, -5492, -5492,
   70724,  3851, -5492,  4035, 85960,  2374,  3855,  3856,  3583,  3583,
   -5492,  8856,  4590,  4326,  5654,   205,  3903, -5492, -5492, -5492,
   -5492, -5492, 70724, -5492, -5492,  2589,  1541,  4341,  3862, -5492,
    1434, -5492, -5492, -5492,  2461, -5492, -5492, -5492,  3979,   137,
    3979, -5492, -5492,  2636,  1122, -5492, -5492, -5492,  1122, -5492,
     257, 57143, -5492, -5492, -5492, -5492,   556, 48933,  2720, -5492,
    4252,  3895,  3979, -5492,  4334,   363, -5492, -5492,  1122,  1998,
   -5492, -5492,  3979, -5492, -5492, -5492,  1998,  1122, -5492,  4336,
   -5492, -5492, -5492,  1122,  3979, 90398,  1464,   363, -5492, -5492,
     363,  1122,   164, 85960, 22152, 22152, -5492,  4419, -5492,   556,
    4622,   363,  3979,  1122,  4467, -5492,  1122, -5492, -5492,   186,
    4306,  3957, -5492,  3882, -5492, -5492,   978, -5492,  4465, 85960,
    4553, 75182, -5492, 70724, -5492, 85960,  1488,  3889, -5492, -5492,
   -5492, -5492, -5492,   137, -5492,  3891,   214, 70724, 70724,  8856,
   -5492,  3896, -5492, -5492, 85960, -5492, -5492, -5492, -5492,  4389,
     372, 33317, 68822, -5492, 68822, 68822, -5492, -5492, -5492, -5492,
   -5492,  1080, -5492, -5492, -5492, -5492, -5492, -5492, 22152, 50919,
    3583, -5492, -5492, 70724, -5492,  4547,   311, -5492,   173, 70724,
   -5492, -5492, 22152, -5492,  4546, 85960, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, 85960,  2374,  3583, 85960, 51626, -5492,
   90398,  8856,  8856, 22152,  1407, 22152, -5492,  3907, -5492,  3908,
    3912,  3915,  4263, 22152, 22152, -5492,  3970,  1017,   264, -5492,
    3920,  3924, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
    3923, -5492, -5492, -5492,   347,   374,  3929, -5492,  3937, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4585,
   -5492,   439, -5492, -5492,   272,   278,   531,   553,   577,  3934,
     763,  3703,  2314,  3933, 67554, 87228,  4433,  3938,   766,  4433,
    3939,   770,   868,   865, -5492,  1800,  1948,  3362, -5492,  1200,
    1229,  1260, -5492, -5492,  3940,  3944,   341,  4433,  3946, 18382,
   19136, 19890,  3952,  3947,  3953,  3958,  1272,  2102,  4433,  3959,
    2112,  2465,  2136, 87228,  1296,  2160,  1596, -5492,  2470,  1654,
    1663,  1723,  1786,  2232,  2266,  1816,  1823,  1856,  2481, -5492,
   -5492, -5492, -5492,  3921,  2277,  2280,  3956,  3961,  2539,  2326,
    2358,  2371,  2569,  2579,  2601, 70724,  3962,  2414,  2423,  1860,
    2607, 70724,  2464,  2550,  1866, -5492,  2557,  3963,  1872,   350,
    3964,  3966,  2568,  3975,  1875, -5492, 87228, 85960,  3980,  3973,
     389,   256,  1915,  2582,  4746,  4746, -5492, 22152,   541,   259,
   87228,  1694, -5492,  4473,  3369,  1536, -5492,  2717, -5492, -5492,
   -5492, -5492,   542, -5492,  3971,  2717,  3984,   529, 22152,  1781,
    2628, 29692, 29692,  3985, 29692, 29692,  3969,  3969,   473,  2259,
    2259,  4188,  4019, 22906,   473, 22906,   473,  3969,  3969,  3969,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4542,  3988,
    1773,  3989, -5492, -5492, -5492, -5492, -5492, -5492,    45,  4396,
   -5492,  4174,   364, 22152,  2445, -5492,  4006,  4496,  4497,  4502,
   -5492, -5492, -5492, -5492, 53019, 53019, 70724,  4500, 22152, -5492,
    1150,  4007, -5492, -5492,  4678, 53712,  4683, -5492,  4021, 34032,
   68822, 68822, 68822, 85960, 85960, 15366, 57821,  4690,  4693,   137,
   57143, -5492,  3583,   137, -5492,  4026,  4027, -5492, -5492,  1530,
    4301, -5492,  4028,  4029, -5492,  4025,  4034,  4036, 61211, 22152,
   -5492,   137,  1614, -5492, -5492, -5492, -5492, -5492,  4033, 85960,
   85960, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
    2445, 22152, 85960,  1734, -5492, -5492, -5492,  1734,  2445,  4702,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4373, -5492, 83424,
    4578,  1315, -5492,  4037, -5492, -5492, -5492, -5492, -5492,  1734,
   -5492, -5492, -5492, -5492, -5492,  4206,  4080,  2623,  4390, -5492,
     546, 70724,  1734,  1734,  3583, -5492, -5492, -5492, -5492, 85960,
    2955,  4574, -5492,  4046, -5492, -5492, -5492, 70724, -5492,  8856,
   85960, 85960, -5492,  6240, -5492, 82156, 59177, 70724, -5492, -5492,
   -5492,   543, -5492, -5492, -5492, -5492, -5492, -5492,  3583, -5492,
   20644,  4750, -5492, -5492, -5492, -5492,  2445, -5492, -5492,  4732,
   -5492, 70724, -5492, 65018, -5492, 65018,  1976, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,   227,
     241,  1450,  4085, -5492, -5492, 70724,  1220,   173, -5492,  4807,
   -5492, -5492, -5492, -5492, -5492,  4050, -5492,  4097, -5492, -5492,
   -5492,  4052, -5492,  4726, -5492, -5492,  2233,   569,   169, -5492,
     131,  4643,  4645, -5492, -5492, 85960, -5492, 85960, 85960, -5492,
    2864, -5492, -5492,  2864, 70724,  2864, -5492, 85960, -5492, 85960,
   -5492, 85960, -5492,  2864, -5492, -5492, -5492,  4569,  4569, -5492,
   63750, -5492, -5492,  4554,  4710, -5492, 85960, -5492, -5492,  2149,
   -5492,  4736, -5492, -5492,  4465, -5492,  4074, -5492, 22152, -5492,
    4083,  4077, -5492, -5492, -5492, -5492, -5492, -5492,  2520,   581,
   15366, -5492,   137,   137,  4293,  4596,  4597,  4197,  2445,  4602,
    4603,  4613, -5492, -5492, -5492,  2445,  2445, -5492, -5492,   137,
   -5492,  3045, -5492, -5492, -5492, -5492,  3850,  1367, -5492,   137,
     137, -5492,  3234, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
    1667, -5492,   231,  1248, 52325,  4564, -5492,  4686,  4102, -5492,
   70724,  4775, -5492, -5492, -5492, -5492, 22152,  4606,  6852, -5492,
   -5492,  4326, -5492,  4124,  4127,  4128,  4129,  4130,  4131,  4134,
    4139,  4140,  4143,  4145,  4146,  4153,  4155,  4159,  4160,  4161,
    4163,  4166,  4170,  4172,  4175,  4183,  4184,  4109, -5492, -5492,
    4178, -5492, -5492, -5492, -5492,   137,   137,   137,   137, -5492,
    4478, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4384,
    3479, 85960,  4765,  4519,  4173,  4189,  4192,  4193, -5492, -5492,
   85960, -5492,  2651,  4605,  4647, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,   137, -5492,
   -5492, -5492, -5492,  2665, -5492, -5492,  2674, -5492, -5492, -5492,
   -5492,  7443, -5492,  2694, -5492, -5492, -5492, -5492, -5492,  1464,
    1464,  4168,  3583,  3583,  4199, -5492, -5492, -5492, -5492,  4622,
   -5492,  4171, -5492, 73260, -5492, -5492, -5492, -5492,  3413, -5492,
   -5492,  2117, 85960,  4668, 75182, -5492, 22152,  4820, -5492, -5492,
    2089, -5492,  4190,   835, -5492, -5492, 53712, -5492, 82156, 53019,
   -5492, -5492, -5492,  4196,  1407,  8111, -5492, -5492,  4889, -5492,
    2718, -5492, 52325,  4646, -5492, 68822,  4195, -5492,  4203,  4698,
    4699,  4700,  4705, -5492,  1150,  3583, -5492, -5492,  4210, -5492,
   -5492,  4350,  4569,  4237,  4485,  4607, -5492, -5492, -5492,  3583,
   -5492, -5492,  4857, -5492, -5492, -5492,  2729,   340, -5492, -5492,
   -5492,  4568, -5492, 91950, 91950, 91950, -5492,  1924, -5492, 22152,
   -5492, -5492, 22152, -5492,  3583,  4004,  3551, 48933, -5492, 48933,
    3551, 22152, -5492,  4220, -5492,  4862,  4863, -5492, -5492, 22152,
   -5492, 22152, -5492, 22152, -5492, 22152, 22152, 22152, 22152, 22152,
   22152, -5492, 29692, -5492,  4221,  4236, -5492, -5492,  4238, -5492,
   22152, -5492, 22152, -5492, -5492, 22152, 22152, 22152, 22152, -5492,
   -5492, 22152, 22152,  4240, -5492, 22152,  4053, 22152,  4096, 22152,
    4239, 22152, -5492, -5492, -5492, 25168, -5492,  4241, -5492, -5492,
   -5492, -5492, -5492, 22152, -5492, 22152, -5492, 22152, 22152, 22152,
   22152, 22152, -5492, -5492, 22152, 22152, 22152, -5492, 22152, -5492,
    4801, 22152, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, 22152, -5492, -5492, -5492, -5492, 22152,
   -5492,   266, 25922, -5492, 22152, 22152, 22152, -5492, -5492, 22152,
    4222,  4231, -5492, 85960, -5492, 22152,  2002,  3161,   173,  4247,
   22152, -5492,  4249,  4254,  3505, -5492,   174,  2751, -5492, -5492,
   -5492,  2058, -5492, -5492, -5492, 89764, 22152, -5492, -5492, -5492,
   -5492, -5492, 29692,   408,  4248, 29692,  2628,  3789, 22152,  1896,
    2628,  4746,  4746, 85960,  4986,  4250, -5492, 22152, 87228, 22152,
    4251,  4253, -5492,  4256, 29692, -5492, -5492,  4257, -5492,  2711,
    3161,  4333,  4701, -5492,  3583, -5492, 32674,  4753, -5492, -5492,
   70724,  3114, -5492,  3543,  3543, 65652, -5492, -5492, -5492,  4793,
   85960,  4453, -5492, 53019, 52325, 68822,  4930,  4931,  4932,  4934,
     137,   137, -5492, -5492, 39718, 53019, 15366, -5492, -5492,  4770,
    4772, -5492, -5492,   595,  4562,  4824, -5492, -5492, -5492,  4272,
   -5492, -5492, -5492, -5492,   678, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,  3583, 15366, -5492,  3746,  4278, 35446,  1075,
   -5492, -5492, -5492,  3583, -5492, -5492, -5492, -5492,  4291, -5492,
   80888, -5492,  4626, 80888, 80888, 87228, -5492, -5492,  4869, -5492,
   -5492,  4702,  4085,   546, -5492, -5492,  2741,  4292,  4928,  4929,
   -5492,  4875,  2892,  4875, -5492, -5492,  4292, 68188,  2089,  4306,
    8456, -5492,  2735, -5492,  5051,  4296,  4756, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4308, -5492, 15366,
    2707, -5492,  4304, -5492,  3583, -5492, -5492,  4327, -5492, -5492,
   -5492,  4196,  1844,  4329,  4309, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492,  4080,   197, -5492, -5492, -5492, -5492, -5492,   860,
   -5492, -5492, -5492,   888,  3813, -5492,   262,   173,  4549, -5492,
   -5492,  2233,  4761, -5492,  4564,  4988,  1533,  1533,  4905, 70724,
   70724,  6765,  3850, -5492,  2165,  1690, -5492, -5492, -5492, -5492,
   85960, -5492, 85960, -5492, -5492,  1668, -5492, 70724, -5492, -5492,
   -5492, 82156,  4319, -5492, -5492,  4316, -5492, 22152,   835,  4435,
   -5492, -5492, -5492,  2058,  5062,  4985,  4080, -5492,  3583, -5492,
    4321, 20644,  4335,  4330, -5492, -5492,   522, -5492,  4337, -5492,
    2580, -5492, 57143, 48283, -5492,  4709,  4712,  1978, -5492, -5492,
   -5492, -5492, -5492, -5492,  3375,  1801, -5492,   137,   137, -5492,
     244,   137, -5492, -5492,   304, -5492, -5492,  2153,   382,  3850,
   -5492,  2445,  2445,  2445,  2445,   173,  2445,  2445,  2744, -5492,
    3375,  3375,  2113, -5492,  1072, -5492, -5492, -5492, -5492,  1159,
   -5492, -5492, 82156, -5492,  4833,  4838, -5492,  4841, -5492, -5492,
     831, -5492,  3298, -5492,  6473,  1495, -5492,  4890, 85960,  5096,
    4102, -5492,   409,  2374,  3583, -5492, 22152, -5492,  4346,  4348,
     173,  4352,   173,   173,  2445,  2445,  4291,  2445,   173,  2445,
    2445,  2445,  2445,  2445,  2445,  2445,   173,  2445,  1499,  4205,
    2445,   173,  5654, -5492,  2445,  3161,  3375,  3375,  1541, -5492,
    5012,   137, -5492,  4706, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,  2766, 45399, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492,  4943, -5492, -5492, -5492,   556,  1998,
     556, -5492, -5492, 90398, -5492, -5492, 85960,  4945, -5492, -5492,
   -5492, -5492,  4636, -5492, -5492, -5492,  4676, -5492, -5492, -5492,
   -5492, -5492, -5492,   432, -5492, 29692, -5492, -5492, -5492,  4356,
    2089,  1029,  3583, 80254,  4899,  4085,  4372, -5492, -5492, -5492,
   -5492, -5492, -5492,  1820,  4981, -5492,  4367, 22152, -5492, -5492,
   85960,   988,  4561,  4865,  4377, 75816, 52325, 52325, 52325, 52325,
   -5492,  4958, 70724, -5492,  5022, -5492, -5492, -5492, -5492, -5492,
   22152, -5492, -5492, 85960,  2374,  4804, 91950,  4994, -5492, -5492,
   -5492, -5492, -5492, 22152,  3583,  3583, 22152,  3585,  3585,  3586,
    3604, -5492, -5492,  5019,  3585,  3585, -5492,  3585,  5020,  3585,
    3585,  4386, -5492, -5492,  4391,  4394,  4400,  3505, -5492, 22152,
   22152,  2593,   192,  2647,  2655,  1934,  2008,   415, -5492,  2658,
    4073, 87228, -5492, -5492,  2677,  2681,  2686,  2696,  2019,  2743,
     336,   525, -5492,  3583, 22152,  3583, 22152,  3583, 22152,  3583,
   22906,  2746, -5492,  2771,  4014, -5492,  2775,  4061,  2759,   568,
    2785,  2062,  2863,   622,  2791,  2838,  2883,  2895, -5492,  1304,
    4971,  2929, 22906,  2935,  3025,  2068,  2071,  3032, 87228, 85960,
    4378,  3134,  4393,  4393,   288, -5492,  4388, -5492, -5492, -5492,
    4402, -5492,  3165, 22152, 22152,  4494, -5492,  2151,   174,  4404,
    4020,  4939, -5492,   522, -5492,   565,   541, -5492,  4401,  3583,
    4409,  2717, -5492, 22152, -5492,  2628, 29692,   759,  4412, 29692,
   -5492, -5492,  4542, -5492, 22152, -5492,  4976,  4414,  3505,  4397,
    3583, -5492, -5492, 85960,  4418,  4482, -5492,  4291, -5492,  5052,
   -5492,  5147,  4422,  4438,  4424,  4257, -5492, 53019, -5492,  4972,
   68188,  3829,  3829,  1151,  4426,  2931,  4957, -5492, -5492, -5492,
    4425, -5492,  2944, -5492,  5101,  3891, -5492,  5102, 52325, 52325,
   52325, 52325, 15366, 15366, -5492, -5492, -5492,  4439,  4440,    71,
    4991, -5492, -5492, -5492, -5492, 85960, 85960, 15366, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492,  4229, -5492,  4080, -5492,
   -5492, 80888, -5492, -5492, -5492, -5492, -5492, -5492,  1734, -5492,
   -5492,  4441,   307,  2751, -5492, -5492, -5492,  2089,  4187,  1163,
   -5492, -5492, -5492,  5073,  4875,  4875,  4292,  5078,  4974,  4443,
   -5492,   137, -5492,  5117,  5066, -5492, 85960,  4454, -5492,  4923,
   -5492,  4457, 84058, -5492, 20644,  4459, -5492,  5016, -5492, -5492,
    4618, 65018,  4462, -5492,  4703, -5492, -5492, -5492,  4493, -5492,
    4479,  4572,  4575, -5492, -5492, -5492, 52325, -5492,  4858, -5492,
   -5492, -5492, -5492, -5492, 70724, -5492, -5492,  4847, 70724,   137,
     137,   137,   137,   137,  4528,   137,   137,   137,   137,   137,
    4852,   137,   137,   137,   137,   137,   137,   137,   137,   137,
     137,  1540, 85960,   137,   137, 41862, -5492, -5492,  5068, -5492,
    6567, -5492, -5492, -5492,   137,  7241,  3850,  2165, -5492, -5492,
   -5492,  2445, -5492,  1690, -5492, -5492,  4503, 85960, -5492,  4102,
    4631,  4504,   392, -5492,  1437, -5492, 63750, 85960,  3583,  4498,
    2710, -5492,  4733,  4506, -5492, -5492, 22152, -5492,  4535, -5492,
   -5492, 43221, -5492, 76450, -5492, -5492, -5492, 20644, -5492,  2520,
    4337,  4507,   369, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
     266,   266, -5492, -5492,   266,   266, -5492, -5492, -5492, -5492,
     266,   266, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,  1367, -5492, -5492, -5492,  1667, -5492, -5492,  5008,   470,
   -5492, -5492, -5492, -5492,  1109,   173,   173,   173,  4205,  2631,
   -5492,  3298,  4092,  4907,  5079,  4907,  5083,  5011,  3816,   137,
    5087,  5257, -5492,   230,   137,  5092,  5159,  4599,  5161,  5100,
   -5492,  4608,  4907,  5106,  4722,  5108,  5109,  5112, -5492, -5492,
    7241, -5492, -5492, -5492, -5492,   489, 69456, -5492, -5492, -5492,
   -5492,  2628,   293,  5039,  2228, -5492,  2948, -5492,  5297, -5492,
     255, -5492, -5492, -5492,  3583,   321,   359, -5492,   614, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, 85960,  3375,  3479,
   -5492, -5492, 85960,  3585,  3585,  3585,  3603,  3585,   142, -5492,
   -5492, -5492, -5492, -5492, -5492,   434,  3585,  3585,  3585, -5492,
   -5492,  4548, -5492, -5492, -5492, -5492, -5492, -5492, 73260, -5492,
   -5492, -5492,  4482, 75182,  4085, -5492,  4887,  5091,  3837, -5492,
   -5492, -5492, -5492,  4187, -5492,  3583, -5492, -5492,  5219, -5492,
   -5492, 52325, -5492, -5492,   169,   169,   169,   169,  2984,  4909,
   -5492, -5492, -5492,  5022,  4832, -5492,  1295,  3583, -5492, -5492,
   -5492, -5492, -5492,  8856,   415,  3583, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,  4558,  4746,  4746, -5492,  5296,  5095, -5492, -5492, 22152,
   22152, -5492, 22152, -5492,  1874,  4565,  5025, -5492, -5492, -5492,
   -5492, -5492, 22152, -5492, 22152, -5492, -5492, 22152,  3583,  3583,
    3583,  4746, -5492, -5492,  4799, -5492, -5492,  3551, -5492, -5492,
   22152, -5492, 22152, -5492, 22152, -5492, 22152, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,   211,  4746, -5492, -5492, 22152,
   22152, -5492, -5492, -5492, 85960, -5492,  3161,  4566,  4834, -5492,
   -5492, -5492,  3161,  4704, -5492, -5492,  3161,   173, -5492, -5492,
   -5492, -5492,  3837,  2151, -5492,  4567,  2664, -5492, -5492, -5492,
   -5492, -5492, -5492,  4576, 85960, -5492,  2958,  2717, -5492, 22152,
   -5492,  2628,  5149,  4577,  2710,  5306,  4584, -5492, 22152, 43221,
   -5492,  4586,  4587, -5492, -5492, -5492, -5492, 22152,  5199,  5155,
   -5492,  3161, 85960, -5492, -5492, -5492,  4588, -5492,   137,  4187,
   -5492,  3817,  1151, 68188, -5492, 77084,  2796,  2403, -5492, 85960,
   52325, 52325,  4021,  4021,  4021,  4021, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,   137,   137, -5492, 35446, 57821, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,  4080, -5492, -5492,  3543,  5117,
   -5492, -5492,  2058,   522,  4046,   541, -5492,  4292,  5212,  5226,
   -5492,  4292, -5492, -5492, 68188,  4085, 21398,  3460,  5947, -5492,
   -5492, -5492, -5492,  4923, -5492, 38244, -5492,  4598, -5492,  4601,
   -5492, -5492,  2148,  4935,  5217, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   20644, -5492,  2445,  2483, -5492, -5492, -5492,  4625, -5492,  4609,
    4610,   137, -5492,   199,   232,   280,   291, -5492, -5492,  4291,
     173,   173,  2445,  2445,   137,   173, 82156,  2061,   173,  4291,
    4291,   306,  2445,  3656,   199, -5492, -5492, -5492,   173,   199,
   71992, 70724,  5274, 85960,  4611,  4612,  4614, -5492, -5492, -5492,
   -5492, -5492,  2279, -5492,  5157,  2864,   543,   543, -5492,  4615,
     412, -5492, -5492,  7512, -5492, 55091, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,  1482,  5200,  5368, -5492, -5492,
   -5492,  5160, -5492, -5492, -5492, -5492,  4718,  4102, 48283, -5492,
   -5492, -5492, 22152, -5492, -5492, -5492,   835,  4619,  1097, 22152,
   85960, -5492, 84692, -5492, -5492, -5492, -5492,  2333, -5492, 20644,
    4623,  4624, -5492, -5492,   522,  2818,   522,  4628,  2580, -5492,
   -5492,  2520, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,  2445, -5492, -5492, -5492, -5492, -5492,  5218,
    5220, -5492, -5492, 70090,  2864, -5492,  5274,  4669, -5492, -5492,
   -5492,  5285,  2715,  1116,  2715, 38244,  1437,  2308,  5271,  2381,
    5308,  4680,  5204,  2715,  2715, 59855,  1116, 68188, -5492, -5492,
   -5492, -5492, 70724, 60533,  1116, -5492, -5492, -5492, 85960, -5492,
    2715,  1116, -5492,  1116,  1116, 38244, -5492,  8418, -5492, -5492,
   42565,   285, -5492,  4816, 22152, 22152,  5231, 85960,  5232, -5492,
    5041, -5492, 85960, -5492,  4187, -5492, -5492, -5492,  4941,  5150,
    2977, -5492, -5492,  3005, -5492, -5492,  3020, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,   556,
    5186, 85960,   556,  4622,   556,  4622, -5492, -5492,  4190, -5492,
   -5492,  4990,  4074, -5492,  4845,   169,  5120,  5120,  5120,  5120,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  5298,  2374,
    5006,  8563,   556,   556,   556, -5492,  4657,  4659, 22152,  1998,
    5286,  3193,  2081,  3051,  4942,  4891, -5492,  4822, -5492,  3210,
    3221,  3230,  1982,  3586, -5492, -5492, -5492, -5492,  5304,  3585,
   -5492,  5397, -5492,  3585, -5492, -5492, -5492, -5492, -5492, -5492,
    4667,  3242,  3583,  3583,  3264, -5492, -5492, -5492,  3063,  2040,
    3271,  3279, -5492, -5492, -5492,  4670, -5492, -5492,   337, -5492,
    4671,  4074, -5492, -5492, -5492,  4494,  2058, -5492, -5492,  3068,
    5406,  2538, 22152, -5492, 22152, -5492,  4679, -5492, -5492, 85960,
    4746,  1336, -5492,  3087, -5492, -5492,  4684, 68188, 20644,  2058,
   -5492, -5492, -5492,  2796, -5492,  4674,   522,  2598,   522, -5492,
    3837, -5492, -5492,  4021,  4021, 15366, 15366, -5492, -5492, -5492,
   -5492,  2403,  3829,  5719,   541, -5492, -5492, -5492,  4448,  5163,
    4292,  4292,  5178,  5165, 22152,  4688, -5492,  4465,  2707, -5492,
   -5492,  4888,  2117,  2117, -5492, -5492, -5492, 73260, -5492, -5492,
    4692,  4695, -5492, -5492, -5492, 84058, -5492,  3106, -5492, -5492,
    5446,  3120, -5492, -5492, 82156,  4707, 85960, 85960,  2445, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4711, -5492,
   -5492, -5492, -5492, -5492,  2445, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
    4694,  4713, -5492,  4024, -5492, 42565,  4715,  5333,  5337,   543,
   -5492,  2864, 70724, -5492, 71992, -5492,  2864,  2864, 46127, 85960,
   -5492,  5457, -5492, -5492, -5492, -5492, -5492, -5492,  1125, 85960,
    3809, -5492, -5492,   482,  4831, -5492, 85960, -5492, -5492,  2445,
    5468, -5492,  5121,  2710, -5492, 22152,  4720,  4717, -5492, -5492,
   -5492, -5492,  3583,  5473,  4721, -5492, -5492, -5492, 77718, -5492,
   -5492, 20644, -5492,  5367, -5492, -5492, -5492, -5492,  2520, -5492,
   -5492, -5492, -5492, -5492, -5492,  2628,  1116, -5492,  2628, -5492,
   71992, 38244, 71992, -5492, 48283, 71992,  2715, 85960, -5492, -5492,
    5361, 71992, 71992, -5492, -5492, 38244,  4728, -5492,  2710,  2814,
   -5492, -5492, -5492,  3161,  5195, 71992, 38244, -5492, 38244, -5492,
    4513,  3838, -5492,  4731, 85960, -5492, -5492, -5492,  3583,  4746,
    5122, -5492, -5492,  4848,  2445,  5094, -5492,  1020, -5492, 85960,
     265, -5492, -5492,   173, -5492,   173, -5492,   173, -5492, -5492,
     373, -5492, -5492, -5492, -5492, -5492, -5492,  5120,  1685, -5492,
   -5492, -5492, -5492, -5492, -5492,  5374,  5244, -5492, 91950,  5358,
   -5492, -5492, -5492, -5492, -5492,  4743,  2710, -5492, -5492,  4745,
   80888, -5492, -5492, 22152, -5492,  4975, -5492,  5080, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,   556, -5492, -5492,
   -5492, -5492,  4291, -5492, -5492, -5492,  4747, -5492,   173,  4465,
   -5492, -5492, 22152, -5492, -5492,  4751,  4593,  2710,  2710, -5492,
   -5492,  4843,  4701,  4754, 85960, -5492,  5155, -5492, -5492, -5492,
   -5492, -5492,   522, -5492, -5492, 78352, -5492, -5492, -5492, -5492,
    4074, -5492, -5492,  3837, -5492, -5492,  4752, -5492,  5235, -5492,
   -5492, -5492,  5236,  3583, 85960,  4820,  2117,  5510,  5253, -5492,
     342, -5492,   435, -5492, 85960, -5492, -5492,  4291,  5118, -5492,
   -5492,  4952, 85960,  3157,  2710,  4763,  3176, -5492, 70724, -5492,
   -5492, 85960,  2058, -5492,  7241, -5492, 22152,  2864, -5492, -5492,
   71992,  4766,  5246,   736, 71992, 71992, -5492,  4758,  5497, -5492,
   -5492,  4762, -5492,   461, 92409, -5492, -5492,  5119,  1125, -5492,
    2907,  4771,  4769, -5492, -5492, -5492,  5469,  2165, -5492, -5492,
   -5492,  5360,   293, -5492,  4777,  4774,  7709,  3809, -5492, -5492,
    2435,  5395, -5492,  3583, -5492, -5492,  4779, 85960, -5492, -5492,
   -5492,  2058,   522,  5459, -5492,  5460,  2054, -5492, 71992,  2589,
    4474, -5492, 71992,  4695, -5492, -5492,  1820, -5492, 68188, -5492,
   -5492, -5492,  5287,   285, -5492, 85960, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,  4784,  2580,  5249,  3184, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,   358, 85960, -5492,
    4979, -5492,  1685, -5492,  5275, 70724, -5492, -5492, 22152, -5492,
   -5492, -5492,  1376,  3320, -5492, -5492, -5492,  4788, -5492,  4794,
    4080,  4498, -5492,  4675,  4920,  4496,  4497,  4502,  4969,  5136,
   -5492,  4977, -5492, -5492,   173, -5492,  4802, 29692, -5492,  2086,
   -5492, -5492, -5492, -5492,  2058,  4074,  5117, 22152,  4805, 22152,
    4806,  3203, -5492, -5492,  2117,  2117, -5492,  1310,  4800, -5492,
   -5492, -5492,  5222,  4811,  3208,   835, 85960, -5492,  5400,   835,
    4812,  4813, -5492, -5492,  5068,  3389, 71992,  5246,  1897, 85960,
    5418,  1533, -5492,  1533, -5492, -5492,  4059,  7443, -5492, -5492,
    3594, 85960,  5277, -5492, -5492, -5492, 92409,  1340, -5492, -5492,
   -5492,  4814,  4815, -5492,  4818, -5492, -5492, -5492, -5492,  5392,
   -5492, 46855, -5492, 85960, -5492, -5492, -5492,  5231, -5492, -5492,
    2165, -5492,  5554,  5555,  5508,  5563,  2435, -5492,  2369, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, 71992,   752, -5492,  5538,
    5539,   285, -5492, -5492, -5492, -5492,  1116, -5492, 70724, -5492,
   -5492,  4695,   860,  4937, -5492,  8856,  2796,  4784,  4839,  1204,
     565, -5492, -5492,  1263, -5492, -5492, 85960, 85326, -5492, -5492,
    5407, -5492, -5492, -5492,  4306, 91950,  2710, 80888, 80888, -5492,
   -5492, -5492,   522,  1632, -5492,  5598,  1742, -5492, -5492,   446,
   -5492, -5492, -5492, 85960,  4846,  4936, -5492, -5492,  4914, -5492,
   -5492,  2497, -5492,  4494,  5719,  3583, 85960,  3583, 85960, -5492,
   -5492, -5492, -5492,   543, -5492,   543, -5492,  1310, -5492, -5492,
   -5492,  1367,   835,  1821,  2710,  4849,  2050, -5492, 85960,   412,
   -5492, -5492, -5492,  1533,  3212, -5492,    64,  5434, -5492,  4853,
   -5492,  4856,  4864, -5492,  5494, -5492,  2445, -5492,  4938, -5492,
    4059, -5492, -5492, -5492,  4901,  5499,  5458,   137, -5492, 82156,
   31953, -5492,  5350, -5492,  5310,  5572, -5492,  5625,  3484, -5492,
   -5492, -5492, -5492, -5492,   237,   240,  2181,  1340, -5492, -5492,
   -5492, -5492, 85960, -5492, 85960, 85960, -5492,  3603,   385, -5492,
   -5492,  5547, 51626, -5492,  2228, -5492, -5492,  1998,  1998,  5613,
    1998, -5492,  5615,  5616,  2369, -5492,  5497,  3161,  5155, -5492,
   -5492, 31953, -5492, -5492, -5492,  5520, -5492, 22152,  5233,  5547,
   -5492,  2598,   522,   522,  4882,  2580, -5492, -5492,  2796, -5492,
    5075,  5618,  5619, -5492, -5492,  3219, -5492, -5492,  4940, 68188,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4675, -5492, -5492,
    5028,  2172, -5492,  3225, -5492, -5492, -5492,  3161, -5492,  4913,
   -5492,  5272,   137,   137,  5279,   137,   137,   137,   137,  4917,
    2497, -5492,  5265, -5492, -5492,  3256,  3269,  5591,  5591, -5492,
    3272,  1910,  5111,  2445,   137,  1774,  1821, -5492, -5492,   137,
   -5492, -5492,  1774,  2050, -5492, -5492,  4924, -5492,  4926,  4927,
   -5492, -5492, 85960, -5492, -5492, -5492,   450, -5492, 85960,  4944,
   85960, 85960, -5492, -5492, -5492, -5492, -5492, -5492, -5492, 55778,
   -5492,  4205,  4205, 22152, -5492, -5492, -5492, -5492, -5492,  3293,
    5521, -5492,  4968,  1515,   137, -5492,  3881,  4946, -5492,  4949,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  5465, 85960,
   -5492, -5492, -5492, 70724,  5041,  5547, -5492, -5492,  1998, -5492,
    1998,  1998, -5492, -5492, -5492,  3296, -5492, -5492,  4947,  3583,
   22152, -5492, -5492,   522,  2441, -5492, -5492, -5492, -5492,  2796,
   -5492,  2598, -5492, -5492,  1020, -5492,  5123,  5125, -5492, 85326,
   -5492,  4933, -5492,   137,  1437, -5492, -5492, -5492, -5492, -5492,
   85960, -5492,  4954, -5492, -5492,   160,   137,  2445,  2445,   137,
    4114,  4114,  3161, 82156,  5017, -5492, -5492,   137, -5492, -5492,
    2455, -5492, -5492, -5492,  1533,  1533,  1774,  1910, -5492, -5492,
   -5492,  3373, -5492,   173, -5492,  5557,  5377, -5492, 56465, -5492,
   -5492, -5492, 85960, 85960,  4959, -5492,  1290,  1290,  3302, 85960,
    3310,  3314, -5492, -5492, -5492, -5492, -5492, -5492,  4956,  4960,
   -5492,  1145, -5492, -5492,  3881, -5492, -5492, -5492, -5492,  5290,
   -5492,  4503,  4504, -5492,   388,  5369,  5612,  5300, -5492, -5492,
   -5492, -5492, -5492,  5155,  3583, -5492,  2058,   522, -5492, -5492,
   -5492, -5492, -5492, 68188, 20644, -5492,  4936, -5492, -5492,  3321,
   -5492, 26676, -5492, -5492, -5492,  2445, -5492, -5492,  2445, -5492,
   -5492, -5492, -5492, -5492,  3337, -5492, 82156,  5684, -5492,  5685,
    4962,  4964, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492,  3340,  3357, 85960, -5492, -5492,   504,
    5405,  5550,  5552,  1910,  3360,  1821,  2050, -5492,   479, -5492,
    4045,  4045,  1749, -5492, -5492, -5492, 85960, -5492,  5160,   512,
   85960, -5492, -5492, -5492,  3363, -5492, -5492, -5492, -5492,  5505,
   -5492, -5492,  4954, -5492,  4970, -5492,  4482, -5492, -5492, 82156,
   -5492,  5017, -5492, -5492, -5492, 84058, 84058,  5157,  1910,  3400,
   -5492, -5492, -5492,  5452,  5670, -5492,  1910, -5492, -5492, -5492,
    4973, -5492,  4045, -5492, -5492, -5492, -5492, -5492,   276, 85960,
   85960, -5492,  3809, -5492, -5492, -5492,  5543, -5492, -5492, -5492,
   -5492,  5273,  5121, -5492, 26676,  4980,  2497, -5492, -5492,  4982,
    3403, -5492, -5492,  1910,  1290,  1290, -5492, -5492, -5492, -5492,
     276, -5492, -5492, -5492, -5492,  3809,  5030,  5327,  5667,  5718,
    5395, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492,  5110,  1998,  5633, -5492, -5492,  5574,  4995,  1799,
    2182, 61845,  5526, -5492, -5492, 82156, -5492, -5492, -5492, -5492,
   -5492, 82156,  3437, -5492, -5492, 68188, -5492, -5492,  8856, -5492,
   -5492, 64384,  4998, -5492,   137,  5547, -5492, 68188, -5492, -5492,
   -5492, 20644, -5492, -5492
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
    2644,  1253,  2490,     0,   530,     0,  1460,   833,   560,  2344,
    2484,  2485,  2272,     2,   602,   254,  2686,  2687,   476,  2274,
    2551,     0,     0,   598,  1476,   971,   720,  2546,   396,     0,
       0,   605,  2277,   394,   254,  3203,  2392,     0,  3300,  2332,
       0,   600,  2648,  3590,  2909,  2957,  2958,  2985,  2804,  3079,
    3101,  3127,  2891,  2893,  2892,  2894,  2895,  2896,  2897,  2898,
    2899,  2777,  2900,  2901,  2902,  2904,  2903,  2905,  2906,  2907,
    2778,  3445,   556,  2779,  2857,  2908,  2859,  2858,  2910,  2780,
    2781,  2911,  2912,  2913,  2914,  2783,  2782,  2915,  2917,  2916,
    2860,  2861,  2918,  2919,  2920,     0,  2922,  2784,  2785,  2786,
    2787,  2788,  2921,  2789,  2923,  3450,  2924,  2925,  2790,  2926,
    2927,  2928,  2929,  2931,  2930,  2932,  2933,  2935,  2936,  2937,
    2934,  2938,  2939,  2941,  2940,  2863,  2942,  2862,  2943,  2791,
    2944,  2945,  2946,  2947,  2948,  2949,  2950,  2951,  2952,  2953,
    2239,  2954,  2955,  2956,  2977,  2959,  2961,  2960,  2864,  2962,
    2963,  2964,  2966,  2965,  2967,  2969,  2792,  2793,  2794,  2968,
    2970,  2971,  2972,  2973,  2975,  2974,  2979,  2980,  2865,  1476,
    2796,  2797,  2976,  2978,  2775,  2981,  2982,  2866,  2867,  2983,
    2798,  2854,  2984,     0,  2987,  2986,    85,  2988,  2800,  2989,
    2990,  2991,  2992,  2993,  2995,  2997,  2994,  2998,  2999,  3005,
    2801,  2996,  3000,  3001,  3002,  3003,  3004,  3006,  2868,  3007,
    3009,  3008,  3010,  3011,  3012,  3013,  2869,  3014,  2855,  3015,
    3016,  3017,  3030,  3031,  3021,  3022,  3024,  3025,  3028,  3023,
    3029,  3034,  3033,  3035,  3036,  3037,  3038,  3039,  3032,  3019,
    3026,  3027,  3020,  3040,  3041,  3018,  3042,  3044,  3043,  3045,
    2870,  3046,  3047,  3048,  3049,  3050,  3051,  3052,  3053,  3055,
    3054,  3056,  2871,  2872,  2873,  3057,  3058,  3059,  2848,  3060,
    2874,  2875,  3063,  3061,  3062,  3064,  3065,  3070,  3071,  3072,
    3067,  3066,  3068,  3069,  2876,  2877,  2878,  3073,  3074,  3075,
    3076,  3078,  3077,  2803,  2802,  2805,  3080,  3081,  2806,  3082,
    3084,  3083,  2850,  2807,  3085,  3086,  3088,  3087,  2879,  2880,
    2808,  2809,  2810,  3089,  3090,  3091,  3092,  3093,  3094,  3095,
    3096,  3097,  3098,  3099,  3100,  2881,  2882,  3102,  3103,  3104,
    3106,  3105,  3107,  3108,  3109,  3110,  3111,  3112,  3113,  2811,
    3114,  1476,  3115,  3116,  2812,  3118,  3117,  2813,  3119,  3120,
    3121,  3122,  3123,  2849,  3450,  3124,  3125,  3126,  2883,  3128,
    3129,  3130,     0,  3131,  3132,  3133,  2814,  3134,  3135,  2884,
    2856,  2815,  3136,  3138,  2563,  2816,  3137,  2818,  2819,  3139,
    3140,  3141,  2817,  3142,  2820,  3143,  3144,  3146,  3145,  3147,
    3148,  3149,  2821,  3150,  3151,  2822,  3152,  2823,  3153,  3154,
    3155,  3156,  3158,  3157,  3159,  3160,  3161,  3162,  3163,  3164,
    3166,  3168,  3167,  3165,  3169,  3170,  2885,  3171,  2824,  2886,
    3176,  3177,  2887,  3172,  3173,  3174,  3175,  2369,  3178,  3179,
    3180,  2827,  3181,  3182,  3184,  3183,  2825,  2826,  3185,  3186,
    2831,  3187,  3188,  3193,  2888,  2889,  3189,  3190,  3202,  3191,
    3192,  3195,  3194,  3196,  3197,  2776,  2828,  3198,  3199,  2829,
    3200,  2830,  3201,  2890,     0,     3,     8,    21,     0,    43,
      26,    31,    16,    20,    15,    45,    58,    51,    28,  3447,
     472,   473,   474,   475,    41,  3511,    40,    11,    61,    62,
      18,    48,    12,    14,    17,    39,    47,    35,    42,    55,
      24,    25,    32,    49,    66,    22,    63,    59,    23,  2490,
      13,    27,    50,    44,    36,    60,    67,    37,     0,  2645,
    2691,  2704,     0,  2705,  2773,  2771,  2774,  2770,  2772,    56,
      57,    38,    65,    30,    52,    29,     9,    10,    19,    53,
      54,    46,    68,    33,    64,    34,  1287,     0,     0,     0,
       0,     0,  2270,     0,     0,  2270,  1369,  1611,  3509,  3510,
    3511,  1477,     0,  1478,     0,  2644,  2852,  2851,  2779,  2781,
    2835,  2782,  2838,  2839,  2832,  2791,  2840,  2853,  2794,  2795,
    2836,  2737,  2798,  2841,  2799,  2801,  2833,  2834,  2842,  2837,
    2810,  2843,  2812,  2844,  2845,  2846,  2821,  2822,  2847,  2826,
    2738,  2830,  2702,   282,  2703,  2734,  2732,  2736,  2730,  2731,
    2735,  2729,  2733,   532,   130,     0,     0,     0,     0,   335,
    2364,  2270,  2268,  2270,  2270,  2270,  2270,  2270,     0,  2270,
    2270,     0,  2273,  2270,  2270,     0,     0,     0,   523,  2280,
    2553,     0,  2570,  2571,  2565,  3290,  3291,  3285,   485,     0,
       0,     0,     0,     0,   381,   393,   396,   389,   392,     0,
     254,  1479,   485,  2342,   395,   396,     0,  3205,     0,  2464,
     396,     0,  2342,  2564,     0,  2649,  2646,  3450,  1684,  1683,
     558,     0,  2692,     0,  1455,  1487,  1413,     0,  3451,  3452,
       0,    73,    75,  2495,   418,     0,     0,     0,     0,  2685,
       0,     0,     0,     0,  1421,     0,  3452,  3462,     0,   130,
    1394,     0,   130,  2375,     0,     0,  3573,  3574,     0,     0,
       0,  3568,     0,  3575,     0,     1,     5,     0,     0,   831,
    1210,  1211,  1209,   831,   831,     0,     0,     0,     0,     0,
    3516,  3509,  3510,  3511,  2972,  2797,  3084,  2477,  2489,  2475,
    2680,  1574,  3483,  1528,  1513,  1515,  3208,     0,  1256,  1288,
    1259,   256,     0,     0,  1261,     0,     0,  1276,  2713,  2712,
    2711,  1273,  1272,  1271,  1269,     0,   673,   254,     0,  1371,
       0,     0,     0,  3517,  3516,     0,  1432,  2479,  2480,  2481,
    2482,  2483,  2486,     0,   288,   543,   546,     0,   535,   538,
       0,   131,   132,  1458,  1461,     0,   834,     0,   164,     0,
     372,   374,     0,   371,   373,  2760,   561,   336,   337,   339,
       0,   359,     0,     0,     0,   448,   354,   446,     0,   447,
    2757,  2754,  2759,  2755,  2758,  2756,  2368,  2367,     0,  2366,
    2345,     0,  2364,     0,     0,     0,  2270,     0,     0,     0,
       0,     0,     0,   254,     0,  2460,   254,  2252,  2270,  2270,
     603,     0,  3353,  3368,  3369,  1625,  3365,  3370,     0,  3367,
    3359,     0,  3363,  3357,     0,  3389,  3361,  3366,  2965,  2794,
    2979,  3093,  3097,  3113,  3116,  2846,  3159,  3347,  3332,  3348,
       0,     0,  3351,  3355,     0,     0,  2281,  2282,  2283,  1367,
    2554,  2555,  2559,     0,  2574,     0,   498,     0,     0,     0,
       0,   471,   487,   488,     0,     0,   494,     0,   485,     0,
     457,   469,   459,  2644,   489,   468,   461,   460,   462,   463,
     464,   465,     0,   466,   467,   470,     0,   453,   454,   599,
     455,   456,   485,  2708,  1474,     0,  2634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1625,  1625,  1625,  1622,
       0,     0,     0,  2639,     0,     0,     0,     0,  2630,     0,
    2640,     0,     0,     0,  2632,  2633,  2688,  2689,     0,     0,
       0,     0,  2637,     0,     0,     0,     0,     0,  2613,  1686,
       0,  1622,     0,  2629,  2636,     0,  2621,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1622,  2612,     0,  2631,  2638,     0,  1625,  1622,  1622,
       0,     0,  2892,  2777,  2907,  2835,  2918,  2920,     0,  2784,
    2785,  2786,  2787,  2788,  2832,  2942,  2862,  2943,  2944,  2945,
    2797,  2866,  2983,  2990,  3008,  3010,  2869,  3049,  3051,  3056,
    2871,  2872,  2873,  3061,  3062,  3075,  2850,  2879,  2880,  3091,
    3098,  3123,  2883,  3128,  3133,  3136,  3155,  2886,  3176,  3177,
    2887,  3175,  2847,  3187,  3193,  3196,  3197,  2828,  2890,     0,
       0,     0,  3494,  1685,     0,     0,  1923,   972,  1631,  1643,
    1659,     0,  1758,  1757,  1760,  1762,  1768,  1678,  1789,  1729,
    1730,  1732,  1851,  1731,  1736,  1737,     0,  1900,  1738,     0,
       0,  1735,  2626,  1734,  1733,  2627,  2628,  1728,  2666,  2702,
       0,  2690,   722,   721,  2459,  2458,     0,  2547,   408,   403,
     411,   405,   407,   406,   412,   413,   414,   409,   404,   410,
     397,     0,   382,     0,   390,  3463,     0,     0,   485,   606,
    2343,  2285,     0,  2284,   415,  3353,  2893,  3097,  3321,     0,
    3331,     0,     0,     0,     0,  1128,  2768,  3234,  3235,  2848,
    2850,  2849,  3236,  3172,  2769,     0,     0,  2697,     0,     0,
    2698,  2765,  2763,  2767,  2762,  2766,  2761,  2764,  3204,  3220,
    3216,     0,     0,     0,  2472,  1206,  1205,     0,     0,     0,
    2414,     0,  1128,  2472,  2415,     0,  2161,  2462,  2465,     0,
    3238,  2428,  1207,  3239,  2458,     0,  2400,  2416,  2377,  2421,
     130,  3240,     0,  2461,  2161,  2472,     0,  2393,     0,     0,
       0,     0,  1609,     0,   391,  3301,  1367,   601,     0,     0,
    3446,   563,   557,     0,     0,     0,     0,     0,  3455,  1969,
    2240,    77,     0,    79,     0,     0,  2682,  2097,  3304,  3303,
       0,    86,     0,  3587,    73,     0,  2539,     0,  2537,  2534,
    2536,     0,  3455,  1401,  1401,     0,     0,  1393,  1395,  1396,
    1401,  1401,  2376,     0,  3588,  3589,  2620,  2618,  2619,  2693,
    3570,  2617,  2616,  3579,  3581,  3564,     0,  3567,  3566,  3576,
       6,    69,     0,     0,   254,   254,   831,   166,   831,   831,
     831,   831,   831,   831,   151,   149,   153,     0,     0,   157,
     155,  3516,  2644,  2492,  1577,  1582,     0,  1528,     0,     0,
       0,  3466,  3465,  3464,  3478,  1516,  1517,     0,     0,     0,
    1144,     0,   259,     0,  3514,  3515,  3513,  1625,  2714,  2717,
    3512,  2718,   259,  1270,     0,   674,  2271,     0,     0,     0,
       0,     0,     0,   676,   675,   612,     0,     0,  1375,  1376,
    1370,  1372,  1374,     0,     0,     0,     0,  2491,     0,   284,
     290,   283,     0,   333,     0,   533,   539,    87,     0,  1462,
    2261,  2263,   163,     0,     0,   362,     0,   344,     0,     0,
    1069,  1091,  1089,  1110,  1055,  1075,  1071,  1075,  1065,  1110,
    1004,  1004,  1110,  1068,  1004,  1075,  1070,     0,  1067,  1110,
    1066,  1004,     0,  1059,  1091,   998,   999,  1004,  1089,  1025,
       0,  1075,  1048,  1047,  1110,  1051,  1052,  1050,  1054,     0,
    1056,  1075,  1061,  1049,  1053,     0,     0,  1089,  1089,  1089,
       0,  2760,  1089,     0,   346,   450,   981,   984,   986,   985,
     987,   988,  1075,  1091,  1091,     0,     0,  1089,  1097,   446,
    2757,  2755,  2758,  2756,   340,   342,     0,     0,     0,   361,
       0,  2346,     0,  2104,  2348,  2352,  2358,  2362,  2365,  2244,
    2269,     0,     0,  2245,  2249,  2255,  2254,  2248,  2460,     0,
    2258,   687,     0,     0,     0,  2259,  2241,     0,   576,   578,
    3354,  3352,  3386,  3385,  3390,     0,  3387,  3383,     0,  3346,
    3391,  3376,  3418,  3380,  3418,  3418,  3377,  3384,  3418,     0,
    3382,  3381,     0,  3349,     0,     0,     0,  1368,     0,  2560,
       0,  2552,     0,  1497,  2576,  2575,  2572,  2097,  3287,  3292,
     492,  2744,  2743,  2706,   499,  2707,  2740,  2742,  2739,  2741,
       0,  3061,     0,   504,   503,   502,     0,   520,   492,   495,
     513,     0,     0,   331,   478,   486,   479,     0,   519,   521,
     553,   551,   592,   588,   596,   590,   458,  2709,     0,     0,
       0,     0,  1763,  2102,  2102,  2102,     0,     0,  1977,     0,
       0,     0,     0,  2102,     0,  1795,  1774,  1775,     0,  1796,
       0,     0,     0,     0,     0,  3494,     0,     0,  1929,     0,
       0,     0,     0,  3494,     0,     0,  2688,  2689,     0,     0,
       0,  1971,  1973,  2666,  2690,  2102,     0,  2102,     0,  1630,
    1805,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2102,  2102,     0,  2102,  1813,     0,  2614,
    2635,  1817,  1819,  1818,  2102,  2102,     0,     0,  2102,     0,
       0,     0,  2623,  2622,     0,     0,     0,     0,     0,     0,
       0,  2641,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2643,     0,     0,     0,  2642,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1765,     0,
    1764,  1766,     0,   974,   973,  2644,     0,     0,     0,  1682,
    1681,  1680,  1679,     0,     0,     0,     0,  1688,     0,  1690,
    1692,  1687,  1689,  1691,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1767,     0,     0,     0,     0,     0,
    2615,     0,  1861,     0,   734,     0,     0,     0,   380,  1481,
    2719,     0,  1480,  1484,  3287,   585,     0,  2288,  2278,  2287,
    2009,  3352,     0,     0,     0,  3349,     0,     0,  3206,  3214,
    1127,     0,     0,  1130,  1132,  2305,  2304,  1131,  1140,     0,
    1129,     0,  3275,     0,     0,  3260,     0,  3241,     0,  1136,
    1138,  1137,  3255,  1135,     0,     0,     0,  3225,     0,     0,
     831,     0,     0,     0,     0,     0,     0,     0,  2443,     0,
    1609,  1609,  2394,     0,  2472,     0,  2472,  2462,  2468,  2427,
       0,     0,   887,  2163,  2420,     0,  2162,  2466,  2467,  2472,
       0,     0,  2472,     0,  2434,  2462,  2472,  2389,     0,     0,
    2381,  2386,  2382,     0,  2388,  2387,  2390,  2378,  2379,     0,
    2407,  2436,     0,  2419,  2426,     0,  2406,  2413,     0,  2424,
    2462,  2462,     0,  2472,  2472,  2472,  2014,   583,  2647,  2650,
    2654,  2658,   329,     0,     0,     0,  1489,  1491,  1490,  1507,
    1415,     0,  3454,     0,  3456,     0,  3458,     0,    79,    74,
      80,    76,     0,  2520,     0,     0,     0,  2514,  2516,  2519,
    2515,     0,     0,  2521,   130,     0,  2517,  2496,  2499,  2506,
    1609,  2497,     0,     0,   416,   419,   421,     0,   424,  2098,
    2099,     0,  3302,     0,  2681,     0,    72,  1419,  1422,     0,
    2544,  2541,   130,     0,  2845,  3461,  3459,  1389,  1405,  1387,
    1399,  1400,     0,     0,  1392,  1391,  3287,     0,     0,  3565,
    3582,  3563,     0,  3577,  3578,  3562,     7,     4,     0,   143,
       0,     0,     0,     0,     0,     0,     0,     0,   831,     0,
     831,  1611,  1611,   831,   159,   831,   831,     0,  2478,  2476,
    2493,  2494,  2014,  2225,     0,  1514,  1601,  1566,  1578,  1601,
    2104,  2161,  3476,  1577,  1569,  3508,  3502,  3505,  3504,  3500,
    3503,  3501,  3506,  1600,  3507,  1599,  1611,  1583,  1597,  1598,
    2314,  3484,  2300,     0,  1518,  1577,  1574,  3480,  3479,  3469,
    3474,  3283,  3284,  3281,  3282,  3280,  3209,  3210,  1145,  1144,
     825,   828,   827,     0,     0,  1260,   255,  2716,     0,  1262,
       0,  2460,  1277,     0,     0,  2460,   623,  2460,   677,  2717,
    3417,     0,  3423,  3405,  3287,  1373,  3518,  3519,  1267,  1265,
       0,  1433,  1434,  1437,     0,   288,     0,   291,   293,   544,
     547,   485,     0,     0,     0,  1472,     0,  1470,  1469,  1467,
    1468,  1466,     0,  1457,  1463,  1464,  2460,   615,   366,   563,
     345,   338,   341,   343,     0,  1092,  1010,  1090,  1110,  1108,
    1110,  1032,  1111,     0,  1079,  1077,  1076,  1072,  1079,  1035,
    1154,     0,  1147,  1152,  1148,  1041,  1150,     0,  1158,  1157,
    1005,  1055,  1110,  1043,     0,  1004,  1034,  1040,  1079,     0,
    1029,  1038,  1110,   997,  1042,  1028,     0,  1079,  1044,  1057,
    1060,  1062,  1064,  1079,  1110,     0,   450,  1004,  1027,  1026,
    1004,  1079,     0,     0,     0,     0,   355,  1073,  1058,  1150,
    1158,  1004,  1110,  1079,     0,  1098,  1079,   364,   449,  2181,
    2009,     0,  2349,  2354,  2265,  2267,  2680,  2105,  2152,     0,
       0,     0,  2360,     0,  2246,     0,   687,  2251,  3344,   690,
     689,  2256,   688,  2306,  3403,  2250,  1377,     0,     0,   485,
     577,   506,  3379,  1626,     0,  3360,  3364,  3358,  3362,     0,
    3342,     0,     0,  3350,     0,     0,  3388,  3371,  3375,  3374,
    3372,     0,  3373,  3378,  3356,   477,   524,  2275,  2991,  3187,
    2561,  2557,  2556,     0,  2573,     0,     0,  3289,  2181,     0,
    3286,   500,     0,   492,     0,     0,   516,  2710,   496,   492,
     506,   515,   582,   332,     0,   288,   490,     0,   335,   563,
       0,   485,   485,     0,  3287,     0,  2103,     0,  1944,     0,
       0,     0,     0,     0,     0,  1744,     0,     0,     0,  1883,
       0,  1944,  1906,  2211,  2212,  2192,  2193,  2191,  2194,  1623,
       0,  2195,  2210,  1829,     0,     0,     0,  1904,     0,  2073,
    2074,  2075,  2076,  2077,  2078,  2079,  2080,  2081,  2082,  2083,
    2084,  2086,  2091,  2087,  2088,  2089,  2090,  2085,  2092,     0,
    2072,     0,  1930,  1896,     0,     0,     0,     0,   974,     0,
       0,     0,     0,     0,     0,     0,  2102,     0,     0,  2102,
       0,     0,     0,     0,  1905,     0,     0,     0,  1903,     0,
       0,     0,  1902,  1787,     0,     0,     0,  2102,     0,     0,
       0,     0,  1720,     0,     0,     0,     0,     0,  2102,     0,
       0,     0,     0,     0,     0,     0,     0,  1713,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2095,
    2093,  2096,  2094,     0,     0,  1969,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1843,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1791,     0,     0,     0,  2671,
       0,  1176,     0,     0,     0,     0,  1759,     0,     0,     0,
       0,  3241,  1924,  1926,  1628,  1627,  1629,  1640,  1634,  1638,
    1632,  1636,     0,  1693,  2899,  1641,     0,     0,  3494,  1653,
    1657,     0,     0,     0,     0,     0,  1675,  1676,  1664,  1662,
    1663,  1660,  1661,     0,  1666,     0,  1665,  1672,  1673,  1674,
    1677,  1761,  1139,  1769,  2122,  1898,  1899,  1922,  2126,     0,
    2667,  1611,  1716,  1715,  1717,  1718,  1719,   735,     0,   729,
     732,   746,     0,     0,     0,  2548,     0,  2862,  2886,  2887,
     398,   401,   400,   402,     0,     0,     0,     0,     0,  2286,
    2644,     0,  2264,  2010,     0,     0,     0,  3407,  3329,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3258,     0,
       0,  3257,  3256,     0,  3277,     0,     0,  3262,  3261,     0,
       0,  3219,  3263,  3264,  3267,     0,     0,     0,     0,     0,
    3248,     0,  3172,  3221,  3222,  3227,  3217,  2435,     0,     0,
       0,  2440,  2438,  2431,  2442,  2452,  2439,  2433,  2444,  2432,
       0,     0,     0,  2472,  2447,  2449,  2445,  2472,     0,  2470,
    2457,  2456,  2455,  2404,  2403,  2174,  2175,     0,  2173,     0,
    2164,  2167,  2172,  2170,  2397,  2463,  2450,  2446,   254,  2472,
    2402,  2401,  2383,  2384,  2385,     0,  2161,     0,  2468,  2437,
    2462,     0,  2472,  2472,  2453,  2454,  2423,  2425,  2042,     0,
    1984,     0,  1986,  1983,  1982,  1981,  2012,     0,  2013,   485,
       0,     0,  2652,   485,   559,     0,     0,     0,   719,  1507,
    1493,  1509,  1417,  1416,  1414,  3212,  3453,  3457,  1970,    78,
       0,  2525,  2508,  2507,  2509,  2513,   130,  2518,  2510,     0,
    2522,  2523,   429,     0,   425,     0,     0,  2728,  2695,  2101,
    2696,  2725,  2723,  2727,  2721,  2722,  2726,  2720,  2724,  2980,
    3061,     0,  2104,  3306,  3586,     0,  1423,  2181,  2540,  2542,
    2535,  3460,  1390,  1407,  1406,  1402,  1403,  1408,  1398,  1397,
    2370,  3571,  3580,  3584,  3569,   832,   823,  3340,  3423,   223,
    1226,     0,     0,   133,   135,     0,   276,     0,   257,   152,
     831,   150,   154,   831,     0,   831,   158,     0,   202,   257,
     201,     0,   156,   831,  1581,  1579,  1580,     0,     0,  2238,
       0,  2233,  2154,     0,     0,  1550,     0,  1567,  1571,  1572,
    1548,  2110,  3475,  1578,  2152,  1606,  1575,  1605,     0,  1596,
    1611,     0,  1532,  1519,  1520,  1529,  1560,  1559,  1577,     0,
       0,   826,  2306,  2306,     0,     0,     0,     0,     0,     0,
       0,     0,   260,   269,  2715,     0,     0,   621,   622,  2306,
     620,   663,   664,   667,   668,   669,     0,     0,   670,  2306,
    2306,   617,   643,   644,   647,   648,   649,   650,   651,   613,
       0,   618,     0,     0,     0,  3435,  1254,  1279,  3520,  1263,
       0,     0,  1436,   286,   285,   289,     0,     0,   485,   531,
     540,   534,   536,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,   110,
       0,  1459,  1471,  2262,  1465,  2306,  2306,  2306,  2306,   619,
     652,   653,   656,   657,   658,   659,   662,   660,   661,     0,
    2460,     0,     0,     0,     0,     0,     0,     0,  1030,  1112,
       0,  1031,     0,  1081,  1082,  1080,  1000,   996,  1155,  1143,
    1142,  1149,  1007,  1151,  1146,  1159,  1156,  1153,  1108,  1006,
    1036,  1037,  1002,     0,  1251,  1014,     0,  1003,  1063,  1001,
    1015,     0,   351,     0,   349,   358,  1039,  1012,  1024,   450,
     450,   347,   451,   452,     0,  1033,  1008,  1009,  1011,  1158,
     994,     0,   995,  2181,  2186,  2182,   360,   379,     0,   378,
    2350,  1584,     0,     0,     0,  2683,     0,  2177,  2153,  2359,
    2014,  2363,  2362,  3287,  2247,  2257,     0,  2307,     0,     0,
    1379,  1378,  2253,  2260,  3287,   485,   368,   509,   580,  3422,
       0,  3421,     0,     0,  3339,     0,  3399,  3402,  2680,     0,
       0,     0,     0,   333,  2644,  2558,  2562,  1498,  1500,  1501,
    1499,  1507,     0,     0,  3295,  3296,  3294,  3288,  3293,   493,
     501,   517,     0,   497,   507,   511,     0,   481,   480,   522,
     554,     0,   593,   548,   548,   548,  1475,     0,  1878,     0,
    1879,  1880,     0,  1745,  1978,     0,     0,     0,  1772,     0,
       0,     0,  1882,     0,  1624,     0,     0,  1748,  1740,     0,
    1908,     0,  1913,     0,  1911,     0,     0,     0,     0,     0,
       0,  1972,     0,  1974,  2667,     0,  1888,  1918,     0,  1886,
       0,  1907,     0,  1919,  1920,     0,     0,     0,     0,  1892,
    1890,     0,     0,     0,  1894,     0,     0,     0,     0,     0,
       0,     0,  1790,  1891,  1893,     0,  1825,     0,  1876,  1826,
    1827,  1828,  2670,     0,  1822,     0,  1823,     0,     0,     0,
       0,     0,  1776,  1777,     0,     0,     0,  1853,     0,  1778,
    1833,     0,  1753,  1854,  1835,  1783,  1784,  1855,  1856,  1857,
    1750,  1751,  1837,  1838,     0,  1859,  1752,  1839,  1842,     0,
    1786,  2181,     0,  1770,     0,     0,     0,  1788,  1816,     0,
       0,     0,  1749,     0,  1845,     0,     0,     0,  2181,     0,
       0,  1792,     0,     0,   975,  2031,  1543,  1601,  3482,  3481,
    3490,  3491,  3495,  1741,  2668,     0,     0,  1635,  1639,  1633,
    1637,  3494,     0,     0,     0,     0,  1652,     0,  3494,  1655,
    1658,     0,     0,  2124,     0,     0,  1916,  1967,     0,     0,
       0,  1872,  1873,     0,     0,   728,   727,     0,   731,   807,
       0,   748,   736,   725,  2550,  2549,     0,     0,  1482,  1485,
       0,     0,  2292,     0,     0,  2644,  2298,  2279,  2289,     0,
       0,     0,  3330,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3245,  3215,  2644,     0,     0,  1141,  3276,     0,
       0,  3269,  3270,     0,     0,     0,  3242,  3243,  3244,     0,
    2752,  2753,  2699,  2701,     0,  2700,  2750,  2748,  2751,  2746,
    2747,  2745,  2749,  3251,     0,  3224,  3225,  3226,     0,     0,
    2430,  2441,  2473,  2474,  2451,  2448,  2398,  2469,  2181,  2408,
       0,  2622,     0,     0,     0,     0,  2429,  2399,     0,  2422,
    2380,  2470,  2104,  2462,  2395,  2396,  2042,  2014,     0,     0,
    2004,  2045,     0,  2045,  2006,  2007,  2014,     0,  2014,  2009,
     485,  2651,     0,  2656,     0,     0,   570,  1456,  1496,  1488,
    1495,  1492,  1507,  1505,  1494,  1202,  1201,     0,  1508,     0,
    2327,  2325,    81,    83,  2324,  2326,    84,     0,  2511,  2512,
    2505,  2524,  2500,     0,   420,   430,   422,   426,   427,   428,
     423,  3317,  3318,  3310,  3313,  3311,  3312,  3316,  3319,  3320,
    3307,  3314,  2161,  1430,  1428,  1427,  1429,  1418,  1424,  1425,
    2545,  2543,  2538,  1405,     0,  1388,  2372,  2181,     0,  3583,
     144,   824,     0,   162,  3435,     0,     0,     0,     0,     0,
       0,   835,   203,   276,     0,   274,  3553,   258,  3557,  3541,
       0,   145,     0,   160,  3550,   256,  3556,     0,  2694,  2234,
    2237,     0,  2226,  2228,  2229,  2711,  2231,     0,  3287,     0,
    2218,  1568,  1573,  3467,     0,  2107,  2161,  1611,  1612,  1612,
    2666,     0,     0,  2319,  2312,  2299,  1601,  1574,  1535,  3470,
    1522,  3211,     0,     0,  1258,     0,     0,     0,   263,   266,
     264,   265,   672,   671,     0,  2460,   665,  2306,  2306,   217,
    2306,  2306,   216,   218,     0,   212,   209,   219,  2306,  1278,
     205,     0,     0,     0,     0,  2181,     0,     0,     0,   225,
       0,     0,  2460,   645,   624,   625,   628,   629,   630,     0,
    3410,  3409,     0,  3425,     0,     0,  3427,     0,  3426,  3424,
    3395,  3406,     0,  1275,  1144,     0,  1281,  1283,     0,     0,
    3520,  1435,     0,   288,   292,   333,     0,   537,     0,     0,
    2181,     0,  2181,  2181,     0,     0,  2181,     0,  2181,     0,
       0,     0,     0,     0,     0,     0,  2181,     0,     0,     0,
       0,  2181,     0,  1473,     0,     0,     0,     0,  2460,   654,
       0,  2306,   614,   631,   632,   635,   636,   637,   638,   639,
     642,   640,   641,     0,     0,   297,   298,   368,   562,  1087,
    1085,  1088,  1086,  1109,     0,  1083,  1084,  1113,  1150,     0,
    1150,   350,   353,     0,   357,   356,     0,     0,  1013,   388,
     387,   385,   485,   375,   383,   377,     0,   384,  2189,  2190,
    2187,  2185,  2188,  1586,  1585,     0,  2347,  1588,  2266,  2362,
    2014,  2681,  2106,     0,  2356,  2104,     0,  2361,  2243,  3345,
     686,   886,  3404,  1377,     0,   369,     0,     0,   506,  3419,
       0,  3439,     0,     0,     0,     0,     0,     0,     0,     0,
     525,  2328,     0,  1507,  1511,  2566,  3298,  3299,  3297,   518,
       0,   514,   506,     0,   288,     0,   548,     0,   587,   589,
     549,   597,   591,     0,  1945,  1975,     0,  1089,  1089,  1075,
    1097,  1962,  1956,  1959,     0,  1089,  1964,  1089,  1957,  1089,
       0,     0,  1954,  1955,     0,     0,     0,  1884,  1881,     0,
       0,     0,  1933,     0,     0,     0,     0,     0,  1669,     0,
    1867,     0,  1889,  1887,     0,     0,     0,     0,     0,     0,
       0,     0,  1895,  1726,     0,  1724,     0,  1725,     0,  1727,
       0,     0,  1877,     0,  1695,  1714,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1970,     0,     0,  2197,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2672,     0,     0,     0,  1165,  1171,  1174,  1175,  1177,  1169,
       0,  1847,     0,     0,     0,  1577,  2030,  3496,  1543,     0,
       0,     0,  3488,  1601,  3492,  3478,     0,  3493,  1927,  1925,
       0,  1650,  1646,     0,  1644,  1654,     0,     0,     0,     0,
    1668,  1667,  2126,  2125,     0,  1915,     0,     0,  1968,  2669,
    1612,  1862,  1611,   738,     0,   756,   730,  2181,   733,     0,
     747,     0,   759,     0,     0,     0,   399,     0,  1486,     0,
       0,  2296,  2297,  2644,     0,     0,     0,  2295,  2660,  2659,
    2671,   814,     0,  2070,     0,  3328,  3408,     0,     0,     0,
       0,     0,     0,     0,  3207,  3259,  3250,     0,     0,     0,
       0,  3274,  3268,  3265,  3266,     0,     0,     0,  3249,  3223,
    3229,  3228,  3231,  3233,  2418,  2417,     0,  2471,  2161,  2176,
    2166,     0,  2169,  2168,  2171,  2391,  2410,  2412,  2472,  2044,
    2037,     0,  3473,  1601,  2034,  2035,  2043,  2014,     0,     0,
    2008,  2005,  2046,     0,  2045,  2045,  2014,     0,  1988,  2333,
    2336,     0,  1987,  1590,     0,  2655,     0,     0,   330,     0,
     569,     0,  2064,  3213,     0,     0,  2503,     0,  2498,  2501,
       0,     0,     0,  3305,     0,  1420,  1426,  1404,     0,  1411,
    1409,     0,     0,  2371,  3572,  3585,     0,   161,     0,  1242,
    1244,  1243,  1227,  1228,     0,   139,   141,     0,     0,  2306,
    2306,  2306,  2306,  2306,     0,  2306,  2306,  2306,  2306,  2306,
       0,  2306,  2306,  2306,  2306,  2306,  2306,  2306,  2306,  2306,
    2306,     0,     0,  2306,  2306,   932,   134,   701,   715,   836,
     839,   880,   864,   865,     0,   835,   204,     0,  3561,  3560,
    1611,     0,   272,   275,   277,   271,   324,     0,   234,  3520,
       0,   324,     0,   147,  1133,  2230,     0,     0,  2665,  2155,
    2158,  1602,     0,     0,  1549,  3468,     0,  2108,  2117,  1570,
    1604,  1614,  1607,     0,  1612,  2315,  1611,  2316,  1531,  1577,
    1535,     0,     0,  1523,  1524,   885,   884,   268,   267,   280,
     281,  2207,  2208,  2205,  2206,   678,   691,  2209,   692,   666,
    2181,  2181,  2311,  2310,  2181,  2181,   211,   208,  2309,  2308,
    2181,  2181,   206,   229,   228,   230,   231,   233,   232,   227,
    1274,     0,   679,   680,   646,     0,   626,  3413,     0,  3415,
    3398,  3397,  3396,  3393,     0,  2181,  2181,  2181,     0,  2181,
    3434,  3436,  1365,  1365,     0,  1365,     0,     0,  1365,  2306,
       0,     0,   719,  1383,  2306,     0,     0,     0,     0,     0,
    1349,     0,  1365,     0,     0,     0,     0,     0,  1295,  1348,
     837,  1255,  1294,  1296,  1308,   715,     0,  1326,  1351,  1352,
    1350,  3448,     0,     0,   239,  3522,     0,  3524,     0,  1439,
       0,  1438,   287,   545,   541,  2181,  2181,   103,  2181,    95,
      96,    91,   123,   124,    93,    94,    99,    98,   100,   101,
     104,   105,   102,    97,    92,   127,   129,   128,   106,   125,
     126,    90,   685,   684,   683,   682,   655,     0,     0,  2460,
     633,   367,     0,  1095,  1093,  1093,     0,  1093,     0,  1126,
     989,   991,   990,   992,   993,  1095,  1095,  1093,  1093,   299,
     363,     0,  1046,  1252,  1045,   352,   348,  1074,  2181,   365,
     386,  1587,  1589,     0,  2104,  2684,     0,  2178,  1611,  2351,
    2353,  2242,   604,  2644,   581,   510,   579,  3420,     0,  3338,
    3343,     0,  3401,  3400,  3423,  3423,  3423,  3423,   527,     0,
    2276,  1502,  1507,  1511,     0,  1503,  2577,   508,   512,   483,
     482,   563,   552,   485,     0,  1976,  1946,  1947,  1961,  1963,
    1960,  1949,  1966,  1953,  1958,  1965,  1951,  1743,  1773,  1747,
    1746,     0,     0,     0,  1803,     0,  1931,  1914,  1912,     0,
       0,  1780,     0,  1782,     0,     0,  1869,  2669,  1836,  1910,
    1806,  1840,     0,  1785,     0,  1812,  1810,     0,  1723,  1721,
    1722,     0,  1793,  1820,     0,  1712,  1821,     0,  1852,  1799,
       0,  1801,     0,  1802,     0,  1831,     0,  1804,  1834,  1858,
    1739,  2199,  2198,  2196,  1754,  2181,     0,  1807,  1771,     0,
       0,  1844,  2673,  2674,     0,  1846,     0,     0,  1176,  1162,
    1163,  1164,     0,  1166,  1168,  1170,     0,  2181,  1860,  1671,
    1670,  3485,  1611,  3497,  3499,     0,  3489,  1544,  2031,  3486,
    3477,  2029,  2025,  2027,     0,  1642,     0,  1651,  1648,     0,
    1645,  1656,  2128,  2127,  2158,     0,     0,  1863,  1967,  1614,
    1874,     0,   739,   740,   742,   744,   810,     0,   734,     0,
     723,     0,   738,   726,  1483,   586,  2293,  2302,     0,  2644,
    2290,   709,  2644,     0,   814,     0,  1577,  1582,   719,     0,
       0,     0,  3325,  3324,  3323,  3322,  3247,  3246,  3279,  3278,
    3272,  3271,  3273,     0,     0,  3252,     0,     0,  2203,  2204,
    2202,  2200,  2201,  2409,  2165,  2161,  2405,  2039,     0,  1590,
    2019,  2020,  2022,  1601,  2033,     0,  1985,  2014,     0,     0,
    1993,  2014,  1989,  1991,     0,  2104,     0,     0,  2097,   584,
    2657,  1609,   574,   571,   572,     0,  2067,     0,  2068,  2065,
    2066,    82,  2181,     0,     0,   438,   433,   441,   435,   437,
     436,   442,   443,   444,   445,   439,   434,   440,   432,   431,
       0,  1431,     0,     0,  2373,  2374,  3341,     0,   137,     0,
       0,  2306,   702,  2181,  2181,  2181,  2181,   862,   883,  2181,
    2181,  2181,     0,     0,  2306,  2181,     0,     0,  2181,  2181,
    2181,  2181,     0,     0,  2181,   870,   871,   869,  2181,  2181,
    1249,     0,  2807,     0,     0,     0,   902,   903,   905,   906,
     907,   908,     0,   933,   909,   831,  1203,  1203,   935,  2676,
    2577,   714,   716,  1144,   840,     0,   136,  1611,   167,   270,
     273,   322,   328,   327,   261,     0,     0,     0,   320,   326,
     325,     0,   900,   901,   899,   898,     0,  3520,     0,  2235,
    2227,  2232,     0,  2159,  2160,  2157,  3287,  1611,  2114,     0,
       0,  1576,     0,  1608,  1618,  1617,  2663,  2667,  2323,     0,
       0,  2317,  2321,  1521,  1601,  1578,  1601,     0,  1525,  1574,
    1536,  1577,   210,   215,   214,   207,   220,   213,   226,   627,
    3414,  3412,  3411,     0,  3394,  3430,  3428,  3429,  3432,     0,
       0,  3431,  3433,  1249,   831,  1366,     0,     0,  1330,  1333,
    1331,   829,  2268,  1476,  2268,     0,     0,  2268,     0,  2270,
       0,     0,     0,  2268,  2268,     0,  1476,     0,   717,  1386,
    1384,  1385,     0,     0,  1476,  1342,  1290,  1343,     0,  1291,
    2268,  1476,  1310,  1476,  1476,     0,   838,  1144,  1292,  1293,
     932,  1380,  3449,     0,     0,     0,  1280,     0,   242,   240,
     250,  3521,     0,  1266,  2644,  3524,  1441,  1442,     0,     0,
       0,   116,   118,     0,   120,   122,     0,   112,   114,   616,
     681,   634,   296,  1096,  1018,  1094,  1022,  1023,   304,  1150,
       0,     0,  1150,  1158,  1150,  1158,  1078,   376,  2362,  2355,
    2179,     0,  2357,   370,     0,  3423,  3437,  3437,  3437,  3437,
     333,   523,   526,  2329,  1504,  1512,  2579,  2578,     0,   288,
       0,   485,  1150,  1150,  1150,  1885,     0,     0,     0,     0,
    1937,     0,     0,     0,     0,     0,  1742,     0,  1865,     0,
       0,     0,     0,  1075,  1702,  1704,  1700,  1703,     0,  1089,
    1706,     0,  1056,  1089,  1709,  1711,  1696,  1697,  1698,  1699,
       0,     0,  1979,  1980,     0,  2217,  2216,  2215,     0,     0,
       0,     0,  2675,  1160,  1849,     0,  1173,  1167,  1165,  1172,
       0,  2032,  3498,  1547,  3487,  1577,     0,  1928,  1647,     0,
       0,  2130,     0,  2113,     0,  1917,     0,  1875,   743,     0,
       0,     0,   763,     0,   761,   737,     0,     0,     0,     0,
    3473,  2291,  2294,  1577,  2661,  2672,  1601,  1578,  1601,   819,
    1611,  2011,  2071,  3327,  3326,     0,     0,  3230,  3232,  2411,
    2036,  1582,  2038,  2097,     0,  2024,  2023,  3495,     0,  1981,
    2014,  2014,     0,  1981,     0,     0,  2335,  2152,  2337,  2338,
    1593,     0,  1584,  1584,  1591,  2062,  3494,  2181,   573,  1311,
       0,  1312,  1323,  1325,  1510,     0,  2530,     0,  2528,  2504,
    2531,     0,  1410,  1412,     0,     0,     0,     0,     0,  2214,
    2213,   859,   852,   851,   854,   853,   856,   855,     0,   848,
     845,   857,   847,   872,     0,   860,   842,   896,   897,   895,
     866,   873,   843,   844,   850,   849,   846,   888,   893,   891,
     890,   889,   894,   892,   861,   879,   858,   874,   934,  1250,
       0,     0,  2679,   696,   693,   932,     0,     0,     0,  1203,
     925,   831,     0,   910,  1249,  1204,   831,   831,     0,     0,
     695,   821,   841,   878,   877,   875,   876,   169,   195,   305,
    3554,   607,   608,     0,     0,  3524,   294,  3548,   261,     0,
       0,  1134,  2580,  2158,  1603,     0,     0,  2221,  2223,  2115,
    2116,  2111,  2109,     0,  2118,  2120,  1616,  1615,     0,  1612,
    2313,     0,  1553,  1572,  1551,  1537,  1526,  1527,  1577,  1534,
    1562,  1561,  3416,  2184,  2183,     0,  1476,  1353,     0,  1328,
       0,     0,     0,  1302,     0,     0,  2268,     0,  1355,  1354,
       0,     0,     0,  1363,  1364,     0,  2148,  2150,  2158,     0,
    1346,  1361,  1362,     0,     0,     0,     0,  1318,     0,  1307,
    1365,  1365,  1327,     0,     0,  1382,  1329,   249,   238,     0,
       0,  1282,  1284,     0,     0,  1285,  3523,     0,  1264,  1447,
       0,   333,   108,  2181,   109,  2181,   107,  2181,  1020,   302,
       0,  1016,  1017,  1019,  1021,  2180,  3440,  3437,     0,  3336,
    3335,  3334,  3333,   529,   528,     0,     0,   484,   548,     0,
    1948,  1950,  1952,  1797,  1798,  1934,  2158,  1932,  1939,     0,
       0,  1938,  1830,     0,  1781,     0,  1866,     0,  1841,  1811,
    1809,  1794,  1705,  1701,  1708,  1057,  1707,  1150,  1824,  1800,
    1832,  1755,  2181,  1808,  1814,  1815,     0,  1848,  2181,  2152,
    2028,  1649,     0,  2133,  2132,     0,     0,  2158,  2158,  1864,
     741,   811,   736,     0,     0,   760,     0,   724,  2301,  2303,
     711,   713,  1601,   817,   816,     0,   708,   820,   818,   706,
     815,  3254,  3253,  1611,  2016,  2021,     0,  1994,     0,  1998,
    2003,  1999,     0,  1990,     0,  2177,  1584,     0,     0,  2015,
    2059,  1610,     0,  1506,     0,  2069,  2526,  2181,     0,  2502,
    3315,     0,     0,     0,  2158,  1247,     0,   868,  2523,   867,
     703,     0,     0,  3473,   835,   904,     0,   831,  1199,  1200,
    1249,  1181,  1224,  2676,  1249,  1249,   939,     0,   927,   937,
     982,  2678,   822,  2644,     0,   505,   505,     0,   196,   197,
     315,     0,   306,   308,   278,   262,     0,     0,   611,   609,
     610,     0,     0,   146,     0,   295,     0,  3551,  3547,  3524,
       0,  2588,  2156,  1612,  2219,  1611,     0,     0,  2664,  2322,
    2320,  3467,  1601,     0,  1313,     0,     0,  1301,     0,  1462,
    1140,  1338,     0,  1297,  1340,  1341,  1377,  1299,     0,  2151,
     718,  1306,     0,  1380,  1298,  1320,  1304,  1332,  1381,   236,
     241,   251,   252,  1268,  1574,  1540,  3527,  3533,     0,  1448,
    1444,  1445,  1440,   542,   117,   121,   113,     0,     0,  3337,
       0,  3444,  3438,  3442,     0,     0,   555,   594,     0,  1936,
    1897,  1940,  1941,     0,  1868,  1870,  1710,     0,  1161,     0,
    2161,  2129,  2123,     0,     0,     0,     0,     0,     0,  2142,
    2134,     0,  2112,  1921,  2181,   809,     0,     0,   749,   766,
     765,   762,   813,  2662,  3467,  2040,  1590,     0,     0,     0,
       0,     0,  2334,  1592,  1584,  1584,  2063,     0,     0,   333,
    1324,  2529,     0,     0,     0,  3287,     0,  1246,     0,  3287,
       0,     0,   698,   700,   715,     0,  1249,  1224,  2676,     0,
    1185,     0,   911,     0,   915,   917,   941,     0,   936,   928,
     949,     0,   881,   505,   505,   170,   175,   176,   180,   178,
     189,     0,     0,   182,     0,   182,  1613,   198,   318,   316,
     317,     0,   323,     0,   279,   564,  1611,   247,   321,  3549,
       0,   148,     0,     0,     0,     0,  2581,  2583,     0,  2236,
    2224,  2222,  2121,  2119,  1552,  1533,     0,  1315,   830,     0,
       0,  1380,  1303,  1347,  1339,  1337,  1476,  2149,     0,  1336,
    1319,  1321,  1423,   243,  1286,   485,  1577,  1540,     0,     0,
    3478,  3529,  3528,     0,  3525,  1443,     0,  1450,   303,   300,
       0,  3443,  3441,  2330,  2009,   548,  2158,     0,     0,  1779,
    1756,  1850,  1601,     0,  2139,     0,     0,  2137,  2136,     0,
    2131,  2138,   812,     0,     0,   757,   773,   769,     0,   771,
     772,   794,   707,  1577,  2097,  1995,     0,  2000,     0,  1992,
    1595,  1594,  2052,     0,  2051,     0,  2057,  2061,  2653,   575,
    2532,     0,  3287,  1214,  2158,     0,  1216,   863,     0,  2577,
     929,   923,   919,     0,     0,  1184,     0,  1189,  1225,     0,
     913,     0,     0,  1179,   967,  1124,     0,   970,     0,   940,
     942,  1117,  1118,   944,     0,     0,     0,     0,   983,     0,
       0,  1101,     0,  1104,     0,     0,   938,     0,   950,  1100,
    1107,  2677,   705,   882,     0,     0,     0,   177,   179,   181,
     194,   200,     0,   199,     0,   257,   319,     0,     0,   309,
     307,   221,   335,  3542,   239,   248,   564,     0,     0,     0,
       0,  2582,     0,     0,  2589,  2591,     0,     0,     0,  1314,
    1345,     0,  1335,  1300,   719,     0,  1305,     0,   245,   221,
    3526,  1578,  1601,  1601,     0,  3530,  1574,  1541,  1577,  3471,
       0,     0,     0,  1449,  1454,     0,  1451,  1453,     0,     0,
    2567,   595,  1935,  1943,  1942,  1546,  2140,     0,  2141,  2144,
       0,     0,  2145,     0,   753,   755,   745,     0,   750,     0,
     767,     0,  2306,  2306,     0,  2306,  2306,  2306,  2306,   787,
     795,   797,     0,  2041,  2017,     0,     0,  2047,  2047,  2058,
       0,  1212,     0,     0,  2306,  1356,  1215,  1240,  1222,     0,
    1245,  1248,  1356,  1217,  1239,  1220,     0,   694,     0,     0,
     921,  1182,     0,  1186,  1187,  1188,     0,  1180,     0,     0,
       0,     0,   968,   969,  1125,   943,  1123,  1116,  1115,     0,
    1106,     0,     0,  3494,   979,   980,  1102,   977,   978,     0,
       0,   958,     0,     0,  1108,  1099,   951,     0,   505,     0,
     505,   563,   173,   171,   185,   183,   168,   314,     0,     0,
     222,  3555,   565,     0,   250,   221,  2586,  2587,     0,  2584,
       0,     0,  2590,  1334,  1317,     0,  1344,  1309,     0,   244,
       0,   237,   253,  1601,  1554,  1557,  1542,  3532,  3531,  1577,
    1539,  1578,  1563,  1564,     0,  3534,     0,     0,  1446,     0,
     301,  2331,  2340,     0,  1133,  2135,  2143,  2147,  2146,   751,
       0,   758,   780,   770,   776,     0,  2306,     0,     0,  2306,
       0,     0,     0,     0,     0,   764,   796,  2306,  1997,  2002,
       0,  2055,  2053,   224,     0,     0,  1356,  1213,  1238,  1237,
    1218,     0,  1232,  2181,   140,  1358,  1357,  1223,     0,   142,
    1221,   926,     0,     0,     0,  1183,     0,     0,     0,     0,
       0,     0,  1122,  1121,  1119,  1120,  2625,  2624,     0,  1619,
    1105,     0,   953,  1114,   952,   188,   192,   187,   190,     0,
    1613,   324,   324,   312,     0,     0,     0,     0,  3552,  2585,
    2593,  2592,  1316,     0,   246,  1558,     0,  1601,  1565,  3472,
    3535,  3536,  1452,     0,     0,  2568,   757,   754,   780,     0,
     778,     0,   774,   768,   775,     0,   806,   800,     0,   802,
     803,   801,   798,   791,     0,   789,     0,     0,  2048,     0,
       0,     0,  1229,  1230,   138,  1219,  1241,  1231,  1360,  1359,
    1236,  1235,  1233,  1234,     0,     0,     0,  1195,  1194,     0,
       0,  1191,  1190,  1212,     0,  1214,  1216,   976,     0,  1103,
     945,   945,   959,   564,   564,   174,   257,   261,     0,     0,
       0,   563,  1611,   252,     0,  1556,  1538,  2339,  2341,  2594,
     752,   777,     0,   785,   781,   783,   786,   805,   804,     0,
     788,     0,   799,  2050,  2049,  2064,     0,     0,  1212,     0,
    1198,  1196,  1197,     0,     0,   912,  1212,   916,   918,  1620,
       0,   956,   946,   948,   955,   961,   962,   960,   963,  3558,
    3558,   172,   186,   261,   313,   310,     0,   566,  3543,   235,
    1322,     0,  2580,   779,     0,     0,   794,   793,   790,     0,
       0,   924,   920,  1212,     0,     0,   914,  1621,   947,   954,
     964,   966,  3559,   193,   191,   184,     0,     0,     0,     0,
    2588,   784,   782,   792,  2056,  2054,   922,  1193,  1192,   965,
     311,   567,     0,     0,  2596,  3544,  2595,     0,  2600,  3539,
       0,     0,  2607,  3537,  3538,     0,  3545,  2598,  2599,  2597,
    2602,     0,     0,  2604,  2605,     0,  2569,  3540,   485,  2606,
    2601,     0,  2608,  2610,     0,   221,  2603,     0,  1611,  3546,
    2609,     0,  1612,  2611
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5492, -5492, -5492, -5492,  2469,  4842, -5492, -5492, -5492,  4505,
   -5492, -5492, -5492, -5492,  3842, -5492, -5492,  1794, -5492, -5492,
   -5492, -5492, -5492,  2164, -5492,   625, -5492,   630, -5492,   629,
   -3239,  -593,  4555, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492,   289,   284,   296, -5492,
     298, -5492, -4111, -5492, -5492, -5492, -5492,   299, -5492, -5492,
   -3459, -5492, -5492,  2332, -3152, -4302, -5492, -5492,   171,  1655,
   -5492, -5492,   466, -5492,   103, -5492, -5492, -5492, -4518,   -55,
    -261, -5492,    44,  -521, -2721,  4442, -4831,   917,  1740, -5492,
   -5492,  2343, -5492, -5492, -3138, -5492, -5492, -5492, -5492, -2023,
   -5492, -5492, -5492,   749, -4080,  1555, -5492, -5492,   295, -5492,
   -5492, -5492, -5492, -5492, -3950,  -162,  -160, -5492,  -585, -2959,
   -5492, -2255, -5492, -5492, -5492,  4408, -5492, -5492, -5492,  2163,
   -5492, -4082, -5492, -3351,  4989, -5492,  -650, -5492, -5492, -5492,
    2184, -5492, -5492,   862,  1546,  3607,  3179, -5492, -5492, -5492,
   -5492,  3167, -5492,  2620, -5492, -1781,  4031, -5492, -5492, -5492,
   -5492, -5492,  3105, -2539, -5492, -5492, -5492,  1837, -5492,  -813,
   -5492, -1948,  -905,  4879, -5492,    46, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -1289, -5492, -5492, -5492,
   -5492, -5492, -5492, -4023, -2124,  2110, -5492,  2137, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492,  1023, -5492, -5492, -5492,
   -5492,    50, -5492, -5492, -5492, -5492, -5492, -5492,  2950, -5492,
   -5492,  5031, -5492, -5492, -5492, -3558, -5492, -5492, -5492, -5492,
   -5492, -5492,    55, -5492, -5492, -5492, -5492, -5279, -5492, -5492,
   -5492, -2101, -5492, -5492, -5492,  1305, -5492, -5492,  3532, -5492,
    3533,  3530, -5492,  3535, -5492, -3001, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,    56, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4445, -5492,
   -5492, -5492, -3230, -5492, -5492, -3311,  3748, -5492, -2568, -5492,
   -5492, -2624, -5492, -5492, -2561,  1698, -5492, -5492,   855,  1554,
   -5492, -1713, -2684, -2678, -5492, -5492, -5492, -2750, -2744,  -796,
    3613, -1430, -3231, -5492, -5492, -5492, -5492, -5492,   224,   538,
   -5492, -5492, -5492,   380,  1660,  2282, -5492, -4045, -5492, -5492,
     739, -5492, -5492, -5492, -5492, -5492,  1402,   633,  1404, -5492,
     962,  3319, -2937, -5492, -5492, -5492, -5492, -5492, -5492,   -31,
     436,  -125, -5492, -4379,   638, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -3466, -5492, -5492, -5492,  -249, -5492, -5492,
    -205, -5492, -5492,  -248, -5492,   107, -5492, -5492, -5492,  1834,
    1406, -5492, -5492,   969, -3629, -5492, -5492,  3117, -1904, -5492,
    -700, -5492, -3864,  1695, -3575, -3372, -5492, -5492,   395, -1226,
   -1218,  -132, -5492, -5492, -5492, -5492,  1138, -5492,   864,  1699,
   -3939, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -3934, -3929,
   -5492, -3959, -5492, -5492, -5492, -3216, -5492, -5492, -5492, -5492,
   -5492, -5492,  -161, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5491, -5492, -5492,    69,    58, -5492,   183,  2915, -5492, -4623,
   -5492, -3499,  -939, -5492, -5492, -3498, -3479, -3470, -5492, -1399,
   -3514, -1393, -3469, -5492, -5492, -5492, -1248, -1361,  2361, -1254,
   -1343,  1523, -1095,  -751,  2157,    63, -5165, -2896, -1065,  -943,
   -5492, -5492, -2994, -4955, -5492, -4770,  -667, -1928, -3346,     7,
   -5492, -5492, -1748,   545, -2344, -5492,  3742,  3735, -2055,  -941,
   -2131,  2084, -5492, -5492,  1496, -5492, -1255,  1492, -5492, -5492,
   -5492,  1504, -5492,  -174, -5492, -5492, -5492, -5492, -3636, -5492,
   -2630, -4218, -5492, -5492,  5419,  5420, -3273,  -127,  -126, -5492,
   -5492, -5492,   444, -5492, -5492, -3211,    -8,   129,   138, -3345,
   -4597,   457, -3227,  3739, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492,  1731, -2621, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -3242, -4357, -5492, -5492,  1181, -4352, -3471,
   -3461, -3908,  4687, -5492, -5492, -5492, -5492,  4551, -3570, -3367,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,  3941,  2003, -5492,
   -5492,  2492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,   384,  2498, -5492, -5492, -5492, -5492, -5492,  3058, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,    51, -5492, -5492,
   -5492, -5492, -5492,   580,  3806, -5492, -5492, -5492, -5492,   -19,
   -5492, -5492, -5492, -5492,  3376, -5492, -5492, -5492, -5492,  3246,
   -5492, -5492, -5492, -5492, -5492, -5492,  2234, -5492,  2884, -5492,
   -2543, -5492, -5492,  1631,  -529, -5492, -5492,  4616, -5492, -5492,
   -5492,  1847, -5492, -5492,   391, -5492,  2111, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492,  3123,   867,    77,  4627, -3885,
   -2016, -5492, -1299, -1285, -5492, -5492, -4064, -5492, -3551, -4272,
   -5492, -5492,  3893, -1981, -4054,  2462, -1750, -5492,  -553, -3422,
     -13,  1509, -5492,  2376,   613,  9635, -5492, -1415, -1630, -5492,
   -5492,   -35, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,  2793,  2799, -5492, -5492,  4242, -5125, -5492, -5492,  -660,
   -5492, -2933, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,  2093, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492,  4180, -1627, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -1202, -5492,
   -2915, -5492, -5492, -5492, -5492, -5492,  1518,  -572, -5492,  4338,
   -5492,  4362, -5492, -3167, -1866,  2592,  2015, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492,  2602, -5492, -2161, -5492, -3712, -5492,
   -5492, -5492, -5492, -5492,  1039, -5492, -4093, -5492,  1547, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  2610, -5492,
   -5492, -2862,   201, -5492,   375, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492,  -104,  1018,   -98, -3738, -1451,  2549, -5492, -5492,
   -1538,  4376, -1954, -5492, -5492, -5492, -5492,  1904, -5492, -5492,
   -5492,   644,   647, -5492, -5492,  2133, -5492, -5492, -5492, -5492,
     772,   261, -5492, -5492, -5492,   632, -2724, -2158, -5492,   780,
   -4219, -1216, -5492, -1189, -5492, -1811,  2063,   741, -2965, -5492,
   -2226, -1598,  -564, -3208, -4436, -3352, -5492, -3121, -5492,  3200,
   -5492, -5492, -5492,   673, -5492, -5492, -5492,  1943, -5492, -1962,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  -685,
   -1120, -5492, -5492,  3008, -1782,  -535,  5527,  -325, -5492, -5492,
    -312, -5492, -5492, -5492, -5492,  4475,  4215,  2970, -5492, -5492,
   -3437, -3071, -5492,  1119, -1147,  1644,  2491, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492,  1471, -5492,  1508, -3362, -5492, -5492,
   -5492,  -309, -5492, -5492, -5492,  1511, -5492,    40,  5354,  -306,
   -5492, -5492, -5492,  5188, -5492, -5492, -5492, -5492, -5492,  3818,
   -1436,  5190, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
    3384, -5492, -5492, -5492, -5492, -5492, -5492,  4181,  5370,  -663,
   -1638, -5492,  -936,  3387,  2693,  -809, -5492, -5492, -5492,  4727,
    5379, -5492, -5492,  5541, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492,  3343,   776, -5492, -5492,   788, -5492, -5492,
   -5492, -5492,  4086, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492,  4514, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492,  1752,   -52, -5492,
     549,   -78, -5492,   377, -5492, -5492, -5492, -5492, -5492,  -115,
   -5492, -5492,  -118, -5492, -1293,  5056, -1823, -5492, -1768, -3487,
   -5492, -1678,  2125, -5492, -5492, -5492,  3396, -5492, -5492, -5492,
   -5492,  1616, -5492, -5492, -3649,  -875, -1707, -3687,  1886, -5492,
   -5492, -5492,  -900,     0,    79,  1357, -2286, -5492, -5492,  2856,
    3749,    47,  2723, -5492,  5138,   721,  -642,  -636, -1071, -5492,
    8321, -5492, -5492, -5492, -5492, -5492,    53,  -598,  -587,   194,
    -624,   148,   225,    11, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  2757,
   -5492, -5492, -5492,  1598, -5492,  5423, -5492,  3611, -1772,  5425,
    3485,  2783,  2792, -5492, -5492, -5492, -5492, -1737, -5492, -5492,
   -1756,   191, -5492,  3819, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,
   -5492,  4094,  -465,  -459,  4294,  5429,  4951, -5492,  4563, -5492,
   -5492, -5492, -5492, -5492,  1957, -5492, -2020,  2819, -1469, -3053,
   -5492, -5492,  3240,  1645, -5492,  2413, -2662, -3263, -5492,  2663,
   -3290, -5492, -5492,   716, -5492, -5492, -5492,  1918,    68,  5409,
    4840, -5492, -5492, -5492, -5492, -3142, -3023,  -752, -5492, -4325,
   -5492, -2013, -5492, -1265,  2171, -3720, -5492,  -504, -5492, -5492,
   -3630, -3620,  1611, -1550,  2761,  1191, -5492, -5492, -3383,  1516,
    5634,  5635,  5637,  -136, -5492, -3373, -5492, -4228, -5492,   251,
   -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  3351,
      80, -5492, -5492, -5492, -5492, -5492, -5492, -5492,  4111, -5492,
      30, -3924, -5492, -5492,  2599, -5492, -5492, -5492, -5492, -5492,
   -5492, -5492, -5492, -5492
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,   464,   727,  1997,   465,   466,   467,   468,   469,  1251,
    1252,   470,  1253,  1928,  1931,  2700,  3392,  3393,   471,   700,
     472,  2114,  2907,  2908,  4766,  4767,  4760,  4761,  4763,  4764,
    2909,   800,   801,   473,  3451,  3452,  4965,  4559,  4560,  2756,
    4059,  4637,  2011,  2010,  2012,  2016,  2015,  2775,   735,  5038,
    5304,  5666,  5960,  5833,  5485,  5486,  5487,  5672,  5494,  5962,
    5492,  5961,  5488,  5829,  6044,  5827,  6043,  5489,  5307,  5308,
    5490,  2776,  4045,  3529,  3530,  5841,  1307,  3445,  3538,  3539,
    2772,  4626,  4746,  5543,  4750,  5708,  5861,  5684,  3566,  5135,
    5544,  5545,   637,  3457,  3458,  2075,  5040,  5314,  4052,  4053,
    4054,  3454,  3455,  5315,  2833,   474,   794,  2105,  3573,  1381,
    2106,  2107,  5324,  3623,  3624,  3625,  5311,  5312,  5313,  5501,
    4629,  5046,  4622,  5039,  4623,  4631,  4624,  2683,   918,  2110,
    2111,   816,   817,  1397,   818,   819,  2131,  1453,  2971,  2972,
    2973,  2186,   820,   821,   822,  2128,   823,  2993,  2932,  3685,
    3686,  4283,   824,  3652,  3653,  3654,  2997,  1143,  3655,   475,
     476,   656,   665,   657,  1140,  2550,  1141,   477,   478,   695,
    1954,  1955,  1956,  1957,  3410,  2713,  3404,  3405,  4548,   825,
     826,  2196,   919,   920,   479,   921,   638,  1575,  2295,  3714,
    4809,   922,   923,   924,   925,  1577,  2281,  2282,   926,   927,
     928,   929,   930,  5493,  3027,  3065,  3710,  3028,  3687,  3066,
    2291,   931,   932,   933,   934,  1578,   894,   895,  3043,  4298,
    4802,   935,   613,   796,   797,  2113,  2881,   798,  2882,  3576,
    4759,   799,  1382,  2877,  1384,  3718,   936,   937,  2299,  2298,
    3715,   680,   938,  1241,   619,  1396,  1912,  5681,  5682,  5965,
    6137,  1913,  3376,  3970,  4523,  4524,  4947,  2241,   860,  1509,
     939,  1237,  2679,  1149,  2558,  3719,   940,  2301,  2303,  2300,
    3717,  5565,  2302,   941,   648,   674,   636,  1507,   662,  5043,
    5321,   772,   773,   808,  2930,   774,  1392,  1353,  2081,  2859,
    2860,  3544,  3545,  3612,  3613,  3614,  2851,  2852,  2853,  2919,
    2920,  2921,  2840,  2841,  2842,  2085,  2837,  2838,   775,  1354,
    1365,  2854,  2855,  2856,  3618,  2923,  2924,  2925,  2926,  2857,
    2231,  2858,  4105,  4036,  5284,  5282,  5283,  4037,  5030,  3276,
    5434,  4899,  4900,  4610,  4611,  4612,  5109,  3383,   484,   651,
    1123,  1784,  2541,  3875,  3257,  3259,  2542,  3874,  4441,  4442,
    4443,  3255,  3256,  5428,  3261,  3872,  5585,  5986,  5743,  5744,
    3864,  5748,  4450,  4893,  4894,  5224,  5429,  5591,  5895,  5749,
    5993,  5893,  5989,  5894,  5991,  6115,  6064,  6065,  5905,  6004,
    6005,  6069,  6116,  5759,  5760,  5761,  3868,  3869,  5425,  3884,
    4466,  4467,  5232,  4906,  5236,  5303,  3440,  2069,  2070,  5089,
    1303,   485,  4038,  4179,  4039,  4040,  4978,  5662,  4041,  4042,
    4043,  3680,  1861,  5004,  4990,  4636,  4595,  4596,  4597,  4598,
    4599,  5629,  5799,  5631,  5632,  5789,  5934,  5788,  4600,  4601,
    5478,  5020,  4712,  4602,  4603,  4604,  5028,  5298,  5480,  5476,
    5639,  5640,  6091,  6092,  5656,  6042,  5657,  6098,  6129,  6130,
    5641,   486,   650,  1732,  5814,  5815,  5816,  1455,  5299,  1456,
    4249,  1457,  2155,  1458,  4251,  1459,  1460,  1461,  1462,  1463,
    1464,  1465,  1466,  1467,  1468,  2985,  2144,  2145,  2946,  2137,
    2138,  2136,  4776,  4774,  2206,  5658,  5659,  2939,  2141,  2142,
    2959,  5826,  5642,  5660,  5644,  4259,  2157,  1817,  1818,  4639,
    1831,  1832,  2950,  2581,  2951,  2073,  2158,  2159,  2952,  2953,
    2957,  4397,  5206,  4403,  4404,  4405,  3814,  3815,  3816,  3817,
    3818,  3209,  5645,  5023,  5470,  5624,  5627,  5797,  6031,  5021,
    4605,  5026,  1226,   736,  4606,  4607,  5916,  5775,  5782,  5917,
    5783,  5776,  5472,  3448,  5918,  5919,  5920,  5785,  5778,  4002,
    5273,  5274,  5008,  2963,   487,   556,  3564,  1340,  1342,  1352,
    3570,  2868,  2867,  1358,  1357,  2846,  3567,  4194,  5373,   758,
    4181,  5536,  5349,  5542,  4182,  4950,  4183,  5527,  5699,  4184,
    5365,  5540,  5705,  4951,  4952,  4185,  4186,  4187,  5924,  5925,
    5926,  4701,  1538,   778,   779,  1370,  1371,  1372,  3022,  5126,
    4722,   488,  2747,  2742,   489,  1277,  1278,  1279,  1977,  1978,
    2745,  2746,  3435,  3990,   490,  1245,  2694,  1968,  2735,   491,
    1265,  3427,  3428,  3429,  3985,   492,  1378,  2101,  2102,  2872,
    4201,  4758,  5139,  5382,  5557,  5378,  5725,  5726,   493,   804,
    1388,   494,   615,  2123,  2124,  2125,  2911,   495,  1588,   564,
     496,  1147,  1789,  1792,  1793,   497,  1244,  1915,  1916,  1917,
    1918,  3379,   498,  2273,  3047,  3048,  3049,  3050,  2689,  3971,
    2690,  2691,  3388,  4305,   499,   754,  3499,  1328,  1329,  1330,
    4670,  4091,  4092,  5717,  5548,  5549,  3829,  3830,  3831,  2025,
    3483,  4663,  5341,  5710,  5976,  2815,  5079,  5870,  2816,  2027,
    1324,  1325,  2803,  2817,  2030,  2785,  2046,  3665,  3666,  4518,
    4944,  2047,  2048,  5237,  2806,  2807,  1903,  5448,  2808,  4081,
    5675,  4653,  6039,  1609,  1519,  1249,  1088,  1089,  1090,  1744,
    1745,  1760,  1091,  1754,  2496,  4365,  4846,  4847,  4848,  4849,
    5197,  2417,  2418,  2536,  1092,  2403,  1093,  1094,  1095,  1096,
    1097,  1098,  1099,  1100,  1101,  1102,  1103,  2531,  4345,  4346,
    4828,  3250,  3251,  3252,  1104,  3091,  4331,  3101,  1105,  1106,
    1107,  1108,  1109,  3856,  1110,  4436,  5063,  1111,  1738,  2482,
    2363,  4820,  4336,  5175,  5179,  5180,  5181,  5401,  2307,  3079,
    3741,  4812,  4813,  4814,  3742,  3743,  3857,  3214,  1630,  1631,
    1598,  1599,  3792,  2670,  2671,  2672,  2673,  2674,  4934,  4935,
    5437,  5248,  5439,  5252,  3365,  3366,  2562,  2563,  2675,  2676,
    2677,  2678,  3941,  4924,  4421,  4876,  3834,  3825,  3826,  3827,
    3942,  3943,  3944,  3945,  4498,  4920,  4921,  5593,  3356,  3947,
    4497,  3953,  5911,  5605,  5606,  6011,  6010,  5607,  5446,  5447,
    5259,  5260,  4527,  4528,  4529,  3892,  2359,  2360,  2433,  1961,
    1962,  2308,  2218,  3006,  4078,  4649,  3485,  4433,  5061,  4651,
    5064,  5065,  2526,  3243,  3852,  3245,  4881,  5215,  5216,  5419,
    5574,  5575,  5580,  4190,  5106,  5107,  3007,  2031,  3477,  4069,
    4645,  1864,  1865,  2032,  2640,  3929,  3930,  3674,  2998,  4691,
    2999,  3819,  3801,  4956,  4106,  2331,  2332,  4971,  4858,  2797,
    4073,  5056,  5057,  5058,  2789,  2790,  3472,  3473,  3474,  2033,
    2791,  4064,  5052,   500,   690,   501,  2238,  1504,  2237,  3401,
    1390,  1797,  2213,  2214,   845,   767,   635,   502,   639,  3044,
     503,   663,  2560,   899,  1152,  1798,  1799,  3277,  3880,  3885,
    3278,  2051,  4456,  4457,  3017,  4119,  4120,  4114,  3495,  4087,
    2052,  2810,  4660,  3492,  4661,  3493,  3395,  3396,  4300,  5165,
    5729,   504,   672,  4515,  3959,  3960,  5881,  5882,  1153,   505,
     620,  2212,   840,  1481,  1484,  2220,  3003,  4279,  1485,  1486,
    3005,   841,   842,   506,   713,  3436,  3993,  1283,  1886,  1887,
    1888,  2656,   507,   669,  1227,  3928,  4495,  2633,  1126,  1502,
    1869,  1230,  1870,  2629,  3339,  1852,   508,  1323,  1322,   792,
     509,   510,   747,   565,  2019,   511,  1254,  1947,  2711,  3978,
    3979,  4533,  1948,  1949,  3402,  3398,  4957,  4958,  5269,   512,
     705,  1269,  1270,  1972,  1970,  3432,  2738,   513,   652,  1127,
    2545,   514,   640,   902,  1541,  1542,  2271,   515,   516,   517,
     904,  4306,  5884,  6059,   644,  2275,  1546,  5031,  5331,  5516,
    5517,  5519,  5694,  5695,  6112,  6158,  6169,  6162,  6172,  6173,
    6176,  6182,  6183,  1112,  1290,  1291,  1113,  5818,  1114,  1115,
    1116,   518,   519,  1239,   676,  1908,  1909,  3374,  2682,  3372,
    1910,  3887,  3888,  3489,  4070,  1117,  3889,  5009,  1391,  2215,
     698,   520,  1118,   602,   769,  1292,  3469,  2719,  1178,  3314,
    1120,   828,  3720,   942,   943,  1348,  1790,  2090,  2091,  2720,
     604,  1555,  3315,   829,  1180,   523,   605,   606,   607,   608,
     609,   610,   611,   612,   529,   668,  1162,  2577,   530,  1338,
    2820,  3389,  1808,  1188,  1837,  1826,  1836,  2603,  3326,  2606,
    3327,  3328,  4486,  3921,  4487,  3922,  1233,  2598,  1809,  3923,
    2591,  2592,  2593,  2594,  3912,  1823,  2587,  2066,   531,   905,
    2280,   647,  1548,  1549,  3056,   532,   671,   533,  1963,  2732,
    2733,  3420,  3982,  3421,   534,  1158,  1159,   535,   888,  3443,
    3034,  2227,  1351,  2228,  2255,   891,  1511,   892,   893,  1525,
    1522,  1528,  1524,  4144,  3559,  3560,  3039,  2235,  2092,  2568,
    3552,  4683,  2093,  2245,  3030,  3031,  2865,  5391,  4151,  3563,
    5159,  4289,  5392,  5393,   536,   677,   537,  5316,   689,  1248,
    1926,   538,   539,   540,   541,  1334,  4074,  4075,  2819,  5551,
    5874,  1336,  1337,  2034,  3836,  2059,  3217,  3218,  1326,  3219,
    3220,  3221,  3222,  1734,  1735,  3837,  4412,  4413,  2049,   557,
     558,   559,   560,   782,   783,  3569,  4196,  4753,  4754,  5377,
    5554,  6165,  6166,  2771,  4057,  5843,  6138,  6159,  6178,  2778,
    5048,  5326,  2779,  4061,  5510,  2768,  4056,  5317,  2780,  2769,
    6133,  4050,   542,  1297,  1293,   724,  1995,  1989,  1991,  2753,
    3439,   543,   544,   545
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     521,  1176,  1225,  1335,   781,   649,  1229,  1454,  1893,  2276,
    2330,   528,  2164,  1572,   755,  2468,  2387,  1866,  2165,  2552,
     777,   831,  1819,  1822,  1824,  2028,   760,  2521,  2933,   764,
    2020,  1834,   832,  1304,  1305,  1866,   787,   681,  2557,  2029,
    2818,  2814,  2642,  3070,  1184,  2795,   480,   522,  2800,  3000,
     481,  2222,  3057,   524,  2641,   482,   483,  2478,  3466,  1501,
    3008,  3387,  3637,  2250,  2604,  2338,  2798,  4082,  3667,  2987,
    1182,  2232,  2060,  3721,  3722,  1791,  2801,  1148,   666,  3835,
    3486,  1183,  2874,  1633,  3700,  2175,   843,  2588,   847,   848,
     849,   850,   851,  4188,   853,   854,  3444,  2600,   856,   857,
    2620,  2621,  4003,  4189,  2187,  2188,  2189,  2205,  1632,  2191,
    4256,  4630,  4228,  4281,  2071,  4420,  1274,  4718,  1250,  1281,
    1389,  1349,  2072,  4617,  2203,  4250,  4252,  1350,  1673,  4084,
    3927,  2506,  2507,  2508,  2509,  2510,  2511,  2512,  2514,  2516,
    2517,  2518,  2519,  2520,  2986,  4253,  3384,  2135,   526,  2140,
     693,  2146,   684,  2146,  4254,  4258,  2786,  4096,  4312,  2148,
    2551,  2146,  4107,  1986,  4778,  2821,  3064,  2168,  2172,  1399,
    2135,  2712,   889,  2369,  3403,  3746,  3547,  2146,   890,  5034,
    3619,  4616,  3548,  2177,  2552,  1737,  3620,  2146,  4107,  4107,
    3949,  2184,  4180,  2183,   525,  3989,  2190,  4198,  3071,  3958,
    2710,   889,  3881,  3882,  4664,  4434,  4422,  1160,  2146,  2135,
    2135,  2201,  2202,  4698,  2197,  4883,  4423,  5327,  4699,  2627,
     831,   661,   831,  4700,  4792,   527,  3800,  4923,  5131,  2954,
    2750,   832,  3040,   832,  3041,  3042,  3297,  2649,  2975,  1959,
     788,  4719,  3020,  1572,  4510,  4702,  3616,  4704,  4048,  2784,
    4714,  4048,  3617,   789,  4107,  4107,   790,  3549,  2103,   791,
    4969,  4756,  2662,  2663,  4730,  1739,  1740,  3206,  1739,  1740,
    4112,  5380,  3068,  1739,  1740,  -491,  2068,   686,  2994,  2288,
    3516,  1739,  1740,   708,  3543,  1592,  -491,  1739,  1740,  1163,
    1895,  2994,  3984,  4972,  1853, -1257,  3609,  4855,  2910,  4150,
    4399,  1821,  4240,  1526,  2994, -3388, -1257, -3308, -2100,  4132,
    4133,  1492, -3371,  5992,  4136,  2116,  2994,  4055, -3308, -2100,
    3866, -3309,   704,  1505,  1506,  2551,  1493,  1494,  1495,  1496,
     756,  2487, -3309,  1739,  1740,  3991,  4780,  2994,  2866,  2495,
    2497,  4974,  2499,  2500,  2149,  1739,  1740,  2166,  4608,  4399,
    1739,  1740,  4976,  4400,  2170,  1958,  1739,  1740,  4871,  1739,
    1740,   641,   711,  4049, -1530, -3308,  4049,  4994,  2843,  2178,
    5276,  5114,  1815,  3926,  4335,  4234,  4235,  4122,  4213, -3309,
    2150,  1368,   645,  1739,  1740,  2994, -3375,  2863,  1124,  5027,
    1331,  2979,  2309,  2310,  1859,  1163,  2994,  2151,  1739,  1740,
   -3374,  2320,  4400,  4910, -1545,  5300,  3253,  5845,  2488,  4925,
    2139,  2994,  3798,  2922,  3446,  4199,  1894,  1739,  1740,  1728,
    1730,  1731,   706,  4911,  1739,  1740,  2994,  4434,  1332,  4354,
     654,  1774,  2234,  2377,  3021,  2380,  3131,  1741,  4439,  1742,
    1741,  4480,  1742,  1815,  4414,  1741,  4460,  1742,  1739,  1740,
    4632,  2394,  2395,  1741,  2398,  1742, -2060,  4116,  2249,  1741,
    3053,  1742,  2404,  2405,  2994,  4614,  2409,  2156,  2156,  2160,
    2160,  2156,  2163,  2160,  1163,  2167,  2822,  1855,  2156,  1815,
    2160,  4681,  2171,  4856,  2156, -2995,  2160,   756,  2174, -3372,
     678,   679,  -704,  5825,  3262,  2489, -2995,   616,  4720,  4608,
   -2776,  3957,  3470,  -704,  1959,  1741,  2323,  1742,  3704,  1544,
    5793,  3430,  1580,  5936,  2313,  1539,  4633,  1741,  3054,  1742,
   -2680,  5643,  1741, -3308,  1742,  5817,  4806,  5138,  1741,  3550,
    1742,  1741,  2758,  1742,  1739,  1740,  2323, -3309,  2324,  3232,
    1739,  1740,  1761, -3373,  1755,  5318,  5739,  3089,  3076,  3286,
    3287,  3288,  3289,  5634,  2325,  1741,  5509,  1742,  1743, -2686,
    1920,  1743,  1739,  1740, -3378,  6080,  1743,  5387,  2324,  2117,
    1741,  2057,  1742,  2150,  1743,  2067,  5817,  1739,  1740,  5838,
    1743,  2152,  6049,  1333,  2325,  5558,  1739,  1740,  1163,  1741,
    2151,  1742,   614,  2179,  2490,  2326,  1741, -2687,  1742,  4669,
     701,  4634,  5319,  5124,  1317,  1202,  2002,  6131,  2003,  2004,
    2005,  2006,  2007,  2009,   682,  2793,  4203,  1815,  4744,   827,
    1741,  3926,  1742,  2327, -2060,  2326,  1743,  1889,  3227,  4807,
     835,  1739,  1740,  2058,   659,  1762,   521,   642,  1743,  6149,
    5794,  1867, -2100,  1743,   751,  5636,  3008,   528,  1376,  1743,
    1119,  2845,  1743,  2327,  1756,  2118,   752,  2119,  3385,  4446,
    2575,  4688,  4658, -2835,  1681,  2794,  1757,  1713,  1177,  1232,
    3033,  1868,   830,  3386,  1119,  5454,  1743,  6081,   702,  1187,
    4118,  2599,  4162,   861,  1717,  5805,  4627,  2152, -2995,   524,
    1119,  1743,  1993,   802,  2751,  4271,  2928,   678,   679,  5449,
   -2100,   752,  2226,  2115,  1146,  2153,  1741,   780,  1742, -2854,
    1743,  1202,  1741,  1633,  1742,  3228,  4745,  1743,  5795,  2994,
    1260,  1181,  2328,  5125,  2089,  4662,   836,  2198,  2371,  1633,
    5937,  5679,  2566,  2314,  1741,  1545,  1742,  2139,  2336,  6104,
    1540,  1743,  1758, -2855, -2856,  1240,  3207,  2120,  2804,  1741,
    2583,  1742,  2328,  4682,  1632,   786,  2028,  5637,  1741,    42,
    1742,   837,  5320,  2799,  6099,  6100,  3705,   834,  1739,  1740,
    4200,  3215,  1739,  1740, -2776,  1739,  1740,  2618,  3422,  1739,
    1740,  1263,  4481,  5210,   526, -2060,  5080,  1581,   802,  5825,
    1202,   802,  1856,   787,  1285,  4929,  2232,  1119,  2134,  4933,
    3835,  5289,  3909,  1741,  3293,  1742,   805,  3254,  4180,   617,
     646,  3497,   521,   833,  3229,  2802,  1185,  5323,   827,  2236,
    1469,  1366,  3263,   528,  2121,  2055,   859,  1743,   752,   835,
     525,  1473,  5740,  1743,  5332,  1369,  4117,  3482,  3292,  3447,
     944,  4143,  1866,  2071,   527,  4472,  4473,  4474,  4475,   803,
    4845,  2072,  2180,  2098,  5648,  1743,  5240,  5243,  3648,  1395,
    3547,   527,  1235,  3619,   757,   524,  3548,  3442,   752,  3620,
    1743,   830,  2980,  1470,  1739,  1740,  2964,  1739,  1740,  1743,
    2152,  2530,  3279,  2964,  1816,  1125,  4107,  1633,  4692,  5359,
    2089,  3992, -3388,  1186,  4122,  1119,  1327,  1499,  2153, -3371,
    1503,  1815,  3926,  2304,  1202,  4679,  1553,  5450,  1553,  1553,
    1553,  4781,  2553,  1815,  1553,  4055,  1553,  1559,  4401,  1559,
    1559,  1559,  5988,   521,  1743,  1559,  2995,  1559,  4771,  3616,
    1728,  1730,   709,  2864,   528,  3617,  3828,  2668,  4453,  2995,
    1741,  2669,  1742,  1854,  1741,  1119,  1742,  1741,  3234,  1742,
    1119,  1741,  2995,  1742,  4109,  1816,  1927,  5399,  3551,  5310,
     526,  2122,  2661,  -491,  2995,  2643,   834,  4401,  1472,  2122,
    1576,  2224,  2154, -3375,  4134,  1960,   524,  4721,  2122,   710,
    1119,  1527,  3820, -1257,  4236,  2995,  2122, -3374,   643,  5685,
    1119,  1816,  2940,  5053,  3060, -3308, -2100,   788,  5422,  5423,
    3063,  5741,  2913,   645,   618,  5671,   525,  4770,  5673, -3309,
     789,   712,   833,   790,  1471,  3693,   791,  4757,  3799,  2995,
    3208,  2294,  3352,  3212,  3213,  4901,  3223,  5381,  3090,  2317,
    4872,  3644,  3645,  2995,   889,  3102,  3103,   527,  5032,  2491,
    4402,  3104,  3105,   527,  2995,  2624,  1741,  2626,  1742,  1741,
    3055,  1742,  1633,  4608,  1557,  5457,  1557,  1557,  1557,  2995,
    2644,  1743,  1557,  2647,  1557,  1743,  5559,  2650,  1743,  4635,
   -2018,   526,  1743,  2938,  2995,  2941, -3372,  2553,  2154,  1119,
    1119,  1119,  1119,  3501,  -115,  -115,  3236,  3237,  2477,  3239,
    3240,  1119,  4508,  4509,  2665,  2666,  2667,  2960,  2411,  4355,
    1556,  5511,  1556,  1556,  1556,  3132,  4174,  2965,  1556,  3713,
    1556,  3095,  2995,  3193,  3194,  2428,  2523,   525,  2436,  2970,
    2438,   683,  -119,  -119,  2442,  2443,  2444, -2686,  2843,  1816,
   -3373,  1558,  2450,  1558,  1558,  1558,  2864,  2989,  3096,  1558,
    2609,  1558,  5388,  5742,  3675,  3800,  3800,  3546,   527,  3800,
    3800, -3378,  3204,  3205,  5839,  3800,  3800,  6050,  4095,  3744,
    4303,  3745,  1349,  1682,  5594, -2687,  1714,  1743,  2567,  5176,
    1743,  3842,  3843, -2995,  3115, -2835,   753,  3118,  4341,  4342,
    -704,  4698, -3392,  1718,  4690,  2017,  4699, -3516,  4662,  5435,
    1994,  4700,  1759,  5080,  1714,  3133,  2134, -2835,  3046,  4268,
     645,  5938,  3100,  5940,  5941,  3358,  3147,  2922,  3963,  1739,
    1740,  3994,  2329,  4714,   839,  3910,  6102,  3615,  5249,  5250,
    6105, -2854,  2156,  4459,  2160,  2537,  2961,  1770,  1771,  1772,
    1773,  1349, -2100,  5217, -2799,  5218,  3832,  2648,  1739,  1740,
    1960,  3911,  6089, -2854,  2156, -2799,  2160,  2156,  2976,  2160,
    5374,  2977,  1119,  4737,  1950, -2855, -2856,  3678,  2156,  3230,
    2160, -2362,  2988,  4107,  5050,  3897,  4188,  1998,  3683,  1739,
    1740,  2154,  6135,  1311,   771,  1924,  4189, -2855, -2856,  5239,
    3359,  1739,  1740,  5495,  2736,  2844,  4288,   561,  4356,  4357,
    2538,  3360,  5051,  3424,  4422,  3106,  5720,  5069,  3361,   802,
    3087,   802,  2813,  3216,  4423,  1739,  1740,   752,  2765,  4127,
    2767, -3392, -2362,  2774,  4963,  2777,  2781,  3107,  6027,  5855,
    2611,  2612,  1871,  2614,  2615,  2616,  5305,  3362,  4608,  5697,
    2927,  4369,  4370,  3016,  2625,  6024,  6025,  2725,  1119,  5479,
    4928,  3108,  6034,  3498,  4932,  1922,   889,  5732,  2000,  2001,
    2646,  2707,  2578,  2622,  4207,   645,  4209,  4210,   887,  2089,
    3835,  4979,  4215,  2722,   645,  4180,  3279,  2995,  1247,   900,
    4223,  4992,  4993,  5943,  2723,  4230,  5669,  -111,  -111,  2739,
    1119,  1741,  1119,  1742,  3272,  4375,  4376,   887,  3363, -2799,
    5867,  5257,  5258,  5505,  2277,  5780,  5059,  5060,  3937,  2692,
    2849,  2943,  1592,  5346,  1243,  5348,  2823,  5862,  5351,  4806,
    1741,  2845,  1742,  1816,  5355,  5356,  3531,  4913,  4914,  3364,
    5464,  1261,  4137,  5310,  5602,  1816,  2944,  4922,  4608,  6079,
    5929,   646,  3296,  1530,  5716,  2574,  3298,  3273,  3273,  2306,
    3349,  1741,  3403,  1742,  5473,  1951,  2835,  3916,    42,    42,
    4381,  3547,  4850,  1741,  3324,  1742,  1969,  3548,  2770,  2773,
    3554,  5495,  3425,  5005,  5999,  6000,  5222,  1866,  5007,  1163,
    1967,   810,   811,   809,  1633,  3114,   694,  1741,  4382,  1742,
    1399,  4089,  3760,  3267,  3268,  3876,   855,  4094,  2766,  3619,
    2928,   752,  6021,  -417,  3924,  3620,  5041,  3553,  2552,  3113,
    3622,  2319,  1743,  2743,   836,  5029,  1377,  5160,  5161,  5162,
    6028, -3392,  4807,  3152,  5698,  4088,  5441,  2642,   667,  2028,
    2642,  2642,  4428,  4429,  6029,  2194,  2878,  3110,  4713,  3117,
    2071,  1743,  3932,  3933,  3120,   889,  5229,  2821,  2072,   837,
    1119,  5483,  1119,  5968,  2839,  1739,  1740,  3411,   896,  2543,
    4202,  2836,  3023,  3024,  1923,  3616,  5669,  2744,  6040,  3906,
     682,  3617,  1743,  3691,  6014,  2278,  3200,  3926,  2693,  1605,
    1606,  1607,  5306,   901,  1743,  1500,  3677,  1119,  2539,  5309,
    3224,  3426,  3412,  4262,   858,  4264,  5686,  3918,  3064,  3555,
    1119,  1119,  5603,  2850,  6054,  5837,  1119,  3886,  1743,  3554,
    1119,  1119,  1119,  5432,  3926,  1739,  1740,  5721,  1898,   563,
    5396,  1119,  1119, -2704,  3926,  3926,  1925,  1119, -3218,  1119,
    1119,  1119,  1119,  1119,  3865,  1119,  1271,  1478,   646,  3122,
    1661,  3121,  4796,  4797,  4798,  4799,  1119,  1872,  1119,  2551,
   -2773,  1119,  1119,  2584,  1119,  1119,  1119,  5339,  1119,  1119,
    1119,  6055,  3973,  3424,  3025,  1119,  1150,  1312,  1119,  5857,
    3961,  4608,  3870,  1739,  1740,  5534,  1119,  1119,  2623,  1119,
    1119,  1119,  1739,  1740,  1119,  1119,  1119,  1119,  1119,  1119,
    1119,  3840,  1119,  1119,  1119,  1119,  1119,  1119,  3848,  1119,
    1119,  4310,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  2195,
     831,  1119,  1119,  1119,  1119,  5443,  1119,  1119,  1119,  5340,
    1119,   832,  1119,  2492,  1119,  3938, -2771,  1148,  1119,  1119,
    1119,  4280,  4071,  1119,  1119,  1119,  1119,  1119,  3555,  1119,
    2122, -2774,  1739,  1740,  3835,  1531,  1119,  5853,  4138,  3341,
    5828,  5830, -2362,  1119,  1119,  1119,  1119,  3004,  5350,  5566,
    2103, -2487,  2864,  5604,  1119,  1119,  5722,  1119,  1119,  3704,
    1890,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  1119,
    1119,  1119,  1119,  1119,  2540,  2945,  1119,  1741,  3375,  1742,
    3088,  1927,  5375,   646,  5390,  1202,  5535,  5484,   561,  3557,
    3850,  3851,   646, -2362,  5223,  1739,  1740,  5292,  3676,   897,
    5042,  3556,  2843,  2544,  4274,  5956,  3925,  5958, -2487,  1739,
    1740,  2940,  4256,  1958,  3335,  1958,  6041,  3841,  3336,  1119,
    3845,  2589,  3425,   660,  1119,  1739,  1740,  4250,  4252,  3532,
    5719,  3546,  1739,  1740,  1119,  1741,  4135,  1742,  1743,  5696,
    3347,  5163, -2772,  1899,  1741,  6030,  1742,  4253,  3020,  5497,
    2642,   838,  4419,  3354,  3355,  5353,  4254,  4258,  5765,   898,
    5766,  4882,  4277,   813,   814,  1739,  1740,  5389,  4191,  1739,
    1740,  1850,  3274,  3274,  3999,  1739,  1740,  2277, -1476,  3343,
    1980,  1739,  1740,  6189,  1739,  1740,  4225, -2704,  3413, -3218,
    1820,  2251,  1825,  5600,  5601,  2922,  1828,  1833,  1743,  5363,
    3615,  1479,  1119,  2252,  1741, -2487,  1742,  1151,  3490,  2096,
    2915,  5520,  3275,  4459, -2773,  2787, -2799,  4159, -2487,  4685,
    4686,  4687, -2799, -2799,  1739,  1740,  1862,  1119,  3557,  4500,
    4506,    16,    17,  1739,  1740,  3414,  1900,  3976,  2827,  3533,
    5567,  3426,  1275,  1739,  1740,  2585,  3534,  4585,  3682,   678,
     679,  1901,  3833,  5491,  3535,  2651,  1743,  1739,  1740,  2586,
    2077,  2718,  4502,  2253,  3126,  1743,  2277,  1741, -2487,  1742,
    1891,   675,  2728,  1572,  3320, -2487,  5025,  5025,  3249,  4762,
    4765,  1741,  4768,  1742,  2122,  2097, -2487,  4256,  3558,  1359,
   -2771,  4000,   839,  3127,  5407,  2849,  5539,  1741,  3415,  1742,
    3317,   740,  4250,  4252,  1741, -2774,  1742,  4233,   685,  3667,
    3667,  3318,  4630,  2839,  2721,  1360,  1286,  1739,  1740,  3812,
      16,    17,  4253,   802,  3128,  1743,  1258,  3536,  1739,  1740,
    1851,  4254,  4258,  1276,  3813,  4272,  3145,  1741,  4824,  1742,
    3021,  1741,  3416,  1742,  2734,  2844,  2229,  1741,  2278,  1742,
    3423,   802,  1981,  1741,  4226,  1742,  1741,  1361,  1742,  4051,
    3153,   562,  1119,  5467,   678,   679,  4586,  5474,  5475,   697,
    3459,  1739,  1740,  3460,  5736,  3462,   784,  1739,  1740,  3344,
    1739,  1740,  2279,  3467,  5093,  2845,  2630,  3537,  1743,  3331,
    1739,  1740,  2590,  2916,  3370,  4164,  1741,  3301,  1742,  2229,
     889,  3334,  1743,  1287,  1288,  1741,  3282,  1742,  2642,  2726,
     563,  1739,  1740,  3399,  5119,  1741, -2772,  1742,  1743,  5772,
    1572,  1739,  1740,  5541,  2927,  1743,  5628,  5529,  5630,  1741,
    2631,  1742,  5531,  5157,  3621,  5491,  4192,  2278,  2788,  2839,
    5568,  1331,  3977,  3902,  3903,  1739,  1740,  5586,  2595,  2254,
    2917,  5951,  2181,  1362,  2182,  2724,  4227,  2035,  1743,  4857,
      16,    17,  1743,  2848,  5702,  4476,  4477,  3917,  1743,  1739,
    1740,  2122,  4001,  4458,  1743,  1259,  4048,  1743,  2928,  1332,
    4485,  4870,  5383,  3622,  5738,   521,  2727,  2596,  2850,  1741,
    5773,  1742,  1363,  5914,  1119,  1119,   528,  3417,  3418,  3419,
    1741,  3235,  1742,  4145,  4146,  3279,  3983,  4147,  4148,  4149,
    4810,   688,  2234,  5255,  4825,  2071,  1223,  1743,  2230,  2036,
     887,  5578,  2089,  2072,  3905,  4255,  1743,  4294,  4295,  4296,
    4297,  4257,  2974,  1866,  5550,  4275,  1743,  3926,   524,  5621,
    6163,  1739,  1740,  1741,  3453,  1742,  3456,   716,   717,  1741,
    1743,  1742,  1741,   725,  1742,  2918,  3464,  3491,   726,  1321,
    3464,  1289,  1741,  2632,  1742, -1144,   846, -1144,  1119,  3302,
    4079,  2230,  2023,  2839,  1811,  1739,  1740,  5813,  5790,  5773,
     765, -2795,  1119,  1741,   718,  1742,  1739,  1740,  5530,  1739,
    1740,  4049, -2795,  1741,  2068,  1742,  4062,  1866,   827, -2306,
     521,  6032,  3926,  1119,  5774,  1119, -1476,   -70,  1318,   835,
    1743,   528,  5016,  1119,  1119,  3500,  3849,  1741,  5524,  1742,
    4789,  1743,  6167,  3667,  5946,  5947,   719, -2306,  1761,  1286,
    6095,  5581,  2502,   526,  1333,  1739,  1740,  4970,  4973,  4975,
    4977,  1741,  2597,  1742,  4980,  4981,  4263,   861,  3859,  4985,
    2796,   830,  4991,   524,   766,  4995,  5887,  3886,  4970,  2229,
    3155,  1393,  5006,  4970,  1743, -2533,  1633,  1739,  1740,  2205,
    1743,  5017,   561,  1743,  5587,  5588,   762,  4099,  2008,   525,
    1739,  1740,   728,  1743,  4316,  4317,  1344,  6164,  1815,  5025,
    2089,  2553,  4322,  5774,  4323,   749,  4325,  2037,  2038,  1119,
    1119,  1119,  5777,  4874,  1743,  5784,  1498,  2039,  6168,  2035,
     527,  5592,  1812,  1741,  1743,  1742,  1287,  1288,  3158,  5773,
     844,  1762,  3546,  1739,  1740,  6096,  5990,  3159,  2040,  5994,
     763,  4427,  1739,  1740,  4431,  1319, -2795,  1343,  1743,  1763,
    2643,  2849,  2503,  2643,  2643,  3934,   834,  1741,   526,  1742,
   -2487,  4118, -2533,  4100,  2504,  6019,  2569,  4107,  1741,  2483,
    1742,  1741,  1743,  1742,  6018,  1572,  1302,  1850,  2570,  1780,
    5347,  2036,  5589,  1739,  1740,  2146,  1223,  1119,  6097,  5018,
    4321,  4318,  2306,  5888,  5357,  5410,  4326,  3160,  6147,  6148,
    5609,  4713,   833,   766,   525,  5364,  2522,  5366,  1119,  4987,
    1788,  1119,  1119,   720,  1119,  1119, -2533,  1741,  -931,  1742,
     714,  3667,  3667,  1119,  5512,  1119,  5831,  5513,  2934,  3747,
     721,  1266,  4926,   527, -1555,   527,  3615,   549,  2253,  3752,
    2505,  2230,   887,  5774,  1743,  3247,  3407,  3408,  2306,  1741,
    4411,  1742,  3248,  1119,  2376,   722,  4988,  5590,  4107,  4107,
    3161,   889,  1741,  1345,  1742,  6007,  5019,  3679,  1119,  1739,
    1740,  4937, -1555,  3123,  5731,  5777,  1739,  1740,  1743,  6012,
    6013,  1346,  5784,  5550,  1659,  1119,  4107,  1739,  1740,  1743,
    3164, -1144,  1743,  6008,   723,  2839,  3786,  3165,   715,  1364,
     785,  1739,  1740,   682,  5832,  1741,  6113,  1742,  3312,  1119,
    2379,  3320,  1739,  1740,  1741,  5623,  1742,  2935,  1267,  3322,
    2306,  2041,  5751,  3409,  5514,  2022,  4989,  3797,  5915,  5692,
    3166,  1119,  6058,  3265,  3184,  1746,  1851,  3317,  1743,  1877,
    3189,  5693,   793,  4748,  2850,  2936,  3192,  6009,  3318,  3199,
    4749,  1747,  1349,  2023,  2429,  1741,  2430,  1742,  3896,  2037,
    2038,  3316,  5152,  5078,  5154,  5077,  1739,  1740,  1863,  2039,
    1743,  1176,  1268,  1331,  1739,  1740,  5029,  1739,  1740,  1313,
    1748,  2229,  2397,  1743,  2714,  3858,  1749,  3313,  4503,  3210,
    2040,  1314,  2116,  5072,  2306,  5074,  1739,  1740,  3723,   795,
    1739,  1740,  3346,  2934,   563,  1739,  1740,  5515,  4339,  3332,
    1119,  1332,  2024,  2798,  1184,  1739,  1740,  3337,   682,  1950,
    1750,  3124,  4493,  2754,  2571,  4918,  1743, -1555, -3473,  2844,
       9,   887,  4643,  2759,  5148,  1743,  1904,  5151,   780,  5153,
    1182,  1741,  1755,  1742,  2937,  3109,  1863,  2955,  1741,  1866,
    1742,  1183,  5213,   806,  2825,  5191,  2408,  4269,  4093,  1741,
    1315,  1742,  1739,  1740,  2151,  1739,  1740,  5170,  5171,  5172,
    6085,   807, -3473,  1741,  5214,  1742,  1743,   852,  1739,  1740,
    6193,  4946,  4340,  2643,  1741,  4644,  1742,    19,  1905,  3008,
    2024,  3886,  2935,  4352,  3279,   802,  5167,  2532,  1223,  2826,
    4665,  1547,  3319,  3109,  1739,  1740,   678,   679,  4863,  2834,
    1739,  1740, -3473,  5203,  4666,  6122,  4454,  3961,  1119,  3622,
    2942,  4248,  2927,  6126,  4516,  3663,  2042,  3621,  2044,  3664,
    1119,  2533,  4795,  3321,  5777,  5784,  4372,   844,  1741,  6192,
    1742,  2827,  4389,  -808,  5550,  4390,  1741,   903,  1742,  1741,
    1122,  1742,  1756,  2230,  2793,  5183, -3473,  1739,  1740,  3867,
    6146,  2668,  1743,  4895,  1757,  2669,  1333,  1142,  1741,  1743,
    1742,  4347,  1741,  2041,  1742,  3146,  5752,  1741,   653,  1742,
    1743,  1150,  2522,  5753,    32,  3149,  1119,  1741,  1820,  1742,
    1242,  4816,  4817,  1246,  1743,   678,   679,  5231,  5754,  1863,
    5054,  2022,  1739,  1740,  2794,  1743,  2534,  4615,  1247,  3151,
    1816,  2995,  1316,  2023,  1255, -2306, -2306,  3508,  4392,  2937,
    4832, -2527, -2527, -2460,  3512,  3513,  1257,  4762,  1863,  4765,
    5090,  4768,  5092,  3154,  1741,  5095,  1742,  1741,  5953,  1742,
    1758,  5101,  5102,  2024,  1863,  4859,  2117,    39,  1264,  4058,
    1741,  2023,  1742,  1273,  1739,  1740,  1280,  2173,  5115,  1743,
    2431,  1282,  2828,  2432,  5836,    42,  1863,  1743,  3656,  1296,
    1743,  1878,  2024, -2795,  2829,  4844,  1741,  1300,  1742, -2795,
   -2795,  3939,  1741,  5767,  1742,  5768,  1302,  2535,  2024,  1743,
    4945,  2796,  5409,  1743,  2890,  2891,  2199,  2200,  1743,  4773,
    4775,  4775,  2832,  4775,  1513,  3162,  2832,  3358,  1743,  2903,
    2024,  4773,  4773,  4775,  4775,  1879,  1119,  1880,  1306,  3359,
    5108,  1768,  1769,  1770,  1771,  1772,  1773,  5755,  1308,  1741,
    3360,  1742,  2118,  1309,  2119,  5498,   831,  3954,  3940,  3163,
    5756,  2643,  5499,  1794,  1739,  1740,  1310,   832,  1800, -3494,
    3169,  1739,  1740,  3170,  1320,  1743,  6093,  6093,  1743,  5757,
    1514,  3008,  1260,  1515,  2089,  2089,  2089,  2089,  2086,  2087,
    4800,  1743,  4801,  1341,  1741,  1343,  1742,  2830,  2042,  2043,
    2044,  2045,  3359,  1553,  1553,  1553,  5137,  3111,  2374,  1119,
    1516,  1958,  1119,  3360,  1559,  1559,  1559,  1743,  1517,  3174,
    3361,  1119,  2127,  1743,  5500,  3247,  2905,  2906,  6128,  1119,
    1881,  1119,  5068,  1119,  1373,  1119,  1119,  1119,  1119,  1119,
    1119,  3482,  1119,  1356,  2120,  1367,  1741,  3955,  1742,  3362,
    1119,  3175,  1119,  1739,  1740,  1119,  1119,  1119,  1119,  4496,
    1919,  1119,  1119,  1375,  3176,  1119,  1380,  1119,  2831,  1119,
    1743,  1119,  5406,  1739,  1740,  1119,  1374,  4866,  3364,  1882,
    4777,  4868,  4779,  1119,   780,  1119,  1383,  1119,  1119,  1119,
    1119,  1119,  4784,  4785,  1119,  1119,  1119,  4907,  1119,  2246,
    2247,  1119,  1223,  2248,  1739,  1740,  1394,  3182,  5241,  5242,
    3363,  4908,  1387,  4657,  1119,  1743,  3183,  5758,  1474,  1119,
    4458,  2121,  1119,  1475,  1119,  1119,  1119,  1883,  5582,  1119,
     664,  4909,  1739,  1740,   670,  1119,  1741,   655,  1742,  1476,
    1119,  3364,   655,  1741,  1477,  1742,   655,  1480,  2323,  1739,
    1740,  1557,  1557,  1557,  1490,  3312,  1119,  3187,  3150,  1927,
    1739,  1740,  1119,  3156,  3157,  1119,  3322,  1743,  1119,  1739,
    1740,  2350,  1223,  2082,  3167,  1927,  1508,  1119,  1510,  1119,
    2324,  1739,  1740,  2094,  1119, -2488,  1349,  1349,  1349,  1349,
    1512,  2099,  2567,  2567,  2567,  2567,  2325,  1556,  1556,  1556,
    5463,  4426,  1518,  1739,  1740,  1521,  1144,  1979,  3316,  4919,
    1739,  1740,  1520,  1984,  1985,  1154,   887,  1884,  1739,  1740,
    1234,  1751,  1752,  1753,   521,  1741,  1119,  1742,  1558,  1558,
    1558,  2522,  3173,  1927,  3313,   528,  1866,  2326,  1885,  3249,
    2351,  4898, -2488,  3188,  5352,  1741,  1840,  1742,  1294,  1295,
    3190,  1298,  1523,  1299,  1119,  6101,  4417,  1743,  1177,  1739,
    1740,  3197,  3177,  1927,  1743,  2327,  4915,  4916,  1532,  1187,
     480,   522,  3178,  1927,   481,  3211,  1741,   524,  1742,   482,
     483,  1529,  4275,  1535,  1349,  1533,  4334,  2642,  5546,  1534,
    4556,  5525,  1537,  5552,  3179,  1927,  2210,  1640,  2210,  5402,
    3185,  1927,  4665,  1543,  1741,  2352,  1742,  2353,  1739,  1740,
    1759,  1181,  2354,  4689,  2995,  5244,  5081,  1657,  1652,  1119,
    1573,  1741,  1593,  1742,  1662,  1663,  5261,  4638,  1739,  1740,
    5073,  1594,  1741,  5730,  1742,  1595,  3377,  1600,   729, -2488,
    4337,  1741,  1601,  1742,  3631,  3634,  1743,  1699,  4338,  3319,
    1705,  4343, -2488,  1741,  1800,  1742,  1775,  5842,  3638,  3639,
    1602,  1761,  2323,  1603,  2328,  1604,  1743,  3640,  3639,  5221,
    4348,  1608,   526,  3621,  4349,  1741,  2355,  1742,  5421,  4350,
    3321,  4044,  1741,  1610,  1742,   730,  1841,  3642,  3643,  4351,
    1741, -2460,  1742,  1611,  2324,  1612,  4940,  1743,  1842,  1613,
    3658,  4941, -2488, -1901, -1208,  4942,  1185,  1119,  1614, -2488,
    4101,  3689,  3690,    16,    17,    16,    17,  3125,   525,  2356,
   -2488,  1119,  3711,  3712,  1615,  1743,  5194,  4618,  3965,  3966,
    5196,  1741,  3659,  1742,  4782,  4783,  4353,  4130,  4131,  4362,
    1616,  3476,  1743,  1776,  4108,  5361,  1617,  2839,  5649,   527,
    1618,  4102,  4368,  1743,  1762,  1619,  5177,  3879,  1843,  4241,
    4242,  1620,  1743,  4659,  4363,  3157,  4625,  1844,  4366,  1927,
    4108,  4108,  1763,  1621,  1743,  5650,  4672,  4673,  4371,  4103,
    4674,  4675,  1622,  1186,  4377,  4943,  4676,  4677,  1777,  3660,
    1625,   546,  2849,  1635,  4044,  2150,  1743,  1636,  3727,  1637,
    1741,  1638,  1742,  1743,  1739,  1740,  1119,  2437,  2357,  2146,
    2161,  1743,  2151,  3728,  1641,  5192,  2446,  3661,  4671,  2358,
    5209,  5735,  1739,  1740,    16,    17,  1642,  2457,  1764,  1765,
     731,  4378,  1643,  2229,  4907,  -957,  4108,  4108,  1778,  3729,
    4123,  4124,  4125,  4126, -1178,  4128,  4129,  1644,  5234,  1645,
   -2272,  3730,  1743,  1646,  1469,  3279,  4373,  4374,  5649,  1554,
    1647,  1563,  1564,  1565,  1648,  1473,   732,  1566,  4909,  1569,
    1649,  3731,  5238,   521,  1650,  5576,  4379,  1651,  4104,  2089,
   -2460,  5108,   678,   679,   528,  5650,  1653,  5651,  4380,  1927,
    1654,  5652,  1655,  4211,  4212,  1119,  4214,  1656,  4216,  4217,
    4218,  4219,  4220,  4221,  4222,  3732,  4224,  1470,  5369,  4229,
     548,  1658,  1800,  4232,  5633,  1664,  3662,  1119,  1665,  1845,
    2974,  1743,  4384,  4385,  4462,  4463,   524,  6017,  4387,  5613,
    5869,  1666,  5868,  5616,    16,    17,  2839,  4468,  4469,  1667,
    1119,  4751,  4752,   547,  1846,  1668,  1553,  4997,  1669,  1670,
    1223,  4878,  1927,  1119, -1178,  1671,  1119,  1559,  4811,  2613,
    5959,  5864,  5865,  2617,  1674,  2619,  1675,   887,  1676,  3681,
    5142,  5143,     4,  1677,  2642,  2642,  1741,  1678,  1742,  1119,
    1119,   906,   603,  1679,  4793,  2850,  5733,  5734,   549,  1680,
   -3511,  5634,   678,   679,  1741,  1683,  1742,  5651,  5144,  5145,
    4823,  5652,  1472,     8,  1119,  2230,  1119,   658,  1119,  4665,
    1119,  2660,   658,  5146,  5147,  5635,   658,  1779,  4388,   673,
    1684,   526,  2229,  5081,  5633,  4391,  1685,  3865,  1686,  3846,
     907,  1687,  1119,  1688,  1755,  1689,    14,  2849,  1820,  3515,
    1820,   908,  1690,  5653,  5184,  1927,  4145,  4146,  1471,  1176,
    4147,  4148,  4149,  1119,  1119,    18,  5201,  5202,  1349,  1349,
    3733,  5211,  1927,   548,  2567,  2567,  1691,   525,  2162,  1423,
     909,  1692,  3734,  1119,   687,  1693,  1119,   910,  2915,  1119,
    5225,  5226,  4707,  5636,  1119,  1694,  5771,  4879,  5824,  1695,
    1596,    23,  1184,  1696,  1557,  1697,  3858,  1743,   527,  5266,
    5267,  5634,  2152,  1698,  4707,  1700, -3448,  3018,  1701,  1739,
    1740,  1702,  5975,  5270,  5071,  1743,   911,  1703,  1182,  1704,
    2153,  1706,  2763,  2764,  1707,  5635,  1202,  4395,  1708,  1183,
    -710,  5810,  1119,  1119,  1709,  5024,  1572,   692,  4708,  1223,
    1556,   549,  1847,  3611,  1756,  5649,  5076,  1119,  1739,  1740,
    5455,  5456,  2139,  5653,  1739,  1740,  1757,  4255,  4408,    31,
    4708,  3385,   699,  4257, -3511,   912,   913,  1710,  -710,  5459,
    5456,  1558,  5650,  3735,  1711,  3736,  3386,  5555,  5556,   914,
    6107,  2839,  1712,  3385, -2488,  -712,  5182,   678,   679,   550,
    1715,  1739,  1740,  5636,  2230,  5637,  5599,  4469,  3386,  5576,
    2825,  5612,  5456,  5188,  1119,  5791,  5792,   678,   679,  1739,
    1740,  3086,  5878,  5879,  5189,  1716,  2869,  1848,  5889,  5890,
     733,    16,    17,  5190,  5086,  1849,  6056,  1719,  3542,  -712,
    2850,  1720,  1758,  3517, -2272,  5199,  1721,   551,  -165,  4709,
      41, -1178,  1722,  1739,  1740,  2826,  -930,  1723,  1907,  5908,
    4469,  1724,  5883,  1739,  1740,  4364,  1289,  5200,  4998,  1781,
    4999,  2916,  5909,  4469,  5204,  5913,  4131,  2229,  -930,  5094,
    4044,  1783,  5205,  5654,  1725,  4044,  1726,  3141,    72,   678,
     679,  1741,   632,  1742,  5651,  1782,  5764,  2827,  5652,  5972,
    5226,   703,  1739,  1740,  5037,  6033,  5456,  5000, -2703,   915,
    1739,  1740,  4367,  6035,  5456,  5637,  1119,  6036,  5456,   734,
    1785,  5633,  1786,  5569,  6061,  6062,  1787,  1119,  1761,  1802,
    1741,  1803,  1742,  -710,  5055,  5001,  1741,  3737,  1742,  5854,
    6070,  6071,  4255,  6077,  5456,  1739,  1740,  -697,  4257,  3013,
    1804,   707,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,
    6078,  5456,  1805,  6086,  5456,  -932,  6110,  5226,  4693,  1810,
    4619,  5655,  1838,  1741, -2737,  1742, -2738,  3037,  3037,  1857,
    3037,  3037,  1761,   916,  1839,  -697, -2702,  5230,  3774,  5891,
    1835,  1741,  5620,  1742,  1223, -2734,  4742,   552,  5634,  3051,
    4654,   553,  -699,  6123,  5456,  1547,  6145,  4955,  3859,    16,
      17,  2323,  1743,  2266,  5097, -1178, -2732, -2736,  2828,  3082,
    4044,  1762,  5635,  4695,  -932,  1741, -2731,  1742,   730, -1178,
    2829,  3776,  4065,  3518,  5572,  1741, -2735,  1742,  4344,  1763,
    6180,  6181,   554,  2324,  3738,  4695,  -699,  3385, -2729,  2230,
    5653,  1743, -2733,   678,   679,  5297,  1858,  1743,  1863,  4101,
    5638,  1866,  3386,  2522,  1820,  1873,  5132,   678,   679,  1874,
    5002,  1875,   555,  3656,  1741,  1762,  1742,  1876,  4108,  3519,
   -3511,  5655,  1741,  1896,  1742,  5633,  1897,  5711,  1739,  1740,
    5636,  1902,  3739,  1763,  1743,  1764,  1765,  1761,   750,  5633,
    4102,  5712,   963,  2154,  2460,  2461,  5003,  1914,  3726,  1927,
    1930,  1965,  1743,  4139,  1971,  3740,  5883,  1741,  1973,  1742,
    2643,  5713,   917,  1982,  1983,  4694,  4488,  1987,  4103,  1988,
    1990,  1992,  -932,  2830,   970,   759,   761,  1996,  2013,   761,
    -697,  2014,   770,   776,  6001,  2050,  1743,   752,  5763,  1764,
    1765,  2056,  3988,  2054,  2890,  2891,  1743,  2067,  4489,  2068,
    3520,  5290,  5634,  2074,  2078,  2080,  5294,  5295,  2083,  2903,
    5638,  3180,  2084,   731,  3778,  2088,  5634,  3186,  2100,  1119,
    1119,  2104,  1119,  2112,  2129,  2132,  2133,  2134,  2143,  2147,
    1762,   982,  1119,  2139,  1119,  1743,  2192,  1119,  2169,  2176,
    5635,  6066,  5637,  1743,  2831,  2185,  2204,   776,  1763,  -932,
    1119,  2193,  1119,  2207,  1119,  4490,  1119,  2209,  2211,   994,
     776,  2217,  3521,  2219,  2221,  2223,   770,  4104,  2233,  1119,
    1119,  2225,  2239,  2242,  5846,  5847,  4710,  5849,  1743,  2240,
    3522,  3523,  2243,  4491,  2244,  3524,  3525,  3526,  1145,  2265,
    2274,  2283,  2285,  2286,  5636,   770,  2287,  1179,  4710,  5871,
    1741,  2289,  1742,  2290,  1764,  1765,  2905,  2906,  5636,  1119,
     831,  1795,   770,  5872,  2292,  2293,  2297,  2305,  1119,  2306,
    6090,   832,  1794,  2315,  2322,  1256,  5863,  1119,  2333,   770,
    1262,  2337,  1759,  5873,  6174,  3037,  3037,  3037,  3037,  4695,
    2362,  2373,  2374,  1284,  2375,  2384,  3502,  3503,  6184,  2388,
    2392,  2393,  2413,  3527,  6174,  2445,  2451,  1301,  1015,  2455,
    6184,  2465,  2476,  3514,  6066,    42,  1177,  2498,  2501,  2480,
    3358,  2528,  2554,  3540,  3541,  2529,  2555,  1187,  2556,  2561,
    5809,  2564,  4492,  4711,  2565,  2573,  1339,  2576,  2580,  2947,
    2605,  2608,   770,  2607,  1355,  2628,  1119,  2652,  4654,  2653,
    2654,  3528,  2655,  2657,  2658,  4711,  5637,  2681,  5655,  2962,
    5462,  2659,  2680,  2684,   770,  2686,  2685,  2687,  2967,  1181,
    5637,  1743,  1379,  2688,  2969,  2695,  -932,  3353,  2696,  4693,
    1119,  1761,  2978,  2697,   750,  5969,  1355,  5970,  5971,  3604,
    3605,  3606,  3607,  3369,  2990,  3359,  2701,  2992,  2702,  2705,
    5871,  2703,  2704,  3382,  2706,  2708,  3360,  2716,  2709,  2715,
    2737,  2748,  2752,  3361,  5872,  2755,  2792,  5466,  2783,  2022,
    1487,  2805,  1489,  2811,  1491,  2812,   761,   761,   761,   761,
    1497,  1355,  2824,   770,  5873,  -932,  5978,  2847,  5413,   730,
   -2719,   946,  3362,  4044,  2862,  2870,  2871,  5638,  2875,  2879,
    2876,  2880,  2912,  2929,  2931,  5247,  2958,  2198,  3385,  2968,
    2984,  4962,  5928,  5376,  1185,  2339,  2340,  2341,  2342,  2955,
    5709,  2991,  1119,  3386,  1762,  3001,  3002,  2024,  3010,  1119,
     963,  4982,  4983,  3016,   750,  3019,  1562,  3032,  3026,  1119,
    3461,  4996,  1763,  3052,  1567,     4,  1570,  2643,  2643,  3061,
    3078,  3080,  4696,  3363,   906,  3081,  3083,  2940,  3093,   968,
    3099,  1579,   970,  3092,  5091,  3168,  3094,  3109,  5678,  2343,
    2344,  2345,  3097,   946,  5035,  3112,     8,  5105,   974,   975,
    3098,  3116,  3119,  3129,  3364,  5113,   831,  3130,  3226,  3134,
    3142,  1186,  5116,  -932,  5117,  5118,  3143,   832,  1764,  1765,
    3171,  3144,  3148,   907,  3172,  3181,  1773,  3191,  3195,    14,
    3196,  5066,   963, -1694,   908,  3244,  5984,  4044,  3198,   982,
    2346,  2347,  3203,  3202,  1119,  1119,  3231,  3238,    18,  1932,
    3246,  3260, -1871,  3266,   731,  1739,  1740,  3253,   988,  1681,
    1713,   968,  5082,   909,   970,  1717,   993,   994,  3270,  3280,
     910,  1768,  1769,  1770,  1771,  1772,  1773,  3281,  3283,  4697,
     974,   975,  5055,  3294,    23,  3284,  3295,  3476,  3299,  3300,
    -932,  3303,  3304,  3305,  3306,  5638,  3329,  3338,  3340,  2339,
    2340,  2341,  2342,  3307,  3342,  3308,  3345,  3348,  3367,   911,
    3368,  2348,  3397,  3431,  3433,  3434,  3437,   621,  1119,  3438,
    3449,   982,  3450,  1766,  1767,  1768,  1769,  1770,  1771,  1772,
    1773,  1404,  3468,  1736,  3478,  3479,  3484,  3504,  3487,  3494,
     988,  3507,    16,    17,  3505,  3506, -2318,  2915,   993,   994,
    3509,  3510,    31,  2343,  2344,  2345,  1012,  4833,   912,   913,
    6156,  3511,  3562,  3565,  3568,  1014,  1015,  1016,  3572,  4834,
    3575,  3578,   914,  3602,  3579,  3580,  3581,  3582,  3583,  3610,
    4695,  3584,  1119,   622,  1119,  2349,  3585,  3586,   831,  4835,
    3587,  3627,  3588,  3589, -2460,   770,   750,  3603,  1119,   832,
    3590,   750,  3591,   831,  2346,  2347,  3592,  3593,  3594,  3635,
    3595,  1807,  3656,  3596,   832,  1119,  1119,  3597,   770,  3598,
     770,  3037,  3599,  4836,   770,   770,  3636,  1741,  5762,  1742,
    3600,  3601,  3628,    41,  1119,  3634,  3629,  3646,  1012,  1767,
    1768,  1769,  1770,  1771,  1772,  1773,  3647,  1014,  1015,  1016,
    2839,  3670,  3630,  5683,   770,  3631,  3632,   623,  3673,  3676,
    2122,  3688,  3692,  4535,  3694,  1932,  3696,  3697,  3698,   624,
    4536,    72,  3695,  3699,  3702,  2348,  3706,  2350,  3707,  5414,
    3709,  3716,  3708,  3748,  3749,  3750,  4537,  5415,  1911, -1909,
    3761,  3808,   915,   750,   750,  1921,  4538,  4539,  4540,  3762,
    3809,  3763,  3823,  3772,  3782,  4742,  4541,  3824,  4837,  1964,
    3821,  3844,  3854,  3855,  3861,  3871,  3358,  3862,  3863,  3254,
    1975,  3877,  3873,  3891,  3894,  3898,  3899,  3900,  1469,  3901,
    2916,  2589,   750,  3907,  2849,  3908,  2229,  6188,   625,  1473,
    2590,  3915,  3920,  3935,  2995,  5718,  2351,  5277,  1743,  2349,
    5343,  3931,  1999,  5345,  2668,  1119,  3950,  3951,    16,    17,
    3952,  5414,  3967,  5279,  3968,  3969,   916,  5344,  3974,  5415,
    3972,  1119,  2021,  3981,  3975,  2915,  3980,  3996,  4838,  3995,
    3998,  1470,  4004,  4066,   831,  4067,  4072,  2917,  4076,  4077,
    4083,  3359,  2076,  4696,  4086,   832,  4140,  5762,  4085,  4090,
    4097,  4141,  3360,  4098,  4142,  4193,   750,  4197,  4205,  3361,
    4206,  2352,  4237,  2353,  4208,   770,   750,  4261,  2354,  4267,
    4278,  4270, -2460,   761,   750,  4273,  3011,   750,  5328,  4282,
    4284,  4292,  4290,  4291,  1933,  4299,  4304,   750,  3362,  4311,
    3611,  2350,  4313,  4320,  4324,  4383,  4542,  4394,  1934,  4327,
    1935,  4512,  4406,  1223,  4328,  4396,  3878,  4329,  4435,  4438,
    4543,  4110,  4111,  4330,  4113,  4115,  4407,  4416,  1553,  4418,
    4424,  3037,  4425,  4448,  4447,  4430,  1472,  4437,  2839,  1559,
    1936,  4445,  2355,  1119,  4449,  4451,  4452,  4464,  4455,  4461,
     626,  4839,  2918,  4840,  4465,  1937,  4470,  4471,  4482,  3363,
    4697,  4507,  4478,  4479,  4499,   917,  4511,  4514,  2230,   645,
    2351,  4517,  1119,  5371,  4519,   627,  4521,  4638,  4522,  4525,
    3358,  4532,  1471,  4534,  4550,  2356,  2208,  2850,  1938,   750,
    3364,  2216,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,
    4552,   761,  3608,  4553,  4551,  4544,  1939,  4554,   770,  4557,
    4555,  4561,   770,   750,  4568,  4238,  4574,  4513,  2916,  4062,
    4545,  4162,  4642,   628,  2229,  4621,  4628,  4646,  4647,  4650,
    4668,  4680,  4703,  6185,  4695,  2352,  4705,  2353,   770,  4706,
    4716,   770,  2354,  4717,  4044,  4724,  1119,   750,  4725,  4726,
    4727,  5416,  4742,  4728,  5417,  3359,  4546,  4986,  4729,  4731,
    4732,  4733,  4734,  5418,  1469,  4735,  3360,  4747,  4755,  2284,
    4547,  4786,  4790,  3361,  2357,  1473,  1557,  4791,  4794,  4803,
    4805,  4815,  4818,  4827,  3207,  2358,  1940,  4819,  4826,  4864,
    4873,  4880,  4884,  1941,  4401,  4005,  4006,   750,  2537, -2026,
    4930,  4882,  3362,  1942,  4841,  4842,  2355,  4885,  4892,  4888,
    1933,  4889,  4897,  4063,  4931,  5251,  1943,  1470,   -71,  1820,
    4960,  4954,  1556,  4964,  1934,  4955,  1935,  4959,  5011,  5022,
    5376,  4966,  4967,  5416,  5013,  5014,  5417,  5044,  5015,  5045,
    5049,  1223, -2220,  5047,  5029,  5573,  5070,  1944,  5071,  2356,
    1945,  5075,  5083,  1558,  5084,  5087,  1936,  5088,  1119,   629,
    4268,  5096,  5098,  3363,  5100,  1946,  5099,  5127,  5130,  5133,
    5134,  1937,  5140,  5149,  5141,  5155,  5156,   630,  5158,  5168,
    5173,  5166,  5174,  5187,  5178,  5186,  5185,  1119,  5193,  5195,
    5198,  1128,  5212,  5207,  3364,  5208,  2230,  1119,  1129,  1119,
     750,  5646,  5219,  5235,  1938,  5646, -1996,  5227, -2001,   750,
    5254,  5256,  1472,  5762,  1130,  5263,  5268,  5280,   631,  5264,
     750,   632,  1939,  5287,  1131,  1132,  1133,  5288,  5302,  5272,
    4239,  2469,  5322,  5278,  1134,  5281,  5647,  5286,  2357,  5329,
    5647,  5335,  5330,  5334,  5336,  5337,  1469,   770,   633,  2358,
    2023,  5354,  5358,  5362,  5367,  4191,   634,  1473,  1471,  6108,
    4843,  1469,  5372,  5370,  5394,  5395,  5397,  5398,  5400,  5404,
    5408,  5405,  1473,  5424,  5412,  5436,  5427,  5703,  5438,  5440,
    5444,  5445,  5453,  5452,   770,  5458,  2527,  5477,  5469,  5471,
    5016,  5481,  5496,  5503,  5502,  5518,  5504,  5506,  4242,  1470,
    5508,  2524,  1940,  5526,  5528,   750,  5547,  5553,  5538,  1941,
    5561,  5570,   770,   770,  1470,  5563,  5577,  5571,  5578,  1942,
     770,  2579,  5579,  5608,  5583,  1553,  5581,  5596,  5598,  5626,
     770,  5610,  1943,  5611,  5615,  5617,  1559,  5618,  4014,  5676,
    5687,  5688,  5670,  5671,  2601,  1807,  5673,  5689,  4302,  5690,
     761,   761,   750,   761,   761,   761,   750,   770,   750,  5700,
    5701,  5728,  5715,  1944,   761,  5646,  1945,  5707,  5737,  5746,
    5750,  5796,  5781,  5779,  1135,  5798,  5779,  5747,  5800,  2645,
     761,  1946,   770,  5646,  5802,  5804,  5801,  5806,  1136,  5807,
    5820,  5808,  5821,  5822,  1472,  6191,  5823,   646,  5840,  5848,
    5647,  5850,  5851,  5858,   750,  5866,  5875,  5860,  5880,  1472,
    5819,  5876,  5877,  4563,  4564,  4565,  4566,  4567,  5647,  4569,
    4570,  4571,  4572,  4573,  5886,  4575,  4576,  4577,  4578,  4579,
    4580,  4581,  4582,  4583,  4584,  5892,  5896,  4588,  4589,  5904,
    1471,  5907,   827,  5899,  5910,  5271,  5921,  5931,  5932,  5933,
    5950,  5949,  5963,   835,  5980,  1471,  5981,  5983,  4164,  6003,
    4159,  5819,   770,  6045,  6051,  6052,  5939,  1119,  6053,  5973,
    6073,  6074,  2731,  1557,  5955,  5803,  5988,  5957,   750,  6037,
    6082,  6026,  6038,  2741,  6075,  2883,  6076,  6083,  1137,  6084,
    1959,  6111,  6124,  6125,  6114,   830,  6127,  6136,  6150,  6139,
    6151,   770,  6152,  6142,  6153,  6144,  6155,  6157,  6160,   770,
     770,   770,  2760,  2761,  2762,   750,   750,  6161,   761,  1556,
    6175, -2100,  6187,  3904,  1138,  1574,  4231,  2884,  4531,  1966,
    2699,  5779,  5386,  5384,  5385,  5667,  5779,  1892,  1139,  5674,
    5665,  5664,  5770,  5779,  4046,  5668,  4678,  5844,  5507,  5967,
    1558,  5646,  6109,  4620,  2079,  5325,  4047,  4772,  5680, -2100,
    6048,  6047, -2100,  4715,  2885,  2130,  4265,  1398,  4723,  5262,
   -2100,  4260, -2100,  1119,  4787,  1820,  2996,  2546,  4549, -2100,
    3406,  1586,  4308, -2100,  5164,  4286,  5647,   770,  4948,  1386,
     834,  3577,  3072,  3075,  3073,  2861, -2100,  3074,  2126,  3015,
   -2100,  5482, -2100,  5787,  5619,  4738,  4178, -2100,  5360,   750,
    4891,  5220,  5922,  2873, -2100,  5426,  4896, -2100,  3258,  5987,
    1119,  6060, -2100,  5584,  5431,  6141,  6118,  5906,  6143,  4594,
    4903,   750,  5233,  3441,  6072,  4736,   833,  5663,  5123,  5285,
    6094,  5952,  5948, -2100,  5856,  4741,  3641,  4319,  5944,  5954,
    4558,  5985,  2948,  2956,  4562,  5533, -2100,  4398,  4869,  4867,
     770, -2100,  4865,  6121,   737,   738,   770,   527,  6087,  6015,
    6088,  5622,  5930,  5614,  5927,  2966,  4739,  5779,  5122,  5646,
   -2100,  6016,  2095,  1906,  2749,  3987,  5706,  3986,  3571,  5532,
    5982,  2914,  3269,  3381,  4804,  3703,  4301,  4667,  5714,  4415,
    2809,  3496,  2981,  2053, -2100,  5342,  5977,  6046,  4887,  4080,
    3785,  2026,  3783, -2100,  5647,  4440,  4886,  2525,  1959,  2312,
    3962,  2463,  4504,  5245,  3956,  4875,  3946,  2372,  1487,  5912,
    3012,  6119,   750,  5265,  3014, -2100,  5996,  5997,  6120,  2321,
    4648,  5523,  5769,  5522,  1119,  4432,   750,   750,  5420, -2100,
    5537,  1119,  5411,  3029,  4494, -2100,  5442,   863,  5885,  3481,
    3038,  3038, -2100,  3038,  3038,  5646,  5646,  6022,  5521,  4640,
    3668,  2559,   739,  2267,  3701, -2100,  5228, -2100,   770,  4121,
   -2100,  4961,   750,  6057,  4939,  4936,  1236, -2100,   750,  1483,
   -2100,   864,  1488,  5779,  3062,  5779,  5779,  3009, -2100,  1228,
   -2100,  3350,  2634,  3067,  3936,  3351,  3069, -2100,  1231,  2018,
     748, -2100,  3400,   866,  5460,  5451,  2272,  5646,  4808,  2740,
    6140, -2100,  6154,   867, -2100,  5691,  6186,  4742, -2100,  6190,
   -2100,  5852,  1660,  4505,  6067, -2100,  3371,  6068,  5779,  4902,
    1587,  3838, -2100,  3919,  4917, -2100,  5779,  3325,  3914,   868,
   -2100,  1189,  3225,  1190,  2757,  1161,  3913,  2264,  3058,  2572,
    4742,  4684,  3895,  4287,  3561,   869,  1801,  3997,  5562,  4743,
     870, -2100,  1976,  4501,  1119,  1272,  4927,  3948,  5246,   741,
     742,  2886,   743,  5779, -2100,  5979,  3463,  2782,  6103, -2100,
    6134,     0,     0,   871,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2100,     0,
       0,  2887,  2888,     0,  2889,  2890,  2891,  2892,  2893,     0,
    2894,  2895,  2896,  2897,  2898,  2899,  2900,  2901,     0,  2902,
    2903,  2904, -2100,     0,     0,     0,     0,     0,     0,     0,
       0, -2100,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1119,     0,     0,   750,     0,     0,     0,     0,     0,
     750,     0,   872, -2100,     0,  4968,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3201,     0,  4984,     0,
     873,     0,     0, -2100,     0,     0,     0,     0,   874, -2100,
   -2100,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2100,     0, -2100,     0,     0, -2100,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     875,     0,     0,     0,     0,     0,     0,  2905,  2906,     4,
     876,   877,     0,     0,     0,     0,     0,     0,   906,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       8,     0,     0,   770,   770,   750,     0,     0,     0,     0,
       0,     0,     0,     0,   770,     0,     0,     0,  3038,  3038,
    3038,  3038,  3290,  3291,     0,  1807,     0,   907,     0,   770,
       0,     0,     0,    14,     0,     0,     0,     0,   908,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,  3330,   761,
       0,     0,     0,     0,     0,     0,     0,   909,     0,     0,
    2522,   761,     0,     0,   910,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    23,     0,
   -2100,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     750,     0,  2256,   911,     0,     0,     0,  2257,  3357,     0,
       0,     0,     0,     0,     0,     0,   750,  2258,     0,  1911,
    3373,     0,     0,     0,   770,  3380,   750,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2100,     0,     0,    31,     0,     0,     0,
     750,     0,   912,   913,     0,     0,  1960,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   914,  5010,  4152,     0,
    4153,  4154, -2100, -2100,   750,     0, -2100, -2100,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4155,     0,  4156,     0,     0,     0,
       0,     0,  4157,     0,   761,     0,   761,   761,     0,     0,
       0,     0,     0,   750,     0,     0,  3465,     0,   761,     0,
     761,     0,     0,     0,  2068,     0,     0,    41,     0,  3475,
       0,     0,     0,     0,     0,  3480,  4158,     0,     0,  -568,
       0,     0,     0, -1289,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1289,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    72,     0,     0,     0,     0,
       0,     0,     0,    16,    17,  2259,     0,     0,  4007,     0,
       0,     0,     0,     0,     0,     0,   915,     0,     0, -1144,
       0, -1144,     0,     0,     0,     0,  2260,     0,  5110,     0,
       0,  2261,     0,   770,     0,     0,  4159,     0,     0,   750,
       0,     0,     0,     0,  6002,     0,     0,     0,  2068,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2262,     0,     0,     0,     0,     0,     0,     0,
       0,  4160,     0,  -568,     0,  4161,     0,     0,     0,     0,
       0,     0,     0,  4009,     0,     0,  4162,     0,     0,     0,
     916,     0,     0,  2263,     0,     0,     0,    16,    17,     0,
    3626, -2100,  4007,     0,     0,     0,     0,     0,  4163,  3633,
       0,     0,     0,     0,  1960,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -2100, -2100,     0,     0, -2100, -2100,     0,     0,     0,     0,
       0,     0,     0,     0,  4010,  4011,  4012,  3681,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3657,     0,     0,     0,     0,     0,     0,  4013,
       0,  3669,     0,  3671,     0,     0,     0,  4009,     0,     0,
       0,     0,     0,     0,     0,   770,     0,   770,   770,     0,
       0,     0,     0,     0,  4014,     0,     0,     0,     0,     0,
       0,   770,     0,     0,  3038,     0,     0,     0,     0,     0,
    6117,     0,     0,     0,  4164,     0,     0, -1144,     0, -1144,
       0,     0,  4015,     0,  4016,     0,     0,     0,     0,   917,
       0,     0,     0,     0,     0,     0,     0,     0,  4010,  4011,
    4012,     0,     0,  4017,     0,     0,  2068,     0,     0,     0,
    4165,     0,     0,     0,     0,     0,   770,     0,   770,     0,
       0,     0,  4018,  4013,     0,     0,     0,     0,     0,  4019,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4020,     0,     0,     0,  4014,     0,
       0,     0,     0,     0,  4021,    16,    17,     0,  4166,  4167,
    4007,     4,     0,     0,     0,  4168,  6177,     0,     0,  4022,
     906,     0,  6179,     0,     0,     0,  4015,  4169,  4016,     0,
       0,     0,  4008,     0,     0,     0,     0,     0,  5291,     0,
       0,     0,     8,     0,     0, -1144,  4170,  4017,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  -334,     0,
    -334,     0,     0,     0,     0,     0,  4018,     0,     0,   907,
       0,     0,  4171,  4019,     0,    14,  4023,     0,     0,     0,
     908,     0,  3810,     0,     0,  4009,  4024,     0,  4020,     0,
       0,     0,     0,     0,    18,     0,     0,     0,  4021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     4,   909,
       0,     0,     0,  4022,     0,     0,   910,   906,     0,     0,
       0,     0,  3853,  4025,     0,     0,     0,     0,     0,     0,
      23,     0,     0,     0,     0,     0,  4026,     0,  4172,     8,
       0,     0,     0,     0,     0,     0,  4010,  4011,  4012,   750,
       0,     0,     0,     0,  3890,   911,     0,     0,     0,  3893,
       0,     0,   770,   770,  3038,     0,   907,     0,     0,     0,
    4023,  4013,    14,     0,   770,     0,  4027,   908,     0,     0,
    4024,     0,  4028,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,  4014,     0,    31,     0,
       0,     0,     0,     0,   912,   913,   909,  1179,     0,  4173,
       0,     0,     0,   910,     0,     0,     0,  4025,   914,     0,
    4174,  4175,  4176,     0,  4015,     0,  4016,    23,     0,     0,
    4026,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4029,     0, -1144,     0,  4017,  2469,     0,  4030,     0,
       0,     0,   911,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4018,     0,     0,     0,     0,     0,
    4027,  4019,     0,     0,     0,     0,  4028,  -334,  4031,    41,
       0,     0,     0,     0,     0,     0,  4020,     0,     0,     0,
       0,     0,     0,  4032,  4033,    31,  4021,     0,     0,     0,
       0,   912,   913,     0,     0,     0,  4034,     0,     0,  4177,
       0,  4022,     0,     0,     0,   914,     0,    72,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   750,   750,
       0,     0,     0,     0,     0,  4029,     0,     0,   915,   761,
       0,  4060,  4030,     0,     0,     0,   750,     0,     0,     0,
     770,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4023,     0,
       0, -1289,  4031,     0,     0,     0,    41,     0,  4024,     0,
       0,   770,   770,     0,     0,     0,     0,  4032,  4033,     0,
       0,     0,     0,     0,     0,  -334,     0,     0,     0,     0,
    4034,     0,     0, -1144,     0, -1144,     0,     0,     0,     0,
       0,  5564,   916,     0,    72,  4025,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4026,     0,
       0,   770,  2068,     0,     0,   915,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4195,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4613,     0,     0,     0,     0,     0,     0,  4027,     0,
       0,     0,     0,     0,  4028,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,  4007,     0,     0,     0,
       0,     0,  1571,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   916,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4266,  5897,  5898,     0,  5900,
    5901,  5902,  5903,  4029,     0,     0,     0,     0,     0,     0,
    4030,     0,     0,     0,     0,     0,     0,     0,  5923,     0,
       0,   917,     0,     0,  5704,     0,     0,     0,     0,     0,
       0,  4009,     0,     0,     0,     0,     0,     0,     0,  3029,
    4031,     0,     0,     0,  1964,   770,   770,   770,   770,     0,
       0,   750,     0,     0,     0,  4032,  4033,     0,     0,  1400,
    1401,     0,  4309,     0,     0,  1402,  1403,     0,  4034,     0,
       0,     0,     0,     0,     0,  1404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4010,  4011,  4012,     0,     0,     0,     0,     0,
       0,  1405,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1406,     0,     0,     0,  4013,   917,     0,
       0,     0,     0,     0,     0,     0,     0,  4035,     0,     0,
       0,     0,     0,  1407,     0,     0,     0,     0,     0,     0,
    5995,     0,  4014,  5998,     0,     0,     0,     0,     0,     0,
       0,  6006,     0,     0,     0,     0,     0,     0,  4393,     0,
       0,     0,     0,     0,     0,     0,     0,  1408,     0,     0,
    4015,     0,  4016,  2068,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1409,  1410, -1144,
    1411,  4017,     0,     0,     0,     0,     0,     0,  1412,  1413,
    1414,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4018,     0,  4444,     0,     0,     0,     0,  4019,  1415,     0,
       0,     0,    16,    17,     0,     0,   770,  4007,     0,  2469,
       0,     0,  4020,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4021,     0,     0,     0,     0,   770,   770,   770,
     770,     0,  1416,     0,     0,     0,     0,  4022,     0,     0,
       0,     0,     0,     0,  4483,  4484,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1417,     0,     0,
       0,     0,     0,  1418,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4009,     0,     0,     0,     0,     0,  1419,  1420,
    1421,     0,     0,     0,  4023,  4520,     0,     0,     0,     0,
       0,  4530,     0,     0,  4024,  1400,  4243,     0,     0,  5966,
       0,  1402,  1403,  1422,  1423,     0,     0,     0,     0,     0,
       0,  1404,     0,     0,     0,   770,     0,     0,     0,     0,
       0,     0,     0,   750,     0,     0,     0,   750,     0,     0,
       0,  4025,     0,  4010,  4011,  4012,     0,  1405,     0,     0,
       0,     0,     0,     0,  4026,     0,     0,     0,     0,  1406,
    1424,  4587,  1425,  1426,  4609,     0,     0,     0,  4013,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1427,  1407,
       0,     0,     0,     0,     0,     0,   761,     0,     0,     0,
       0,     0,     0,  4014,  4027,  3475,  4641,     0,     0,     0,
    4028,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4655,     0,     0,  1408,     0,  1428,     0,  1429,     0,     0,
       0,  4015,     0,  4016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1409,  1410,     0,  1411,     0,     0,     0,
    1430,     0,  4017,     0,  1412,  1413,  1414,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4029,
       0,  4018,  1431,     0,  1415,     0,  4030,     0,  4019,     0,
       0,     0,     0,  1432,  1433,     0,     0,     0,     0,     0,
       0,     0,     0,  4020,     0,     0,     0,     0,     0,     0,
       0,  1191,     0,  4021,     0,     0,  4031,     0,  1416,     0,
       0,     0,  1124,     0,     0,  1434,     0,     0,  4022,     0,
       0,  4032,  4033,     0,  1435,  4609,     0,  1163,     0,     0,
       0,     0,     0,  1417,  4034,  1192,  1193,     0,     0,  1418,
       0,     0,     0,     0,     0,  1194,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      10,    11,     0,     0,  1419,  1420,  1421,     0,     0,     0,
    1436,  1437,  1438,     0,     0,  4023,  4769,     0,  1439,  1440,
       0,  3626,     0,     0,     0,  4024,     0,     0,     0,  4244,
    1423,     0,     0,     0,  1441,  1442,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,  3657,     0,     0,
    1195,     0,  4788,     0,     0,     0,     0,     0,  1443,  1444,
       0,     0,  4025,     0,  1196,     0,     0,     0,     0,     0,
     770,     0,     0,     0,     0,  4026,  1424,  1445,  1425,  1426,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1427,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4027,     0,     0,     0,     0,
       0,  4028,     0,     0,  1197,     0,     0,     0,     0,     0,
       0,  1428,     0,  1429,     0,     0,  1198,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1430,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1447,     0,
       4,  1448,     0,  4862,  1449,     0,     0,     0,  1431,   906,
    4029,     0,     0,     0,     0,     0,     0,  4030,     0,  1432,
    1433,     0,     0,     0,     0,     0,  1199,  1450,     0,     0,
       0,     8,     0,  4877,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1452,  4031,  4655,     0,
       0,  1434,     0,     0,     0,     0,     0,     0,   907,     0,
    1435,  4444,  4032,  4033,    14,     0,     0,     0,     0,   908,
       0,     0,  3890,     0,  4905,  4034,     0,     0,  4912,   770,
     770,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,  1200,     0,     0,  1179,  1807,     0,   909,     0,
       0,  1201,     0,     0,     0,   910,  1436,  1437,  1438,     0,
       0,     0,     0,  1202,  1439,  1440,     0,     0,     0,    23,
       0,     0,     0,  2469,  1203,     0,     0,     0,     0,     0,
    1441,  1442,     0,     0,  4953,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   911,     0,     0,     0,  1204,     0,
       0,     0,     0,     0,  1443,  1444,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4245,     0,     0,     0,     0,     0,     0,
   -2460,  1205,     0,     0,  1206,   770,  1207,    31,     0,     0,
       0,     0,     0,   912,   913,     0,     0,     0,     0,  4609,
     750,     0,  5012,     0,     0,     0,     0,   914,     0,     0,
       0,  1208,  1209,     0,     0,     0,     0,     0,     0,  1210,
    1211,     0,     0,     0,  5036,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1212,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   770,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1213,  2527,
       0,  5067,     0,     0,  1447,     0,     0,  1448,    41,     0,
    1449,     0,     0,     0,     0,     0,     0,     0,     0,  1214,
       0,     0,     0,  5120,     0,  4153,     0,     0,     0,     0,
       0,     0,     0,  4247,     0,     0,     0,     0,     0,     0,
       0,     0,  4609,     0,     0,     0,    72,     0,     0,  4155,
       0,     0,  1452,     0,  4953,     0,     0,  4157,     0,     0,
       0,     0,     0,     0,  5104,     0,  2469,   915,     0,     0,
       0,   750,  5112,     0,  1215,     0,     0,  4953,     0,  2068,
       0,     0,     0,     0,  4953,     4,     0,     0,  1216,  4609,
       0,  5121,     0,     0,   906,     0,   761,     0,     0,  1217,
       0,  5136,  1218,  1219,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     8,  1220,     0,     0,
       0,     0,     0,     0,  3684,     0,     0,     0,    16,    17,
    5150,     0,     0,  4007,     0,     0,     0,     0,     0,     0,
       0,   916,     0,   907,     0,     0,     0,     0,     0,    14,
       0,     0,     0,  1221,   908,     0,     0,     0,     0,     0,
    1222,  4159,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -3237,     0,
    1223,     0,     0,   909,     0,     0,     0,     0,     0,     0,
     910,     0,     4,     0,     0,     0,     0,     0,     0,     0,
    4161,   906,     0,     0,    23,     0,     0,     0,  4009,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     8,     0,     0,     0,     0,     0,   911,
   -3237,     0,     0,  4163,     0,     0,  1224,     0,  4444,     0,
       0,     0,     0,     0,     0,     0,  2469,     0,     0,     0,
     907,     0,     0,     0,     0,     0,    14,     0,     0,     0,
       0,   908,     0,     0,     0,     0,     0,     0,     0,  4010,
    4011,  4012,    31,     0,     0,    18,     0,     0,   912,   913,
     917,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     909,     0,   914,     0,  4013,     0,  3657,   910,     0,     0,
       0,     0,     0,     0,  4530,     0,     0,     0,     0,     0,
       0,    23,     0,   770,     0,  5275,  5275,     0,     0,  4014,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   911,     0,     0,  4164,
       0,     0,     0,     0,     0,     0,     0,  4015,     0,  4016,
       0,     0,     0,    41,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4609,     0,     0,     0,  4017,     0,
       0,   750,     0,  5293,     0,     0,     0,     0,  5301,    31,
       0,     0,     0,     0,     0,   912,   913,  4018,  3626,     0,
       0,    72,     0,     0,  4019,  3626,     0,     0,     0,   914,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4020,
       0,     0,   915,     0,     0,     0,     0,     0,     0,  4021,
       0,     0,     0,  4166,     0,     0,     0,     0,     0,     0,
    4168,     0,     0,     0,  4022,     0,     0,     0,     0,  4609,
    4953,  4609,     0,   770,  4609,     0,  4953,     0,     0,     0,
    4609,  4609,     0,     0,  4953,     0,     0,     0,     0,     0,
      41,  4170,     0,     0,  4609,  4953,     0,  4953,     0,  3964,
       0,     0,     0,  5368,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     4,   916,     0,  5379,     0,
       0,  4023,     0,     0,   906,     0,     0,     0,    72,     0,
       0,  4024,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     8,     4,     0,   915,
       0,     0,     0,     0,     0,     0,   906,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4025,     0,
       0,     0,     0,   907,     0,     0,     0,     0,  -550,    14,
       0,  4026,     0,  4172,   908,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,  1121,     0,  5430,     0,   907,  5169,     0,     0,     0,
       0,  1582,     0,   909,  4862,     0,   908,     0,     0,     0,
     910,  4027,     0,   916,     0,  1121,     0,  4028,     0,     0,
      18,     0,     0,  3893,    23,     0,     0,     0,     0,     0,
       0,  1121,     0,  4953,     0,   909,     0,     0,     0,     0,
       0,  5275,   910,     0,     0,   917,     0,   750,     0,   911,
    5461,     0,     0,     0,     0,     0,  1583,     0,     0,  5468,
       0,     0,     0,  4609,  4609,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4029,     0,     0,     0,
       0,   911,     0,  4030,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,   912,   913,
       0,     0,     0,     0,     0,     0,  2527,     0,     0,     0,
       0,     0,   914,  4031,     0,     0,     0,  4609,     0,     0,
       0,  4609,     0,     0,  1584,     0,     0,  2469,  4032,  4033,
     912,   913,     0,     0,  4953,     0,     0,     0,  1121,     0,
       0,  4034,     0,     0,   914,     0,     0,     0,     0,     0,
       0,     0,   917,     0,     0,     0,     0,  5560,     0,     0,
       0,     0,     0,     0,   750,     0,     0,     0,     0,     0,
       0,     0,     0,    41,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1585,     0,     0,     0,     0,
       0,    72,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5275,     0,     0,     0,     0,
       0,     0,   915,     0,     0,  4609,  1121,     0,  5625,     0,
       0,     0,     0,  -550,     0,     0,     0,     0,     0,     0,
    5661,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,     0,  3626,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,  1121,     0,     0,     0,  4609,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   916,   750,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,  1634,  5723,  5727,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,   916,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5745,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3893,     0,  3893,     0,  1634,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5786,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   770,     0,
    1121,  1121,  1121,  1121,     0,     0,  1634,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,  5834,     0,  5835,   761,   917,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   917,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2469,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5935,     0,     0,     0,     0,     0,  5275,     0,  5275,
    5275,     0,     0,     0,     0,     0,     0,     0,  5945,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,  1634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5964,     0,
       0,     0,   750,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5727,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5745,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   770,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  6023,     0,     0,
       0,  5275,  5275,     0,     0,     0,     0,     0,  5275,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2469,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   770,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5275,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   761,     0,     0,     0,  6106,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   770,     0,
       0,     0,     0,     0,  4530,  4530,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  6132,  6132,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2469,  1121,  1121,     0,   770,     0,     0,  1121,     0,     0,
     770,  1121,  1121,  1121,  2469,     0,     0,     0,     0,     0,
    2469,     0,  1121,  1121,  1634,     0,  2469,     0,  1121,     0,
    1121,  1121,  1121,  1121,  1121,     0,  1121,     0,     0,  1634,
    1634,     0,     0,     0,     0,     0,     0,  1121,     0,  1121,
       0,     0,  1121,  1121,     0,  1121,  1121,  1121,     0,  1121,
    1121,  1121,     0,     0,     0,     0,  1121,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,  1121,  1121,     0,
    1121,  1121,  1121,     0,     0,  1121,  1121,  1121,  1121,  1121,
    1121,  1121,     0,  1121,  1121,  1121,  1121,  1121,  1121,     0,
    1121,  1121,     0,  1121,  1121,  1121,  1121,  1121,  1121,  1121,
       0,     0,  1121,  1121,  1121,  1121,     0,  1121,  1121,  1121,
       0,  1121,     0,  1121,     0,  1121,     0,     0,     0,  1121,
    1121,  1121,     0,     0,  1121,  1121,  1121,  1121,  1121,     0,
    1121,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,  1121,  1121,  1121,  1121,     0,     0,
       0,     0,     0,     0,     0,  1121,  1121,     0,  1121,  1121,
       0,     0,  1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,
    1121,  1121,  1121,  1121,  1121,     0,     0,  1121,     0,     0,
       0,     0,  1634,     0,     0,     0,     0,     0,  1634,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1634,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1087,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1238,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1385,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1536,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1597,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1624,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,  1639,  1121,     0,     0,     0,
       0,     0,     0,     0,  1121,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1634,  1634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1733,     0,     0,
    1121,  1121,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1634,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1634,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,  1634,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,  1121,  1121,     0,  1121,  1121,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,  1929,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1634,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2065,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2108,     0,  2109,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1634,     0,  1634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2270,     0,  2270,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2296,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2311,     0,     0,     0,  2316,     0,  2318,     0,     0,
       0,     0,     0,     0,     0,     0,  2334,  2335,     0,     0,
       0,     0,  2361,     0,  2364,  2365,  2366,  2367,  2368,     0,
    2370,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2378,     0,  2381,     0,     0,  2382,  2383,     0,  2385,
    2386,     0,     0,  2389,  2390,  2391,     0,     0,     0,     0,
    2396,     0,     0,  2402,     0,     0,     0,     0,     0,     0,
       0,  2406,  2407,     0,  2410,     0,  2412,     0,     0,  2414,
    2415,  2416,  2419,  2420,  2421,  2422,     0,  2423,  2424,  2425,
    2426,  2427,     0,     0,  2434,  2435,     0,  1121,  2439,  2440,
    2441,     0,     0,     0,     0,     0,  2447,  2448,  2449,     0,
       0,  2452,  2453,  2454,     0,  2456,     0,  2458,     0,  2459,
       0,     0,     0,  2462,  2402,  2464,     0,     0,  2470,  2471,
    2472,  2473,  2474,     0,  2475,     0,     0,     0,     0,     0,
       0,  2479,     0,     0,     0,     0,     0,     0,  2484,  2485,
    2486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,  1121,     0,  1121,     0,  1121,  1121,  1121,  1121,
    1121,  1121,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,  1121,     0,     0,  1121,  1121,  1121,  1121,
       0,     0,  1121,  1121,  2582,     0,  1121,     0,  1121,  2065,
    1121,     0,  1121,     0,     0,     0,  1121,     0,     0,  2065,
       0,     0,     0,     0,  1121,     0,  1121,     0,  1121,  1121,
    1121,  1121,  1121,     0,     0,  1121,  1121,  1121,     0,  1121,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
    1121,     0,     0,  1121,     0,  1121,  1121,  1121,     0,     0,
    1121,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,  2664,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,  1121,     0,     0,  1121,     0,     0,  1121,
       0,     0,  2698,     0,     0,     0,     0,     0,  1121,  1634,
    1121,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1634,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1634,     0,     0,  1634,  1634,  1634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2982,
    2983,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,  3045,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3059,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1238,     0,
    3077,     0,     0,     0,     0,     0,     0,     0,  3084,  3085,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,  1634,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,  3136,  3138,  3140,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1634,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,  1121,     0,  1121,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,  1634,
       0,     0,     0,  3233,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,  1121,     0,     0,  3241,     0,
    3242,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,  1121,     0,     0,
    1121,     0,     0,     0,     0,  1121,     0,     0,  3264,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3271,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3323,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1634,     0,     0,     0,  3333,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,  1634,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,  1634,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3488,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3672,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,  1121,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,  1121,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,  1121,     0,  1121,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,  1121,     0,     0,  3724,     0,     0,  3725,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3751,     0,     0,     0,  3753,     0,
    3754,  3755,  3756,  3757,  3758,  3759,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,  3764,     0,  3765,     0,  1121,
    3766,  3767,  3768,  3769,     0,     0,  3770,  3771,  1121,     0,
    3773,     0,  3775,     0,  3777,     0,  3779,     0,     0,     0,
    3781,     0,     0,     0,     0,     0,     0,     0,  2416,     0,
    3784,     0,  2416,     0,  3787,  3788,  3789,     0,     0,  3790,
    3791,  3793,     0,  3794,     0,     0,  3795,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3796,
       0,     0,     0,     0,     0,     0,     0,  3803,     0,  3804,
    3805,  3806,     0,     0,  3807,     0,     0,  1121,     0,     0,
    3811,     0,     0,     0,     0,  3822,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3839,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,  3847,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3860,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2065,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2065,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2065,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,  1121,     0,     0,     0,     0,
       0,  4204,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4285,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4307,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4314,     0,
       0,  4315,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,  4332,  4333,     0,     0,     0,  1634,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4358,
       0,  4359,     0,  4360,     0,  4361,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4386,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4409,  4410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4068,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1634,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,  2065,  2065,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2065,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,  3394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4068,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,  3394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1634,  1634,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1634,     0,     0,  4821,  4822,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4829,     0,  4830,
       0,     0,  4831,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4851,     0,  4852,     0,  4853,
       0,  4854,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1634,     0,  4860,  4861,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4890,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,  3394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4068,     0,     0,
       0,     0,     0,     0,  5062,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5128,
    5129,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4068,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,  4068,     0,  4068,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2065,  2065,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5253,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5333,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5403,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5465,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4068,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5595,     0,  5597,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5859,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2062,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,  2063,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1733,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,   980,     0,
       0,     0,     0,     0,     0,  5974,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,     0,   995,  2064,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,  3394,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,  3394,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,  2493,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,   980,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,     0,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,  2494,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    1073,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,  1080,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,  2399,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,   964,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,   980,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2400,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,   990,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,  2401,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,  1079,  1080,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,   964,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,     0,     0,     0,     0,     0,     0,   979,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,  1596,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
    1079,  1080,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,     0,  3135,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,   980,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,     0,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,   990,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,  1079,  1080,     0,     0,     0,     0,
    1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   945,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,   964,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,  3137,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,   980,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,     0,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,  3139,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,   980,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,   990,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    1073,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,  1080,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,     0,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,  3390,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,  3391,     0,
       0,     0,     0,     0,   979,     0,   980,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,   990,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,  1079,  1080,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,  4938,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,  3391,     0,     0,     0,     0,     0,   979,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
    1079,  1080,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,   980,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,     0,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,   990,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,  1079,  1080,     0,     0,     0,     0,
    1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   945,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,   964,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,   980,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,     0,     0,  1623,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,   980,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,   990,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,  2268,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    2269,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,  1080,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,     0,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,   964,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,   980,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,   990,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  2269,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,  1079,  1080,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,   964,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,     0,     0,     0,     0,     0,     0,   979,     0,
    3780,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
    1079,  1080,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,  3802,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,     0,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,   990,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,  1079,  1080,     0,     0,     0,     0,
    1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   945,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,   964,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,   980,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,  6063,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,     0,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,     0,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,  1589,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,     0,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    1073,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,  1590,  1591,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,     0,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,   964,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,  1727,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,   989,     0,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,  1025,    85,   571,    87,    88,    89,    90,    91,
     572,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     575,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,  1040,   172,
     173,   581,   175,   176,  1041,   178,  1042,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   589,   311,   590,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   593,   355,   356,   357,
    1062,  1063,   360,   361,   594,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   600,  1077,
     457,   458,   459,     0,   460,   601,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,  1590,  1591,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,   964,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   971,
     972,   973,     0,   974,   975,     0,     0,     0,   976,   977,
     978,     0,     0,     0,     0,     0,     0,     0,   979,     0,
    1729,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   981,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,   983,
     984,     0,   985,     0,     0,     0,     0,     0,   986,     0,
     987,     0,     0,   988,     0,     0,   989,     0,   991,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,   997,   998,   999,  1000,     0,     0,     0,
       0,     0,     0,  1001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  1013,
    1014,  1015,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,  1018,  1019,     0,     0,     0,     0,     0,
    1020,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,  1022,    55,    56,    57,    58,
      59,    60,  1023,    62,    63,    64,    65,    66,    67,    68,
    1024,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,  1025,    85,   571,    87,
      88,    89,    90,    91,   572,  1026,    93,  1027,  1028,    96,
    1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,  1034,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,  1035,  1036,  1037,   575,  1038,  1039,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,  1040,   172,   173,   581,   175,   176,  1041,   178,
    1042,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,  1043,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,  1044,  1045,   213,   214,   215,  1046,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  1047,   255,  1048,
     257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,
     267,   268,   269,   270,   271,   272,  1053,  1054,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1055,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,  1056,   303,   304,
     305,   306,   307,  1057,  1058,   310,   589,   311,   590,   313,
     314,  1059,   316,   317,   318,   319,   320,   321,  1060,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,  1061,   353,
     593,   355,   356,   357,  1062,  1063,   360,   361,   594,   363,
     364,  1064,   366,   367,   368,   369,   370,   371,  1065,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,  1066,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,
     423,   424,   425,  1071,  1072,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,  1073,   442,
    1074,   444,   445,   446,   447,   448,   449,   450,   451,   452,
    1075,  1076,   600,  1077,   457,   458,   459,     0,   460,   601,
     462,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
    1590,  1591,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,   972,   973,     0,   974,   975,     0,
       0,     0,   976,   977,   978,     0,     0,     0,     0,     0,
       0,     0,   979,     0,   980,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,   983,   984,     0,   985,     0,     0,     0,
       0,     0,   986,     0,   987,     0,     0,   988,     0,     0,
     989,     0,   991,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,   997,   998,   999,
    1000,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1003,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,     0,     0,     0,     0,     0,  1007,  1008,     0,  1009,
    1010,  1011,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,  1018,  1019,     0,
       0,     0,     0,     0,  1020,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,  1022,
      55,    56,    57,    58,    59,    60,  1023,    62,    63,    64,
      65,    66,    67,    68,  1024,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
    1025,    85,   571,    87,    88,    89,    90,    91,   572,  1026,
      93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,  1034,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,  1035,  1036,  1037,   575,  1038,
    1039,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,  1040,   172,   173,   581,
     175,   176,  1041,   178,  1042,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,  1043,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,  1044,  1045,
     213,   214,   215,  1046,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,  1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,
    1051,  1052,   265,   266,   267,   268,   269,   270,   271,   272,
    1053,  1054,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,  1055,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,  1056,   303,   304,   305,   306,   307,  1057,  1058,   310,
     589,   311,   590,   313,   314,  1059,   316,   317,   318,   319,
     320,   321,  1060,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,  1061,   353,   593,   355,   356,   357,  1062,  1063,
     360,   361,   594,   363,   364,  1064,   366,   367,   368,   369,
     370,   371,  1065,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,  1066,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
    1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,  1073,   442,  1074,   444,   445,   446,   447,   448,
     449,   450,   451,   452,  1075,  1076,   600,  1077,   457,   458,
     459,     0,   460,   601,   462,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,  1079,  1080,     0,     0,     0,     0,
    1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   945,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,   964,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   971,   972,   973,
       0,   974,   975,     0,     0,     0,   976,   977,   978,     0,
       0,     0,     0,     0,     0,     0,   979,     0,  2513,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   983,   984,     0,
     985,     0,     0,     0,     0,     0,   986,     0,   987,     0,
       0,   988,     0,     0,   989,     0,   991,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,   997,   998,   999,  1000,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1003,     0,     0,     0,     0,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
    1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,
       0,     0,     0,     0,     0,     0,     0,  1013,  1014,  1015,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,  1022,    55,    56,    57,    58,    59,    60,
    1023,    62,    63,    64,    65,    66,    67,    68,  1024,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1025,    85,   571,    87,    88,    89,
      90,    91,   572,  1026,    93,  1027,  1028,    96,  1029,  1030,
    1031,  1032,  1033,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,  1034,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,  1035,
    1036,  1037,   575,  1038,  1039,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
    1040,   172,   173,   581,   175,   176,  1041,   178,  1042,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
    1043,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,  1044,  1045,   213,   214,   215,  1046,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,  1047,   255,  1048,   257,   258,
     259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,
     269,   270,   271,   272,  1053,  1054,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,  1055,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1056,   303,   304,   305,   306,
     307,  1057,  1058,   310,   589,   311,   590,   313,   314,  1059,
     316,   317,   318,   319,   320,   321,  1060,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,  1061,   353,   593,   355,
     356,   357,  1062,  1063,   360,   361,   594,   363,   364,  1064,
     366,   367,   368,   369,   370,   371,  1065,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,  1066,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,
     425,  1071,  1072,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,  1073,   442,  1074,   444,
     445,   446,   447,   448,   449,   450,   451,   452,  1075,  1076,
     600,  1077,   457,   458,   459,     0,   460,   601,   462,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,     0,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,   972,   973,     0,   974,   975,     0,     0,     0,
     976,   977,   978,     0,     0,     0,     0,     0,     0,     0,
     979,     0,  2515,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,   983,   984,     0,   985,     0,     0,     0,     0,     0,
     986,     0,   987,     0,     0,   988,     0,     0,   989,     0,
     991,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,   997,   998,   999,  1000,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1003,     0,     0,
       0,     0,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,     0,
       0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,
       0,     0,     0,  1012,     0,     0,     0,     0,     0,     0,
       0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1017,  1018,  1019,     0,     0,     0,
       0,     0,  1020,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,  1022,    55,    56,
      57,    58,    59,    60,  1023,    62,    63,    64,    65,    66,
      67,    68,  1024,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,  1025,    85,
     571,    87,    88,    89,    90,    91,   572,  1026,    93,  1027,
    1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,  1034,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,  1035,  1036,  1037,   575,  1038,  1039,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,  1040,   172,   173,   581,   175,   176,
    1041,   178,  1042,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,  1043,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,  1044,  1045,   213,   214,
     215,  1046,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,  1047,
     255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,
     265,   266,   267,   268,   269,   270,   271,   272,  1053,  1054,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1055,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1056,
     303,   304,   305,   306,   307,  1057,  1058,   310,   589,   311,
     590,   313,   314,  1059,   316,   317,   318,   319,   320,   321,
    1060,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
    1061,   353,   593,   355,   356,   357,  1062,  1063,   360,   361,
     594,   363,   364,  1064,   366,   367,   368,   369,   370,   371,
    1065,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,  1066,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1067,  1068,
    1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
    1073,   442,  1074,   444,   445,   446,   447,   448,   449,   450,
     451,   452,  1075,  1076,   600,  1077,   457,   458,   459,     0,
     460,   601,   462,  1078,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,  1080,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   946,   947,   948,   949,     0,     0,     0,     0,     0,
       0,     0,   950,   951,     0,   952,     0,     0,     0,     0,
       0,     0,   953,   954,     0,     0,   955,   956,   957,   958,
       0,   959,   960,     0,   961,   962,     0,     0,     0,     0,
     963,     0,     0,     0,   964,     0,     0,   965,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   971,   972,   973,     0,   974,   975,
       0,     0,     0,   976,   977,   978,     0,     0,     0,     0,
       0,     0,     0,   979,     0,  1589,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   981,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   982,
       0,     0,     0,     0,   983,   984,     0,   985,     0,     0,
       0,     0,     0,   986,     0,   987,     0,     0,   988,     0,
       0,     0,     0,   991,     0,   992,   993,   994,     0,   995,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   996,     0,     0,     0,   997,   998,
     999,  1000,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
    1003,     0,     0,     0,     0,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,     0,     0,  1007,  1008,     0,
    1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,     0,
       0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
       0,     0,     0,     0,     0,  1020,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
    1022,    55,    56,    57,    58,    59,    60,  1023,    62,    63,
      64,    65,    66,    67,    68,  1024,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,  1025,    85,   571,    87,    88,    89,    90,    91,   572,
    1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,  1034,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,  1035,  1036,  1037,   575,
    1038,  1039,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,  1040,   172,   173,
     581,   175,   176,  1041,   178,  1042,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,  1043,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,  1044,
    1045,   213,   214,   215,  1046,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,  1047,   255,  1048,   257,   258,   259,   260,  1049,
    1050,  1051,  1052,   265,   266,   267,   268,   269,   270,   271,
     272,  1053,  1054,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,  1055,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,  1056,   303,   304,   305,   306,   307,  1057,  1058,
     310,   589,   311,   590,   313,   314,  1059,   316,   317,   318,
     319,   320,   321,  1060,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,  1061,   353,   593,   355,   356,   357,  1062,
    1063,   360,   361,   594,   363,   364,  1064,   366,   367,   368,
     369,   370,   371,  1065,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,  1066,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,  1073,   442,  1074,   444,   445,   446,   447,
     448,   449,   450,   451,   452,  1075,  1076,   600,  1077,   457,
     458,   459,   946,   460,   601,   462,  1078,     0,     0,     0,
       0,     0,     0,     0,     0,  5811,  5812,     0,     0,     0,
       0,     0,     0,     0,     0,  5813,     0,     0,     0,  1084,
       0,     0,  1085,  1086,     0,     0,     0,     0,     0,     0,
       0,   963,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     968,     0,     0,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   974,
     975,     0,     0,     0,  1626,  1627,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   988,
       0,     0,     0,     0,     0,     0,     0,   993,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,     0,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,  1628,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  2547,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,  3035,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  2548,   420,   421,  2549,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1085,  1086,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   566,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   567,   568,    74,    75,    76,    77,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,    90,    91,   572,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
     577,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   579,   580,   170,
       0,   171,   172,   173,   581,   175,   176,   177,   178,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,   358,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   600,   456,   457,   458,   459,  3285,   460,   601,   462,
     463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3036,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   696,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,  1163,   460,   601,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3036,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1164,   696,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,  1165,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,  1166,   175,   176,   177,
     178,   179,   582,  1167,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,  1168,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,  1169,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,  1170,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
    1171,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,  1172,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,  1173,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,  1174,   456,   457,   458,   459,  1163,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1164,     0,  1175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,  1165,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,  1166,   175,   176,   177,   178,   179,   582,
    1167,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,  1168,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,  1169,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,  1170,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,  1171,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,  1172,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
    1174,   456,   457,   458,   459,     0,   460,   601,   462,   463,
     862,   863,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1175,     0,     0,     0,
       0,     0,     0,     0,     0,   864,     0,     0,     0,     0,
     865,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   866,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   867,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   868,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,   869,
       0,     0,     0,     0,   870,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     768,     0,     0,     0,     0,     0,     0,   871,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   872,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   873,     0,     0,     0,     0,     0,
       0,     0,   874,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   682,     0,     0,
       0,     0,     0,     0,   875,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   876,   877,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   878,   154,   155,   156,
     157,   879,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   880,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   881,
     318,   319,   320,   882,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     883,   339,   340,   591,   342,   884,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   885,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   886,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,  1155,   863,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   864,     0,     0,     0,     0,   865,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   866,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   867,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   868,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,   869,     0,     0,
       0,     0,   870,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   768,     0,
       0,     0,     0,     0,     0,   871,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   872,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   873,     0,     0,     0,     0,     0,     0,     0,
     874,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   682,     0,     0,     0,     0,
       0,     0,   875,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   876,   877,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,  1156,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   878,   154,   155,   156,   157,   879,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   880,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   881,   318,   319,
     320,  1157,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   883,   339,
     340,   591,   342,   884,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   885,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,  1860,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   886,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   682,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
    4949,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,     1,     2,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     3,     0,
       4,     0,     5,     0,     6,     0,     0,     0,     0,     0,
       0,     0,     7,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     8,     0,     0,     9,     0,    10,    11,     0,     0,
       0,     0,     0,     0,    12,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    14,     0,     0,     0,     0,     0,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,    18,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,    22,     0,     0,     0,     0,    23,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    24,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    25,    26,     0,     0,     0,     0,     0,
       0,     0,     0,    27,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,    30,    31,    32,     0,
      33,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,     0,     0,     0,    36,
      37,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,    39,     0,    40,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    41,    42,
       0,     0,     0,     0,     0,     0,    43,    44,    45,    46,
       0,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,     0,
      85,    86,    87,    88,    89,    90,    91,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,     0,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,     0,   170,     0,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       0,   460,   461,   462,   463,     1,     2,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     3,     0,     4,     0,     5,
       0,     6,     0,     0,     0,     0,     0,     0,     0,     7,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     8,     0,
       0,     9,     0,    10,    11,     0,     0,     0,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    14,     0,     0,     0,     0,     0,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
      18,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,    22,     0,     0,     0,     0,    23,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      25,    26,     0,     0,     0,     0,     0,     0,     0,     0,
      27,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,    30,    31,    32,     0,    33,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    35,     0,     0,     0,    36,    37,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    38,     0,    39,     0,
      40,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    41,    42,     0,     0,     0,
       0,     0,     0,    43,    44,    45,    46,     0,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,     0,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,     0,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,     0,
     170,     0,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     0,   460,   461,
     462,   463,     1,     2,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     3,     0,     0,     0,     5,     0,     6,     0,
       0,     0,     0,     0,     0,     0,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     9,     0,
      10,    11,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    24,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    25,    26,     0,
       0,     0,     0,     0,     0,     0,     0,    27,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
      30,     0,    32,     0,    33,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
       0,     0,     0,    36,    37,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,    39,     0,    40,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    42,     0,     0,     0,     0,     0,     0,
      43,    44,    45,    46,     0,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
       0,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,     0,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,     0,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,     0,   170,     0,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,     0,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,  1952,   460,   461,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1626,
    1627,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,  4590,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1953,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   730,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,  3385,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3386,     0,     0,     0,     0,     0,     0,  4591,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -2644,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   731,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,  4592,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,  4590,   460,   601,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4593,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   730,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
    3385,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3386,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   731,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,  4592,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,  4652,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,     0,   460,   601,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,  4593,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   682,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
    1813,   460,   601,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1814,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1815,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   682,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,  1400,  1401,     0,
    1816,     0,     0,  1402,  1403,     0,     0,     0,     0,     0,
       0,     0,     0,  1404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1405,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1406,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1408,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1409,  1410,     0,  1411,     0,
       0,     0,     0,     0,     0,     0,  1412,  1413,  1414,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1415,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1416,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1417,     0,     0,     0,     0,
       0,  1418,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1419,  1420,  1421,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1422,  1423,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
       0,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,     0,   568,  1424,    75,
    1425,  1426,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,     0,  1427,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,  1428,   126,  1429,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,     0,   145,   146,   147,  1430,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
    1431,   579,   580,   170,     0,   171,   172,   173,     0,   175,
     176,  1432,  1433,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,  1434,   209,   586,   210,   211,   212,   213,
     214,   215,  1435,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1436,  1437,
    1438,   265,   266,   267,   268,   269,  1439,  1440,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,     0,  1441,  1442,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,  1443,  1444,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,  1445,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,  1446,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,     0,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,  1447,   417,   418,  1448,
     420,   421,  1449,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,     0,  1450,   446,   447,   448,   449,
     450,   451,   452,   453,   454,  1451,   456,   457,   458,   459,
       0,   460,   601,   462,  1452,  1400,  4243,     0,     0,     0,
       0,  1402,  1403,     0,     0,     0,     0,     0,     0,     0,
       0,  1404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1405,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1406,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1408,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1409,  1410,     0,  1411,     0,     0,     0,
       0,     0,     0,     0,  1412,  1413,  1414,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1415,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1416,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1417,     0,     0,     0,     0,     0,  1418,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1419,  1420,  1421,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4244,
    1423,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,     0,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,     0,   568,  1424,    75,  1425,  1426,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,     0,  1427,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,  1428,   126,  1429,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,     0,   145,   146,   147,  1430,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,  1431,   579,
     580,   170,     0,   171,   172,   173,     0,   175,   176,  1432,
    1433,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,  1434,   209,   586,   210,   211,   212,   213,   214,   215,
    1435,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,  1436,  1437,  1438,   265,
     266,   267,   268,   269,  1439,  1440,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,     0,
    1441,  1442,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,  1443,  1444,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,  4245,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,  4246,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,     0,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,  1447,   417,   418,  1448,   420,   421,
    1449,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,     0,  4247,   446,   447,   448,   449,   450,   451,
     452,   453,   454,  1451,   456,   457,   458,   459,     0,   460,
     601,   462,  1452,  1400,  1401,     0,     0,     0,     0,  1402,
    1403,     0,     0,     0,     0,     0,     0,     0,     0,  1404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1405,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1406,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1408,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1409,  1410,     0,  1411,     0,     0,     0,     0,     0,
       0,     0,  1412,  1413,  1414,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1415,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1416,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1417,     0,     0,     0,     0,     0,  1418,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1419,  1420,  1421,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1422,  1423,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,     0,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,     0,   568,  1424,    75,  1425,  1426,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,     0,  1427,   572,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,  1428,
     126,  1429,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
       0,   145,   146,   147,  1430,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,  1431,   579,   580,   170,
       0,   171,   172,   173,     0,   175,   176,  1432,  1433,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,  1434,
     209,   586,   210,   211,   212,   213,   214,   215,  1435,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,  1436,  1437,  1438,   265,   266,   267,
     268,   269,  1439,  1440,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,     0,  1441,  1442,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,  1443,  1444,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,  1445,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,     0,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,  5296,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,  1447,   417,   418,  1448,   420,   421,  1449,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
       0,  1450,   446,   447,   448,   449,   450,   451,   452,   453,
     454,  1451,   456,   457,   458,   459,     0,   460,   601,   462,
    1452,  1400,  4243,     0,     0,     0,     0,  1402,  1403,     0,
       0,     0,     0,     0,     0,     0,     0,  1404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1405,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1406,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1407,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1408,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1409,
    1410,     0,  1411,     0,     0,     0,     0,     0,     0,     0,
    1412,  1413,  1414,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1415,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1416,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1417,
       0,     0,     0,     0,     0,  1418,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1419,  1420,  1421,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4244,  1423,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,     0,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
       0,   568,  1424,    75,  1425,  1426,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,     0,
    1427,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,  1428,   126,  1429,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,     0,   145,
     146,   147,  1430,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,  1431,   579,   580,   170,     0,   171,
     172,   173,     0,   175,   176,  1432,  1433,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,  1434,   209,   586,
     210,   211,   212,   213,   214,   215,  1435,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,  1436,  1437,  1438,   265,   266,   267,   268,   269,
    1439,  1440,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,     0,  1441,  1442,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
    1443,  1444,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,  4245,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,  5677,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,     0,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
    1447,   417,   418,  1448,   420,   421,  1449,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,  1829,  4247,
     446,   447,   448,   449,   450,   451,   452,   453,   454,  1451,
     456,   457,   458,   459,     0,   460,   601,   462,  1452,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1830,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   768,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   682,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
    1813,   460,   601,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1814,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   682,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
    1813,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   682,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
    1286,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,     0,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1287,  1288,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1289,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,  2610,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,  1347,   460,   601,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   768,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,     0,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,     0,   460,
     601,   462,   463,   810,   811,     0,     0,     0,     0,     0,
       0,     0,     0,   812,     0,     0,     0,     0,     0,     0,
       0,  1721,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,     0,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,     0,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,   813,   814,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     815,   456,   457,   458,   459,     0,   460,   601,   462,   463,
    1347,   865,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   768,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   682,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,  1347,   460,   601,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   768,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,   865,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   768,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   682,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,   812,   460,   601,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,     0,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,     0,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   815,   456,
     457,   458,   459,     0,   460,   601,   462,   463,  2323,     0,
       0,     0,  5033,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2324,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4101,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4102,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4103,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   682,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4104,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
       0,   460,   601,   462,   463,  2323,     0,     0,     0,  5942,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2324,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4101,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4102,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4103,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   682,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4104,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,  2323,     0,     0,     0,  6020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2324,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4101,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4102,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4103,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   682,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4104,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,  2949,   460,   601,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   682,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,  1806,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,   581,   175,
     176,   177,   178,   179,   582,   181,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   600,   456,   457,   458,   459,
    1806,   460,   601,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   566,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   567,   568,    74,    75,    76,    77,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,    90,    91,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,   577,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   579,
     580,   170,     0,   171,   172,   173,   581,   175,   176,   177,
     178,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,   358,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,  2602,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   600,   456,   457,   458,   459,  3378,   460,
     601,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   566,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   567,   568,    74,    75,    76,    77,    78,    79,
     569,    81,    82,    83,    84,   570,    85,   571,    87,    88,
      89,    90,    91,   572,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   573,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   574,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   575,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   576,   141,   142,   143,   144,
     577,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   578,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   579,   580,   170,
       0,   171,   172,   173,   581,   175,   176,   177,   178,   179,
     582,   181,   182,   583,   184,   185,   584,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   585,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   587,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   588,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   592,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   593,
     355,   356,   357,   358,   359,   360,   361,   594,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   595,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   596,   393,
     394,   597,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   598,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   599,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   600,   456,   457,   458,   459,  5103,   460,   601,   462,
     463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,  5111,   460,   601,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   566,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   567,   568,
      74,    75,    76,    77,    78,    79,   569,    81,    82,    83,
      84,   570,    85,   571,    87,    88,    89,    90,    91,   572,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   573,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   574,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   575,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   576,   141,   142,   143,   144,   577,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     578,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   579,   580,   170,     0,   171,   172,   173,
     581,   175,   176,   177,   178,   179,   582,   181,   182,   583,
     184,   185,   584,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   585,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   587,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   588,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   592,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   593,   355,   356,   357,   358,
     359,   360,   361,   594,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   595,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   596,   393,   394,   597,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   598,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   599,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   600,   456,   457,
     458,   459,  3309,   460,   601,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   682,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     566,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   567,   568,    74,    75,
      76,    77,    78,    79,   569,    81,    82,    83,    84,   570,
      85,   571,    87,    88,    89,    90,    91,   572,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   573,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   574,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   575,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   576,
     141,   142,   143,   144,   577,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   578,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   579,   580,   170,     0,   171,   172,   173,  3310,   175,
     176,   177,   178,   179,   582,     0,   182,   583,   184,   185,
     584,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   585,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   587,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     588,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   592,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   593,   355,   356,   357,   358,   359,   360,
     361,   594,   363,   364,   365,   366,   367,   368,   369,     0,
     371,   372,   373,   595,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   596,   393,   394,   597,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   598,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   599,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,  3311,   456,   457,   458,   459,
       0,   460,   601,   462,   463,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,  2466,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,     0,   460,   601,   462,   463,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  6170,     0,
       0,     0,     0,     0,  2467,  6171,   768,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   682,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1827,   768,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   682,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   566,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     567,   568,    74,    75,    76,    77,    78,    79,   569,    81,
      82,    83,    84,   570,    85,   571,    87,    88,    89,    90,
      91,   572,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   573,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   574,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   575,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   576,   141,   142,   143,   144,   577,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   578,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   579,   580,   170,     0,   171,
     172,   173,   581,   175,   176,   177,   178,   179,   582,   181,
     182,   583,   184,   185,   584,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   585,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     587,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   588,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   592,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   593,   355,   356,
     357,   358,   359,   360,   361,   594,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   595,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   596,   393,   394,   597,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   598,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   599,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   600,
     456,   457,   458,   459,     0,   460,   601,   462,   463,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2481,   768,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   682,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3471,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,  2466,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,  1626,  1627,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2467,  6171,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1953,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,  2466,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,  1626,  1627,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3883,     0,     0,     0,     0,
       0,  2467,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,  1628,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1796,     0,     0,     0,     0,  1629,     0,
       0,     0,     0,     0,     0,  1085,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,  1626,  1627,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   696,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,  1628,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1085,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,  2466,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2467,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,  3036,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   696,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,  5085,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4740,     0,
       0,     0,     0,     0,     0,  4593,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4593,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   696,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   744,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   745,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   746,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   696,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4593,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,  2994,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2524,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   678,   679,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3649,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3650,   654,  3651,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,  1482,
     460,   601,   462,   463,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2995,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,  1560,   460,   601,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,  1561,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,  3011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
    1626,  1627,     0,     0,     0,     0,     0,     0,     0,     0,
    4293,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,  4656,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,  1626,  1627,
       0,     0,     0,     0,     0,     0,     0,     0,  4904,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,  5338,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,  5433,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   768,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1815,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
    1626,  1627,     0,  1816,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2635,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2636,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2637,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2638,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
    2639,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,  1626,  1627,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2635,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2636,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4276,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2638,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,  2639,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,  1626,  1627,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2635,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2636,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2638,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,  2639,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   653,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   654,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   768,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   654,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,  1626,  1627,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1672,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4526,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   682,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,   594,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5724,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,   581,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   600,   456,   457,   458,   459,     0,
     460,   601,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,   581,   175,   176,   177,   178,   179,   582,   181,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   691,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   600,   456,
     457,   458,   459,     0,   460,   601,   462,   463,  1626,  1627,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   566,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   567,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,   570,    85,   571,    87,
      88,    89,    90,    91,   572,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   573,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   574,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   576,   141,   142,   143,
     144,   577,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,   580,
     170,     0,   171,   172,   173,   581,   175,   176,   177,   178,
     179,   582,   181,   182,   583,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   587,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   588,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     593,   355,   356,   357,   358,   359,   360,   361,   594,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     595,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   598,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   600,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   566,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   567,   568,    74,
      75,    76,    77,    78,    79,   569,    81,    82,    83,    84,
     570,    85,   571,    87,    88,    89,    90,    91,   572,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   573,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   574,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   575,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     576,   141,   142,   143,   144,   577,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   578,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   579,   580,   170,     0,   171,   172,   173,   581,
     175,   176,   177,   178,   179,   582,   181,   182,   583,   184,
     185,   584,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   585,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   587,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   588,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   592,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   593,   355,   356,   357,   358,   359,
     360,   361,  1974,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   595,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   596,   393,   394,   597,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   598,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   599,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   600,   456,   457,   458,
     459,     0,   460,   601,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   566,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   567,   568,    74,    75,    76,    77,    78,    79,   569,
      81,    82,    83,    84,   570,    85,   571,    87,    88,    89,
      90,    91,   572,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   573,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   574,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   575,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   576,   141,   142,   143,   144,   577,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   578,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,  2729,   168,   579,   580,   170,     0,
     171,   172,   173,   581,   175,   176,   177,   178,   179,   582,
     181,   182,   583,   184,   185,   584,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     585,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,  2730,   274,   275,   276,   277,   278,
     279,   587,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   588,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   592,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   593,   355,
     356,   357,   358,   359,   360,   361,   594,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   595,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   596,   393,   394,
     597,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   598,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   599,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     600,   456,   457,   458,   459,     0,   460,   601,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   566,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   567,   568,    74,    75,    76,
      77,    78,    79,   569,    81,    82,    83,    84,   570,    85,
     571,    87,    88,    89,    90,    91,   572,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   573,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   574,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   575,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   576,   141,
     142,   143,   144,   577,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   578,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     579,   580,   170,     0,   171,   172,   173,  2717,   175,   176,
     177,   178,   179,   582,   181,   182,   583,   184,   185,   584,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   585,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   587,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   588,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   592,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   593,   355,   356,   357,   358,   359,   360,   361,
     594,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   595,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   596,   393,   394,   597,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   598,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   599,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,     0,   456,   457,   458,   459,     0,
     460,   601,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   682,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   566,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   567,
     568,    74,    75,    76,    77,    78,    79,   569,    81,    82,
      83,    84,   570,    85,   571,    87,    88,    89,    90,    91,
     572,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   573,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   574,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     575,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   576,   141,   142,   143,   144,   577,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   578,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   579,   580,   170,     0,   171,   172,
     173,  3310,   175,   176,   177,   178,   179,   582,     0,   182,
     583,   184,   185,   584,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   585,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   587,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   588,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   592,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   593,   355,   356,   357,
     358,   359,   360,   361,   594,   363,   364,   365,   366,   367,
     368,   369,     0,   371,   372,   373,   595,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   596,   393,   394,   597,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     598,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     599,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,  3311,   456,
     457,   458,   459,     0,   460,   601,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,     0,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,     0,   568,    74,    75,    76,    77,    78,
      79,   569,    81,    82,    83,    84,     0,    85,   571,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   114,     0,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   575,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   578,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   579,     0,
     170,     0,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   582,   181,   182,     0,   184,   185,   584,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   585,   201,   202,   203,   204,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   342,   343,
     592,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,     0,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   596,
     393,   394,   597,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   599,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     0,   460,   601,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1550,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,     0,    47,     0,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,     0,    62,    63,    64,
      65,    66,    67,    68,    69,     0,     0,     0,     0,    74,
      75,    76,    77,    78,     0,     0,    81,    82,    83,    84,
       0,     0,     0,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,    96,     0,     0,     0,     0,     0,     0,
     102,     0,   104,     0,   106,   107,  1551,   109,   110,   111,
     112,   113,   114,     0,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,     0,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,     0,     0,     0,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,     0,     0,     0,     0,     0,   172,   173,  1552,
     175,   176,   177,   178,   179,     0,   181,   182,     0,   184,
     185,     0,     0,   187,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   201,   202,   203,
     204,   205,   206,   207,   208,   209,     0,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,    16,    17,     0,     0,   296,   297,     0,   299,   300,
     301,   302,     0,   304,   305,   306,   307,   308,   309,     0,
       0,     0,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     340,     0,   342,   343,     0,   345,   346,     0,   348,   349,
     350,   351,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,     0,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   372,   373,     0,     0,   376,     0,     0,   379,
     380,   381,     0,   383,     0,   385,   386,   387,   388,     0,
     389,   390,   391,     0,   393,   394,     0,   396,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,     0,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   428,
     429,   430,     0,   432,   433,   434,   435,     0,     0,   438,
     439,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,     0,     0,   457,   458,
       0,     0,   460,     0,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1568,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
       0,    47,     0,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,     0,    62,    63,    64,    65,
      66,    67,    68,    69,     0,     0,     0,     0,    74,    75,
      76,    77,    78,     0,     0,    81,    82,    83,    84,     0,
       0,     0,    87,    88,    89,    90,    91,     0,    92,    93,
      94,     0,    96,     0,     0,     0,     0,     0,     0,   102,
       0,   104,     0,   106,   107,  1551,   109,   110,   111,   112,
     113,   114,     0,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,     0,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,     0,     0,     0,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,     0,     0,     0,     0,     0,   172,   173,  1552,   175,
     176,   177,   178,   179,     0,   181,   182,     0,   184,   185,
       0,     0,   187,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   201,   202,   203,   204,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
      16,    17,     0,     0,   296,   297,     0,   299,   300,   301,
     302,     0,   304,   305,   306,   307,   308,   309,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   340,
       0,   342,   343,     0,   345,   346,     0,   348,   349,   350,
     351,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,     0,   363,   364,   365,     0,   367,   368,   369,   370,
       0,   372,   373,     0,     0,   376,     0,     0,   379,   380,
     381,     0,   383,     0,   385,   386,   387,   388,     0,   389,
     390,   391,     0,   393,   394,     0,   396,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   428,   429,
     430,     0,   432,   433,   434,   435,     0,     0,   438,   439,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,     0,     0,   457,   458,     0,
       0,   460,     0,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,     0,
      47,     0,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,     0,    62,    63,    64,    65,    66,
      67,    68,    69,     0,     0,     0,     0,    74,    75,    76,
      77,    78,     0,     0,    81,    82,    83,    84,     0,     0,
       0,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       0,    96,     0,     0,     0,     0,     0,     0,   102,     0,
     104,     0,   106,   107,  1551,   109,   110,   111,   112,   113,
     114,     0,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,     0,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,     0,     0,     0,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
       0,     0,     0,     0,     0,   172,   173,  1552,   175,   176,
     177,   178,   179,     0,   181,   182,     0,   184,   185,     0,
       0,   187,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   201,   202,   203,   204,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,    16,
      17,     0,     0,   296,   297,     0,   299,   300,   301,   302,
       0,   304,   305,   306,   307,   308,   309,     0,     0,     0,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   340,     0,
     342,   343,     0,   345,   346,     0,   348,   349,   350,   351,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
       0,   363,   364,   365,     0,   367,   368,   369,   370,     0,
     372,   373,     0,     0,   376,     0,     0,   379,   380,   381,
    5483,   383,     0,   385,   386,   387,   388,     0,   389,   390,
     391,     0,   393,   394,     0,   396,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   428,   429,   430,
       0,   432,   433,   434,   435,     0,     0,   438,   439,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,     0,     0,   457,   458,     0,     0,
     460,     0,   462,   463,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,     0,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,     0,   568,     0,    75,     0,     0,
      78,    79,   569,    81,    82,    83,    84,   570,    85,   571,
      87,    88,    89,     0,     0,   572,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     573,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     574,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,     0,   126,     0,   128,   575,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   576,   141,   142,
     143,   144,     0,   145,   146,   147,     0,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   578,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,     0,   579,
     580,   170,     0,   171,   172,   173,  5484,   175,   176,     0,
       0,   179,   582,   181,   182,   583,   184,   185,   584,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   585,   201,   202,   203,   204,   205,   206,
     207,     0,   209,   586,   210,   211,   212,   213,   214,   215,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,     0,     0,   265,
     266,   267,   268,   269,     0,     0,   272,   273,   274,   275,
     276,   277,   278,   279,   587,   280,   281,   282,   283,     0,
       0,     0,   287,   288,   289,   290,   291,   292,   588,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,     0,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   592,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   593,   355,   356,   357,     0,   359,   360,   361,   594,
     363,   364,   365,   366,   367,   368,     0,   370,   371,   372,
     373,   595,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     596,   393,   394,   597,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   417,   418,     0,   420,   421,
       0,   423,   424,   425,   426,   598,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   599,   438,   439,   440,   441,
     442,   443,     0,     0,   446,   447,   448,   449,   450,   451,
     452,   453,   454,  1451,   456,   457,   458,   459,     0,   460,
     601,   462
};

static const yytype_int16 yycheck[] =
{
       0,   668,   669,   755,   557,    24,   669,   820,  1224,  1547,
    1608,     0,  1411,   918,   518,  1722,  1646,  1206,  1411,  1787,
     555,   619,  1169,  1170,  1171,  1324,   547,  1775,  2129,   550,
    1323,  1178,   619,   733,   734,  1224,   565,    72,  1794,  1324,
    2056,  2054,  1865,  2298,   668,  2026,     0,     0,  2029,  2210,
       0,  1487,  2278,     0,  1865,     0,     0,  1735,  2779,   855,
    2218,  2691,  2958,  1532,  1836,  1615,  2028,  3489,  3001,  2200,
     668,  1501,  1337,  3074,  3075,  1146,  2030,   662,    34,  3221,
    2804,   668,  2105,   983,  3043,  1428,   621,  1824,   623,   624,
     625,   626,   627,  3564,   629,   630,  2758,  1834,   633,   634,
    1850,  1851,  3447,  3564,  1447,  1448,  1449,  1468,   983,  1452,
    3624,  4061,  3599,  3683,  1340,  3835,   709,  4162,   690,   712,
     805,   763,  1340,  4047,  1467,  3624,  3624,   763,  1028,  3491,
    3338,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  1771,  1772,  1773,  2199,  3624,  2689,  1401,     0,  1403,
     169,  1405,    73,  1407,  3624,  3624,  2022,  3503,  3716,  1407,
    1787,  1415,  3514,  1283,  4246,  2069,  2290,  1415,  1422,   819,
    1424,  1952,   637,  1624,  2713,  3090,  2860,  1431,   637,  4615,
    2930,  4045,  2860,  1431,  1952,  1085,  2930,  1441,  3540,  3541,
    3357,  1445,  3564,  1441,     0,  3434,  1450,  3570,  2299,  3366,
    1950,   666,  3273,  3274,  4089,  3854,  3836,   666,  1462,  1463,
    1464,  1465,  1466,  4152,  1462,  4434,  3836,  5048,  4152,  1857,
     818,    30,   820,  4152,  4278,     0,  3191,  4499,  4746,  2157,
    1986,   818,  2252,   820,  2254,  2255,  2580,  1875,  2186,    11,
     565,    11,    28,  1148,  3956,  4153,  2930,  4155,    11,    74,
    4158,    11,  2930,   565,  3606,  3607,   565,    26,  1378,   565,
      61,     6,  1900,  1901,  4172,     9,    10,    11,     9,    10,
      26,     6,  2295,     9,    10,    80,    61,    86,   105,  1568,
    2841,     9,    10,     6,  2852,   945,    91,     9,    10,    32,
    1226,   105,    95,    61,    24,    80,  2920,    86,    93,  3562,
      12,    93,  3613,    50,   105,   177,    91,    80,    80,  3540,
    3541,   846,   177,   153,  3544,    93,   105,  3455,    91,    91,
    3257,    80,   341,   858,   859,  1952,   847,   848,   849,   850,
     235,  1746,    91,     9,    10,    73,   194,   105,  2094,  1754,
    1755,    61,  1757,  1758,  1409,     9,    10,  1412,  4035,    12,
       9,    10,    61,    65,  1419,  1255,     9,    10,  4412,     9,
      10,   115,     6,   126,   230,   138,   126,    61,  2081,  1434,
    4967,  4728,   235,  3338,   182,  3606,  3607,  3529,  3586,   138,
      17,   114,   261,     9,    10,   105,   177,   218,    17,  4607,
      83,   227,  1594,  1595,  1203,    32,   105,    34,     9,    10,
     177,  1603,    65,  4467,   230,  5028,   361,  5686,    86,  4502,
     374,   105,   146,  2126,   283,     6,  1225,     9,    10,  1079,
    1080,  1081,   354,  4468,     9,    10,   105,  4076,   121,    93,
     244,  1091,  1503,  1635,   220,  1637,    95,   181,  3860,   183,
     181,   370,   183,   235,  3827,   181,  3883,   183,     9,    10,
      58,  1653,  1654,   181,  1656,   183,   114,   153,  1529,   181,
     149,   183,  1664,  1665,   105,  4040,  1668,  1410,  1411,  1410,
    1411,  1414,  1411,  1414,    32,  1414,    34,   358,  1421,   235,
    1421,    11,  1421,   272,  1427,    80,  1427,   235,  1427,   177,
     168,   169,    80,  5658,   130,   173,    91,   183,   268,  4186,
      35,  3363,  2788,    91,    11,   181,    57,   183,  3051,   149,
     446,  2737,    60,    63,    76,   376,   124,   181,   207,   183,
     569,  5476,   181,   296,   183,  5650,   114,  4755,   181,   298,
     183,   181,  2001,   183,     9,    10,    57,   296,    89,    10,
       9,    10,    69,   177,    15,    63,   100,   283,  2304,  2569,
    2570,  2571,  2572,   277,   105,   181,  5326,   183,   302,   194,
    1245,   302,     9,    10,   177,    61,   302,   194,    89,   347,
     181,     6,   183,    17,   302,   235,  5701,     9,    10,   194,
     302,   324,   194,   276,   105,   227,     9,    10,    32,   181,
      34,   183,   514,    32,   272,   146,   181,   194,   183,   230,
     584,   209,   120,   318,   740,   348,  1306,  6098,  1308,  1309,
    1310,  1311,  1312,  1313,   263,    93,  3575,   235,   325,   619,
     181,  3586,   183,   174,   282,   146,   302,  1220,    86,   217,
     619,     9,    10,    68,   640,   162,   636,   391,   302,  6130,
     576,    95,   149,   302,   230,   369,  2804,   636,   784,   302,
     650,  2081,   302,   174,   125,   433,   287,   435,   115,  3867,
    1807,  4148,  4084,   235,   263,   143,   137,   263,   668,   669,
     298,   125,   619,   130,   674,  5272,   302,   173,   662,   668,
     298,  1828,   193,   636,   263,  5640,  4059,   324,   283,   636,
     690,   302,   128,   614,  1987,   263,  2126,   168,   169,   264,
     207,   287,  1498,  1388,   660,   342,   181,   248,   183,   235,
     302,   348,   181,  1613,   183,   173,   423,   302,   654,   105,
     769,   668,   273,   438,  1366,  4087,   114,   293,  1628,  1629,
     280,  5501,  1803,   295,   181,   375,   183,   374,  1613,   227,
     601,   302,   213,   235,   235,   677,   490,   525,  2033,   181,
    1821,   183,   273,   283,  1629,   564,  2055,   481,   181,   298,
     183,   149,   280,  2028,  6043,  6044,  3052,   619,     9,    10,
     361,   230,     9,    10,   309,     9,    10,  1848,  2732,     9,
      10,   702,   711,  4876,   636,   443,  4671,   335,   709,  5954,
     348,   712,   673,  1322,   715,  4507,  2226,   797,   762,  4511,
    3942,  5019,   207,   181,  2576,   183,   615,   762,  4180,   495,
     689,   230,   812,   619,   272,  2031,   668,  5045,   818,  1504,
     820,   777,   458,   812,   602,  1329,   635,   302,   287,   818,
     636,   820,   386,   302,  5053,   568,   532,  2799,  2575,   708,
     649,    10,  2031,  2069,   619,  3898,  3899,  3900,  3901,   728,
    4364,  2069,   291,  1374,  5477,   302,  4910,  4921,  2989,   812,
    3544,   636,   671,  3613,   769,   812,  3544,   298,   287,  3613,
     302,   818,   708,   820,     9,    10,  2169,     9,    10,   302,
     324,  1781,  2560,  2176,   747,   514,  4238,  1787,  4151,  5108,
    1532,   629,   764,   668,  4046,   895,   762,   853,   342,   764,
     856,   235,  3867,  1588,   348,  4135,   906,  5264,   908,   909,
     910,   769,  1787,   235,   914,  4053,   916,   906,   630,   908,
     909,   910,   762,   923,   302,   914,   753,   916,  4239,  3613,
    1590,  1591,   655,   764,   923,  3613,   762,   762,  3875,   753,
     181,   766,   183,   673,   181,   945,   183,   181,  2498,   183,
     950,   181,   753,   183,  3515,   747,   764,  5176,   727,  5039,
     812,   764,  1898,   768,   753,  1865,   818,   630,   820,   764,
     923,  1492,   715,   764,  3542,   747,   923,   747,   764,   702,
     980,   728,  3208,   768,  3608,   753,   764,   764,   742,  5507,
     990,   747,  2139,  4642,  2283,   768,   768,  1322,  5217,  5218,
    2289,   555,  2122,   261,   690,   768,   812,  4238,   768,   768,
    1322,   655,   818,  1322,   820,  3035,  1322,   762,   752,   753,
     764,   769,  2660,  2474,  2475,  4462,   767,   762,   764,  1601,
    4413,  2979,  2980,   753,  1499,   763,   764,   812,  4613,   717,
     752,   763,   764,   818,   753,  1854,   181,  1856,   183,   181,
     739,   183,  1952,  4740,   906,  5274,   908,   909,   910,   753,
    1869,   302,   914,  1872,   916,   302,   708,  1876,   302,   677,
     763,   923,   302,  2138,   753,  2140,   764,  1952,   715,  1079,
    1080,  1081,  1082,  2820,   763,   764,  2501,  2502,   764,  2504,
    2505,  1091,  3954,  3955,  1903,  1904,  1905,  2162,  1670,   763,
     906,  5329,   908,   909,   910,   764,   617,  2172,   914,   769,
     916,   764,   753,   763,   764,  1687,  1776,   923,  1690,  2184,
    1692,   770,   763,   764,  1696,  1697,  1698,   762,  2841,   747,
     764,   906,  1704,   908,   909,   910,   764,  2202,   764,   914,
    1840,   916,   769,   697,  3010,  4110,  4111,  2860,   923,  4114,
    4115,   764,   763,   764,   769,  4120,  4121,   769,  3502,  3087,
    3703,  3089,  1804,   762,  5436,   762,   762,   302,  1804,  4818,
     302,   763,   764,   768,  2376,   747,   762,  2379,   763,   764,
     768,  5120,   351,   762,  4149,  1321,  5120,   728,  4550,  5243,
     626,  5120,   663,  5078,   762,  2397,   762,   769,  2269,   764,
     261,  5798,   763,  5800,  5801,    42,  2408,  2920,  3369,     9,
      10,  3437,   763,  5121,   602,   620,  6047,  2930,  4930,  4931,
     708,   747,  2165,   762,  2165,   139,  2165,   754,   755,   756,
     757,  1873,   739,  4882,    80,  4884,  3217,  1873,     9,    10,
     747,   646,   763,   769,  2187,    91,  2187,  2190,  2187,  2190,
     230,  2190,  1252,   764,  1254,   747,   747,  3013,  2201,   717,
    2201,   283,  2201,  4615,  4637,  3285,  4737,  1302,  3024,     9,
      10,   715,  6103,   261,   553,   214,  4737,   769,   769,  4908,
     117,     9,    10,  5306,  1969,  2081,   298,   171,   763,   764,
     204,   128,  4638,   433,  4924,   764,    33,  4659,   135,  1220,
     283,  1222,  2054,   762,  4924,     9,    10,   287,  2008,  3535,
    2010,   480,   283,  2013,  4553,  2015,  2016,   764,    28,  5698,
    1841,  1842,   358,  1844,  1845,  1846,   201,   164,  5015,   577,
    2126,   763,   764,   764,  1855,  5932,  5933,  1961,  1338,  5298,
    4507,   764,  5939,   762,  4511,   346,  1811,  5566,  1304,  1305,
    1871,  1944,  1811,   358,  3580,   261,  3582,  3583,   637,  2001,
    4502,  4569,  3588,  1961,   261,  4737,  3044,   753,    10,   457,
    3596,  4579,  4580,  5809,  1961,  3601,  5487,   763,   764,  1972,
    1380,   181,  1382,   183,   234,   763,   764,   666,   225,   235,
    5715,  4942,  4943,  5317,   559,  5614,   299,   300,  3352,   433,
     328,   279,  2062,  5090,   683,  5092,  2073,  5709,  5095,   114,
     181,  2841,   183,   747,  5101,  5102,    49,  4470,  4471,   256,
    5284,   700,   263,  5503,   114,   747,   304,  4498,  5115,  6026,
    5782,   689,  2579,   353,   230,   769,  2583,   287,   287,     6,
    2656,   181,  3981,   183,   708,  1254,   608,   769,   298,   298,
     146,  4135,  4367,   181,  2601,   183,  1265,  4135,  2011,  2012,
     351,  5484,   602,  4584,  5900,  5901,   130,  2656,  4589,    32,
     728,    37,    38,   618,  2374,  2375,   386,   181,   174,   183,
    2130,  3497,  3112,  2554,  2555,  3266,   631,  3500,  2009,  4239,
    2920,   287,  5928,   403,   419,  4239,    14,   249,  3266,  2374,
    2930,    68,   302,   615,   114,   769,   785,  4797,  4798,  4799,
     220,   680,   217,  2413,   762,  3496,  5254,  3340,   672,  2818,
    3343,  3344,   763,   764,   234,    61,  2111,   764,  4158,   763,
    2756,   302,  3343,  3344,   764,  2000,  4898,  3441,  2756,   149,
    1540,   201,  1542,  5845,   472,     9,    10,    97,   149,    14,
    3573,   713,  2237,  2238,   555,  4239,  5667,   669,   413,  3296,
     263,  4239,   302,  3032,  5916,   730,  2466,  4532,   602,   956,
     957,   958,   447,   661,   302,   854,  3012,  1577,   492,  5038,
    2480,   721,   132,  3638,   645,  3640,  5510,  3324,  3712,   480,
    1590,  1591,   282,   521,  5973,  5677,  1596,  3275,   302,   351,
    1600,  1601,  1602,  5232,  4569,     9,    10,   344,   361,   493,
    5168,  1611,  1612,    35,  4579,  4580,   555,  1617,   207,  1619,
    1620,  1621,  1622,  1623,  3254,  1625,   268,    35,   689,   764,
    1017,   763,  4294,  4295,  4296,  4297,  1636,   673,  1638,  3266,
      35,  1641,  1642,   263,  1644,  1645,  1646,  5069,  1648,  1649,
    1650,  5976,  3389,   433,  2239,  1655,   149,   645,  1658,  5704,
    3367,  5348,  3260,     9,    10,  5352,  1666,  1667,   673,  1669,
    1670,  1671,     9,    10,  1674,  1675,  1676,  1677,  1678,  1679,
    1680,  3231,  1682,  1683,  1684,  1685,  1686,  1687,  3238,  1689,
    1690,  3714,  1692,  1693,  1694,  1695,  1696,  1697,  1698,   235,
    2298,  1701,  1702,  1703,  1704,  5256,  1706,  1707,  1708,  5071,
    1710,  2298,  1712,  1748,  1714,  3353,    35,  2302,  1718,  1719,
    1720,  3675,  3478,  1723,  1724,  1725,  1726,  1727,   480,  1729,
     764,    35,     9,    10,  4876,   655,  1736,  5696,   579,  2639,
    5664,  5665,   764,  1743,  1744,  1745,  1746,   769,  5094,  5398,
    2870,    63,   764,   443,  1754,  1755,   493,  1757,  1758,  4302,
     463,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  1771,  1772,  1773,   688,   653,  1776,   181,  2683,   183,
     763,   764,   762,   689,    99,   348,  5356,   447,   171,   680,
    3241,  3242,   689,   764,   458,     9,    10,  5024,   769,   400,
     318,   553,  3515,   268,  3670,  5828,   731,  5830,   120,     9,
      10,  2958,  5326,  2713,  2623,  2715,   671,  3232,  2627,  1819,
    3235,   207,   602,   720,  1824,     9,    10,  5326,  5326,   462,
    5550,  3544,     9,    10,  1834,   181,   764,   183,   302,  5526,
    2649,  4800,    35,   596,   181,   555,   183,  5326,    28,  5308,
    3673,   461,  3833,  2662,  2663,  5097,  5326,  5326,  5596,   460,
    5598,   764,  3673,   429,   430,     9,    10,  5157,   373,     9,
      10,   137,   722,   722,   341,     9,    10,   559,   261,   564,
     567,     9,    10,  6185,     9,    10,   387,   309,   438,   478,
    1169,   189,  1171,  5444,  5445,  3608,  1175,  1176,   302,  5115,
    3613,   309,  1902,   201,   181,   217,   183,   400,  2808,   399,
     369,  5333,   762,   762,   309,   186,   762,   143,   230,  4145,
    4146,  4147,   768,   769,     9,    10,  1205,  1927,   680,  3942,
     767,   110,   111,     9,    10,   485,   689,    93,   248,   572,
     564,   721,   207,     9,    10,   565,   579,   407,  3019,   168,
     169,   704,  3217,  5304,   587,  1876,   302,     9,    10,   579,
    1347,  1961,  3943,   261,   764,   302,   559,   181,   280,   183,
     673,   210,  1961,  2878,  2598,   287,  4606,  4607,  2531,  4205,
    4206,   181,  4208,   183,   764,   475,   298,  5501,   740,     5,
     309,   458,   602,   764,  5202,   328,  5363,   181,   548,   183,
    2598,   485,  5501,  5501,   181,   309,   183,  3605,   115,  4942,
    4943,  2598,  5962,   472,  1961,    31,    18,     9,    10,    17,
     110,   111,  5501,  1944,   764,   302,   207,   660,     9,    10,
     296,  5501,  5501,   298,    32,  3665,   764,   181,   164,   183,
     220,   181,   592,   183,  1965,  2841,   558,   181,   730,   183,
    2735,  1972,   739,   181,   555,   183,   181,    73,   183,   369,
     764,   444,  2062,  5290,   168,   169,   526,  5294,  5295,   183,
    2770,     9,    10,  2773,   442,  2775,   560,     9,    10,   764,
       9,    10,   764,  2783,  4705,  3515,   496,   720,   302,  2610,
       9,    10,   478,   552,  2679,   321,   181,   567,   183,   558,
    2565,  2622,   302,   105,   106,   181,  2565,   183,  3931,  1961,
     493,     9,    10,  2706,  4735,   181,   309,   183,   302,   298,
    3025,     9,    10,  5365,  2920,   302,  5471,    73,  5473,   181,
     540,   183,  5348,  4795,  2930,  5486,   641,   730,   409,   472,
     764,    83,   298,  3290,  3291,     9,    10,    61,   454,   447,
     609,   636,   291,   169,   293,  1961,   657,     6,   302,  4385,
     110,   111,   302,  2084,  5531,  3902,  3903,  3314,   302,     9,
      10,   764,   639,  3880,   302,   356,    11,   302,  3608,   121,
    3917,  4407,  5141,  3613,   442,  2185,  1961,   493,   521,   181,
     369,   183,   208,   283,  2194,  2195,  2185,   747,   748,   749,
     181,   420,   183,   518,   519,  3883,  3422,   522,   523,   524,
    4311,   737,  3283,  4937,   340,  3441,   675,   302,   730,    68,
    1499,   589,  2864,  3441,  3295,  3624,   302,  3696,  3697,  3698,
    3699,  3624,  2185,  3422,  5376,  3671,   302,  5202,  2185,  5466,
     441,     9,    10,   181,  2765,   183,  2767,   334,   335,   181,
     302,   183,   181,     0,   183,   714,  2777,  2810,    80,   743,
    2781,   263,   181,   673,   183,    32,    24,    34,  2268,   739,
    3486,   730,   123,   472,   631,     9,    10,   762,  5623,   369,
     100,    80,  2282,   181,   371,   183,     9,    10,   234,     9,
      10,   126,    91,   181,    61,   183,   628,  3486,  2298,   146,
    2300,  5937,  5267,  2303,   483,  2305,   689,   590,   320,  2298,
     302,  2300,    33,  2313,  2314,  2819,   420,   181,  5341,   183,
    4274,   302,   140,  5256,  5811,  5812,   413,   174,    69,    18,
     581,   589,    15,  2185,   276,     9,    10,  4563,  4564,  4565,
    4566,   181,   648,   183,  4570,  4571,  3639,  2300,  3248,  4575,
     201,  2298,  4578,  2300,   112,  4581,   184,  4035,  4584,   558,
     764,   807,  4588,  4589,   302,   514,  3266,     9,    10,  3730,
     302,    92,   171,   302,   288,   289,   747,   399,    24,  2185,
       9,    10,   590,   302,  3727,  3728,   527,   588,   235,  5019,
    3032,  3266,  3735,   483,  3737,   509,  3739,   246,   247,  2399,
    2400,  2401,  5613,  4416,   302,  5616,   852,   256,   226,     6,
    2185,  5434,   769,   181,   302,   183,   105,   106,   764,   369,
     112,   162,  4135,     9,    10,   676,  5892,   764,   277,  5895,
     747,  3846,     9,    10,  3849,   447,   235,   769,   302,   180,
    3340,   328,   125,  3343,  3344,  3345,  2298,   181,  2300,   183,
     762,   298,   601,   475,   137,  5926,   189,  5809,   181,  1738,
     183,   181,   302,   183,  5925,  3370,   112,   137,   201,  1112,
    5091,    68,   386,     9,    10,  3729,   675,  2477,   729,   200,
    3734,  3729,     6,   311,  5105,  5209,  3740,   764,  6124,  6125,
    5449,  5121,  2298,   112,  2300,  5116,  1775,  5118,  2498,   438,
    1143,  2501,  2502,   590,  2504,  2505,   655,   181,   200,   183,
     584,  5444,  5445,  2513,    79,  2515,   335,    82,    57,  3091,
     607,   514,  4503,  2298,    83,  2300,  4239,   399,   261,  3101,
     213,   730,  1811,   483,   302,   762,   560,   561,     6,   181,
    3825,   183,   769,  2543,    68,   632,   485,   461,  5900,  5901,
     764,  3016,   181,   694,   183,   100,   277,  3016,  2558,     9,
      10,  4515,   121,   763,  5565,  5776,     9,    10,   302,  5914,
    5915,   712,  5783,  5715,   263,  2575,  5928,     9,    10,   302,
     764,   348,   302,   128,   671,   472,  3158,   764,   662,   605,
     747,     9,    10,   263,   413,   181,  6062,   183,  2598,  2599,
      68,  3225,     9,    10,   181,   708,   183,   146,   601,  2598,
       6,   460,   115,   637,   179,    95,   555,  3189,   708,   250,
     764,  2621,  5984,  2544,   764,    81,   296,  3225,   302,     6,
     764,   262,   769,   405,   521,   174,   764,   182,  3225,   764,
     412,    97,  3284,   123,   392,   181,   394,   183,  3284,   246,
     247,  2598,  4783,  4669,  4785,  4668,     9,    10,   138,   256,
     302,  3328,   655,    83,     9,    10,   769,     9,    10,   189,
     126,   558,    68,   302,  1953,  3247,   132,  2598,  3943,   764,
     277,   201,    93,  4664,     6,  4666,     9,    10,   764,   295,
       9,    10,  2648,    57,   493,     9,    10,   262,   764,  2620,
    2700,   121,   182,  4665,  3328,     9,    10,  2628,   263,  2709,
     166,   763,  3928,  1992,   447,  4487,   302,   276,   138,  3515,
      63,  2000,    12,  2002,  4779,   302,   673,  4782,   248,  4784,
    3328,   181,    15,   183,   273,   753,   138,    17,   181,  3928,
     183,  3328,   204,   217,   161,   763,    68,  3652,  3500,   181,
     270,   183,     9,    10,    34,     9,    10,  4812,  4813,  4814,
    6033,   100,   182,   181,   226,   183,   302,   100,     9,    10,
    6192,  4521,   764,  3673,   181,    65,   183,   120,   725,  4937,
     182,  4459,   146,   764,  4462,  2706,  4809,   445,   675,   206,
    4089,   905,  2598,   753,     9,    10,   168,   169,  4396,  2078,
       9,    10,   138,   763,  4089,  6078,  3877,  4514,  2808,  4239,
     174,  3624,  3608,  6086,  3961,   698,   665,  3613,   667,   702,
    2820,   479,  4291,  2598,  6035,  6036,   764,   112,   181,  6191,
     183,   248,   764,   122,  5976,   764,   181,   123,   183,   181,
      26,   183,   125,   730,    93,   764,   182,     9,    10,   138,
    6123,   762,   302,  4451,   137,   766,   276,   722,   181,   302,
     183,  3761,   181,   460,   183,   763,   369,   181,   234,   183,
     302,   149,  2151,   376,   217,   763,  2876,   181,  2157,   183,
     326,  4332,  4333,   769,   302,   168,   169,  4900,   391,   138,
    4646,    95,     9,    10,   143,   302,   554,  4044,    10,   763,
     747,   753,   422,   123,   403,   752,   753,  2828,  3808,   273,
    4361,   763,   764,   416,  2835,  2836,   569,  5143,   138,  5145,
    4702,  5147,  4704,   763,   181,  4707,   183,   181,  5824,   183,
     213,  4713,  4714,   182,   138,  4386,   347,   280,    95,  3460,
     181,   123,   183,   656,     9,    10,   656,  1424,  4730,   302,
     698,   261,   369,   701,  5675,   298,   138,   302,  2993,   444,
     302,   338,   182,   762,   381,  4364,   181,   768,   183,   768,
     769,   230,   181,  5603,   183,  5605,   112,   635,   182,   302,
    4518,   201,  5208,   302,   501,   502,  1463,  1464,   302,  4243,
    4244,  4245,  2075,  4247,   634,   763,  2079,    42,   302,   516,
     182,  4255,  4256,  4257,  4258,   382,  3006,   384,   649,   117,
    4717,   752,   753,   754,   755,   756,   757,   520,   115,   181,
     128,   183,   433,   115,   435,   118,  3624,   135,   287,   763,
     533,  3931,   125,  1147,     9,    10,   115,  3624,  1152,   298,
     763,     9,    10,   763,   447,   302,  6040,  6041,   302,   552,
     690,  5209,   769,   693,  3696,  3697,  3698,  3699,  1360,  1361,
      76,   302,    78,   719,   181,   769,   183,   484,   665,   666,
     667,   668,   117,  3073,  3074,  3075,  4754,   763,   764,  3079,
     720,  3981,  3082,   128,  3073,  3074,  3075,   302,   728,   763,
     135,  3091,  1394,   302,   187,   762,   613,   614,  6092,  3099,
     477,  3101,   769,  3103,   644,  3105,  3106,  3107,  3108,  3109,
    3110,  5073,  3112,    84,   525,   261,   181,   225,   183,   164,
    3120,   763,  3122,     9,    10,  3125,  3126,  3127,  3128,  3938,
    1244,  3131,  3132,   728,   763,  3135,   762,  3137,   555,  3139,
     302,  3141,  5197,     9,    10,  3145,   422,  4402,   256,   526,
    4245,  4406,  4247,  3153,   248,  3155,    76,  3157,  3158,  3159,
    3160,  3161,  4257,  4258,  3164,  3165,  3166,  4466,  3168,  1524,
    1525,  3171,   675,  1528,     9,    10,     5,   763,  4915,  4916,
     225,  4466,   268,  4083,  3184,   302,   763,   690,   768,  3189,
    4897,   602,  3192,   768,  3194,  3195,  3196,   574,  5424,  3199,
      33,  4466,     9,    10,    37,  3205,   181,    28,   183,   456,
    3210,   256,    33,   181,   764,   183,    37,    95,    57,     9,
      10,  3073,  3074,  3075,    84,  3225,  3226,   763,   763,   764,
       9,    10,  3232,   763,   764,  3235,  3225,   302,  3238,     9,
      10,   395,   675,  1357,   763,   764,   125,  3247,   594,  3249,
      89,     9,    10,  1367,  3254,    63,  3898,  3899,  3900,  3901,
     634,  1375,  3898,  3899,  3900,  3901,   105,  3073,  3074,  3075,
    5283,  3843,   762,     9,    10,   571,   656,  1274,  3225,  4495,
       9,    10,   461,  1280,  1281,   665,  2565,   664,     9,    10,
     670,   747,   748,   749,  3294,   181,  3296,   183,  3073,  3074,
    3075,  2580,   763,   764,  3225,  3294,  4495,   146,   685,  3862,
     464,  4458,   120,   763,  5096,   181,    49,   183,   719,   720,
     763,   722,   689,   724,  3324,  6046,  3830,   302,  3328,     9,
      10,   763,   763,   764,   302,   174,  4483,  4484,   268,  3328,
    3294,  3294,   763,   764,  3294,   763,   181,  3294,   183,  3294,
    3294,   177,  4788,   413,  3996,   177,   763,  5180,  5374,   764,
    3996,  5342,   114,  5376,   763,   764,  1480,   991,  1482,  5180,
     763,   764,  4671,   343,   181,   529,   183,   531,     9,    10,
     663,  3328,   536,   752,   753,  4923,  4671,  1011,   194,  3389,
     768,   181,   762,   183,  1018,  1019,  4946,  4064,     9,    10,
    4665,   762,   181,  5564,   183,   762,  2685,   762,    49,   217,
     763,   181,   762,   183,   763,   764,   302,   722,   763,  3225,
     722,   763,   230,   181,  1538,   183,    34,  5682,   763,   764,
     762,    69,    57,   762,   273,   762,   302,   763,   764,  4890,
     763,   762,  3294,  4239,   763,   181,   600,   183,  5216,   763,
    3225,  3451,   181,   762,   183,    96,   189,   763,   764,   763,
     181,   416,   183,   762,    89,   762,     6,   302,   201,   762,
      57,    11,   280,   188,   115,    15,  3328,  3477,   762,   287,
     105,   763,   764,   110,   111,   110,   111,   125,  3294,   643,
     298,  3491,   763,   764,   762,   302,  4839,  4050,   763,   764,
    4843,   181,    89,   183,  4255,  4256,   763,   763,   764,   763,
     762,  2790,   302,   163,  3514,  5113,   762,   472,    34,  3294,
     762,   146,   763,   302,   162,   762,  4819,   413,   261,   763,
     764,   762,   302,  4086,   763,   764,  4057,   270,   763,   764,
    3540,  3541,   180,   762,   302,    61,  4110,  4111,   763,   174,
    4114,  4115,   762,  3328,   763,    95,  4120,  4121,   188,   146,
     762,    49,   328,   762,  3564,    17,   302,   762,    17,   762,
     181,   762,   183,   302,     9,    10,  3576,  1691,   732,  4833,
      32,   302,    34,    32,   762,  4833,  1700,   174,  4092,   743,
    4875,  5572,     9,    10,   110,   111,   762,  1711,   236,   237,
     241,   763,   762,   558,  4903,    11,  3606,  3607,   188,    58,
    3531,  3532,  3533,  3534,   130,  3536,  3537,   762,  4903,   762,
     261,    70,   302,   762,  3624,  5303,   763,   764,    34,   906,
     762,   908,   909,   910,   762,  3624,   277,   914,  4903,   916,
     762,    90,  4907,  3643,   762,  5413,   763,   762,   273,  4291,
     416,  5358,   168,   169,  3643,    61,   762,   173,   763,   764,
     762,   177,   762,  3584,  3585,  3665,  3587,   762,  3589,  3590,
    3591,  3592,  3593,  3594,  3595,   124,  3597,  3624,  5129,  3600,
     321,   762,  1796,  3604,   200,   762,   273,  3687,   762,   422,
    3643,   302,   763,   764,   763,   764,  3643,  5923,   763,  5455,
    5716,   762,  5715,  5459,   110,   111,   472,   763,   764,   762,
    3710,   763,   764,   201,   447,   762,  3716,    61,   762,   762,
     675,   763,   764,  3723,   130,   762,  3726,  3716,  4313,  1843,
    5831,  5712,  5713,  1847,   762,  1849,   762,  3016,   762,  3018,
     763,   764,    29,   762,  5567,  5568,   181,   762,   183,  3749,
    3750,    38,     3,   762,  4283,   521,  5567,  5568,   399,   762,
     248,   277,   168,   169,   181,   762,   183,   173,   763,   764,
    4342,   177,  3624,    60,  3774,   730,  3776,    28,  3778,  5078,
    3780,  1895,    33,   763,   764,   301,    37,   735,   763,    40,
     762,  3643,   558,  5078,   200,   763,   762,  5427,   762,    10,
      87,   762,  3802,   762,    15,   762,    93,   328,  3087,   764,
    3089,    98,   762,   329,   763,   764,   518,   519,  3624,  4486,
     522,   523,   524,  3823,  3824,   112,   763,   764,  4470,  4471,
     279,   763,   764,   321,  4470,  4471,   762,  3643,   290,   291,
     127,   762,   291,  3843,    95,   762,  3846,   134,   369,  3849,
     763,   764,    36,   369,  3854,   762,  5612,  4429,   374,   762,
     295,   148,  4486,   762,  3716,   762,  4438,   302,  3643,   763,
     764,   277,   324,   762,    36,   762,    67,  2233,   762,     9,
      10,   762,  5863,   763,   764,   302,   173,   762,  4486,   762,
     342,   762,  2006,  2007,   762,   301,   348,   763,   762,  4486,
      83,  5649,  3902,  3903,   762,  4605,  4811,   158,    92,   675,
    3716,   399,   645,   434,   125,    34,  4668,  3917,     9,    10,
     763,   764,   374,   329,     9,    10,   137,  5326,   763,   216,
      92,   115,   183,  5326,   422,   222,   223,   762,   121,   763,
     764,  3716,    61,   392,   762,   394,   130,   763,   764,   236,
    6051,   472,   762,   115,   762,   138,   763,   168,   169,   447,
     762,     9,    10,   369,   730,   481,   763,   764,   130,  5737,
     161,   763,   764,   763,  3974,   763,   764,   168,   169,     9,
      10,    11,   763,   764,   763,   762,  2100,   720,   763,   764,
     631,   110,   111,   763,  4694,   728,  5977,   762,   764,   182,
     521,   762,   213,   153,   645,   763,   762,   495,   649,   193,
     297,   130,   762,     9,    10,   206,   200,   762,   148,   763,
     764,   762,  5729,     9,    10,    11,   263,   763,   372,   769,
     374,   552,   763,   764,   763,   763,   764,   558,   200,  4706,
    4040,   194,   763,   449,   762,  4045,   762,    95,   335,   168,
     169,   181,   693,   183,   173,   762,  5594,   248,   177,   763,
     764,   312,     9,    10,  4617,   763,   764,   411,   194,   356,
       9,    10,    11,   763,   764,   481,  4076,   763,   764,   720,
     496,   200,   764,   763,   763,   764,   747,  4087,    69,   571,
     181,   177,   183,   276,  4647,   439,   181,   546,   183,  5697,
     763,   764,  5501,   763,   764,     9,    10,    83,  5501,  2223,
      95,   362,   750,   751,   752,   753,   754,   755,   756,   757,
     763,   764,   177,   763,   764,    33,   763,   764,    36,   234,
    4051,   647,   656,   181,   769,   183,   769,  2251,  2252,   673,
    2254,  2255,    69,   430,   762,   121,   769,  4899,    95,  5747,
     769,   181,   763,   183,   675,   769,  4191,   645,   277,  2273,
    4081,   649,   138,   763,   764,  2279,   763,   764,  5068,   110,
     111,    57,   302,   264,  4709,   130,   769,   769,   369,   264,
    4180,   162,   301,   367,    92,   181,   769,   183,    96,   130,
     381,    95,  3471,   343,  5410,   181,   769,   183,   125,   180,
     763,   764,   690,    89,   653,   367,   182,   115,   769,   730,
     329,   302,   769,   168,   169,  5028,   421,   302,   138,   105,
     736,  5410,   130,  3502,  3503,    93,  4747,   168,   169,   673,
     574,   689,   720,  4268,   181,   162,   183,   662,  4238,   389,
     728,   647,   181,   496,   183,   200,   415,  5546,     9,    10,
     369,    93,   701,   180,   302,   236,   237,    69,   509,   200,
     146,  5546,    57,   715,  1715,  1716,   610,   764,   264,   764,
     283,   662,   302,  3552,   343,   724,  5983,   181,   764,   183,
    5180,  5546,   569,   377,   764,   193,    57,   764,   174,   566,
     684,   747,   200,   484,    89,   546,   547,    80,   728,   550,
     276,   447,   553,   554,  5902,   762,   302,   287,  5593,   236,
     237,   230,   499,   763,   501,   502,   302,   235,    89,    61,
     470,  5021,   277,   391,   770,     5,  5026,  5027,   570,   516,
     736,  2445,   390,   241,    95,     4,   277,  2451,   728,  4339,
    4340,   769,  4342,   413,   335,   768,   768,   762,   762,   199,
     162,   146,  4352,   374,  4354,   302,   194,  4357,   762,   762,
     301,  5991,   481,   302,   555,   762,   762,   618,   180,   277,
    4370,   769,  4372,    93,  4374,   146,  4376,    93,    14,   174,
     631,   296,   532,   764,   769,   177,   637,   273,   416,  4389,
    4390,   769,   148,   689,  5687,  5688,   580,  5690,   302,   630,
     550,   551,   763,   174,   762,   555,   556,   557,   659,   112,
     493,   295,    95,   123,   369,   666,   237,   668,   580,  5718,
     181,   295,   183,   762,   236,   237,   613,   614,   369,  4429,
    5028,   718,   683,  5718,   148,   768,   764,   762,  4438,     6,
    6038,  5028,  2556,   413,   763,   696,  5711,  4447,   763,   700,
     701,   763,   663,  5718,  6161,  2569,  2570,  2571,  2572,   367,
      68,   319,   764,   714,   769,   763,  2822,  2823,  6175,   763,
     763,   635,   769,   623,  6181,    93,    93,   728,   273,   763,
    6187,   763,   763,  2839,  6114,   298,  4486,   762,   137,   769,
      42,   762,   764,  2849,  2850,   100,   268,  4486,   764,   193,
    5647,   764,   273,   687,    93,   769,   757,   764,    34,  2148,
     764,   754,   763,   673,   765,   125,  4516,   476,  4439,   686,
     436,   671,    93,   764,   421,   687,   481,   762,   647,  2168,
    5282,   673,   764,   413,   785,   125,   770,   764,  2177,  4486,
     481,   302,   793,   193,  2183,   235,    33,  2661,   346,    36,
    4550,    69,  2191,   214,   805,  5848,   807,  5850,  5851,  2915,
    2916,  2917,  2918,  2677,  2203,   117,   496,  2206,   496,   343,
    5869,   496,   496,  2687,   496,   496,   128,   747,   764,   764,
     268,   659,   582,   135,  5869,    84,    26,  5287,   728,    95,
     841,   754,   843,   764,   845,   763,   847,   848,   849,   850,
     851,   852,   404,   854,  5869,    92,  5871,   762,    15,    96,
     466,    18,   164,  4613,   466,   764,   581,   736,   763,    29,
     764,   295,   719,   282,   762,   177,   374,   293,   115,   293,
     211,  4552,  5779,  5137,  4486,    53,    54,    55,    56,    17,
    5545,   174,  4642,   130,   162,   688,   764,   182,    95,  4649,
      57,  4572,  4573,   764,   905,   764,   907,   268,   762,  4659,
    2774,  4582,   180,   116,   915,    29,   917,  5567,  5568,   123,
     763,   763,   580,   225,    38,   763,   413,  5824,   754,    86,
      95,   932,    89,   763,  4703,   764,   763,   753,  5501,   107,
     108,   109,   763,    18,  4615,   762,    60,  4716,   105,   106,
     763,   763,   763,   763,   256,  4724,  5304,   763,   235,   763,
     763,  4486,  4731,   200,  4733,  4734,   763,  5304,   236,   237,
     764,   763,   763,    87,   763,   763,   757,   764,   764,    93,
     764,  4652,    57,   762,    98,   193,  5883,  4737,   763,   146,
     158,   159,   769,   763,  4744,  4745,   762,   762,   112,    17,
     762,   577,   763,   747,   241,     9,    10,   361,   165,   263,
     263,    86,  4683,   127,    89,   263,   173,   174,   268,   762,
     134,   752,   753,   754,   755,   756,   757,    99,    95,   687,
     105,   106,  5335,    93,   148,   764,    93,  4066,   762,   762,
     277,   490,   764,   764,   769,   736,   763,    95,   425,    53,
      54,    55,    56,   769,   226,   769,   769,   601,   234,   173,
     764,   229,    62,     6,   764,   718,   764,    49,  4818,    93,
     177,   146,   177,   750,   751,   752,   753,   754,   755,   756,
     757,    32,   263,  1084,   280,   125,   100,   544,   764,   762,
     165,   644,   110,   111,   248,   248,   763,   369,   173,   174,
     248,   248,   216,   107,   108,   109,   263,    58,   222,   223,
    6153,   248,   298,   177,   762,   272,   273,   274,    93,    70,
     264,   747,   236,   764,   747,   747,   747,   747,   747,   495,
     367,   747,  4882,   115,  4884,   303,   747,   747,  5486,    90,
     747,   126,   747,   747,   416,  1146,  1147,   719,  4898,  5486,
     747,  1152,   747,  5501,   158,   159,   747,   747,   747,   304,
     747,  1162,  4947,   747,  5501,  4915,  4916,   747,  1169,   747,
    1171,  3035,   747,   124,  1175,  1176,   279,   181,  5591,   183,
     747,   747,   413,   297,  4934,   764,   763,   769,   263,   751,
     752,   753,   754,   755,   756,   757,   747,   272,   273,   274,
     472,   283,   763,  5506,  1205,   763,   763,   189,   138,   769,
     764,    72,   316,   345,   769,    17,   268,   268,   268,   201,
     352,   335,   769,   268,   764,   229,   739,   395,   493,   386,
     123,   413,   375,   763,   122,   122,   368,   394,  1239,   188,
     769,   769,   356,  1244,  1245,  1246,   378,   379,   380,   763,
     769,   763,   753,   763,   763,  5040,   388,   753,   209,  1260,
     763,   763,    26,   763,   763,   682,    42,   764,   762,   762,
    1271,   268,   321,   230,   571,    95,    95,    95,  5028,    95,
     552,   207,  1283,   263,   328,   263,   558,  6184,   270,  5028,
     478,   769,   764,   174,   753,  5549,   464,  4968,   302,   303,
    5085,   425,  1303,  5088,   762,  5055,   128,   128,   110,   111,
     185,   386,    11,  4984,   768,   309,   430,  5086,   764,   394,
     762,  5071,  1323,   764,   747,   369,   747,   316,   279,   530,
      92,  5028,   177,   764,  5682,   769,   651,   609,    26,   104,
     769,   117,  1343,   580,   764,  5682,   263,  5760,   763,   762,
     391,   263,   128,   391,   263,   215,  1357,    11,   762,   135,
     762,   529,   100,   531,   762,  1366,  1367,   174,   536,   174,
     221,   445,   416,  1374,  1375,   769,   754,  1378,  5049,   148,
     763,   754,   571,   268,   402,   177,   114,  1388,   164,   335,
     434,   395,   148,   124,   124,   174,   528,   769,   416,   763,
     418,   177,   764,   675,   763,   762,  3270,   763,   182,   762,
     542,  3517,  3518,   763,  3520,  3521,   764,   763,  5168,   230,
     769,  3285,   763,    26,   122,   763,  5028,   763,   472,  5168,
     448,   763,   600,  5183,   762,   747,   762,   230,   216,   763,
     422,   392,   714,   394,   769,   463,    95,    95,   207,   225,
     687,   128,   763,   763,   763,   569,   128,   764,   730,   261,
     464,    94,  5212,  5134,   148,   447,   762,  5884,   295,   762,
      42,   762,  5028,   207,   762,   643,  1477,   521,   496,  1480,
     256,  1482,   750,   751,   752,   753,   754,   755,   756,   757,
     747,  1492,   764,   764,   541,   627,   514,   675,  1499,   391,
     675,   404,  1503,  1504,   726,  3611,   404,   283,   552,   628,
     642,   193,   764,   495,   558,   762,   762,   534,   762,   734,
     763,   263,   193,  6178,   367,   529,   193,   531,  1529,   268,
     193,  1532,   536,    26,  5284,   193,  5286,  1538,   129,   690,
     129,   698,  5327,   193,   701,   117,   678,  4576,   690,   193,
     578,   193,   193,   710,  5304,   193,   128,   268,    11,  1560,
     692,   763,   425,   135,   732,  5304,  5168,   226,    99,   410,
     488,   763,    26,   298,   490,   743,   594,   232,   763,   763,
     763,   182,    26,   601,   630,  3449,  3450,  1588,   139,   763,
     128,   764,   164,   611,   545,   546,   600,   763,   193,   763,
     402,   764,   764,  3467,   128,   177,   624,  5304,   590,  4638,
     143,   763,  5168,   738,   416,   764,   418,   432,    94,   212,
    5874,   762,   762,   698,   763,   763,   701,   177,   764,    11,
     662,   675,   763,   223,   769,   710,   763,   655,   764,   643,
     658,   763,   174,  5168,   174,   726,   448,   112,  5398,   631,
     764,   130,    94,   225,   200,   673,   726,   591,   177,   177,
     369,   463,   471,   227,   264,   425,   571,   649,   298,   413,
     763,   123,   763,   601,   138,   534,   484,  5427,   124,    32,
     763,   345,    26,   763,   256,   764,   730,  5437,   352,  5439,
    1691,  5476,   763,   769,   496,  5480,   283,   763,   283,  1700,
     762,   563,  5304,  6116,   368,   763,    10,   763,   690,   764,
    1711,   693,   514,   130,   378,   379,   380,   130,    11,   762,
     764,  1722,   641,   762,   388,   762,  5476,   762,   732,    11,
    5480,   764,   361,   763,    11,   764,  5486,  1738,   720,   743,
     123,   130,   764,   298,   763,   373,   728,  5486,  5304,  6052,
     701,  5501,   408,   655,   130,   261,   148,   764,   763,   534,
     763,   431,  5501,   670,   763,   763,   762,  5536,   283,   283,
      10,   268,   570,   405,  1775,   762,  1777,   769,   762,   283,
      33,   769,   413,   764,   763,   140,    67,   177,   764,  5486,
     763,   762,   594,    84,    84,  1796,   762,   298,   261,   601,
     571,   763,  1803,  1804,  5501,   280,   636,   763,   589,   611,
    1811,  1812,   426,   763,   762,  5565,   589,   762,   762,   151,
    1821,   349,   624,   762,   174,   763,  5565,   764,   301,   187,
      26,    26,   768,   768,  1835,  1836,   768,    79,  3702,    26,
    1841,  1842,  1843,  1844,  1845,  1846,  1847,  1848,  1849,    61,
      61,   194,   763,   655,  1855,  5640,   658,   670,    10,   763,
     696,   177,   763,  5613,   528,   762,  5616,   681,   762,  1870,
    1871,   673,  1873,  5658,   130,   687,   762,   726,   542,   130,
     280,   173,   322,    61,  5486,  6188,    11,   689,    91,    26,
    5640,    26,    26,   123,  1895,   763,   571,   414,   708,  5501,
    5650,    33,    33,  4009,  4010,  4011,  4012,  4013,  5658,  4015,
    4016,  4017,  4018,  4019,   636,  4021,  4022,  4023,  4024,  4025,
    4026,  4027,  4028,  4029,  4030,   762,   404,  4033,  4034,   762,
    5486,   416,  5682,   404,    93,  4964,   575,   763,   762,   762,
     722,   170,   227,  5682,   571,  5501,   571,   764,   321,   682,
     143,  5701,  1953,   413,   335,    93,   762,  5707,   408,   762,
      26,    26,  1963,  5565,   768,  5636,   762,   768,  1969,   763,
     315,   762,   762,  1974,   762,    71,   762,   177,   642,   177,
      11,   226,   280,    63,   764,  5682,   763,   194,   708,   466,
     413,  1992,    75,   763,    26,   763,   636,   114,   174,  2000,
    2001,  2002,  2003,  2004,  2005,  2006,  2007,   762,  2009,  5565,
     234,    42,   764,  3294,   678,   923,  3602,   113,  3974,  1264,
    1928,  5771,  5147,  5143,  5145,  5486,  5776,  1222,   692,  5495,
    5484,  5483,  5611,  5783,  3452,  5486,  4131,  5684,  5322,  5844,
    5565,  5826,  6053,  4053,  1352,  5046,  3453,  4242,  5503,    80,
    5962,  5961,    83,  4159,   150,  1397,  3643,   818,  4164,  4947,
      91,  3627,    93,  5813,  4268,  5094,  2209,  1786,  3981,   100,
    2715,   942,  3712,   104,  4801,  3688,  5826,  2078,  4523,   798,
    5682,  2881,  2300,  2303,  2301,  2087,   117,  2302,  1393,  2226,
     121,  5303,   123,  5619,  5464,  4185,  3564,   128,  5109,  2100,
    4448,  4889,  5773,  2104,   135,  5222,  4452,   138,  2539,  5890,
    5860,  5986,   143,  5427,  5226,  6114,  6071,  5760,  6116,  4035,
    4464,  2122,  4903,  2756,  6006,  4180,  5682,  5482,  4740,  5015,
    6041,  5823,  5813,   164,  5701,  4186,  2971,  3730,  5809,  5826,
    4004,  5884,  2150,  2158,  4008,  5350,   177,  3813,  4406,  4403,
    2151,   182,  4398,  6077,   485,   485,  2157,  5682,  6035,  5917,
    6036,  5467,  5783,  5456,  5776,  2176,  4185,  5917,  4737,  5954,
     201,  5921,  1371,  1236,  1983,  3433,  5542,  3429,  2870,  5349,
    5879,  2125,  2556,  2687,  4303,  3051,  3702,  4090,  5547,  3828,
    2047,  2818,  2193,  1327,   225,  5078,  5869,  5960,  4439,  3487,
    3157,  1324,  3153,   234,  5954,  3862,  4438,  1777,    11,  1597,
    3368,  1719,  3947,  4924,  3362,  4418,  3356,  1629,  2219,  5768,
    2221,  6075,  2223,  4955,  2225,   256,  5897,  5898,  6076,  1603,
    4076,  5337,  5607,  5336,  5984,  3852,  2237,  2238,  5216,    42,
    5358,  5991,  5212,  2244,  3931,   276,  5255,     7,  5737,  2799,
    2251,  2252,   283,  2254,  2255,  6040,  6041,  5928,  5335,  4066,
    3002,  1796,   485,  1538,  3044,   296,  4897,   298,  2269,  3528,
     301,  4550,  2273,  5983,  4516,  4514,   672,    80,  2279,   841,
      83,    41,   842,  6033,  2285,  6035,  6036,  2219,    91,   669,
      93,  2657,  1861,  2294,  3351,  2658,  2297,   100,   669,  1322,
     509,   104,  2709,    63,  5278,  5267,  1542,  6092,  4306,  1973,
    6112,   114,  6140,    73,   117,  5516,  6181,  6102,   121,  6187,
     123,  5694,  1016,  3948,  5995,   128,  2680,  5998,  6078,  4463,
     942,  3225,   135,  3326,  4486,   138,  6086,  2602,  3305,    99,
     143,   668,  2481,   668,  2000,   666,  3304,  1534,  2279,  1805,
    6135,  4144,  3283,  3690,  2864,   115,  1155,  3444,  5392,  4191,
     120,   164,  1272,  3942,  6114,   706,  4505,  3356,  4927,   485,
     485,   467,   485,  6123,   177,  5874,  2775,  2016,  6048,   182,
    6100,    -1,    -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,
      -1,   497,   498,    -1,   500,   501,   502,   503,   504,    -1,
     506,   507,   508,   509,   510,   511,   512,   513,    -1,   515,
     516,   517,   225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  6191,    -1,    -1,  2445,    -1,    -1,    -1,    -1,    -1,
    2451,    -1,   212,   256,    -1,  4561,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2467,    -1,  4574,    -1,
     230,    -1,    -1,   276,    -1,    -1,    -1,    -1,   238,   282,
     283,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,    -1,    -1,   301,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,   613,   614,    29,
     280,   281,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      60,    -1,    -1,  2554,  2555,  2556,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2565,    -1,    -1,    -1,  2569,  2570,
    2571,  2572,  2573,  2574,    -1,  2576,    -1,    87,    -1,  2580,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   112,    -1,    -1,    -1,    -1,    -1,  2609,  2610,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
    5649,  2622,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
     443,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2661,    -1,   422,   173,    -1,    -1,    -1,   427,  2669,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2677,   437,    -1,  2680,
    2681,    -1,    -1,    -1,  2685,  2686,  2687,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   734,    -1,    -1,   216,    -1,    -1,    -1,
    2711,    -1,   222,   223,    -1,    -1,   747,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   236,  4591,     5,    -1,
       7,     8,   763,   764,  2735,    -1,   767,   768,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    39,    -1,  2765,    -1,  2767,  2768,    -1,    -1,
      -1,    -1,    -1,  2774,    -1,    -1,  2777,    -1,  2779,    -1,
    2781,    -1,    -1,    -1,    61,    -1,    -1,   297,    -1,  2790,
      -1,    -1,    -1,    -1,    -1,  2796,    73,    -1,    -1,   309,
      -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   335,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,   595,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   356,    -1,    -1,    32,
      -1,    34,    -1,    -1,    -1,    -1,   616,    -1,  4722,    -1,
      -1,   621,    -1,  2864,    -1,    -1,   143,    -1,    -1,  2870,
      -1,    -1,    -1,    -1,  5903,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   652,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   178,    -1,   413,    -1,   182,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,   193,    -1,    -1,    -1,
     430,    -1,    -1,   683,    -1,    -1,    -1,   110,   111,    -1,
    2931,   734,   115,    -1,    -1,    -1,    -1,    -1,   215,  2940,
      -1,    -1,    -1,    -1,   747,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     763,   764,    -1,    -1,   767,   768,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,  6006,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2993,    -1,    -1,    -1,    -1,    -1,    -1,   276,
      -1,  3002,    -1,  3004,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3016,    -1,  3018,  3019,    -1,
      -1,    -1,    -1,    -1,   301,    -1,    -1,    -1,    -1,    -1,
      -1,  3032,    -1,    -1,  3035,    -1,    -1,    -1,    -1,    -1,
    6069,    -1,    -1,    -1,   321,    -1,    -1,    32,    -1,    34,
      -1,    -1,   329,    -1,   331,    -1,    -1,    -1,    -1,   569,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,   252,
     253,    -1,    -1,   350,    -1,    -1,    61,    -1,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,  3087,    -1,  3089,    -1,
      -1,    -1,   369,   276,    -1,    -1,    -1,    -1,    -1,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,    -1,    -1,    -1,   301,    -1,
      -1,    -1,    -1,    -1,   401,   110,   111,    -1,   405,   406,
     115,    29,    -1,    -1,    -1,   412,  6165,    -1,    -1,   416,
      38,    -1,  6171,    -1,    -1,    -1,   329,   424,   331,    -1,
      -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,  5022,    -1,
      -1,    -1,    60,    -1,    -1,   348,   443,   350,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    76,    -1,
      78,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,    87,
      -1,    -1,   469,   376,    -1,    93,   473,    -1,    -1,    -1,
      98,    -1,  3203,    -1,    -1,   190,   483,    -1,   391,    -1,
      -1,    -1,    -1,    -1,   112,    -1,    -1,    -1,   401,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,   127,
      -1,    -1,    -1,   416,    -1,    -1,   134,    38,    -1,    -1,
      -1,    -1,  3243,   520,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,   533,    -1,   535,    60,
      -1,    -1,    -1,    -1,    -1,    -1,   251,   252,   253,  3270,
      -1,    -1,    -1,    -1,  3275,   173,    -1,    -1,    -1,  3280,
      -1,    -1,  3283,  3284,  3285,    -1,    87,    -1,    -1,    -1,
     473,   276,    93,    -1,  3295,    -1,   573,    98,    -1,    -1,
     483,    -1,   579,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   112,    -1,    -1,    -1,    -1,   301,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,   127,  3328,    -1,   606,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   520,   236,    -1,
     617,   618,   619,    -1,   329,    -1,   331,   148,    -1,    -1,
     533,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   638,    -1,   348,    -1,   350,  3367,    -1,   645,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,    -1,    -1,
     573,   376,    -1,    -1,    -1,    -1,   579,   295,   675,   297,
      -1,    -1,    -1,    -1,    -1,    -1,   391,    -1,    -1,    -1,
      -1,    -1,    -1,   690,   691,   216,   401,    -1,    -1,    -1,
      -1,   222,   223,    -1,    -1,    -1,   703,    -1,    -1,   706,
      -1,   416,    -1,    -1,    -1,   236,    -1,   335,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3449,  3450,
      -1,    -1,    -1,    -1,    -1,   638,    -1,    -1,   356,  3460,
      -1,  3462,   645,    -1,    -1,    -1,  3467,    -1,    -1,    -1,
    3471,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,
      -1,   768,   675,    -1,    -1,    -1,   297,    -1,   483,    -1,
      -1,  3502,  3503,    -1,    -1,    -1,    -1,   690,   691,    -1,
      -1,    -1,    -1,    -1,    -1,   413,    -1,    -1,    -1,    -1,
     703,    -1,    -1,    32,    -1,    34,    -1,    -1,    -1,    -1,
      -1,  5395,   430,    -1,   335,   520,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   533,    -1,
      -1,  3552,    61,    -1,    -1,   356,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3568,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   764,    -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,
      -1,    -1,    -1,    -1,   579,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   413,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   430,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3646,  5752,  5753,    -1,  5755,
    5756,  5757,  5758,   638,    -1,    -1,    -1,    -1,    -1,    -1,
     645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5774,    -1,
      -1,   569,    -1,    -1,  5538,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3690,
     675,    -1,    -1,    -1,  3695,  3696,  3697,  3698,  3699,    -1,
      -1,  3702,    -1,    -1,    -1,   690,   691,    -1,    -1,    16,
      17,    -1,  3713,    -1,    -1,    22,    23,    -1,   703,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,   252,   253,    -1,    -1,    -1,    -1,    -1,
      -1,    58,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    70,    -1,    -1,    -1,   276,   569,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,
    5896,    -1,   301,  5899,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5907,    -1,    -1,    -1,    -1,    -1,    -1,  3809,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,
     329,    -1,   331,    61,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,   145,   348,
     147,   350,    -1,    -1,    -1,    -1,    -1,    -1,   155,   156,
     157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     369,    -1,  3863,    -1,    -1,    -1,    -1,   376,   175,    -1,
      -1,    -1,   110,   111,    -1,    -1,  3877,   115,    -1,  3880,
      -1,    -1,   391,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   401,    -1,    -1,    -1,    -1,  3898,  3899,  3900,
    3901,    -1,   209,    -1,    -1,    -1,    -1,   416,    -1,    -1,
      -1,    -1,    -1,    -1,  3915,  3916,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,
      -1,    -1,    -1,   240,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   265,   266,
     267,    -1,    -1,    -1,   473,  3966,    -1,    -1,    -1,    -1,
      -1,  3972,    -1,    -1,   483,    16,    17,    -1,    -1,  5843,
      -1,    22,    23,   290,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,  3996,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4004,    -1,    -1,    -1,  4008,    -1,    -1,
      -1,   520,    -1,   251,   252,   253,    -1,    58,    -1,    -1,
      -1,    -1,    -1,    -1,   533,    -1,    -1,    -1,    -1,    70,
     337,  4032,   339,   340,  4035,    -1,    -1,    -1,   276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    90,
      -1,    -1,    -1,    -1,    -1,    -1,  4057,    -1,    -1,    -1,
      -1,    -1,    -1,   301,   573,  4066,  4067,    -1,    -1,    -1,
     579,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4081,    -1,    -1,   124,    -1,   392,    -1,   394,    -1,    -1,
      -1,   329,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,   145,    -1,   147,    -1,    -1,    -1,
     417,    -1,   350,    -1,   155,   156,   157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   638,
      -1,   369,   439,    -1,   175,    -1,   645,    -1,   376,    -1,
      -1,    -1,    -1,   450,   451,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     6,    -1,   401,    -1,    -1,   675,    -1,   209,    -1,
      -1,    -1,    17,    -1,    -1,   482,    -1,    -1,   416,    -1,
      -1,   690,   691,    -1,   491,  4186,    -1,    32,    -1,    -1,
      -1,    -1,    -1,   234,   703,    40,    41,    -1,    -1,   240,
      -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      65,    66,    -1,    -1,   265,   266,   267,    -1,    -1,    -1,
     537,   538,   539,    -1,    -1,   473,  4237,    -1,   545,   546,
      -1,  4242,    -1,    -1,    -1,   483,    -1,    -1,    -1,   290,
     291,    -1,    -1,    -1,   561,   562,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,  4268,    -1,    -1,
     115,    -1,  4273,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,   520,    -1,   129,    -1,    -1,    -1,    -1,    -1,
    4291,    -1,    -1,    -1,    -1,   533,   337,   604,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,    -1,    -1,
      -1,   579,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   392,    -1,   394,    -1,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   417,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   695,    -1,
      29,   698,    -1,  4394,   701,    -1,    -1,    -1,   439,    38,
     638,    -1,    -1,    -1,    -1,    -1,    -1,   645,    -1,   450,
     451,    -1,    -1,    -1,    -1,    -1,   261,   724,    -1,    -1,
      -1,    60,    -1,  4424,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   743,   675,  4439,    -1,
      -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
     491,  4452,   690,   691,    93,    -1,    -1,    -1,    -1,    98,
      -1,    -1,  4463,    -1,  4465,   703,    -1,    -1,  4469,  4470,
    4471,    -1,    -1,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   327,    -1,    -1,  4486,  4487,    -1,   127,    -1,
      -1,   336,    -1,    -1,    -1,   134,   537,   538,   539,    -1,
      -1,    -1,    -1,   348,   545,   546,    -1,    -1,    -1,   148,
      -1,    -1,    -1,  4514,   359,    -1,    -1,    -1,    -1,    -1,
     561,   562,    -1,    -1,  4525,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     415,   416,    -1,    -1,   419,  4576,   421,   216,    -1,    -1,
      -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,  4590,
    4591,    -1,  4593,    -1,    -1,    -1,    -1,   236,    -1,    -1,
      -1,   446,   447,    -1,    -1,    -1,    -1,    -1,    -1,   454,
     455,    -1,    -1,    -1,  4615,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   471,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4638,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,  4650,
      -1,  4652,    -1,    -1,   695,    -1,    -1,   698,   297,    -1,
     701,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   514,
      -1,    -1,    -1,     5,    -1,     7,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   724,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4693,    -1,    -1,    -1,   335,    -1,    -1,    31,
      -1,    -1,   743,    -1,  4705,    -1,    -1,    39,    -1,    -1,
      -1,    -1,    -1,    -1,  4715,    -1,  4717,   356,    -1,    -1,
      -1,  4722,  4723,    -1,   569,    -1,    -1,  4728,    -1,    61,
      -1,    -1,    -1,    -1,  4735,    29,    -1,    -1,   583,  4740,
      -1,    73,    -1,    -1,    38,    -1,  4747,    -1,    -1,   594,
      -1,  4752,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    60,   612,    -1,    -1,
      -1,    -1,    -1,    -1,   413,    -1,    -1,    -1,   110,   111,
    4781,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   430,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,
      -1,    -1,    -1,   648,    98,    -1,    -1,    -1,    -1,    -1,
     655,   143,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   673,    -1,
     675,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     182,    38,    -1,    -1,   148,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,   173,
     725,    -1,    -1,   215,    -1,    -1,   731,    -1,  4889,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4897,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,   216,    -1,    -1,   112,    -1,    -1,   222,   223,
     569,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     127,    -1,   236,    -1,   276,    -1,  4947,   134,    -1,    -1,
      -1,    -1,    -1,    -1,  4955,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,  4964,    -1,  4966,  4967,    -1,    -1,   301,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,   321,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   329,    -1,   331,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5015,    -1,    -1,    -1,   350,    -1,
      -1,  5022,    -1,  5024,    -1,    -1,    -1,    -1,  5029,   216,
      -1,    -1,    -1,    -1,    -1,   222,   223,   369,  5039,    -1,
      -1,   335,    -1,    -1,   376,  5046,    -1,    -1,    -1,   236,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
      -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,    -1,   401,
      -1,    -1,    -1,   405,    -1,    -1,    -1,    -1,    -1,    -1,
     412,    -1,    -1,    -1,   416,    -1,    -1,    -1,    -1,  5090,
    5091,  5092,    -1,  5094,  5095,    -1,  5097,    -1,    -1,    -1,
    5101,  5102,    -1,    -1,  5105,    -1,    -1,    -1,    -1,    -1,
     297,   443,    -1,    -1,  5115,  5116,    -1,  5118,    -1,   413,
      -1,    -1,    -1,  5124,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,   430,    -1,  5139,    -1,
      -1,   473,    -1,    -1,    38,    -1,    -1,    -1,   335,    -1,
      -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    60,    29,    -1,   356,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   520,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    60,    93,
      -1,   533,    -1,   535,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   650,    -1,  5224,    -1,    87,   413,    -1,    -1,    -1,
      -1,    93,    -1,   127,  5235,    -1,    98,    -1,    -1,    -1,
     134,   573,    -1,   430,    -1,   674,    -1,   579,    -1,    -1,
     112,    -1,    -1,  5254,   148,    -1,    -1,    -1,    -1,    -1,
      -1,   690,    -1,  5264,    -1,   127,    -1,    -1,    -1,    -1,
      -1,  5272,   134,    -1,    -1,   569,    -1,  5278,    -1,   173,
    5281,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,  5290,
      -1,    -1,    -1,  5294,  5295,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   638,    -1,    -1,    -1,
      -1,   173,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,
      -1,    -1,    -1,    -1,    -1,    -1,  5337,    -1,    -1,    -1,
      -1,    -1,   236,   675,    -1,    -1,    -1,  5348,    -1,    -1,
      -1,  5352,    -1,    -1,   216,    -1,    -1,  5358,   690,   691,
     222,   223,    -1,    -1,  5365,    -1,    -1,    -1,   797,    -1,
      -1,   703,    -1,    -1,   236,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   569,    -1,    -1,    -1,    -1,  5388,    -1,    -1,
      -1,    -1,    -1,    -1,  5395,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,   335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5456,    -1,    -1,    -1,    -1,
      -1,    -1,   356,    -1,    -1,  5466,   895,    -1,  5469,    -1,
      -1,    -1,    -1,   335,    -1,    -1,    -1,    -1,    -1,    -1,
    5481,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5503,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   945,    -1,    -1,    -1,
      -1,   950,    -1,    -1,    -1,  5526,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   430,  5538,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   980,    -1,    -1,   983,  5556,  5557,    -1,    -1,    -1,
      -1,   990,    -1,    -1,    -1,    -1,    -1,    -1,   430,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5583,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5596,    -1,  5598,    -1,  1028,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5618,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5649,    -1,
    1079,  1080,  1081,  1082,    -1,    -1,  1085,    -1,    -1,    -1,
      -1,    -1,  1091,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5672,    -1,  5674,  5675,   569,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   569,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5729,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5792,    -1,    -1,    -1,    -1,    -1,  5798,    -1,  5800,
    5801,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5809,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1252,    -1,    -1,  1255,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5839,    -1,
      -1,    -1,  5843,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5879,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5890,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5903,    -1,    -1,    -1,    -1,    -1,    -1,  1338,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5928,    -1,    -1,
      -1,  5932,  5933,    -1,    -1,    -1,    -1,    -1,  5939,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1380,    -1,  1382,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5983,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6006,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6026,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6046,    -1,    -1,    -1,  6050,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6069,    -1,
      -1,    -1,    -1,    -1,  6075,  6076,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6099,  6100,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1540,    -1,  1542,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1577,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6161,  1590,  1591,    -1,  6165,    -1,    -1,  1596,    -1,    -1,
    6171,  1600,  1601,  1602,  6175,    -1,    -1,    -1,    -1,    -1,
    6181,    -1,  1611,  1612,  1613,    -1,  6187,    -1,  1617,    -1,
    1619,  1620,  1621,  1622,  1623,    -1,  1625,    -1,    -1,  1628,
    1629,    -1,    -1,    -1,    -1,    -1,    -1,  1636,    -1,  1638,
      -1,    -1,  1641,  1642,    -1,  1644,  1645,  1646,    -1,  1648,
    1649,  1650,    -1,    -1,    -1,    -1,  1655,    -1,    -1,  1658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1666,  1667,    -1,
    1669,  1670,  1671,    -1,    -1,  1674,  1675,  1676,  1677,  1678,
    1679,  1680,    -1,  1682,  1683,  1684,  1685,  1686,  1687,    -1,
    1689,  1690,    -1,  1692,  1693,  1694,  1695,  1696,  1697,  1698,
      -1,    -1,  1701,  1702,  1703,  1704,    -1,  1706,  1707,  1708,
      -1,  1710,    -1,  1712,    -1,  1714,    -1,    -1,    -1,  1718,
    1719,  1720,    -1,    -1,  1723,  1724,  1725,  1726,  1727,    -1,
    1729,    -1,    -1,    -1,    -1,    -1,    -1,  1736,    -1,    -1,
      -1,    -1,    -1,    -1,  1743,  1744,  1745,  1746,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1754,  1755,    -1,  1757,  1758,
      -1,    -1,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  1770,  1771,  1772,  1773,    -1,    -1,  1776,    -1,    -1,
      -1,    -1,  1781,    -1,    -1,    -1,    -1,    -1,  1787,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1819,    -1,    -1,    -1,    -1,  1824,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1834,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1865,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1902,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1927,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1952,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   674,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2062,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   797,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2194,  2195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   950,    -1,    -1,    -1,  2268,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2282,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   980,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2303,   990,  2305,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2313,  2314,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2374,  2375,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1082,    -1,    -1,
    2399,  2400,  2401,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2413,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2466,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2477,    -1,
      -1,  2480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2498,
      -1,    -1,  2501,  2502,    -1,  2504,  2505,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2513,    -1,  2515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2543,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2558,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1252,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2575,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2599,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2621,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2639,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1338,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1380,    -1,  1382,    -1,    -1,
      -1,  2700,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2713,    -1,  2715,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2808,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2820,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1540,    -1,  1542,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2876,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1577,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1596,    -1,    -1,    -1,  1600,    -1,  1602,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1611,  1612,    -1,    -1,
      -1,    -1,  1617,    -1,  1619,  1620,  1621,  1622,  1623,    -1,
    1625,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1636,    -1,  1638,    -1,    -1,  1641,  1642,    -1,  1644,
    1645,    -1,    -1,  1648,  1649,  1650,    -1,    -1,    -1,    -1,
    1655,    -1,    -1,  1658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1666,  1667,    -1,  1669,    -1,  1671,    -1,    -1,  1674,
    1675,  1676,  1677,  1678,  1679,  1680,    -1,  1682,  1683,  1684,
    1685,  1686,    -1,    -1,  1689,  1690,    -1,  3006,  1693,  1694,
    1695,    -1,    -1,    -1,    -1,    -1,  1701,  1702,  1703,    -1,
      -1,  1706,  1707,  1708,    -1,  1710,    -1,  1712,    -1,  1714,
      -1,    -1,    -1,  1718,  1719,  1720,    -1,    -1,  1723,  1724,
    1725,  1726,  1727,    -1,  1729,    -1,    -1,    -1,    -1,    -1,
      -1,  1736,    -1,    -1,    -1,    -1,    -1,    -1,  1743,  1744,
    1745,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3079,    -1,    -1,  3082,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3091,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3099,    -1,  3101,    -1,  3103,    -1,  3105,  3106,  3107,  3108,
    3109,  3110,    -1,  3112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3120,    -1,  3122,    -1,    -1,  3125,  3126,  3127,  3128,
      -1,    -1,  3131,  3132,  1819,    -1,  3135,    -1,  3137,  1824,
    3139,    -1,  3141,    -1,    -1,    -1,  3145,    -1,    -1,  1834,
      -1,    -1,    -1,    -1,  3153,    -1,  3155,    -1,  3157,  3158,
    3159,  3160,  3161,    -1,    -1,  3164,  3165,  3166,    -1,  3168,
      -1,    -1,  3171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3184,    -1,    -1,    -1,    -1,
    3189,    -1,    -1,  3192,    -1,  3194,  3195,  3196,    -1,    -1,
    3199,    -1,    -1,    -1,    -1,    -1,  3205,    -1,    -1,    -1,
      -1,  3210,    -1,    -1,    -1,    -1,    -1,  1902,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3226,    -1,    -1,
      -1,    -1,    -1,  3232,    -1,    -1,  3235,    -1,    -1,  3238,
      -1,    -1,  1927,    -1,    -1,    -1,    -1,    -1,  3247,  3248,
    3249,    -1,    -1,    -1,    -1,  3254,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3296,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3324,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3340,    -1,    -1,  3343,  3344,  3345,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3477,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2194,
    2195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3576,    -1,    -1,
      -1,    -1,    -1,  2268,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2282,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2303,    -1,
    2305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2313,  2314,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3665,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3673,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3687,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3710,    -1,    -1,  2399,  2400,  2401,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3723,    -1,    -1,  3726,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3749,  3750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3761,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3774,    -1,  3776,    -1,  3778,
      -1,  3780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3802,    -1,    -1,    -1,    -1,    -1,  3808,
      -1,    -1,    -1,  2498,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3823,  3824,    -1,    -1,  2513,    -1,
    2515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3843,    -1,    -1,  3846,    -1,    -1,
    3849,    -1,    -1,    -1,    -1,  3854,    -1,    -1,  2543,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2558,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2575,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3902,  3903,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2599,    -1,    -1,    -1,  3917,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3931,    -1,    -1,    -1,  2621,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3974,    -1,    -1,    -1,    -1,
      -1,    -1,  3981,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2700,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4076,    -1,    -1,
      -1,    -1,    -1,    -1,  4083,    -1,    -1,    -1,  4087,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2808,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2820,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2876,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3006,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4339,  4340,    -1,  4342,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4352,    -1,  4354,    -1,    -1,  4357,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4370,    -1,  4372,    -1,  4374,    -1,  4376,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4389,  4390,    -1,    -1,  3079,    -1,    -1,  3082,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3099,    -1,    -1,    -1,  3103,    -1,
    3105,  3106,  3107,  3108,  3109,  3110,    -1,    -1,    -1,    -1,
    4429,    -1,    -1,    -1,    -1,  3120,    -1,  3122,    -1,  4438,
    3125,  3126,  3127,  3128,    -1,    -1,  3131,  3132,  4447,    -1,
    3135,    -1,  3137,    -1,  3139,    -1,  3141,    -1,    -1,    -1,
    3145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3153,    -1,
    3155,    -1,  3157,    -1,  3159,  3160,  3161,    -1,    -1,  3164,
    3165,  3166,    -1,  3168,    -1,    -1,  3171,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3184,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3192,    -1,  3194,
    3195,  3196,    -1,    -1,  3199,    -1,    -1,  4516,    -1,    -1,
    3205,    -1,    -1,    -1,    -1,  3210,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4550,    -1,  3238,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3249,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3296,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3324,
      -1,    -1,    -1,  4642,    -1,    -1,    -1,    -1,    -1,    -1,
    4649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3389,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4744,  4745,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4818,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4882,    -1,  4884,    -1,    -1,    -1,    -1,
      -1,  3576,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4898,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4915,  4916,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4934,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3687,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3710,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3723,    -1,
      -1,  3726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5055,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3749,  3750,    -1,    -1,    -1,  5068,
      -1,    -1,  5071,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3774,
      -1,  3776,    -1,  3778,    -1,  3780,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3802,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3823,  3824,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3854,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5180,    -1,    -1,  5183,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5212,    -1,    -1,    -1,  3902,  3903,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3917,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5286,    -1,  3974,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4076,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5398,
      -1,    -1,  4087,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5427,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5437,    -1,
    5439,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5567,  5568,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5650,    -1,    -1,  4339,  4340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4352,    -1,  4354,
      -1,    -1,  4357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4370,    -1,  4372,    -1,  4374,
      -1,  4376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5701,    -1,  4389,  4390,    -1,    -1,  5707,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4447,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5813,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4516,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5860,    -1,    -1,    -1,  4550,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4642,    -1,    -1,
      -1,    -1,    -1,    -1,  4649,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5984,    -1,    -1,    -1,    -1,
      -1,    -1,  5991,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4744,
    4745,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6114,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4818,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6191,    -1,    -1,    -1,    -1,  4882,    -1,  4884,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4898,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4915,  4916,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4934,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5055,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5071,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5183,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5398,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5437,    -1,  5439,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5707,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5813,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,  5860,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,   173,
     174,    -1,   176,   177,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,  5984,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,  6191,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,     6,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    25,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   133,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,   169,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,   269,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,   295,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,   169,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    95,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,   114,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,   169,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,   114,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,   169,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,   169,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,   169,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,   153,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
     102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,
     152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,
     162,    -1,    -1,   165,    -1,    -1,   168,    -1,   170,    -1,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,
      -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,
     168,    -1,   170,    -1,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,
     258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,
      -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,
      -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,
     154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,
      -1,   165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,
      -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,
      -1,    -1,    -1,   170,    -1,   172,   173,   174,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
     217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,
      -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    18,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,   766,
      -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   165,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    24,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    24,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    32,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      61,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    32,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,   770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
       6,     7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     136,    -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,   281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,     6,     7,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    46,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,   281,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,     6,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
       6,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,     7,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,    -1,
      29,    -1,    31,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    60,    -1,    -1,    63,    -1,    65,    66,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   141,    -1,   143,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   192,   193,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   202,   203,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
     219,    -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,   238,
     239,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,
      -1,   280,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,   298,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,    -1,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,    -1,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
      -1,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,    -1,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,     7,     8,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    27,    -1,    29,    -1,    31,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,
      -1,    63,    -1,    65,    66,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   141,
      -1,   143,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     202,   203,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,   219,    -1,    -1,
      -1,    -1,   224,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   234,    -1,    -1,    -1,   238,   239,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,    -1,   280,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,   298,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,    -1,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,    -1,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,     7,     8,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    -1,    -1,    -1,    31,    -1,    33,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,
      65,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   141,    -1,   143,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,   193,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   202,   203,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   214,
     215,    -1,   217,    -1,   219,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,
      -1,    -1,    -1,   238,   239,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   278,    -1,   280,    -1,   282,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   298,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,    -1,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
      -1,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,    -1,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,    -1,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    35,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    36,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,   137,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    36,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    11,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,   769,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      17,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    16,    17,    -1,
     747,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,   145,    -1,   147,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   155,   156,   157,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,
      -1,   240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   265,   266,   267,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   290,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,    -1,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,    -1,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,    -1,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,    -1,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,    -1,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    16,    17,    -1,    -1,    -1,
      -1,    22,    23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,   145,    -1,   147,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   155,   156,   157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,   240,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   265,   266,   267,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   290,
     291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,    -1,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,    -1,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,    -1,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,    -1,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,    -1,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    16,    17,    -1,    -1,    -1,    -1,    22,
      23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,   145,    -1,   147,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   155,   156,   157,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   265,   266,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   290,   291,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,    -1,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,    -1,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
      -1,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,    -1,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
      -1,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    16,    17,    -1,    -1,    -1,    -1,    22,    23,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
     145,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     155,   156,   157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,
      -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     265,   266,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,   291,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
      -1,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,    -1,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,    -1,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,    -1,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,    17,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      17,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      17,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      18,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    24,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    45,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,    -1,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    37,    38,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      45,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    45,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    46,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    47,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    57,    -1,
      -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    57,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    57,    -1,    -1,    -1,    61,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    61,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    61,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      61,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    61,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    61,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    61,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    61,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,    -1,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,    -1,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   763,    -1,
      -1,    -1,    -1,    -1,   769,   770,   136,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     770,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   770,   136,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   763,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,   762,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   105,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   168,   169,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   243,   244,   245,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    95,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    95,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,   747,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   200,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   200,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,    -1,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,    -1,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,    -1,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,    -1,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,    -1,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,    -1,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,    -1,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
      -1,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,    -1,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,    -1,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   110,   111,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    -1,
     698,   699,   700,   701,   702,   703,   704,   705,    -1,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
      -1,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,    -1,    -1,    -1,   337,   338,
     339,   340,   341,    -1,    -1,   344,   345,   346,   347,    -1,
      -1,    -1,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,
      -1,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,   455,    -1,   457,   458,
      -1,    -1,   461,    -1,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,    -1,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,    -1,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     110,   111,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,   581,   582,   583,   584,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,    -1,   618,
      -1,   620,   621,    -1,   623,   624,    -1,   626,   627,   628,
     629,   630,   631,    -1,   633,   634,   635,   636,   637,   638,
     639,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,
     659,    -1,   661,    -1,   663,   664,   665,   666,    -1,   668,
     669,   670,    -1,   672,   673,    -1,   675,    -1,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,    -1,   698,
     699,   700,   701,   702,   703,   704,   705,    -1,   707,   708,
     709,    -1,   711,   712,   713,   714,    -1,    -1,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,    -1,    -1,   736,   737,    -1,
      -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,    -1,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,    -1,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   110,
     111,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
     201,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    -1,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    -1,   698,   699,
     700,   701,   702,   703,   704,   705,    -1,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,
     740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,    -1,   338,    -1,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,    -1,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,    -1,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,    -1,    -1,    -1,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,    -1,
      -1,    -1,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,    -1,    -1,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,    -1,    -1,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,    -1,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,    -1,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,    -1,   696,   697,    -1,   699,   700,
      -1,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,    -1,    -1,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    60,    63,
      65,    66,    73,    80,    93,    99,   110,   111,   112,   120,
     131,   141,   143,   148,   178,   192,   193,   202,   203,   214,
     215,   216,   217,   219,   224,   234,   238,   239,   278,   280,
     282,   297,   298,   305,   306,   307,   308,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   349,   350,   351,   352,   353,
     354,   355,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     442,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     740,   741,   742,   743,   772,   775,   776,   777,   778,   779,
     782,   789,   791,   804,   876,   930,   931,   938,   939,   955,
     956,   992,  1013,  1044,  1109,  1172,  1222,  1325,  1372,  1375,
    1385,  1390,  1396,  1409,  1412,  1418,  1421,  1426,  1433,  1445,
    1694,  1696,  1708,  1711,  1742,  1750,  1764,  1773,  1787,  1791,
    1792,  1796,  1810,  1818,  1822,  1828,  1829,  1830,  1862,  1863,
    1882,  1884,  1892,  1906,  1907,  1910,  1912,  1913,  1914,  1915,
    1919,  1949,  1956,  1958,  1965,  1968,  2005,  2007,  2012,  2013,
    2014,  2015,  2073,  2082,  2083,  2084,    49,   201,   321,   399,
     447,   495,   645,   649,   690,   720,  1326,  2040,  2041,  2042,
    2043,   171,   444,   493,  1420,  1794,   309,   335,   336,   343,
     348,   350,   356,   371,   381,   396,   408,   413,   427,   440,
     441,   447,   453,   456,   459,   474,   484,   555,   569,   588,
     590,   619,   622,   632,   640,   652,   671,   674,   706,   716,
     734,   741,  1884,  1891,  1901,  1907,  1908,  1909,  1910,  1911,
    1912,  1913,  1914,   993,   514,  1413,   183,   495,   690,  1015,
    1751,    49,   115,   189,   201,   270,   422,   447,   495,   631,
     649,   690,   693,   720,   728,  1707,  1047,   863,   957,  1709,
    1823,   115,   391,   742,  1835,   261,   689,  1952,  1045,  1420,
    1223,  1110,  1819,   234,   244,   927,   932,   934,  1891,   640,
     720,  1952,  1049,  1712,   932,   933,   863,   672,  1916,  1774,
     932,  1957,  1743,  1891,  1046,   210,  1865,  2006,   168,   169,
    1012,  1502,   263,   770,  1885,   115,  1952,  1891,   737,  2009,
    1695,   468,  1891,  1420,   386,   940,   769,  1879,  1881,  1891,
     790,   584,   662,  1891,  1420,  1811,  2009,  1891,     6,   655,
     702,     6,   655,  1765,   584,   662,   334,   335,   371,   413,
     590,   607,   632,   671,  2076,     0,    80,   773,   590,    49,
      96,   241,   277,   631,   720,   819,  1304,  1305,  1306,  1707,
    2040,  2041,  2042,  2043,   433,   444,   577,  1793,  1794,  1879,
    1891,   230,   287,   762,  1446,  2028,   235,   769,  1340,  1891,
     864,  1891,   747,   747,   864,   100,   112,  1706,   136,  1885,
    1891,  1896,  1052,  1053,  1056,  1079,  1891,  1706,  1364,  1365,
     248,  1489,  2044,  2045,  2040,   747,  1952,  1445,  1708,  1711,
    1742,  1750,  1790,   769,   877,   295,   994,   995,   998,  1002,
     802,   803,  1885,   728,  1410,  1952,   217,   100,  1054,  1079,
      37,    38,    47,   429,   430,   734,   902,   903,   905,   906,
     913,   914,   915,   917,   923,   950,   951,  1884,  1892,  1904,
    1907,  1908,  1909,  1910,  1912,  1914,   114,   149,   461,   602,
    1753,  1762,  1763,  1706,   112,  1705,    24,  1706,  1706,  1706,
    1706,  1706,   100,  1706,  1706,  1079,  1706,  1706,   645,  1952,
    1029,  1892,     6,     7,    41,    46,    63,    73,    99,   115,
     120,   143,   212,   230,   238,   270,   280,   281,   422,   427,
     437,   595,   599,   616,   621,   652,   683,  1896,  1969,  1973,
    1974,  1976,  1978,  1979,   987,   988,   149,   400,   460,  1714,
     457,   661,  1824,   123,  1831,  1950,    38,    87,    98,   127,
     134,   173,   222,   223,   236,   356,   430,   569,   899,   953,
     954,   956,   962,   963,   964,   965,   969,   970,   971,   972,
     973,   982,   983,   984,   985,   992,  1007,  1008,  1013,  1031,
    1037,  1044,  1894,  1895,  1952,    17,    18,    19,    20,    21,
      29,    30,    32,    39,    40,    43,    44,    45,    46,    48,
      49,    51,    52,    57,    61,    64,    84,    85,    86,    88,
      89,   101,   102,   103,   105,   106,   110,   111,   112,   120,
     122,   135,   146,   151,   152,   154,   160,   162,   165,   168,
     169,   170,   172,   173,   174,   176,   191,   195,   196,   197,
     198,   205,   216,   217,   225,   228,   248,   254,   255,   257,
     258,   259,   263,   271,   272,   273,   274,   284,   285,   286,
     292,   294,   317,   324,   332,   348,   357,   359,   360,   362,
     363,   364,   365,   366,   381,   393,   394,   395,   397,   398,
     444,   450,   452,   464,   486,   487,   491,   529,   531,   536,
     537,   538,   539,   548,   549,   565,   579,   585,   586,   593,
     600,   630,   636,   637,   643,   650,   679,   698,   699,   700,
     701,   705,   706,   720,   722,   732,   733,   735,   743,   752,
     753,   758,   762,   765,   766,   769,   770,  1496,  1497,  1498,
    1499,  1503,  1515,  1517,  1518,  1519,  1520,  1521,  1522,  1523,
    1524,  1525,  1526,  1527,  1535,  1539,  1540,  1541,  1542,  1543,
    1545,  1548,  1854,  1857,  1859,  1860,  1861,  1876,  1883,  1884,
    1891,  1901,    26,  1111,    17,   514,  1779,  1820,   345,   352,
     368,   378,   379,   380,   388,   528,   542,   642,   678,   692,
     935,   937,   722,   928,   934,  1891,   863,  1422,   899,  1034,
     149,   400,  1715,  1749,   934,     6,   316,   599,  1966,  1967,
    1974,  1976,  1917,    32,    61,   348,   447,   454,   493,   543,
     579,   631,   648,   702,   734,   770,  1267,  1884,  1889,  1891,
    1905,  1907,  1908,  1909,  1911,  1912,  1913,  1914,  1924,  1936,
    1940,     6,    40,    41,    50,   115,   129,   189,   201,   261,
     327,   336,   348,   359,   383,   416,   419,   421,   446,   447,
     454,   455,   471,   493,   514,   569,   583,   594,   597,   598,
     612,   648,   655,   675,   731,  1267,  1303,  1775,  1779,  1780,
    1782,  1791,  1884,  1937,   934,  1952,  1749,  1032,  1496,  1864,
    2009,  1014,   326,  1896,  1427,  1386,   769,    10,  2010,  1496,
    1568,   780,   781,   783,  1797,   403,  1891,   569,   207,   356,
     769,  1896,  1891,  1885,    95,  1391,   514,   601,   655,  1812,
    1813,   268,  2010,   656,   802,   207,   298,  1376,  1377,  1378,
     656,   802,   261,  1768,  1891,  1885,    18,   105,   106,   263,
    1855,  1856,  1886,  2075,  2075,  2075,   444,  2074,  2075,  2075,
     768,  1891,   112,  1171,  1171,  1171,   649,   847,   115,   115,
     115,   261,   645,   189,   201,   270,   422,  2044,   320,   447,
     447,  2040,  1789,  1788,  1471,  1472,  2029,   762,  1448,  1449,
    1450,    83,   121,   276,  2016,  2018,  2022,  2023,  1920,  1891,
    1328,   719,  1329,   769,   527,   694,   712,    45,  1896,  1897,
    1898,  1973,  1330,  1058,  1080,  1891,    84,  1335,  1334,     5,
      31,    73,   169,   208,   605,  1081,   863,   261,   114,   568,
    1366,  1367,  1368,   644,   422,   728,  2044,  1896,  1397,  1891,
     762,   880,  1003,    76,  1005,  1496,  1002,   268,  1411,  1700,
    1701,  1879,  1057,  1080,     5,  1892,  1016,   904,   915,   917,
      16,    17,    22,    23,    32,    58,    70,    90,   124,   144,
     145,   147,   155,   156,   157,   175,   209,   234,   240,   265,
     266,   267,   290,   291,   337,   339,   340,   355,   392,   394,
     417,   439,   450,   451,   482,   491,   537,   538,   539,   545,
     546,   561,   562,   585,   586,   604,   636,   695,   698,   701,
     724,   734,   743,   908,   950,  1228,  1230,  1232,  1234,  1236,
    1237,  1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,  1884,
    1907,  1910,  1912,  1914,   768,   768,   456,   764,    35,   309,
      95,  1754,    95,  1754,  1755,  1759,  1760,  1891,  1762,  1891,
      84,  1891,  1706,   864,   864,   864,   864,  1891,  1080,   863,
    1896,  1090,  1780,   863,  1698,  1706,  1706,  1048,   125,  1030,
     594,  1977,   634,   634,   690,   693,   720,   728,   762,  1495,
     461,   571,  1981,   689,  1983,  1980,    50,   728,  1982,   177,
     353,   655,   268,   177,   764,   413,  1496,   114,  1363,   376,
     601,  1825,  1826,   343,   149,   375,  1837,  1879,  1953,  1954,
     295,   374,   447,  1884,  1893,  1902,  1910,  1912,  1913,  1914,
      95,   548,  1891,  1893,  1893,  1893,  1893,  1891,   295,  1893,
    1891,   413,   953,   768,   776,   958,  1892,   966,   986,  1891,
      60,   335,    93,   148,   216,   297,   954,  1895,  1419,   122,
     752,   753,  1520,   762,   762,   762,   295,  1496,  1571,  1572,
     762,   762,   762,   762,   762,  1495,  1495,  1495,   762,  1494,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,  1496,   762,   110,   111,   360,   762,
    1569,  1570,  1876,  1883,  1901,   762,   762,   762,   762,  1496,
    1494,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   194,   762,   762,   762,   762,  1494,   762,   263,
    1856,  1495,  1494,  1494,   762,   762,   762,   762,   762,   762,
     762,   762,   174,  1883,   762,   762,   762,   762,   762,   762,
     762,   263,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   722,
     762,   762,   762,   762,   762,   722,   762,   762,   762,   762,
     762,   762,   762,   263,   762,   762,   762,   263,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   122,  1520,   122,
    1520,  1520,  1224,  1496,  2034,  2035,  1891,  1883,  1549,     9,
      10,   181,   183,   302,  1500,  1501,    81,    97,   126,   132,
     166,   747,   748,   749,  1504,    15,   125,   137,   213,   663,
    1502,    69,   162,   180,   236,   237,   750,   751,   752,   753,
     754,   755,   756,   757,  1520,    34,   163,   188,   188,   735,
    1886,   769,   762,   194,  1112,   496,   764,   747,  1886,  1423,
    1897,  1899,  1424,  1425,  1879,   718,   123,  1702,  1716,  1717,
    1879,  1977,   571,   177,    95,   177,    61,  1891,  1923,  1939,
     234,   631,   769,    17,    61,   235,   747,  1268,  1269,  1725,
    1896,    93,  1725,  1946,  1725,  1896,  1926,   770,  1896,    17,
      61,  1271,  1272,  1896,  1725,   769,  1927,  1925,   656,   762,
      49,   189,   201,   261,   270,   422,   447,   645,   720,   728,
     137,   296,  1786,    24,   673,   358,   673,   673,   421,  1786,
       6,  1183,  1896,   138,  1662,  1663,  1664,    95,   125,  1781,
    1783,   358,   673,    93,   673,   689,   662,     6,   338,   382,
     384,   477,   526,   574,   664,   685,  1769,  1770,  1771,   802,
     463,   673,   803,  1662,  1786,  1783,   496,   415,   361,   596,
     689,   704,    93,  1487,   673,   725,  1363,   148,  1866,  1867,
    1871,  1891,  1017,  1022,   764,  1428,  1429,  1430,  1431,  1879,
    1700,  1891,   346,   555,   214,   555,  2011,   764,   784,  1496,
     283,   785,    17,   402,   416,   418,   448,   463,   496,   514,
     594,   601,   611,   624,   655,   658,   673,  1798,  1803,  1804,
    1884,  1952,    35,   770,   941,   942,   943,   944,  1883,    11,
     747,  1630,  1631,  1959,  1891,   662,   780,   728,  1388,  1952,
    1815,   343,  1814,   764,   640,  1891,  2011,  1379,  1380,  1379,
     567,   739,   377,   764,  1379,  1379,  1701,   764,   566,  2078,
     684,  2079,   747,   128,   626,  2077,    80,   774,  1502,  1891,
     863,   863,  1171,  1171,  1171,  1171,  1171,  1171,    24,  1171,
     814,   813,   815,   728,   447,   817,   816,  2044,  1790,  1795,
    1855,  1891,    95,   123,   182,  1460,  1469,  1470,  1473,  1474,
    1475,  1658,  1664,  1690,  2024,     6,    68,   246,   247,   256,
     277,   460,   665,   666,   667,   668,  1477,  1482,  1483,  2039,
     762,  1722,  1731,  1448,   763,  2028,   230,     6,    68,  2026,
    2024,     6,    17,    61,   177,  1496,  1948,   235,    61,  1168,
    1169,  1180,  1181,  1276,   391,   866,  1891,  1495,   770,   866,
       5,  1059,  1879,   570,   390,  1076,  1076,  1076,     4,  1897,
    1898,  1899,  1989,  1993,  1879,  1368,   399,   475,   864,  1879,
     728,  1398,  1399,  1701,   769,   878,   881,   882,  1496,  1496,
     900,   901,   413,   996,   792,  1700,    93,   347,   433,   435,
     525,   602,   764,  1414,  1415,  1416,  1059,  1076,   916,   335,
     906,   907,   768,   768,   762,  1250,  1252,  1250,  1251,   374,
    1250,  1259,  1260,   762,  1247,  1248,  1250,   199,  1247,  1259,
      17,    34,   324,   342,   715,  1233,  1260,  1267,  1277,  1278,
    1280,    32,   290,  1233,  1240,  1242,  1259,  1233,  1247,   762,
    1259,  1233,  1250,  1252,  1233,  1251,   762,  1247,  1259,    32,
     291,   291,   293,  1247,  1250,   762,   912,  1251,  1251,  1251,
    1250,  1251,   194,   769,    61,   235,   952,  1247,   293,  1252,
    1252,  1250,  1250,  1251,   762,  1248,  1255,    93,  1891,    93,
    1879,    14,  1752,  1703,  1704,  1880,  1891,   296,  1633,   764,
    1756,   769,  1761,   177,   864,   769,  1090,  1972,  1974,   558,
     730,  1091,  1092,   416,  1899,  1988,  1700,  1699,  1697,   148,
     630,  1028,   689,   763,   762,  1994,  1994,  1994,  1994,  1899,
    1989,   189,   201,   261,   447,  1975,   422,   427,   437,   595,
     616,   621,   652,   683,  1979,   112,   264,  1716,   465,   720,
    1496,  1827,  1827,  1434,   493,  1836,  1631,   559,   730,   764,
    1951,   967,   968,   295,  1891,    95,   123,   237,   967,   295,
     762,   981,   148,   768,   769,   959,  1496,   764,  1010,  1009,
    1040,  1038,  1043,  1039,  1700,   762,     6,  1559,  1632,  1559,
    1559,  1496,  1572,    76,   295,   413,  1496,  1568,  1496,    68,
    1559,  1632,   763,    57,    89,   105,   146,   174,   273,   763,
    1672,  1676,  1677,   763,  1496,  1496,  1876,   763,  2034,    53,
      54,    55,    56,   107,   108,   109,   158,   159,   229,   303,
     395,   464,   529,   531,   536,   600,   643,   732,   743,  1627,
    1628,  1496,    68,  1551,  1496,  1496,  1496,  1496,  1496,  1627,
    1496,  1883,  1570,   319,   764,   769,    68,  1559,  1496,    68,
    1559,  1496,  1496,  1496,   763,  1496,  1496,  1499,   763,  1496,
    1496,  1496,   763,   635,  1559,  1559,  1496,    68,  1559,    25,
     133,   269,  1496,  1516,  1559,  1559,  1496,  1496,    68,  1559,
    1496,  1568,  1496,   769,  1496,  1496,  1496,  1512,  1513,  1496,
    1496,  1496,  1496,  1496,  1496,  1496,  1496,  1496,  1568,   392,
     394,   698,   701,  1629,  1496,  1496,  1568,  1879,  1568,  1496,
    1496,  1496,  1568,  1568,  1568,    93,  1879,  1496,  1496,  1496,
    1568,    93,  1496,  1496,  1496,   763,  1496,  1879,  1496,  1496,
    1628,  1628,  1496,  1516,  1496,   763,   360,   769,  1877,  1891,
    1496,  1496,  1496,  1496,  1496,  1496,   763,   764,  1862,  1496,
     769,   770,  1550,  1896,  1496,  1496,  1496,  1498,    86,   173,
     272,   717,  1502,     6,   323,  1498,  1505,  1498,   762,  1498,
    1498,   137,    15,   125,   137,   213,  1499,  1499,  1499,  1499,
    1499,  1499,  1499,   122,  1499,   122,  1499,  1499,  1499,  1499,
    1499,  1273,  1896,  1520,   762,  1547,  1643,  1891,   762,   100,
    1883,  1528,   445,   479,   554,   635,  1514,   139,   204,   492,
     688,  1113,  1117,    14,   268,  1821,   937,   394,   698,   701,
     936,  1548,  1859,  1876,   764,   268,   764,  1951,  1035,  1717,
    1713,   193,  1587,  1588,   764,    93,  1899,  1898,  1990,   189,
     201,   447,  1975,   769,   769,  1725,   764,  1918,  1974,  1891,
      34,  1274,  1496,  1899,   263,   565,   579,  1947,  1948,   207,
     478,  1941,  1942,  1943,  1944,   454,   493,   648,  1938,  1725,
    1948,  1891,   702,  1928,  1939,   764,  1930,   673,   754,  1171,
      24,   864,   864,  1879,   864,   864,   864,  1879,  1899,  1879,
    1487,  1487,   358,   673,  1786,   864,  1786,  1781,   125,  1784,
     496,   540,   673,  1778,  1778,   146,   174,   226,   273,   360,
    1665,  1666,  1857,  1883,  1786,  1891,   864,  1786,  1898,  1781,
    1786,  1885,   476,   686,   436,    93,  1772,   764,   421,   673,
    1879,  1783,  1781,  1781,  1496,  1786,  1786,  1786,   762,   766,
    1574,  1575,  1576,  1577,  1578,  1589,  1590,  1591,  1592,  1033,
     764,   762,  1869,   898,   413,   770,   125,   764,   193,  1439,
    1441,  1442,   433,   602,  1387,   235,   346,   214,  1496,   785,
     786,   496,   496,   496,   496,   343,   496,   802,   496,   764,
    1487,  1799,   936,   946,  1896,   764,   747,   447,  1884,  1888,
    1900,  1907,  1908,  1909,  1910,  1911,  1912,  1913,  1914,   438,
     548,  1891,  1960,  1961,  1885,  1389,  1700,   268,  1817,   802,
    1813,  1891,  1374,   615,   669,  1381,  1382,  1373,   659,  1378,
    1951,  1855,   582,  2080,  1896,    84,   810,  1972,  1989,  1896,
    1891,  1891,  1891,  1879,  1879,  1171,   864,  1171,  2066,  2070,
    1489,  2054,   851,  1489,  1171,   818,   842,  1171,  2060,  2063,
    2069,  1171,  2069,   728,    74,  1476,  1575,   186,   409,  1685,
    1686,  1691,    26,    93,   143,  1484,   201,  1680,  1690,  2024,
    1484,  1633,  1662,  1473,  1474,   754,  1485,  1486,  1489,  1483,
    1732,   764,   763,  2018,  2022,  1466,  1469,  1474,  1471,  2019,
    1921,  1169,    34,  1267,   404,   161,   206,   248,   369,   381,
     484,   555,   868,   875,  1896,   608,   713,  1077,  1078,   472,
    1073,  1074,  1075,  1082,  1090,  1092,  1336,   762,  1885,   328,
     521,  1067,  1068,  1069,  1082,  1083,  1084,  1090,  1092,  1060,
    1061,  1067,   466,   218,   764,  1997,  1951,  1333,  1332,  1879,
     764,   581,  1400,  1891,   880,   763,   764,  1004,   899,    29,
     295,   997,   999,    71,   113,   150,   467,   497,   498,   500,
     501,   502,   503,   504,   506,   507,   508,   509,   510,   511,
     512,   513,   515,   516,   517,   613,   614,   793,   794,   801,
      93,  1417,   719,  1701,  1415,   369,   552,   609,   714,  1070,
    1071,  1072,  1082,  1086,  1087,  1088,  1089,  1090,  1092,   282,
    1055,   762,   919,  1022,    57,   146,   174,   273,  1259,  1258,
    1725,  1259,   174,   279,   304,   653,  1249,  1249,  1277,    61,
    1273,  1275,  1279,  1280,  1268,    17,  1278,  1281,   374,  1261,
    1259,  1233,  1249,  1324,  1855,  1259,  1324,  1249,   293,  1249,
    1259,   909,   910,   911,  1892,   952,  1233,  1233,  1249,   227,
     708,  1891,  1496,  1496,   211,  1246,  1279,  1281,  1233,  1259,
    1249,   174,  1249,   918,   105,   753,   926,   927,  1669,  1671,
    1587,   688,   764,  1757,   769,  1761,  1634,  1657,  1658,  1760,
      95,   754,  1891,  1879,  1891,  1091,   764,  1725,  1726,   764,
      28,   220,  1369,  1700,  1700,   899,   762,   975,   978,  1891,
    1995,  1996,   268,   298,  1971,    24,   754,  1879,  1891,  1987,
    1987,  1987,  1987,   989,  1710,  1496,  1899,  1435,  1436,  1437,
    1438,  1879,   116,   149,   207,   739,  1955,  1671,  1954,  1496,
     967,   123,  1891,   967,   975,   976,   980,  1891,   880,  1891,
     902,  1022,  1029,  1031,  1034,  1032,  1951,  1496,   763,  1560,
     763,   763,   264,   413,  1496,  1496,    11,   283,   763,   283,
     764,  1536,   763,   754,   763,   764,   764,   763,   763,    95,
     763,  1538,   763,   764,   763,   764,   764,   764,   764,   753,
     764,   763,   762,  1876,  1883,  1559,   763,   763,  1559,   763,
     764,   763,   764,   763,   763,   125,   764,   764,   764,   763,
     763,    95,   764,  1559,   763,    95,  1496,    95,  1496,    95,
    1496,    95,   763,   763,   763,   764,   763,  1559,   763,   763,
     763,   763,  1883,   764,   763,   764,   763,   764,   764,   764,
     764,   764,   763,   763,   764,   764,   764,   763,   764,   763,
     763,   764,   763,   763,   763,   763,   763,   763,   763,   763,
    1879,   763,   763,   763,   764,   763,  1879,   763,   763,   764,
     763,   764,   764,   763,   764,   764,   764,   763,   763,   764,
    1883,  1891,   763,   769,   763,   764,    11,   490,   764,  1292,
     764,   763,  1627,  1627,  1568,   230,   762,  2027,  2028,  2030,
    2031,  2032,  2033,   767,  1883,  1938,   235,    86,   173,   272,
     717,   762,    10,  1496,  2034,   420,  1498,  1498,   762,  1498,
    1498,  1496,  1496,  1644,   193,  1646,   762,   762,   769,  1489,
    1532,  1533,  1534,   361,   762,  1122,  1123,  1115,  1122,  1116,
     577,  1125,   130,   458,  1496,  1885,   747,  1899,  1899,  1425,
     268,  1496,   234,   287,   722,   762,  1100,  1718,  1721,  1862,
     762,    99,  1974,    95,   764,    24,  1987,  1987,  1987,  1987,
    1891,  1891,  1948,  1939,    93,    93,  1725,  1275,  1725,   762,
     762,   567,   739,   490,   764,   764,   769,   769,   769,    61,
     447,   734,  1884,  1885,  1890,  1903,  1907,  1908,  1909,  1910,
    1911,  1913,  1914,  1496,  1725,  1941,  1929,  1931,  1932,   763,
    1891,   864,  1885,  1496,   864,  1786,  1786,  1885,    95,  1785,
     425,  1883,   226,   564,   764,   769,   863,  1786,   601,  1662,
    1771,  1784,  1781,  1879,  1786,  1786,  1609,  1891,    42,   117,
     128,   135,   164,   225,   256,  1585,  1586,   234,   764,  1879,
     899,  1867,  1870,  1891,  1868,   953,  1023,  1896,    61,  1432,
    1891,  1430,  1879,  1108,  1441,   115,   130,  1301,  1443,  1922,
      61,   114,   787,   788,  1496,  1737,  1738,    62,  1806,   802,
    1804,  1700,  1805,   944,   947,   948,   943,   560,   561,   637,
     945,    97,   132,   438,   485,   548,   592,   747,   748,   749,
    1962,  1964,  1633,  1700,   433,   602,   721,  1392,  1393,  1394,
    1671,     6,  1816,   764,   718,  1383,  1766,   764,    93,  2081,
    1167,  1168,   298,  1970,  1997,   848,   283,   708,  1314,   177,
     177,   805,   806,   864,   872,   873,   864,   864,   865,  1171,
    1171,  1879,  1171,  2060,   864,  1891,   865,  1171,   263,  1887,
    1887,   770,  1687,  1688,  1689,  1891,  1896,  1659,   280,   125,
    1891,  1680,  1690,  1461,   100,  1637,  1657,   764,  1496,  1874,
    1883,  1489,  1734,  1736,   762,  1729,  1466,   230,   762,  1447,
    2028,  1948,  1726,  1726,   544,   248,   248,   644,  1885,   248,
     248,   248,  1885,  1885,  1726,   764,  1075,   153,   343,   389,
     470,   532,   550,   551,   555,   556,   557,   623,   671,   844,
     845,    49,   462,   572,   579,   587,   660,   720,   849,   850,
    1726,  1726,   764,  1069,  1062,  1063,  1082,  1083,  1084,    26,
     298,   727,  1991,   249,   351,   480,   553,   680,   740,  1985,
    1986,  1993,   298,  2000,  1327,   177,   859,  1337,   762,  2046,
    1331,  1399,    93,   879,  1496,   264,  1000,   999,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   764,   719,  1726,  1726,  1726,  1726,   764,  1072,
     495,   434,  1064,  1065,  1066,  1082,  1083,  1084,  1085,  1088,
    1089,  1090,  1092,   884,   885,   886,  1891,   126,   413,   763,
     763,   763,   763,  1891,   764,   304,   279,  1258,   763,   764,
     763,  1228,   763,   764,   952,   952,   769,   747,  1281,   184,
     243,   245,   924,   925,   926,   929,  1502,  1891,    57,    89,
     146,   174,   273,   698,   702,  1478,  1479,  1522,  1704,  1891,
     283,  1891,  1496,   138,  1668,  1575,   769,  1761,  1951,  1974,
    1182,  1896,  1899,  1951,   413,   920,   921,   979,    72,   763,
     764,  1989,   316,  1987,   769,   769,   268,   268,   268,   268,
     900,  1718,   764,  1439,  1441,  1887,   739,   493,   375,   123,
     977,   763,   764,   769,   960,  1011,   413,  1041,  1006,  1036,
    1893,  1036,  1036,   764,  1496,  1496,   264,    17,    32,    58,
      70,    90,   124,   279,   291,   392,   394,   546,   653,   701,
     724,  1561,  1565,  1566,  1268,  1268,  1561,  1568,   763,   122,
     122,  1496,  1568,  1496,  1496,  1496,  1496,  1496,  1496,  1496,
    1499,   769,   763,   763,  1496,  1496,  1496,  1496,  1496,  1496,
    1496,  1496,   763,  1496,    95,  1496,    95,  1496,    95,  1496,
     122,  1496,   763,  1513,  1496,  1512,  1568,  1496,  1496,  1496,
    1496,  1496,  1573,  1496,  1496,  1496,  1496,  1568,   146,   752,
    1669,  1673,   122,  1496,  1496,  1496,  1496,  1496,   769,   769,
    1891,  1496,    17,    32,  1287,  1288,  1289,  1290,  1291,  1672,
    1671,   763,  1496,   753,   753,  1598,  1599,  1600,   762,  1457,
    1458,  1459,  1484,  2024,  1597,  2016,  2025,  2036,  1890,  1496,
    2034,  1498,   763,   764,   763,  1498,    10,  1496,  2034,   420,
    1627,  1627,  1645,  1891,    26,   763,  1544,  1567,  1568,  1883,
    1496,   763,   764,   762,  1131,  1499,  1123,   138,  1157,  1158,
    1672,   682,  1126,   321,  1118,  1114,   936,   268,  1879,   413,
    1719,  1722,  1722,   763,  1160,  1720,  1862,  1872,  1873,  1877,
    1891,   230,  1626,  1891,   571,  1988,  1898,  1987,    95,    95,
      95,    95,  1725,  1725,   775,  1899,  1948,   263,   263,   207,
     620,   646,  1945,  1943,  1942,   769,   769,  1725,  1948,  1930,
     764,  1934,  1936,  1940,   419,   731,  1669,  1674,  1776,  1666,
    1667,   425,  1666,  1666,  1883,   174,  1785,  1633,  1781,   230,
     287,  1593,  1601,  1602,  1603,  1604,  1609,  1610,  2035,  1574,
     128,   128,   185,  1612,   135,   225,  1585,  1612,  1574,  1745,
    1746,  1877,  1576,  1587,   413,   763,   764,    11,   768,   309,
    1024,  1440,   762,  1948,   764,   747,    93,   298,  1800,  1801,
     747,   764,  1963,  1662,    95,  1395,  1393,  1382,   499,   801,
    1384,    73,   629,  1767,  1671,   530,   316,  2000,    92,   341,
     458,   639,  1320,  1320,   177,  1879,  1879,   115,   137,   190,
     251,   252,   253,   276,   301,   329,   331,   350,   369,   376,
     391,   401,   416,   473,   483,   520,   533,   573,   579,   638,
     645,   675,   690,   691,   703,   762,  1094,  1098,  1173,  1175,
    1176,  1179,  1180,  1181,  1884,   843,   844,   872,    11,   126,
    2072,   369,   869,   870,   871,   875,  2067,  2055,   864,   811,
    1891,  2064,   628,  1879,  1692,  1896,   764,   769,  1496,  1660,
    1875,  1951,   651,  1681,  2017,  2018,    26,   104,  1635,  1662,
    1486,  1490,  1490,   769,  1738,   763,   764,  1730,  1484,  1471,
     762,  1452,  1453,  2018,  2022,  1275,  1269,   391,   391,   399,
     475,   105,   146,   174,   273,  1093,  1675,  1676,  1884,  1075,
    1726,  1726,    26,  1726,  1728,  1726,   153,   532,   298,  1726,
    1727,  1727,   845,  1885,  1885,  1885,  1885,  1671,  1885,  1885,
     763,   764,  1093,  1093,  1069,   764,  1063,   263,   579,  1896,
     263,   263,   263,    10,  1984,   518,   519,   522,   523,   524,
    1998,  1999,     5,     7,     8,    31,    33,    39,    73,   143,
     178,   182,   193,   215,   321,   357,   405,   406,   412,   424,
     443,   469,   535,   606,   617,   618,   619,   706,  1106,  1174,
    1176,  1341,  1345,  1347,  1350,  1356,  1357,  1358,  1360,  1361,
    1654,   373,   641,   215,  1338,  1891,  2047,    11,  2046,     6,
     361,  1401,   880,   900,  1496,   762,   762,  1671,   762,  1671,
    1671,  1885,  1885,  1674,  1885,  1671,  1885,  1885,  1885,  1885,
    1885,  1885,  1885,  1671,  1885,   387,   555,   657,  1860,  1885,
    1671,   794,  1885,  1672,  1093,  1093,  1072,   100,  1726,   764,
    1066,   763,   764,    17,   290,   604,   636,   724,   950,  1231,
    1232,  1235,  1236,  1237,  1238,  1240,  1241,  1242,  1243,  1266,
     921,   174,  1279,  1855,  1279,   910,  1891,   174,   764,   953,
     445,   263,  1499,   769,  1575,  1761,   226,  1666,   221,  1758,
    1633,  1369,   148,   922,   763,  1496,   978,  1996,   298,  2002,
     571,   268,   754,   754,  1989,  1989,  1989,  1989,   990,   177,
    1739,  1437,  1879,  1441,   114,  1444,  1832,  1496,   976,  1891,
     880,   335,  1006,   148,  1496,  1496,  1251,  1251,  1247,  1255,
     124,  1250,  1251,  1251,   124,  1251,  1250,   763,   763,   763,
     763,  1537,  1496,  1496,   763,   182,  1553,   763,   763,   764,
     764,   763,   764,   763,   125,  1529,  1530,  1883,   763,   763,
     763,   763,   764,   763,    93,   763,   763,   764,  1496,  1496,
    1496,  1496,   763,   763,    11,  1506,   763,    11,   763,   763,
     764,   763,   764,   763,   764,   763,   764,   763,   763,   763,
     763,   146,   174,   174,   763,   764,  1496,   763,   763,   764,
     764,   763,  1883,  1891,   769,   763,   762,  1282,  1282,    12,
      65,   630,   752,  1284,  1285,  1286,   764,   764,   763,  1496,
    1496,  1474,  2037,  2038,  2039,  1457,   763,  2028,   230,  1484,
    2026,  1595,  2031,  2032,   769,   763,  1568,  1498,   763,   764,
     763,  1498,  1646,  1638,  1875,   182,  1546,   763,   762,  1490,
    1534,  1119,  1120,  1121,  1891,   763,  1674,   122,    26,   762,
    1133,   747,   762,  1123,  1899,   216,  1723,  1724,  1877,   762,
    1721,   763,   763,   764,   230,   769,  1161,  1162,   763,   764,
      95,    95,  1990,  1990,  1990,  1990,  1948,  1948,   763,   763,
     370,   711,   207,  1891,  1891,  1948,  1933,  1935,    57,    89,
     146,   174,   273,  1662,  1667,  1777,  1786,  1611,  1605,   763,
    2022,  2025,  1484,  2024,  1577,  1863,   767,   128,  1612,  1612,
    1589,   128,   177,   283,   764,  1744,  1725,    94,  1480,   148,
    1891,   762,   295,  1025,  1026,   762,   200,  1623,  1624,  1625,
    1891,   788,   762,  1802,   207,   345,   352,   368,   378,   379,
     380,   388,   528,   542,   627,   642,   678,   692,   949,   948,
     762,   541,   747,   764,   675,   675,  1898,   391,  1879,   808,
     809,   404,  1879,  1726,  1726,  1726,  1726,  1726,   726,  1726,
    1726,  1726,  1726,  1726,   404,  1726,  1726,  1726,  1726,  1726,
    1726,  1726,  1726,  1726,  1726,   407,   526,  1891,  1726,  1726,
      36,   137,   580,   769,  1160,  1187,  1188,  1189,  1190,  1191,
    1199,  1200,  1204,  1205,  1206,  1301,  1305,  1306,  1878,  1891,
    1104,  1105,  1106,   764,  1175,  1725,  1173,  2072,  1489,  1885,
     869,   762,   893,   895,   897,   864,   852,  2046,   762,   891,
     895,   896,    58,   124,   209,   677,  1186,   812,  1267,  1270,
    1688,  1891,   764,    12,    65,  1661,   534,   762,  1638,  1636,
     734,  1640,    11,  1492,  1885,  1891,   754,  1883,  1490,  1489,
    1733,  1735,  1738,  1462,  1470,  1473,  1474,  1452,   763,   230,
    1451,  2028,  1673,  1673,  1673,  1673,  1673,  1673,   850,  1063,
     263,    11,   283,  1992,  1985,  1671,  1671,  1671,  1860,   752,
    1669,  1670,  1998,    36,   193,   367,   580,   687,  1191,  1199,
    1200,  1362,  1362,   193,  1362,   193,   268,    36,    92,   193,
     580,   687,  1203,  1301,  1362,  1726,   193,    26,  1108,    11,
     268,   747,  1371,  1726,   193,   129,   690,   129,   193,   690,
    1362,   193,   578,   193,   193,   193,  1174,   764,  1105,  1345,
     762,  1190,  1502,  2008,   325,   423,   853,   268,   405,   412,
     855,   763,   764,  2048,  2049,    11,     6,   762,  1402,  1001,
     797,   798,  1671,   799,   800,  1671,   795,   796,  1671,  1891,
    1093,  1066,   886,  1250,  1254,  1250,  1253,  1253,   912,  1253,
     194,   769,  1254,  1254,  1253,  1253,   763,   925,  1891,  1633,
     425,   226,  1485,  1445,    99,  1989,  1997,  1997,  1997,  1997,
      76,    78,   991,   410,  1444,   488,   114,   217,  1838,   961,
    1022,   899,  1562,  1563,  1564,   763,  1627,  1627,    26,   232,
    1552,  1496,  1496,  1568,   164,   340,   763,   298,  1531,  1496,
    1496,  1496,  1627,    58,    70,    90,   124,   209,   279,   392,
     394,   545,   546,   701,  1240,  1241,  1507,  1508,  1509,  1510,
    1561,  1496,  1496,  1496,  1496,    86,   272,  1671,  1679,  1627,
    1496,  1496,  1891,  1672,   763,  1292,  1287,  1285,  1287,  1288,
    1671,  1485,  2039,   763,  2022,  1599,  1596,  1891,   763,  1568,
     182,  1647,   764,  1661,    26,   763,  1567,  1492,   763,   764,
    1496,  1117,   193,  1134,  1135,  1672,  1119,   764,  1725,  1102,
    1103,  1721,  1872,  1161,   754,  1891,  1164,  1473,  1474,  2024,
    1477,  1108,  1891,  1990,  1990,  1725,  1725,  1934,  1939,  1662,
    1606,  1607,  1722,  1480,  1594,  1597,  1484,  2033,  1574,  1589,
     128,   128,  1574,  1589,  1579,  1580,  1746,  1633,    61,  1737,
       6,    11,    15,    95,  1481,  1631,  1487,  1027,  1026,     6,
    1346,  1354,  1355,  1891,   763,   764,  1674,  1807,  1808,   432,
     143,  1735,  1885,   801,   738,   807,   762,   762,  1726,    61,
    1671,  1678,    61,  1671,    61,  1671,    61,  1671,  1177,  1674,
    1671,  1671,  1885,  1885,  1726,  1671,  1896,   438,   485,   555,
    1185,  1671,  1674,  1674,    61,  1671,  1885,    61,   372,   374,
     411,   439,   574,   610,  1184,  1678,  1671,  1678,  1323,  1878,
    1879,    94,  1891,   763,   763,   764,    33,    92,   200,   277,
    1202,  1300,   212,  1294,  1171,  1301,  1302,  1302,  1207,   769,
    1099,  1838,  1175,    61,  1675,  1885,  1891,  1489,   820,   894,
     867,    14,   318,  1050,   177,    11,   892,   223,  2061,   662,
    2046,  1269,  1693,  1875,  1951,  1489,  1682,  1683,  1684,   299,
     300,  1639,  1496,  1547,  1641,  1642,  1885,  1891,   769,  1738,
     763,   764,  1484,  2024,  1484,   763,  2018,  2022,  1471,  1467,
    1470,  1474,  1885,   174,   174,   112,  1171,   726,   112,  1170,
    1705,  1420,  1705,  1346,  1267,  1705,   130,  1706,    94,   726,
     200,  1705,  1705,    61,  1891,  1420,  1655,  1656,  1877,  1107,
    1879,    61,  1891,  1420,  1355,  1705,  1420,  1420,  1420,  1346,
       5,    73,  1358,  1187,   318,   438,  1370,   591,  1496,  1496,
     177,   859,   864,   177,   369,   860,  1891,  1862,  2048,  1403,
     471,   264,   763,   764,   763,   764,   763,   764,  1279,   227,
    1891,  1279,  1281,  1279,  1281,   425,   571,  1997,   298,  2001,
    2001,  2001,  2001,   900,   987,  1740,   123,   880,   413,   413,
    1279,  1279,  1279,   763,   763,  1554,  1875,  1855,   138,  1555,
    1556,  1557,   763,   764,   763,   484,   534,   601,   763,   763,
     763,   763,  1247,   124,  1251,    32,  1251,  1511,   763,   763,
     763,   763,   764,   763,   763,   763,  1283,   763,   764,  1474,
    1597,   763,    26,   204,   226,  1648,  1649,  1875,  1875,   763,
    1121,  1627,   130,   458,  1136,   763,   764,   763,  1724,  1738,
    2018,  2022,  1163,  1164,  1474,   769,  1165,  1484,  2024,  1165,
    1485,  1948,  1948,  1477,  1631,  1595,  2036,   177,  1582,  1589,
    1589,   177,  1584,  1496,   762,  1657,   563,  1479,  1479,  1621,
    1622,  2034,   924,   763,   764,  1624,   763,   764,    10,  1809,
     763,  1896,   762,  1321,  1322,  1891,  1321,  1885,   762,  1885,
     763,   762,  1096,  1097,  1095,  1189,   762,   130,   130,  1302,
    1171,  1879,  1323,  1891,  1171,  1171,   647,   950,  1208,  1229,
    1230,  1891,    11,  1166,   821,   201,   447,   839,   840,   841,
     885,   887,   888,   889,   868,   874,  2008,  2068,    63,   120,
     280,  1051,   641,  2048,   883,   884,  2062,   867,  1885,    11,
     361,  1839,  1661,  1496,   763,   764,    11,   764,   754,  1490,
    1738,  1463,  1467,  1502,  1420,  1502,  1878,  1346,  1878,  1343,
    1269,  1878,  1705,  1354,   130,  1878,  1878,  1346,   764,  1661,
    1111,  1672,   298,  1206,  1346,  1351,  1346,   763,  1891,  1627,
     655,  1885,   408,  1339,   230,   762,  2028,  2050,  1406,  1891,
       6,   762,  1404,   900,   798,   800,   796,   194,   769,  2001,
      99,  1998,  2003,  2004,   130,   261,  1006,   148,   764,  1661,
     763,  1558,  1666,  1496,   534,   431,  1279,  1674,   763,  1671,
    1657,  1660,   763,    15,   386,   394,   698,   701,   710,  1650,
    1651,  1859,  1661,  1661,   670,  1159,  1118,   762,  1124,  1137,
    1891,  1135,  1165,   754,  1101,  1485,   763,  1581,   283,  1583,
     283,  1626,  1668,  1479,    10,   268,  1619,  1620,  1488,   264,
    1355,  1808,   405,   570,  1321,   763,   764,  1661,   762,   763,
    1805,  1891,  2018,  2022,  1173,  1496,  1171,  1323,  1891,   762,
    1295,   283,  1313,   708,  1323,  1323,  1210,   769,  1201,  1202,
    1209,   769,  1100,   201,   447,   825,   826,   827,   833,   838,
     841,   914,   831,   974,   829,   974,   413,   841,   118,   125,
     187,   890,   763,   764,    67,  2072,   177,   853,   763,  1266,
    2065,  2048,    79,    82,   179,   262,  1840,  1841,   140,  1842,
    1490,  1684,  1643,  1642,  2017,  1484,    84,  1348,    84,    73,
     234,  1206,  1414,  1274,  1878,  1369,  1342,  1656,   261,  1370,
    1352,  1354,  1344,   854,   861,   862,  1471,   762,  1455,  1456,
    2016,  2020,  2022,   298,  2051,   763,   764,  1405,   227,   708,
    1891,   571,  2004,   280,  1879,  1042,  1875,   564,   764,   763,
     763,   763,  1662,   710,  1651,  1652,  1859,   636,   589,   426,
    1653,   589,  1671,   762,  1131,  1127,    61,   288,   289,   386,
     461,  1138,  2017,  1608,  1480,  1496,   762,  1496,   762,   763,
    1479,  1479,   114,   282,   443,  1614,  1615,  1618,   763,   900,
     349,   762,   763,  1951,  1322,   174,  1951,   763,   764,  1104,
     763,  1323,  1313,   708,  1296,  1891,   151,  1297,  1320,  1192,
    1320,  1194,  1195,   200,   277,   301,   369,   481,   736,  1211,
    1212,  1221,  1263,  1264,  1265,  1293,  1502,  1884,  1230,    34,
      61,   173,   177,   329,   449,   647,  1215,  1217,  1256,  1257,
    1264,  1891,  1178,  1179,   831,   829,   822,   827,   838,   833,
     768,   768,   828,   768,   828,  1491,   187,   636,   950,  1266,
     889,  1018,  1019,  1489,   858,   859,  2072,    26,    26,    79,
      26,  1841,   250,   262,  1843,  1844,  1878,   577,   762,  1349,
      61,    61,  1370,  1420,  1879,  1353,  1392,   670,   856,   953,
    1464,  1473,  1474,  2024,  1455,   763,   230,  1454,  2028,  2026,
      33,   344,   493,  1891,   200,  1407,  1408,  1891,   194,  1741,
    1587,  1036,  1661,  1666,  1666,  1484,   442,    10,   442,   100,
     386,   555,   697,  1129,  1130,  1891,   763,   681,  1132,  1140,
     696,   115,   369,   376,   391,   520,   533,   552,   690,  1154,
    1155,  1156,  1780,  1474,  1631,  1626,  1626,  1301,  1301,  1615,
     849,  1951,   298,   369,   483,  1308,  1312,  1316,  1319,  1884,
    1661,   763,  1309,  1311,  1316,  1318,  1891,  1099,  1198,  1196,
    1320,   763,   764,   446,   576,   654,   177,  1298,   762,  1193,
     762,   762,   130,  1885,   687,  1264,   726,   130,   173,  1725,
    1273,   752,   753,   762,  1225,  1226,  1227,  1517,  1858,  1884,
     280,   322,    61,    11,   374,  1257,  1262,   836,  2072,   834,
    2072,   335,   413,   824,  1891,  1891,   865,   912,   194,   769,
      91,   846,   902,  2056,   855,  1018,  1855,  1855,    26,  1855,
      26,    26,  1844,  1202,  1672,  1134,  1227,  1108,   123,  1496,
     414,   857,   846,  2024,  1484,  1484,   763,  2020,  2022,  1471,
    1468,  1473,  1474,  2024,  2021,   571,    33,    33,   763,   764,
     708,  1747,  1748,  1877,  1833,  1652,   636,   184,   311,   763,
     764,  1672,   762,  1142,  1144,  1139,   404,  1726,  1726,   404,
    1726,  1726,  1726,  1726,   762,  1149,  1156,   416,   763,   763,
      93,  1613,  1613,   763,   283,   708,  1307,  1310,  1315,  1316,
    1317,   575,  1885,  1726,  1359,  1360,  1361,  1319,  1725,  1359,
    1318,   763,   762,   762,  1197,  1891,    63,   280,  1321,   762,
    1321,  1321,    61,  1675,  1885,  1891,  1860,  1860,  1224,   170,
     722,   636,  1225,  1258,  1256,   768,   974,   768,   974,  1022,
     823,   832,   830,   227,  1891,  1020,  1879,   860,   846,  1855,
    1855,  1855,   763,   762,  1496,  1484,  1465,  1468,  2024,  2050,
     571,   571,  1408,   764,  1725,  1270,  1128,  1130,   762,  1143,
    1144,  1145,   153,  1141,  1144,  1726,  1885,  1885,  1726,  1675,
    1675,  1672,  1896,   682,  1150,  1151,  1726,   100,   128,   182,
    1617,  1616,  1320,  1320,  1359,  1317,  1884,  1671,  1361,  1360,
      61,  1675,  1885,  1891,  1321,  1321,   762,    28,   220,   234,
     555,  1299,  1299,   763,  1321,   763,   763,   763,   762,  1493,
     413,   671,  1216,   837,   835,   413,  1491,   897,   896,   194,
     769,   335,    93,   408,  1134,  2020,  1484,  1748,  1738,  1834,
    1132,   763,   764,   153,  1147,  1148,  1499,  1885,  1885,  1152,
     763,   764,  1182,    26,    26,   762,   762,   763,   763,  1321,
      61,   173,   315,   177,   177,  1307,   763,  1308,  1309,   763,
    1672,  1213,  1214,  1263,  1213,   581,   676,   729,  1218,  1018,
    1018,   865,   867,  2061,   227,   708,  1891,  1022,  1489,   861,
     763,   226,  1845,  1144,   764,  1146,  1153,  1896,  1151,  1623,
    1625,  1294,  1307,   763,   280,    63,  1307,   763,  1263,  1219,
    1220,  1221,  1891,  2071,  2071,   867,   194,  1021,  2057,   466,
    1839,  1148,   763,  1154,   763,   763,  1307,  1299,  1299,  1221,
     708,   413,    75,    26,  1842,   636,  1855,   114,  1846,  2058,
     174,   762,  1848,   441,   588,  2052,  2053,   140,   226,  1847,
     763,   770,  1849,  1850,  1877,   234,  1851,  1896,  2059,  1896,
     763,   764,  1852,  1853,  1877,   953,  1850,   764,  1725,   846,
    1853,  1489,  1738,  1490
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   771,   772,   773,   772,   772,   774,   774,   775,   775,
     775,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   777,
     778,   778,   779,   781,   780,   783,   782,   784,   782,   785,
     786,   785,   787,   787,   788,   790,   789,   792,   791,   793,
     793,   794,   794,   794,   794,   794,   794,   794,   794,   794,
     794,   794,   794,   794,   794,   794,   794,   794,   794,   794,
     794,   795,   795,   795,   796,   797,   797,   797,   798,   799,
     799,   799,   800,   801,   801,   801,   801,   801,   801,   801,
     802,   802,   803,   805,   804,   806,   804,   807,   804,   808,
     804,   809,   804,   810,   804,   811,   804,   812,   804,   813,
     804,   814,   804,   815,   804,   816,   804,   817,   804,   818,
     804,   804,   804,   804,   804,   819,   804,   820,   804,   821,
     822,   823,   804,   824,   824,   825,   825,   825,   826,   826,
     827,   827,   828,   830,   829,   832,   831,   833,   833,   833,
     835,   834,   837,   836,   838,   839,   839,   840,   840,   841,
     841,   842,   842,   843,   843,   844,   844,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   846,   846,   848,   847,   849,   849,   850,   850,   850,
     850,   850,   850,   850,   852,   851,   854,   853,   853,   855,
     855,   855,   855,   856,   856,   857,   857,   858,   858,   859,
     860,   860,   862,   861,   863,   864,   864,   865,   865,   866,
     866,   867,   867,   868,   868,   868,   868,   868,   868,   868,
     869,   869,   870,   870,   871,   871,   873,   872,   874,   874,
     875,   875,   877,   876,   878,   876,   879,   876,   880,   880,
     881,   881,   882,   882,   883,   883,   884,   884,   885,   886,
     886,   886,   886,   886,   886,   887,   887,   888,   888,   889,
     889,   889,   889,   889,   889,   890,   890,   890,   890,   890,
     892,   891,   894,   893,   895,   896,   896,   897,   897,   898,
     898,   899,   899,   901,   900,   902,   902,   904,   903,   903,
     905,   905,   906,   906,   907,   907,   908,   908,   908,   909,
     910,   911,   911,   912,   913,   914,   914,   914,   914,   915,
     915,   915,   916,   915,   918,   917,   919,   919,   920,   922,
     921,   923,   923,   923,   923,   924,   924,   925,   926,   926,
     927,   928,   928,   929,   929,   929,   929,   929,   929,   930,
     930,   931,   932,   932,   933,   933,   934,   934,   935,   935,
     936,   936,   936,   937,   937,   937,   937,   937,   937,   937,
     937,   937,   937,   937,   937,   938,   939,   940,   940,   941,
     941,   942,   942,   943,   944,   944,   945,   945,   945,   946,
     947,   947,   948,   949,   949,   949,   949,   949,   949,   949,
     949,   949,   949,   949,   949,   949,   950,   950,   951,   951,
     952,   952,   952,   953,   953,   953,   953,   953,   953,   954,
     954,   954,   954,   954,   954,   954,   954,   954,   954,   954,
     954,   954,   955,   955,   955,   955,   957,   956,   958,   959,
     958,   960,   958,   961,   958,   963,   962,   964,   964,   966,
     965,   965,   968,   967,   969,   969,   969,   969,   970,   970,
     970,   970,   971,   972,   973,   974,   975,   977,   976,   979,
     978,   980,   980,   981,   981,   982,   983,   983,   983,   984,
     985,   986,   986,   988,   989,   990,   987,   991,   991,   991,
     993,   992,   995,   996,   994,   994,   997,   997,   998,   998,
    1000,  1001,   999,  1003,  1004,  1002,  1005,  1005,  1006,  1006,
    1007,  1009,  1008,  1010,  1011,  1008,  1012,  1012,  1014,  1013,
    1015,  1016,  1013,  1017,  1019,  1020,  1021,  1018,  1023,  1022,
    1024,  1024,  1025,  1025,  1027,  1026,  1028,  1028,  1029,  1030,
    1030,  1030,  1031,  1033,  1032,  1035,  1034,  1036,  1038,  1037,
    1039,  1037,  1040,  1041,  1042,  1037,  1043,  1037,  1045,  1044,
    1046,  1044,  1047,  1048,  1044,  1049,  1044,  1050,  1050,  1051,
    1051,  1051,  1052,  1053,  1054,  1055,  1055,  1056,  1056,  1057,
    1058,  1059,  1059,  1061,  1060,  1062,  1062,  1062,  1063,  1063,
    1063,  1064,  1065,  1065,  1065,  1066,  1066,  1066,  1066,  1066,
    1066,  1066,  1066,  1067,  1068,  1068,  1068,  1069,  1069,  1069,
    1069,  1069,  1070,  1071,  1071,  1071,  1072,  1072,  1072,  1072,
    1072,  1072,  1072,  1073,  1074,  1074,  1074,  1075,  1075,  1075,
    1076,  1077,  1078,  1079,  1080,  1081,  1081,  1081,  1082,  1083,
    1084,  1085,  1086,  1087,  1088,  1089,  1090,  1091,  1091,  1092,
    1092,  1093,  1093,  1095,  1094,  1094,  1094,  1096,  1094,  1097,
    1094,  1094,  1098,  1098,  1099,  1099,  1101,  1100,  1100,  1100,
    1102,  1100,  1103,  1100,  1104,  1105,  1105,  1107,  1106,  1108,
    1110,  1109,  1112,  1111,  1113,  1114,  1113,  1113,  1113,  1115,
    1113,  1113,  1116,  1113,  1117,  1117,  1118,  1118,  1119,  1119,
    1120,  1120,  1121,  1122,  1123,  1124,  1125,  1125,  1126,  1127,
    1126,  1128,  1126,  1129,  1129,  1130,  1131,  1132,  1132,  1133,
    1133,  1134,  1134,  1136,  1135,  1137,  1138,  1139,  1138,  1140,
    1138,  1138,  1138,  1138,  1141,  1141,  1142,  1142,  1143,  1143,
    1145,  1146,  1144,  1147,  1147,  1148,  1148,  1149,  1149,  1150,
    1150,  1152,  1151,  1153,  1154,  1154,  1155,  1155,  1156,  1156,
    1156,  1156,  1156,  1156,  1156,  1156,  1156,  1157,  1158,  1157,
    1157,  1159,  1159,  1160,  1162,  1161,  1163,  1163,  1164,  1164,
    1165,  1166,  1166,  1167,  1167,  1168,  1168,  1169,  1169,  1170,
    1170,  1171,  1171,  1172,  1172,  1173,  1173,  1174,  1174,  1175,
    1175,  1175,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1177,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1178,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1184,
    1184,  1184,  1184,  1184,  1184,  1185,  1185,  1185,  1186,  1186,
    1186,  1186,  1187,  1188,  1188,  1189,  1189,  1189,  1189,  1190,
    1190,  1192,  1191,  1193,  1191,  1194,  1191,  1195,  1191,  1196,
    1191,  1197,  1191,  1198,  1191,  1199,  1200,  1201,  1201,  1202,
    1203,  1203,  1204,  1204,  1205,  1207,  1206,  1209,  1208,  1210,
    1208,  1211,  1211,  1212,  1212,  1213,  1213,  1214,  1214,  1215,
    1215,  1215,  1215,  1216,  1215,  1215,  1215,  1217,  1217,  1218,
    1218,  1218,  1218,  1219,  1219,  1220,  1220,  1221,  1221,  1221,
    1221,  1223,  1222,  1224,  1224,  1224,  1225,  1226,  1226,  1227,
    1227,  1228,  1229,  1229,  1230,  1230,  1230,  1230,  1230,  1231,
    1231,  1231,  1231,  1231,  1232,  1232,  1232,  1232,  1232,  1232,
    1232,  1232,  1232,  1232,  1233,  1233,  1233,  1233,  1234,  1234,
    1234,  1234,  1234,  1234,  1234,  1234,  1235,  1235,  1235,  1235,
    1235,  1235,  1235,  1235,  1236,  1236,  1236,  1236,  1236,  1237,
    1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,
    1237,  1237,  1237,  1237,  1237,  1238,  1238,  1239,  1239,  1239,
    1239,  1239,  1239,  1239,  1239,  1240,  1241,  1241,  1242,  1242,
    1243,  1243,  1243,  1243,  1243,  1244,  1244,  1244,  1244,  1244,
    1245,  1245,  1245,  1246,  1246,  1247,  1247,  1247,  1248,  1249,
    1249,  1249,  1249,  1249,  1249,  1250,  1250,  1250,  1250,  1251,
    1251,  1252,  1252,  1253,  1253,  1254,  1254,  1255,  1255,  1256,
    1256,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1258,  1258,
    1259,  1259,  1260,  1261,  1262,  1263,  1263,  1263,  1264,  1264,
    1264,  1264,  1264,  1264,  1265,  1265,  1266,  1267,  1267,  1268,
    1268,  1269,  1269,  1270,  1270,  1271,  1271,  1272,  1272,  1273,
    1274,  1274,  1275,  1275,  1276,  1276,  1277,  1277,  1277,  1278,
    1279,  1279,  1280,  1280,  1280,  1280,  1280,  1280,  1281,  1281,
    1283,  1282,  1284,  1284,  1285,  1286,  1286,  1286,  1286,  1287,
    1288,  1289,  1289,  1290,  1291,  1291,  1292,  1292,  1293,  1293,
    1294,  1295,  1295,  1296,  1296,  1297,  1297,  1297,  1297,  1298,
    1298,  1298,  1298,  1298,  1299,  1299,  1299,  1299,  1299,  1300,
    1300,  1301,  1301,  1302,  1302,  1303,  1303,  1303,  1304,  1304,
    1305,  1306,  1307,  1307,  1308,  1308,  1309,  1309,  1310,  1310,
    1311,  1311,  1312,  1312,  1313,  1313,  1314,  1314,  1314,  1315,
    1315,  1316,  1316,  1316,  1316,  1316,  1316,  1317,  1317,  1318,
    1319,  1319,  1320,  1320,  1320,  1321,  1321,  1322,  1322,  1323,
    1323,  1324,  1324,  1326,  1327,  1325,  1328,  1325,  1325,  1329,
    1325,  1330,  1325,  1331,  1325,  1332,  1325,  1333,  1325,  1325,
    1325,  1325,  1325,  1334,  1325,  1325,  1335,  1336,  1325,  1337,
    1337,  1337,  1337,  1338,  1338,  1339,  1339,  1340,  1340,  1341,
    1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1342,
    1341,  1341,  1343,  1341,  1344,  1341,  1341,  1341,  1341,  1341,
    1345,  1346,  1346,  1348,  1347,  1349,  1349,  1349,  1351,  1350,
    1352,  1353,  1352,  1354,  1354,  1355,  1356,  1356,  1357,  1358,
    1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,
    1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,
    1358,  1358,  1358,  1358,  1358,  1358,  1359,  1359,  1359,  1359,
    1359,  1360,  1360,  1361,  1361,  1362,  1362,  1363,  1363,  1365,
    1364,  1366,  1366,  1367,  1367,  1368,  1368,  1369,  1369,  1369,
    1370,  1370,  1370,  1371,  1371,  1371,  1371,  1373,  1372,  1374,
    1372,  1372,  1372,  1375,  1376,  1376,  1377,  1377,  1378,  1378,
    1378,  1380,  1379,  1381,  1381,  1382,  1382,  1382,  1383,  1383,
    1383,  1384,  1384,  1386,  1385,  1387,  1387,  1387,  1388,  1389,
    1388,  1391,  1390,  1392,  1392,  1393,  1393,  1394,  1394,  1394,
    1395,  1395,  1397,  1396,  1398,  1398,  1399,  1400,  1400,  1401,
    1401,  1402,  1403,  1402,  1404,  1405,  1404,  1406,  1406,  1406,
    1407,  1407,  1407,  1408,  1408,  1409,  1409,  1410,  1411,  1410,
    1413,  1412,  1414,  1414,  1415,  1415,  1416,  1416,  1416,  1416,
    1416,  1416,  1417,  1417,  1419,  1418,  1420,  1420,  1420,  1422,
    1421,  1421,  1423,  1423,  1424,  1424,  1425,  1427,  1426,  1428,
    1428,  1429,  1429,  1430,  1431,  1432,  1432,  1434,  1433,  1435,
    1435,  1436,  1436,  1437,  1438,  1440,  1439,  1442,  1441,  1443,
    1443,  1444,  1444,  1445,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1447,  1447,  1447,  1447,  1447,  1447,  1447,  1449,  1448,
    1450,  1448,  1448,  1451,  1451,  1453,  1452,  1452,  1454,  1454,
    1456,  1455,  1455,  1458,  1457,  1459,  1457,  1457,  1461,  1460,
    1460,  1463,  1462,  1462,  1464,  1465,  1464,  1464,  1464,  1466,
    1466,  1467,  1467,  1468,  1468,  1468,  1469,  1469,  1469,  1470,
    1470,  1470,  1470,  1470,  1472,  1471,  1473,  1474,  1474,  1475,
    1476,  1476,  1477,  1477,  1478,  1478,  1478,  1479,  1479,  1479,
    1480,  1480,  1481,  1481,  1481,  1481,  1482,  1482,  1483,  1483,
    1483,  1484,  1484,  1484,  1485,  1485,  1485,  1486,  1486,  1487,
    1488,  1489,  1490,  1491,  1492,  1492,  1492,  1492,  1492,  1493,
    1493,  1493,  1494,  1494,  1494,  1495,  1495,  1496,  1496,  1496,
    1496,  1496,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,
    1497,  1497,  1497,  1497,  1498,  1498,  1498,  1498,  1498,  1498,
    1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,
    1499,  1499,  1499,  1499,  1499,  1499,  1499,  1499,  1499,  1499,
    1499,  1499,  1499,  1499,  1499,  1499,  1499,  1499,  1499,  1500,
    1500,  1501,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1504,
    1504,  1504,  1504,  1505,  1505,  1506,  1506,  1507,  1507,  1507,
    1508,  1508,  1508,  1508,  1508,  1508,  1509,  1509,  1509,  1511,
    1510,  1510,  1512,  1513,  1513,  1514,  1514,  1514,  1514,  1515,
    1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1518,  1518,  1518,
    1519,  1519,  1520,  1520,  1520,  1520,  1520,  1520,  1521,  1521,
    1522,  1522,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1524,  1524,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1525,  1525,  1525,  1525,  1525,
    1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,
    1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,
    1525,  1525,  1526,  1526,  1526,  1526,  1526,  1526,  1526,  1526,
    1526,  1528,  1527,  1527,  1527,  1529,  1529,  1530,  1530,  1531,
    1531,  1532,  1532,  1533,  1533,  1534,  1535,  1535,  1535,  1535,
    1535,  1535,  1535,  1536,  1537,  1535,  1535,  1535,  1535,  1535,
    1535,  1535,  1535,  1535,  1535,  1535,  1538,  1535,  1539,  1539,
    1540,  1540,  1541,  1541,  1541,  1541,  1541,  1541,  1541,  1541,
    1541,  1541,  1541,  1541,  1541,  1542,  1544,  1543,  1543,  1545,
    1545,  1546,  1547,  1549,  1548,  1550,  1550,  1550,  1550,  1551,
    1551,  1552,  1552,  1553,  1553,  1554,  1554,  1555,  1555,  1556,
    1557,  1558,  1558,  1558,  1560,  1559,  1561,  1562,  1561,  1563,
    1561,  1564,  1561,  1561,  1561,  1561,  1565,  1565,  1565,  1565,
    1565,  1565,  1565,  1565,  1566,  1566,  1566,  1567,  1567,  1568,
    1568,  1569,  1569,  1570,  1570,  1571,  1571,  1572,  1572,  1573,
    1573,  1574,  1574,  1575,  1576,  1576,  1577,  1577,  1578,  1579,
    1578,  1580,  1578,  1578,  1581,  1578,  1582,  1578,  1578,  1583,
    1578,  1584,  1578,  1578,  1585,  1585,  1585,  1586,  1586,  1587,
    1587,  1588,  1589,  1589,  1591,  1590,  1592,  1592,  1593,  1593,
    1594,  1593,  1593,  1593,  1593,  1595,  1595,  1596,  1595,  1597,
    1598,  1600,  1599,  1601,  1602,  1602,  1603,  1605,  1604,  1607,
    1608,  1606,  1609,  1610,  1611,  1612,  1612,  1613,  1613,  1613,
    1613,  1614,  1614,  1616,  1615,  1617,  1615,  1618,  1618,  1619,
    1620,  1619,  1622,  1621,  1623,  1623,  1624,  1624,  1625,  1625,
    1626,  1626,  1627,  1627,  1627,  1627,  1627,  1627,  1627,  1627,
    1627,  1627,  1627,  1627,  1628,  1628,  1628,  1628,  1628,  1628,
    1628,  1628,  1628,  1629,  1629,  1629,  1629,  1630,  1630,  1630,
    1631,  1631,  1632,  1632,  1633,  1634,  1633,  1635,  1636,  1635,
    1637,  1637,  1638,  1638,  1639,  1639,  1639,  1640,  1640,  1641,
    1641,  1642,  1644,  1643,  1645,  1645,  1646,  1646,  1647,  1647,
    1648,  1648,  1649,  1649,  1650,  1650,  1651,  1651,  1651,  1652,
    1652,  1652,  1653,  1653,  1653,  1653,  1653,  1653,  1654,  1655,
    1655,  1656,  1657,  1657,  1659,  1658,  1660,  1660,  1661,  1661,
    1661,  1662,  1662,  1663,  1664,  1664,  1664,  1665,  1665,  1665,
    1666,  1666,  1666,  1666,  1666,  1666,  1667,  1668,  1668,  1668,
    1668,  1669,  1669,  1670,  1670,  1671,  1671,  1671,  1671,  1671,
    1671,  1672,  1672,  1672,  1672,  1672,  1673,  1673,  1673,  1673,
    1674,  1674,  1674,  1674,  1674,  1675,  1675,  1675,  1675,  1675,
    1676,  1677,  1677,  1678,  1678,  1679,  1679,  1679,  1681,  1680,
    1682,  1682,  1683,  1683,  1684,  1686,  1685,  1687,  1687,  1688,
    1689,  1689,  1689,  1690,  1692,  1693,  1691,  1691,  1691,  1695,
    1694,  1697,  1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,
    1696,  1696,  1698,  1696,  1696,  1696,  1696,  1696,  1696,  1699,
    1696,  1700,  1700,  1701,  1702,  1703,  1703,  1704,  1705,  1705,
    1706,  1706,  1707,  1707,  1709,  1710,  1708,  1712,  1713,  1711,
    1714,  1714,  1714,  1714,  1715,  1715,  1716,  1716,  1717,  1718,
    1718,  1718,  1719,  1718,  1720,  1720,  1721,  1721,  1721,  1722,
    1722,  1723,  1723,  1724,  1725,  1725,  1726,  1726,  1727,  1727,
    1728,  1728,  1730,  1729,  1732,  1731,  1733,  1733,  1734,  1734,
    1735,  1735,  1736,  1736,  1737,  1737,  1738,  1738,  1739,  1740,
    1741,  1739,  1743,  1744,  1742,  1745,  1745,  1746,  1746,  1747,
    1747,  1748,  1749,  1749,  1751,  1750,  1752,  1752,  1753,  1753,
    1754,  1755,  1756,  1755,  1757,  1755,  1758,  1758,  1759,  1759,
    1760,  1760,  1761,  1761,  1762,  1762,  1763,  1763,  1763,  1765,
    1766,  1764,  1767,  1767,  1767,  1768,  1768,  1769,  1769,  1770,
    1770,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,
    1772,  1772,  1774,  1773,  1775,  1775,  1775,  1775,  1775,  1775,
    1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1776,  1775,
    1777,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,
    1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,
    1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,
    1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,  1775,
    1775,  1775,  1775,  1775,  1775,  1778,  1778,  1778,  1779,  1779,
    1780,  1780,  1781,  1781,  1782,  1782,  1783,  1783,  1784,  1784,
    1785,  1785,  1786,  1786,  1786,  1788,  1787,  1789,  1787,  1790,
    1790,  1790,  1790,  1790,  1791,  1791,  1792,  1793,  1793,  1793,
    1794,  1794,  1795,  1795,  1795,  1797,  1796,  1799,  1798,  1798,
    1800,  1800,  1801,  1802,  1801,  1803,  1803,  1804,  1804,  1804,
    1804,  1804,  1804,  1804,  1804,  1804,  1804,  1804,  1804,  1804,
    1804,  1804,  1804,  1805,  1805,  1806,  1806,  1807,  1807,  1807,
    1808,  1809,  1809,  1811,  1810,  1812,  1812,  1814,  1813,  1815,
    1813,  1813,  1816,  1816,  1817,  1817,  1819,  1818,  1820,  1821,
    1821,  1823,  1822,  1824,  1824,  1824,  1825,  1825,  1825,  1826,
    1826,  1827,  1827,  1828,  1829,  1831,  1832,  1833,  1834,  1830,
    1835,  1835,  1836,  1836,  1837,  1837,  1837,  1838,  1838,  1838,
    1839,  1839,  1840,  1840,  1841,  1841,  1841,  1841,  1842,  1842,
    1843,  1843,  1844,  1844,  1845,  1845,  1846,  1846,  1847,  1847,
    1848,  1848,  1848,  1849,  1849,  1850,  1850,  1851,  1851,  1852,
    1852,  1853,  1854,  1854,  1854,  1854,  1855,  1855,  1856,  1856,
    1856,  1857,  1857,  1857,  1858,  1858,  1859,  1859,  1859,  1859,
    1859,  1859,  1859,  1859,  1859,  1859,  1860,  1860,  1860,  1860,
    1860,  1861,  1861,  1861,  1862,  1862,  1864,  1863,  1865,  1865,
    1866,  1866,  1868,  1867,  1869,  1869,  1870,  1870,  1871,  1872,
    1872,  1873,  1873,  1874,  1874,  1875,  1876,  1876,  1876,  1876,
    1876,  1877,  1877,  1877,  1877,  1877,  1878,  1878,  1878,  1878,
    1879,  1879,  1879,  1880,  1880,  1881,  1882,  1882,  1883,  1883,
    1883,  1884,  1885,  1886,  1887,  1888,  1888,  1889,  1889,  1890,
    1890,  1890,  1891,  1891,  1892,  1892,  1893,  1893,  1894,  1894,
    1895,  1896,  1896,  1896,  1897,  1897,  1897,  1898,  1898,  1899,
    1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1901,
    1901,  1901,  1901,  1901,  1901,  1901,  1901,  1901,  1901,  1902,
    1902,  1902,  1902,  1902,  1902,  1903,  1903,  1903,  1903,  1903,
    1903,  1903,  1903,  1903,  1904,  1904,  1904,  1904,  1904,  1904,
    1904,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1908,  1908,  1908,  1908,  1908,  1908,  1909,  1909,
    1909,  1909,  1909,  1909,  1909,  1909,  1909,  1909,  1910,  1910,
    1910,  1911,  1911,  1911,  1912,  1912,  1912,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,
    1913,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,  1914,
    1914,  1914,  1914,  1916,  1915,  1917,  1918,  1915,  1920,  1919,
    1921,  1919,  1922,  1919,  1923,  1923,  1925,  1924,  1926,  1924,
    1927,  1924,  1929,  1928,  1928,  1930,  1930,  1932,  1931,  1933,
    1931,  1935,  1934,  1934,  1936,  1936,  1936,  1937,  1937,  1937,
    1937,  1938,  1938,  1938,  1938,  1939,  1939,  1939,  1940,  1940,
    1940,  1940,  1940,  1940,  1940,  1940,  1940,  1940,  1940,  1940,
    1940,  1940,  1940,  1941,  1941,  1941,  1941,  1942,  1943,  1944,
    1944,  1945,  1945,  1945,  1945,  1946,  1946,  1947,  1947,  1947,
    1948,  1948,  1948,  1948,  1948,  1950,  1949,  1951,  1951,  1951,
    1952,  1952,  1953,  1953,  1954,  1955,  1955,  1955,  1955,  1955,
    1957,  1956,  1958,  1958,  1959,  1958,  1960,  1960,  1961,  1961,
    1962,  1962,  1962,  1962,  1963,  1962,  1964,  1964,  1964,  1964,
    1964,  1965,  1966,  1966,  1966,  1966,  1966,  1966,  1966,  1966,
    1967,  1967,  1968,  1969,  1969,  1969,  1969,  1969,  1969,  1969,
    1970,  1970,  1971,  1971,  1972,  1972,  1973,  1974,  1974,  1975,
    1975,  1976,  1976,  1977,  1977,  1978,  1978,  1980,  1979,  1981,
    1979,  1982,  1979,  1983,  1979,  1979,  1979,  1979,  1979,  1979,
    1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,
    1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,
    1979,  1979,  1984,  1984,  1985,  1985,  1986,  1986,  1986,  1987,
    1987,  1987,  1987,  1988,  1988,  1989,  1989,  1990,  1990,  1991,
    1991,  1992,  1992,  1993,  1993,  1993,  1993,  1993,  1994,  1994,
    1995,  1995,  1996,  1997,  1997,  1997,  1997,  1997,  1998,  1998,
    1998,  1998,  1998,  1999,  1999,  2000,  2000,  2001,  2001,  2002,
    2002,  2003,  2003,  2004,  2004,  2006,  2005,  2007,  2008,  2008,
    2009,  2009,  2010,  2010,  2010,  2011,  2011,  2011,  2012,  2013,
    2013,  2013,  2014,  2015,  2016,  2016,  2016,  2017,  2017,  2019,
    2018,  2021,  2020,  2023,  2022,  2024,  2024,  2025,  2026,  2026,
    2026,  2027,  2027,  2029,  2028,  2030,  2031,  2031,  2032,  2032,
    2033,  2033,  2033,  2034,  2035,  2036,  2037,  2037,  2038,  2038,
    2039,  2039,  2039,  2039,  2039,  2039,  2039,  2039,  2039,  2040,
    2040,  2041,  2042,  2043,  2043,  2043,  2044,  2044,  2045,  2045,
    2046,  2046,  2047,  2047,  2049,  2048,  2050,  2050,  2050,  2050,
    2050,  2050,  2050,  2051,  2051,  2051,  2051,  2052,  2052,  2053,
    2053,  2055,  2056,  2057,  2058,  2059,  2054,  2060,  2062,  2061,
    2064,  2065,  2063,  2067,  2068,  2066,  2069,  2070,  2071,  2071,
    2072,  2072,  2073,  2073,  2073,  2073,  2073,  2073,  2074,  2074,
    2075,  2075,  2075,  2076,  2076,  2076,  2077,  2077,  2077,  2078,
    2078,  2079,  2080,  2079,  2081,  2081,  2082,  2082,  2083,  2083,
    2084
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     4,     0,     2,     0,     4,     0,     5,     0,
       0,     3,     3,     1,     1,     0,     3,     0,     6,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       0,     1,     1,     0,     7,     0,     8,     0,    15,     0,
      14,     0,    14,     0,     6,     0,    10,     0,    11,     0,
       5,     0,     5,     0,     5,     0,     5,     0,     5,     0,
       6,     7,     6,     4,     3,     0,     3,     0,    13,     0,
       0,     0,    16,     1,     3,     1,     1,     2,     1,     2,
       1,     2,     0,     0,     7,     0,     6,     4,     4,     1,
       0,     5,     0,     5,     2,     0,     1,     1,     2,     3,
       3,     1,     1,     0,     1,     1,     2,     3,     2,     1,
       3,     2,     1,     3,     3,     3,     1,     1,     1,     1,
       3,     0,     1,     0,    12,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     0,    12,     0,     6,     2,     0,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     4,
       0,     2,     0,     3,     0,     3,     1,     0,     1,     0,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     1,
       2,     1,     1,     2,     0,     1,     0,     2,     1,     2,
       3,     3,     0,     4,     0,     6,     0,     8,     0,     3,
       0,     1,     3,     1,     0,     1,     3,     1,     1,     2,
       6,     8,     4,     6,     3,     0,     1,     3,     1,     3,
       7,     9,     5,     7,     4,     0,     1,     1,     1,     2,
       0,     4,     0,     4,     0,     1,     1,     1,     1,     0,
       3,     2,     3,     0,     2,     0,     1,     0,     3,     1,
       2,     3,     2,     3,     0,     1,     1,     3,     5,     1,
       2,     1,     3,     3,     1,     3,     5,     5,     4,     1,
       4,     2,     0,     6,     0,     6,     0,     3,     0,     0,
       3,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     2,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     0,
       3,     0,     5,     0,     7,     0,     2,     1,     1,     0,
       3,     1,     0,     2,     1,     2,     3,     4,     1,     2,
       3,     4,     2,     2,     2,     0,     0,     0,     3,     0,
       3,     1,     3,     0,     3,     3,     3,     4,     5,     2,
       2,     1,     3,     0,     0,     0,     7,     0,     2,     2,
       0,     6,     0,     0,     4,     1,     1,     2,     1,     2,
       0,     0,     6,     0,     0,     6,     0,     2,     0,     1,
       1,     0,     6,     0,     0,     9,     0,     2,     0,     5,
       0,     0,     7,     0,     0,     0,     0,     7,     0,     4,
       0,     2,     1,     2,     0,     5,     0,     1,     2,     5,
       3,     5,     3,     0,     6,     0,     6,     1,     0,     5,
       0,     5,     0,     0,     0,    11,     0,     5,     0,     3,
       0,     3,     0,     0,     8,     0,     3,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     0,     7,     3,     3,     0,     5,     0,
       5,     1,     2,     4,     0,     4,     0,     7,     5,     3,
       0,     5,     0,     5,     1,     0,     1,     0,     4,     0,
       0,     3,     0,     6,     6,     0,     4,     2,     2,     0,
       3,     2,     0,     3,     0,     1,     0,     3,     0,     1,
       1,     3,     1,     4,     3,     3,     0,     2,     0,     0,
       7,     0,    10,     1,     3,     1,     1,     0,     2,     0,
       3,     1,     3,     0,     6,     1,     0,     0,     4,     0,
       3,     1,     1,     1,     1,     1,     1,     3,     1,     3,
       0,     0,     5,     1,     3,     1,     1,     0,     3,     1,
       3,     0,     4,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     3,     4,     4,     3,     0,     0,     5,
       2,     0,     2,     5,     0,     3,     1,     1,     2,     1,
       1,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       3,     0,     3,     1,     3,     0,     1,     1,     2,     1,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     0,     6,     1,     1,     3,     4,     4,     2,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       1,     0,     1,     2,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       2,     0,     9,     0,    10,     0,     9,     0,     9,     0,
      10,     0,    11,     0,    10,     2,     7,     0,     1,     4,
       0,     1,     0,     1,     2,     0,     4,     0,     3,     0,
       3,     0,     1,     2,     1,     0,     1,     2,     1,     0,
       1,     2,     3,     0,     6,     5,     5,     0,     2,     0,
       1,     1,     1,     0,     1,     2,     1,     1,     2,     2,
       1,     0,     3,     1,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     2,     1,     1,
       3,     3,     3,     3,     0,     1,     2,     2,     3,     3,
       2,     3,     3,     4,     3,     3,     3,     3,     2,     3,
       3,     3,     2,     2,     3,     1,     2,     2,     2,     2,
       3,     3,     2,     3,     2,     2,     3,     3,     2,     3,
       2,     2,     2,     2,     2,     5,     5,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       2,     1,     2,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     2,     0,     3,     0,     1,     1,     5,     0,
       1,     1,     1,     2,     2,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     0,     1,     0,     1,     2,
       1,     1,     2,     4,     1,     3,     2,     1,     0,     2,
       0,     1,     2,     2,     2,     2,     2,     1,     1,     3,
       3,     3,     3,     2,     1,     2,     1,     2,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     0,     1,     2,     1,     1,     2,
       0,     1,     1,     2,     1,     2,     2,     1,     0,     1,
       0,     4,     1,     1,     1,     0,     1,     2,     1,     1,
       2,     1,     3,     3,     1,     1,     0,     2,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     1,     2,     0,     2,     0,     2,     2,     2,
       2,     3,     2,     3,     3,     3,     3,     1,     1,     1,
       1,     3,     1,     1,     1,     4,     2,     1,     4,     0,
       1,     1,     3,     0,     0,     8,     0,     5,     7,     0,
       5,     0,     5,     0,    10,     0,     9,     0,    11,     3,
       4,     3,     3,     0,     8,     7,     0,     0,     7,     0,
       3,     1,     4,     0,     3,     0,     2,     0,     1,     0,
       2,     2,     2,     2,     1,     1,     1,     4,     4,     0,
       6,     4,     0,     5,     0,     6,     4,     3,     1,     7,
       2,     1,     1,     0,     6,     0,     3,     2,     0,     5,
       0,     0,     6,     1,     3,     1,     1,     3,     3,     3,
       2,     2,     4,     2,     7,     6,     5,     5,     4,     5,
       4,     4,     2,     2,     7,     6,     3,     5,     1,     1,
       1,     1,     1,     3,     3,     3,     0,     1,     1,     2,
       2,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       2,     0,     1,     2,     1,     1,     1,     0,     1,     1,
       0,     2,     1,     0,     1,     1,     1,     0,     6,     0,
       5,     4,     4,     3,     0,     1,     1,     3,     3,     2,
       2,     0,     2,     1,     3,     0,     1,     1,     0,     2,
       4,     1,     3,     0,     5,     0,     1,     1,     3,     0,
       4,     0,     4,     0,     1,     1,     2,     1,     1,     1,
       0,     2,     0,     5,     1,     3,     2,     0,     3,     1,
       4,     1,     0,     4,     1,     0,     4,     0,     1,     3,
       0,     1,     3,     1,     1,     2,     6,     3,     0,     4,
       0,     3,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     0,     2,     0,     6,     0,     1,     1,     0,
       4,     4,     3,     5,     1,     3,     4,     0,     6,     1,
       1,     1,     3,     2,     3,     1,     1,     0,     6,     1,
       1,     1,     3,     3,     4,     0,     6,     0,     2,     0,
       4,     0,     2,     2,     3,     1,     2,     2,     3,     4,
       4,     3,     1,     2,     2,     3,     4,     4,     0,     3,
       0,     5,     3,     4,     2,     0,     2,     3,     4,     2,
       0,     2,     3,     0,     2,     0,     7,     3,     0,     4,
       2,     0,     4,     2,     2,     0,     4,     2,     3,     1,
       1,     1,     1,     1,     1,     2,     1,     2,     3,     1,
       4,     2,     2,     3,     0,     3,     5,     0,     1,     2,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     2,
       0,     2,     3,     1,     4,     4,     2,     1,     1,     1,
       1,     0,     3,     5,     3,     1,     1,     3,     4,     0,
       0,     0,     0,     0,     0,     2,     2,     1,     1,     0,
       2,     3,     0,     2,     3,     0,     2,     3,     3,     3,
       2,     1,     3,     4,     3,     4,     3,     4,     3,     4,
       3,     3,     6,     1,     5,     6,     5,     7,     6,     8,
       5,     6,     4,     3,     5,     4,     6,     3,     4,     1,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       6,     6,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     2,     1,     1,     1,     2,     1,     2,     2,     0,
       3,     1,     4,     1,     3,     1,     1,     1,     1,     3,
       1,     4,     4,     4,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     6,
       4,     4,     7,     6,     3,     4,     6,     6,     4,     4,
       4,     4,     4,     4,     6,     8,    10,     1,     1,     3,
       1,     3,     1,     2,     2,     2,     2,     2,     1,     3,
       4,     6,     4,     6,     2,     2,     4,     4,     4,    10,
       6,     8,     6,     4,     4,     6,     4,     3,     4,     1,
       4,     3,     4,     6,     8,     2,     2,     8,     8,     6,
       8,     6,     6,     6,     6,     2,     6,     6,     8,     8,
       6,     8,     6,     2,     8,     8,     4,     2,     2,     2,
       6,     6,     4,     4,     8,     4,     4,     4,     4,     3,
       8,     6,     8,     4,     6,     4,     6,     4,     4,     4,
       6,     8,     4,     3,     6,     4,     6,     5,     8,     7,
      10,     1,     6,     4,     4,     4,     4,     4,     6,     4,
       6,     0,     5,     6,     8,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     4,     4,     5,     4,     4,
       4,     5,     4,     0,     0,     7,     4,     5,     4,     5,
       4,     4,     4,     4,     4,     5,     0,     9,     3,     3,
       1,     1,     3,     3,     3,     3,     3,     4,     4,     4,
       6,     4,     6,     4,     6,     5,     0,     7,     4,     4,
       4,     4,     1,     0,     3,     3,     1,     3,     5,     0,
       1,     0,     2,     0,     3,     4,     2,     0,     1,     1,
       2,     1,     3,     3,     0,     3,     2,     0,     4,     0,
       4,     0,     4,     2,     1,     1,     1,     1,     2,     1,
       2,     2,     1,     2,     1,     2,     2,     0,     1,     1,
       3,     1,     3,     1,     3,     4,     5,     1,     3,     3,
       3,     1,     1,     1,     1,     4,     1,     3,     3,     0,
       6,     0,     8,     4,     0,     8,     0,    10,     6,     0,
       8,     0,    10,     6,     1,     2,     1,     1,     2,     0,
       1,     5,     1,     1,     0,     6,     6,     9,     1,     2,
       0,     4,     2,     3,     3,     1,     1,     0,     3,     2,
       1,     0,     3,     2,     1,     1,     3,     0,     3,     0,
       0,     5,     0,     1,     0,     0,     1,     0,     2,     3,
       3,     1,     1,     0,     7,     0,     7,     1,     2,     0,
       0,     2,     0,     2,     0,     1,     1,     1,     1,     3,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       0,     2,     0,     1,     0,     0,     3,     0,     0,     3,
       0,     4,     4,     2,     0,     1,     1,     0,     2,     3,
       1,     3,     0,     7,     0,     1,     0,     3,     0,     3,
       0,     3,     1,     1,     1,     4,     2,     2,     2,     1,
       2,     2,     0,     3,     2,     2,     3,     3,     3,     3,
       1,     2,     0,     1,     0,     4,     4,     2,     0,     1,
       1,     0,     1,     1,     2,     5,     4,     1,     3,     3,
       1,     3,     1,     1,     1,     1,     1,     0,     2,     3,
       4,     0,     1,     2,     2,     2,     1,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     2,     1,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     6,
       0,     1,     3,     1,     3,     0,     2,     3,     1,     1,
       2,     1,     3,     2,     0,     0,     7,     2,     1,     0,
       3,     0,     8,     7,     4,     4,     5,     6,     4,     4,
       5,     5,     0,     6,     4,     4,     5,     6,     4,     0,
       6,     1,     3,     1,     2,     1,     3,     1,     0,     2,
       0,     2,     0,     1,     0,     0,     8,     0,     0,     6,
       0,     1,     1,     1,     1,     1,     2,     1,     1,     1,
       3,     4,     0,     3,     3,     1,     2,     2,     1,     3,
       1,     3,     1,     3,     1,     1,     0,     1,     1,     1,
       1,     1,     0,     4,     0,     4,     0,     1,     0,     1,
       3,     1,     5,     3,     1,     1,     1,     1,     0,     0,
       0,     7,     0,     0,    11,     3,     1,     3,     3,     3,
       1,     3,     0,     1,     0,     3,     0,     3,     2,     3,
       3,     5,     0,     5,     0,     6,     0,     2,     1,     3,
       2,     4,     0,     2,     0,     2,     1,     1,     1,     0,
       0,     7,     0,     2,     2,     0,     1,     0,     1,     1,
       3,     1,     1,     2,     2,     2,     1,     1,     1,     1,
       0,     3,     0,     3,     2,     4,     4,     3,     4,     4,
       1,     3,     3,     3,     3,     6,     2,     2,     0,     6,
       0,     7,     5,     2,     1,     1,     1,     5,     5,     2,
       2,     1,     4,     3,     2,     3,     2,     2,     1,     4,
       4,     3,     3,     3,     2,     3,     2,     3,     3,     3,
       3,     4,     3,     2,     3,     3,     3,     3,     4,     3,
       3,     4,     3,     3,     3,     1,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     1,     1,     0,     2,
       0,     2,     0,     3,     3,     0,     4,     0,     4,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       0,     3,     0,     1,     1,     0,     4,     0,     4,     1,
       0,     1,     4,     0,     3,     3,     1,     2,     2,     2,
       2,     3,     3,     2,     1,     1,     1,     1,     2,     1,
       1,     1,     2,     0,     1,     0,     5,     0,     1,     3,
       1,     0,     3,     0,     3,     3,     1,     0,     4,     0,
       3,     2,     0,     1,     0,     2,     0,     3,     3,     2,
       2,     0,     4,     0,     1,     1,     2,     2,     3,     0,
       1,     1,     2,     1,     2,     0,     0,     0,     0,    22,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       0,     2,     2,     1,     3,     4,     3,     3,     0,     2,
       2,     1,     3,     3,     0,     4,     0,     3,     1,     1,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     3,
       1,     5,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     2,     2,     0,     1,     0,     4,     0,     1,
       1,     3,     0,     9,     0,     3,     1,     3,     1,     1,
       1,     3,     5,     3,     5,     1,     1,     3,     4,     5,
       4,     1,     3,     4,     4,     5,     1,     5,     3,     2,
       1,     3,     2,     2,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       3,     1,     1,     1,     1,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     0,     0,     7,     0,     4,
       0,     6,     0,     7,     1,     3,     0,     3,     0,     3,
       0,     3,     0,     3,     2,     0,     2,     0,     2,     0,
       4,     0,     3,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     2,     3,     5,     5,     3,     5,
       5,     4,     6,     8,     8,     2,     3,     3,     3,     5,
       2,     3,     3,     1,     1,     3,     3,     1,     3,     2,
       2,     2,     2,     2,     1,     1,     3,     1,     4,     4,
       1,     1,     1,     1,     1,     0,     5,     0,     2,     1,
       1,     1,     1,     3,     3,     1,     1,     2,     2,     2,
       0,     3,     4,     3,     0,     7,     1,     2,     1,     1,
       1,     1,     1,     1,     0,     5,     1,     1,     1,     1,
       1,     3,     6,     6,     6,     6,     7,     7,     5,     3,
       4,     1,     3,     8,     8,     8,     8,     9,     6,     4,
       0,     3,     0,     3,     1,     3,     2,     1,     1,     0,
       1,     1,     2,     0,     1,     1,     3,     0,     3,     0,
       3,     0,     3,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     3,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       2,     2,     0,     1,     3,     1,     2,     2,     2,     1,
       3,     3,     1,     1,     3,     1,     3,     1,     3,     1,
       1,     1,     1,     4,     5,     4,     6,     1,     0,     3,
       3,     1,     1,     0,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     1,     0,     2,     0,     2,     0,
       3,     2,     1,     2,     1,     0,     3,     1,     0,     1,
       0,     1,     0,     3,     2,     0,     1,     2,     4,     4,
       5,     4,     2,     3,     1,     1,     1,     0,     1,     0,
       4,     0,     4,     0,     2,     2,     1,     2,     0,     1,
       1,     1,     1,     0,     3,     3,     3,     4,     2,     3,
       1,     1,     2,     4,     0,     0,     0,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     3,     3,     3,     3,     0,     1,     3,     3,
       0,     3,     1,     3,     0,     4,     3,     1,     2,     2,
       3,     4,     4,     0,     3,     4,     4,     1,     1,     0,
       2,     0,     0,     0,     0,     0,    20,     6,     0,     3,
       0,     0,    10,     0,     0,     9,     2,     2,     0,     1,
       1,     1,     4,     4,     3,     4,     3,     3,     0,     3,
       1,     3,     5,     1,     1,     1,     0,     1,     1,     0,
       2,     0,     0,     3,     0,     2,     5,     3,     3,     3,
       1
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (thd, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)




# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (thd);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep, thd);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp,
                 int yyrule, THD *thd)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)], thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, THD *thd)
{
  YY_USE (yyvaluep);
  YY_USE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* query: END_OF_INPUT  */
#line 1691 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (likely(!thd->bootstrap) &&
                unlikely(!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 25743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3: /* $@1: %empty  */
#line 1700 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 25770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 5: /* query: verb_clause END_OF_INPUT  */
#line 1725 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 25779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 69: /* deallocate: deallocate_or_drop PREPARE_SYM ident  */
#line 1806 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 25789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 72: /* prepare: PREPARE_SYM ident FROM prepare_src  */
#line 1820 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "PREPARE..FROM"));
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].ident_sys);
          }
#line 25802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 73: /* $@2: %empty  */
#line 1831 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->expr_allows_subselect= false; }
#line 25808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 74: /* prepare_src: $@2 expr  */
#line 1833 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->prepared_stmt_code= (yyvsp[0].item);
            Lex->expr_allows_subselect= true;
          }
#line 25817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 75: /* $@3: %empty  */
#line 1841 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 25827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 76: /* execute: EXECUTE_SYM ident $@3 execute_using  */
#line 1847 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 25833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 77: /* $@4: %empty  */
#line 1849 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE IMMEDIATE"));
            Lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
          }
#line 25844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 78: /* execute: EXECUTE_SYM IMMEDIATE_SYM prepare_src $@4 execute_using  */
#line 1856 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 25850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 80: /* $@5: %empty  */
#line 1861 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { Lex->expr_allows_subselect= false; }
#line 25856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 81: /* execute_using: USING $@5 execute_var_list  */
#line 1863 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE..USING"));
            Lex->expr_allows_subselect= true;
          }
#line 25867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 84: /* execute_var_ident: expr_or_ignore_or_default  */
#line 1878 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->prepared_stmt_params.push_back((yyvsp[0].item),
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 25877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 85: /* $@6: %empty  */
#line 1889 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 25886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 86: /* help: HELP_SYM $@6 ident_or_text  */
#line 1894 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 25896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 87: /* $@7: %empty  */
#line 1905 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 25904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 88: /* change: CHANGE MASTER_SYM optional_connection_name TO_SYM $@7 master_defs  */
#line 1909 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 25910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 91: /* master_def: MASTER_HOST_SYM '=' TEXT_STRING_sys  */
#line 1919 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 25918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 92: /* master_def: MASTER_USER_SYM '=' TEXT_STRING_sys  */
#line 1923 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 25926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 93: /* master_def: MASTER_PASSWORD_SYM '=' TEXT_STRING_sys  */
#line 1927 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 25934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 94: /* master_def: MASTER_PORT_SYM '=' ulong_num  */
#line 1931 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 25942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 95: /* master_def: MASTER_CONNECT_RETRY_SYM '=' ulong_num  */
#line 1935 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 25950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 96: /* master_def: MASTER_DELAY_SYM '=' ulong_num  */
#line 1939 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 25964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 97: /* master_def: MASTER_SSL_SYM '=' ulong_num  */
#line 1949 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 25973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 98: /* master_def: MASTER_SSL_CA_SYM '=' TEXT_STRING_sys  */
#line 1954 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 25981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 99: /* master_def: MASTER_SSL_CAPATH_SYM '=' TEXT_STRING_sys  */
#line 1958 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 25989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 100: /* master_def: MASTER_SSL_CERT_SYM '=' TEXT_STRING_sys  */
#line 1962 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 25997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 101: /* master_def: MASTER_SSL_CIPHER_SYM '=' TEXT_STRING_sys  */
#line 1966 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 26005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 102: /* master_def: MASTER_SSL_KEY_SYM '=' TEXT_STRING_sys  */
#line 1970 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 26013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 103: /* master_def: MASTER_SSL_VERIFY_SERVER_CERT_SYM '=' ulong_num  */
#line 1974 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 104: /* master_def: MASTER_SSL_CRL_SYM '=' TEXT_STRING_sys  */
#line 1979 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 26030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 105: /* master_def: MASTER_SSL_CRLPATH_SYM '=' TEXT_STRING_sys  */
#line 1983 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 26038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 106: /* master_def: MASTER_HEARTBEAT_PERIOD_SYM '=' NUM_literal  */
#line 1988 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 107: /* master_def: IGNORE_SERVER_IDS_SYM '=' '(' ignore_server_id_list ')'  */
#line 2016 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 108: /* master_def: DO_DOMAIN_IDS_SYM '=' '(' do_domain_id_list ')'  */
#line 2020 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 109: /* master_def: IGNORE_DOMAIN_IDS_SYM '=' '(' ignore_domain_id_list ')'  */
#line 2024 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 114: /* ignore_server_id: ulong_num  */
#line 2039 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 118: /* do_domain_id: ulong_num  */
#line 2052 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 122: /* ignore_domain_id: ulong_num  */
#line 2065 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 123: /* master_file_def: MASTER_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2072 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 26126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 124: /* master_file_def: MASTER_LOG_POS_SYM '=' ulonglong_num  */
#line 2076 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 26145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 125: /* master_file_def: RELAY_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2091 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 26153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 126: /* master_file_def: RELAY_LOG_POS_SYM '=' ulong_num  */
#line 2095 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 26163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 127: /* master_file_def: MASTER_USE_GTID_SYM '=' CURRENT_POS_SYM  */
#line 2101 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 26173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 128: /* master_file_def: MASTER_USE_GTID_SYM '=' SLAVE_POS_SYM  */
#line 2107 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 26183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 129: /* master_file_def: MASTER_USE_GTID_SYM '=' NO_SYM  */
#line 2113 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 26193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 130: /* optional_connection_name: %empty  */
#line 2122 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 26202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 132: /* connection_name: TEXT_STRING_sys  */
#line 2131 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 26214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 133: /* $@8: %empty  */
#line 2144 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-3].num),
                                                     (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
               MYSQL_YYABORT;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 26242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 134: /* create: create_or_replace opt_temporary TABLE_SYM opt_if_not_exists table_ident $@8 create_body  */
#line 2168 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 26252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 135: /* $@9: %empty  */
#line 2174 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           LEX *lex= thd->lex;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                           TL_OPTION_UPDATING,
                                                           TL_WRITE,
                                                           MDL_EXCLUSIVE)))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 26285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 136: /* create: create_or_replace opt_temporary SEQUENCE_SYM opt_if_not_exists table_ident $@9 opt_sequence opt_create_table_options  */
#line 2203 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->select_lex.table_list.first->db.str,
                       lex->select_lex.table_list.first->table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            lex->current_select= &lex->select_lex;
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 26313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 137: /* $@10: %empty  */
#line 2229 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 138: /* create: create_or_replace opt_unique INDEX_SYM opt_if_not_exists ident opt_key_algorithm_clause ON table_ident $@10 '(' key_list ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2236 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { }
#line 26330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 139: /* $@11: %empty  */
#line 2239 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 140: /* create: create_or_replace fulltext INDEX_SYM opt_if_not_exists ident ON table_ident $@11 '(' key_list ')' opt_lock_wait_timeout fulltext_key_options opt_index_lock_algorithm  */
#line 2247 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { }
#line 26348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 141: /* $@12: %empty  */
#line 2250 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 142: /* create: create_or_replace spatial INDEX_SYM opt_if_not_exists ident ON table_ident $@12 '(' key_list ')' opt_lock_wait_timeout spatial_key_options opt_index_lock_algorithm  */
#line 2258 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { }
#line 26366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 143: /* $@13: %empty  */
#line 2260 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 26375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 144: /* create: create_or_replace DATABASE opt_if_not_exists ident $@13 opt_create_database_options  */
#line 2265 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 26387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 145: /* $@14: %empty  */
#line 2274 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                              DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid),
                                              (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 26398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 146: /* create: create_or_replace definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@14 view_list_opt AS view_select  */
#line 2281 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 147: /* $@15: %empty  */
#line 2284 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 26413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 148: /* create: create_or_replace view_algorithm definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@15 view_list_opt AS view_select  */
#line 2289 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 149: /* $@16: %empty  */
#line 2291 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 150: /* create: create_or_replace definer_opt TRIGGER_SYM $@16 trigger_tail  */
#line 2293 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 151: /* $@17: %empty  */
#line 2295 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 152: /* create: create_or_replace definer_opt PROCEDURE_SYM $@17 sp_tail_standalone  */
#line 2297 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 153: /* $@18: %empty  */
#line 2299 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 154: /* create: create_or_replace definer_opt EVENT_SYM $@18 event_tail  */
#line 2301 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 155: /* $@19: %empty  */
#line 2303 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 156: /* create: create_or_replace definer FUNCTION_SYM $@19 sf_tail_standalone  */
#line 2305 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 157: /* $@20: %empty  */
#line 2307 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 158: /* create: create_or_replace no_definer FUNCTION_SYM $@20 create_function_tail  */
#line 2309 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 159: /* $@21: %empty  */
#line 2311 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
            Lex->udf.type= UDFTYPE_AGGREGATE;
          }
#line 26488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 160: /* create: create_or_replace no_definer AGGREGATE_SYM FUNCTION_SYM $@21 udf_tail  */
#line 2316 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 161: /* create: create_or_replace USER_SYM opt_if_not_exists clear_privileges grant_list opt_require_clause opt_resource_options  */
#line 2319 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-6].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 162: /* create: create_or_replace ROLE_SYM opt_if_not_exists clear_privileges role_list opt_with_admin  */
#line 2326 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 163: /* create: CREATE LOGFILE_SYM GROUP_SYM logfile_group_info  */
#line 2332 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 26522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 164: /* create: CREATE TABLESPACE tablespace_info  */
#line 2336 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 26530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 165: /* $@22: %empty  */
#line 2339 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 26536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 166: /* create: create_or_replace $@22 server_def  */
#line 2341 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 26542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 167: /* $@23: %empty  */
#line 2346 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE,
                                                &sp_handler_package_spec,
                                                (yyvsp[-3].spname), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_chistics(Lex->sp_chistics);
          }
#line 26557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 168: /* create: create_or_replace definer_opt PACKAGE_ORACLE_SYM opt_if_not_exists sp_name opt_create_package_chistics_init sp_tail_is remember_name $@23 opt_package_specification_element_list END remember_end_opt opt_sp_name  */
#line 2358 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-5].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 26566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 169: /* $@24: %empty  */
#line 2366 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE_BODY,
                                                &sp_handler_package_body,
                                                (yyvsp[-3].spname), (yyvsp[-8].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_chistics(Lex->sp_chistics);
            Lex->sp_block_init(thd);
          }
#line 26582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 170: /* $@25: %empty  */
#line 2378 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 26591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 171: /* $@26: %empty  */
#line 2383 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-2].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 26601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 172: /* create: create_or_replace definer_opt PACKAGE_ORACLE_SYM BODY_ORACLE_SYM opt_if_not_exists sp_name opt_create_package_chistics_init sp_tail_is remember_name $@24 package_implementation_declare_section $@25 package_implementation_executable_section $@26 remember_end_opt opt_sp_name  */
#line 2389 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-10].spname), (yyvsp[0].spname), (yyvsp[-7].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 26610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 173: /* package_implementation_executable_section: END  */
#line 2397 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 26620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 174: /* package_implementation_executable_section: BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 2402 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                                  { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 26626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 177: /* package_implementation_declare_section: package_implementation_declare_section_list1 package_implementation_declare_section_list2  */
#line 2414 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 26632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 179: /* package_implementation_declare_section_list1: package_implementation_declare_section_list1 package_implementation_item_declaration  */
#line 2421 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 26638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 181: /* package_implementation_declare_section_list2: package_implementation_declare_section_list2 package_implementation_routine_definition  */
#line 2428 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 26644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 182: /* package_routine_lex: %empty  */
#line 2432 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.lex)= new (thd->mem_root)
                           sp_lex_local(thd, thd->lex))))
              MYSQL_YYABORT;
            thd->m_parser_state->m_yacc.reset_before_substatement();
          }
#line 26655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 183: /* $@27: %empty  */
#line 2443 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_FUNCTION;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_function)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
            (void) is_native_function_with_warn(thd, &(yyvsp[0].ident_sys));
          }
#line 26673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 184: /* package_specification_function: remember_lex package_routine_lex ident $@27 opt_sp_parenthesized_fdparam_list sf_return_type sp_c_chistics  */
#line 2459 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-6].lex);
            (yyval.lex)= (yyvsp[-5].lex);
          }
#line 26684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 185: /* $@28: %empty  */
#line 2469 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_procedure)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
          }
#line 26701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 186: /* package_specification_procedure: remember_lex package_routine_lex ident $@28 opt_sp_parenthesized_pdparam_list sp_c_chistics  */
#line 2483 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
            (yyval.lex)= (yyvsp[-4].lex);

          }
#line 26713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 187: /* package_implementation_routine_definition: FUNCTION_SYM package_specification_function package_implementation_function_body ';'  */
#line 2496 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 26725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 188: /* package_implementation_routine_definition: PROCEDURE_SYM package_specification_procedure package_implementation_procedure_body ';'  */
#line 2505 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 26737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 189: /* package_implementation_routine_definition: package_specification_element  */
#line 2512 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                        { (yyval.spblock).init(); }
#line 26743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 190: /* $@29: %empty  */
#line 2518 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 26755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 191: /* package_implementation_function_body: sp_tail_is remember_lex $@29 sp_body opt_package_routine_end_name  */
#line 2526 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 26771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 192: /* $@30: %empty  */
#line 2541 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 26783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 193: /* package_implementation_procedure_body: sp_tail_is remember_lex $@30 sp_body opt_package_routine_end_name  */
#line 2549 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                        thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 26794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 199: /* package_specification_element: FUNCTION_SYM package_specification_function ';'  */
#line 2574 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 26805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 200: /* package_specification_element: PROCEDURE_SYM package_specification_procedure ';'  */
#line 2581 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 26816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 201: /* create_function_tail: sf_tail_standalone  */
#line 2590 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { }
#line 26822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 202: /* create_function_tail: udf_tail  */
#line 2591 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { Lex->udf.type= UDFTYPE_FUNCTION; }
#line 26828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 203: /* opt_sequence: %empty  */
#line 2595 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { }
#line 26834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 207: /* sequence_def: MINVALUE_SYM opt_equal longlong_num  */
#line 2606 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 208: /* sequence_def: NO_SYM MINVALUE_SYM  */
#line 2611 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 209: /* sequence_def: NOMINVALUE_SYM  */
#line 2617 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 210: /* sequence_def: MAXVALUE_SYM opt_equal longlong_num  */
#line 2623 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 211: /* sequence_def: NO_SYM MAXVALUE_SYM  */
#line 2631 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 212: /* sequence_def: NOMAXVALUE_SYM  */
#line 2637 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 213: /* sequence_def: START_SYM opt_with longlong_num  */
#line 2643 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 26907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 214: /* sequence_def: INCREMENT_SYM opt_by longlong_num  */
#line 2651 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 26919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 215: /* sequence_def: CACHE_SYM opt_equal longlong_num  */
#line 2659 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 216: /* sequence_def: NOCACHE_SYM  */
#line 2667 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 217: /* sequence_def: CYCLE_SYM  */
#line 2675 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 26955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 218: /* sequence_def: NOCYCLE_SYM  */
#line 2683 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 26967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 219: /* sequence_def: RESTART_SYM  */
#line 2691 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 26983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 220: /* sequence_def: RESTART_SYM opt_with longlong_num  */
#line 2703 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 27000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 221: /* force_lookahead: %empty  */
#line 2718 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 {}
#line 27006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 222: /* force_lookahead: FORCE_LOOKAHEAD  */
#line 2718 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      {}
#line 27012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 223: /* $@31: %empty  */
#line 2722 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 27022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 224: /* server_def: SERVER_SYM opt_if_not_exists ident_or_text $@31 FOREIGN DATA_SYM WRAPPER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 2729 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 27028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 227: /* server_option: USER_SYM TEXT_STRING_sys  */
#line 2739 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 27037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 228: /* server_option: HOST_SYM TEXT_STRING_sys  */
#line 2744 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 27046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 229: /* server_option: DATABASE TEXT_STRING_sys  */
#line 2749 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 27055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 230: /* server_option: OWNER_SYM TEXT_STRING_sys  */
#line 2754 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 27064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 231: /* server_option: PASSWORD_SYM TEXT_STRING_sys  */
#line 2759 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 27073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 232: /* server_option: SOCKET_SYM TEXT_STRING_sys  */
#line 2764 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 27082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 233: /* server_option: PORT_SYM ulong_num  */
#line 2769 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 27090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 234: /* $@32: %empty  */
#line 2776 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 27111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 235: /* event_tail: remember_name opt_if_not_exists sp_name $@32 ON SCHEDULE_SYM ev_schedule_time opt_ev_on_completion opt_ev_status opt_ev_comment DO_SYM ev_sql_stmt  */
#line 2797 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 27123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 236: /* $@33: %empty  */
#line 2808 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 238: /* ev_schedule_time: AT_SYM expr  */
#line 2815 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 239: /* opt_ev_status: %empty  */
#line 2821 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)= 0; }
#line 27146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 240: /* opt_ev_status: ENABLE_SYM  */
#line 2823 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 241: /* opt_ev_status: DISABLE_SYM ON SLAVE  */
#line 2829 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 27166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 242: /* opt_ev_status: DISABLE_SYM  */
#line 2835 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 243: /* ev_starts: %empty  */
#line 2844 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 244: /* ev_starts: STARTS_SYM expr  */
#line 2851 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 246: /* ev_ends: ENDS_SYM expr  */
#line 2859 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 247: /* opt_ev_on_completion: %empty  */
#line 2865 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)= 0; }
#line 27209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 249: /* ev_on_completion: ON COMPLETION_SYM opt_not PRESERVE_SYM  */
#line 2871 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 250: /* opt_ev_comment: %empty  */
#line 2880 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)= 0; }
#line 27226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 251: /* opt_ev_comment: COMMENT_SYM TEXT_STRING_sys  */
#line 2882 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 27235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 252: /* $@34: %empty  */
#line 2889 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 27271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 253: /* ev_sql_stmt: $@34 sp_proc_stmt force_lookahead  */
#line 2921 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->event_parse_data->body_changed= TRUE;
          }
#line 27285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 254: /* clear_privileges: %empty  */
#line 2934 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= null_clex_str;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
#line 27301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 255: /* sp_name: ident '.' ident  */
#line 2949 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 256: /* sp_name: ident  */
#line 2954 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 257: /* opt_sp_name: %empty  */
#line 2961 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.spname)= NULL; }
#line 27325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 258: /* opt_sp_name: sp_name  */
#line 2962 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.spname)= (yyvsp[0].spname); }
#line 27331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 259: /* sp_a_chistics: %empty  */
#line 2966 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 27337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 260: /* sp_a_chistics: sp_a_chistics sp_chistic  */
#line 2967 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   {}
#line 27343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 261: /* sp_c_chistics: %empty  */
#line 2971 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 27349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 262: /* sp_c_chistics: sp_c_chistics sp_c_chistic  */
#line 2972 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                     {}
#line 27355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 263: /* sp_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 2978 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 27361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 264: /* sp_chistic: LANGUAGE_SYM SQL_SYM  */
#line 2980 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { /* Just parse it, we only have one language for now. */ }
#line 27367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 265: /* sp_chistic: NO_SYM SQL_SYM  */
#line 2982 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 266: /* sp_chistic: CONTAINS_SYM SQL_SYM  */
#line 2984 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 267: /* sp_chistic: READS_SYM SQL_SYM DATA_SYM  */
#line 2986 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 268: /* sp_chistic: MODIFIES_SYM SQL_SYM DATA_SYM  */
#line 2988 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 269: /* sp_chistic: sp_suid  */
#line 2990 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 27397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 270: /* create_package_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 2995 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 27403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 271: /* create_package_chistic: sp_suid  */
#line 2997 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 27409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 272: /* create_package_chistics: create_package_chistic  */
#line 3001 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 {}
#line 27415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 273: /* create_package_chistics: create_package_chistics create_package_chistic  */
#line 3002 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                         { }
#line 27421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 275: /* opt_create_package_chistics: create_package_chistics  */
#line 3007 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { }
#line 27427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 276: /* $@35: %empty  */
#line 3011 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sp_chistics.init(); }
#line 27433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 278: /* sp_c_chistic: sp_chistic  */
#line 3017 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { }
#line 27439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 279: /* sp_c_chistic: opt_not DETERMINISTIC_SYM  */
#line 3018 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 27445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 280: /* sp_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 3022 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.sp_suid)= SP_IS_SUID; }
#line 27451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 281: /* sp_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 3023 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 27457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 282: /* $@36: %empty  */
#line 3028 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 283: /* call: CALL_SYM ident $@36 opt_sp_cparam_list  */
#line 3033 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 284: /* $@37: %empty  */
#line 3038 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 285: /* call: CALL_SYM ident '.' ident $@37 opt_sp_cparam_list  */
#line 3043 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 286: /* $@38: %empty  */
#line 3048 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 287: /* call: CALL_SYM ident '.' ident '.' ident $@38 opt_sp_cparam_list  */
#line 3053 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 292: /* sp_cparams: sp_cparams ',' expr  */
#line 3072 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 293: /* sp_cparams: expr  */
#line 3076 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 298: /* sp_param_name: ident  */
#line 3094 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 299: /* sp_param_name_and_type: sp_param_name sp_param_type  */
#line 3102 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 27545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 300: /* sp_param_name_and_type: sp_param_name sp_decl_ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 3107 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 301: /* sp_param_name_and_type: sp_param_name sp_decl_ident '.' ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 3112 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 302: /* sp_param_name_and_type: sp_param_name sp_decl_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 3117 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 303: /* sp_param_name_and_type: sp_param_name sp_decl_ident '.' ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 3122 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 304: /* sp_param_name_and_type: sp_param_name ROW_SYM row_type_body  */
#line 3127 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 27590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 309: /* sp_pdparam: sp_param_name sp_opt_inout sp_param_type  */
#line 3146 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-2].spvar)->mode= (yyvsp[-1].spvar_mode);
            if (unlikely(Lex->sp_param_fill_definition((yyvsp[-2].spvar))))
              MYSQL_YYABORT;
          }
#line 27600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 310: /* sp_pdparam: sp_param_name sp_opt_inout sp_decl_ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 3152 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 311: /* sp_pdparam: sp_param_name sp_opt_inout sp_decl_ident '.' ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 3158 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-8].spvar)->mode= (yyvsp[-7].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-8].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 312: /* sp_pdparam: sp_param_name sp_opt_inout sp_decl_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 3164 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-4].spvar)->mode= (yyvsp[-3].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-4].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 313: /* sp_pdparam: sp_param_name sp_opt_inout sp_decl_ident '.' ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 3170 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 314: /* sp_pdparam: sp_param_name sp_opt_inout ROW_SYM row_type_body  */
#line 3176 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-3].spvar)->mode= (yyvsp[-2].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyvsp[-3].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 27650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 315: /* sp_opt_inout: %empty  */
#line 3184 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 316: /* sp_opt_inout: IN_SYM  */
#line 3185 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 317: /* sp_opt_inout: OUT_SYM  */
#line 3186 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 27668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 318: /* sp_opt_inout: INOUT_SYM  */
#line 3187 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 27674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 319: /* sp_opt_inout: IN_SYM OUT_SYM  */
#line 3188 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 27680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 320: /* $@39: %empty  */
#line 3193 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 27688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 321: /* sp_parenthesized_fdparam_list: '(' $@39 sp_fdparam_list ')'  */
#line 3198 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 322: /* $@40: %empty  */
#line 3205 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 27704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 323: /* sp_parenthesized_pdparam_list: '(' $@40 sp_pdparam_list ')'  */
#line 3210 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 324: /* sp_no_param: %empty  */
#line 3217 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 27721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 329: /* sp_proc_stmts: %empty  */
#line 3234 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 27727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 331: /* sp_proc_stmts1: sp_proc_stmt ';'  */
#line 3239 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           {}
#line 27733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 333: /* $@41: %empty  */
#line 3244 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 27741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 334: /* sp_proc_stmts1_implicit_block: $@41 sp_proc_stmts1  */
#line 3248 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 27750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 335: /* opt_sp_decl_body_list: %empty  */
#line 3256 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spblock).init();
          }
#line 27758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 336: /* opt_sp_decl_body_list: sp_decl_body_list  */
#line 3259 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { (yyval.spblock)= (yyvsp[0].spblock); }
#line 27764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 337: /* $@42: %empty  */
#line 3264 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 27773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 338: /* sp_decl_body_list: sp_decl_non_handler_list $@42 opt_sp_decl_handler_list  */
#line 3269 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 27781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 340: /* sp_decl_non_handler_list: sp_decl_non_handler ';'  */
#line 3276 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 27787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 341: /* sp_decl_non_handler_list: sp_decl_non_handler_list sp_decl_non_handler ';'  */
#line 3278 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 27795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 342: /* sp_decl_handler_list: sp_decl_handler ';'  */
#line 3284 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 27801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 343: /* sp_decl_handler_list: sp_decl_handler_list sp_decl_handler ';'  */
#line 3286 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 27809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 344: /* opt_sp_decl_handler_list: %empty  */
#line 3292 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.spblock).init(); }
#line 27815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 346: /* optionally_qualified_column_ident: sp_decl_ident  */
#line 3298 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 347: /* optionally_qualified_column_ident: sp_decl_ident '.' ident  */
#line 3304 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 348: /* optionally_qualified_column_ident: sp_decl_ident '.' ident '.' ident  */
#line 3310 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 349: /* row_field_name: ident_directly_assignable  */
#line 3319 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!((yyval.spvar_definition)= new (thd->mem_root) Spvar_definition())))
              MYSQL_YYABORT;
            Lex->init_last_field((yyval.spvar_definition), &(yyvsp[0].ident_sys), thd->variables.collation_database);
          }
#line 27858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 351: /* row_field_definition_list: row_field_definition  */
#line 3335 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.spvar_definition_list)= new (thd->mem_root) Row_definition_list())) ||
                unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 352: /* row_field_definition_list: row_field_definition_list ',' row_field_definition  */
#line 3341 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            uint unused;
            if (unlikely((yyvsp[-2].spvar_definition_list)->find_row_field_by_name(&(yyvsp[0].spvar_definition)->field_name, &unused)))
              my_yyabort_error((ER_DUP_FIELDNAME, MYF(0), (yyvsp[0].spvar_definition)->field_name.str));
            (yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list);
            if (unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 353: /* row_type_body: '(' row_field_definition_list ')'  */
#line 3352 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                            { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 27887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 354: /* sp_decl_idents_init_vars: sp_decl_idents  */
#line 3357 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 27895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 355: /* sp_decl_vars: sp_decl_idents_init_vars field_type sp_opt_default  */
#line 3366 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 27907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 356: /* sp_decl_vars: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM TYPE_SYM sp_opt_default  */
#line 3376 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 27917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 357: /* sp_decl_vars: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM sp_opt_default  */
#line 3384 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 27927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 358: /* sp_decl_vars: sp_decl_idents_init_vars ROW_SYM row_type_body sp_opt_default  */
#line 3392 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 27937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 360: /* sp_decl_non_handler: ident_directly_assignable CONDITION_SYM FOR_SYM sp_cond  */
#line 3402 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 361: /* sp_decl_non_handler: ident_directly_assignable EXCEPTION_ORACLE_SYM  */
#line 3409 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 362: /* $@43: %empty  */
#line 3419 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 27970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 363: /* sp_decl_non_handler: CURSOR_SYM ident_directly_assignable $@43 opt_parenthesized_cursor_formal_parameters IS sp_cursor_stmt  */
#line 3424 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 364: /* $@44: %empty  */
#line 3437 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 27993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 365: /* sp_decl_handler: sp_handler_type HANDLER_SYM FOR_SYM $@44 sp_hcond_list sp_proc_stmt  */
#line 3442 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 28004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 368: /* sp_cursor_stmt_lex: %empty  */
#line 3457 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 28015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 369: /* $@45: %empty  */
#line 3467 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 28024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 370: /* sp_cursor_stmt: sp_cursor_stmt_lex $@45 select  */
#line 3472 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 28036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 371: /* sp_handler_type: EXIT_MARIADB_SYM  */
#line 3482 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.num)= sp_handler::EXIT; }
#line 28042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 372: /* sp_handler_type: CONTINUE_MARIADB_SYM  */
#line 3483 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.num)= sp_handler::CONTINUE; }
#line 28048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 373: /* sp_handler_type: EXIT_ORACLE_SYM  */
#line 3484 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               { (yyval.num)= sp_handler::EXIT; }
#line 28054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 374: /* sp_handler_type: CONTINUE_ORACLE_SYM  */
#line 3485 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               { (yyval.num)= sp_handler::CONTINUE; }
#line 28060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 375: /* sp_hcond_list: sp_hcond_element  */
#line 3491 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.num)= 1; }
#line 28066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 376: /* sp_hcond_list: sp_hcond_list ',' sp_hcond_element  */
#line 3493 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.num)+= 1; }
#line 28072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 377: /* sp_hcond_element: sp_hcond  */
#line 3498 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 28088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 378: /* sp_cond: ulong_num  */
#line 3513 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 380: /* sqlstate: SQLSTATE_SYM opt_value TEXT_STRING_literal  */
#line 3525 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 381: /* opt_value: %empty  */
#line 3544 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 28127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 382: /* opt_value: VALUE_SYM  */
#line 3545 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 28133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 383: /* sp_hcond: sp_cond  */
#line 3550 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 384: /* sp_hcond: ident  */
#line 3554 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 28151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 385: /* sp_hcond: SQLWARNING_SYM  */
#line 3560 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 386: /* sp_hcond: not FOUND_SYM  */
#line 3566 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 387: /* sp_hcond: SQLEXCEPTION_SYM  */
#line 3572 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 388: /* sp_hcond: OTHERS_ORACLE_SYM  */
#line 3578 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 389: /* raise_stmt_oracle: RAISE_ORACLE_SYM opt_set_signal_information  */
#line 3588 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 390: /* raise_stmt_oracle: RAISE_ORACLE_SYM signal_value opt_set_signal_information  */
#line 3593 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 391: /* signal_stmt: SIGNAL_SYM signal_value opt_set_signal_information  */
#line 3601 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 392: /* signal_value: ident  */
#line 3609 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!cond->has_sql_state()))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 28237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 393: /* signal_value: sqlstate  */
#line 3624 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 394: /* opt_signal_value: %empty  */
#line 3629 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.spcondvalue)= NULL; }
#line 28249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 395: /* opt_signal_value: signal_value  */
#line 3631 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 396: /* opt_set_signal_information: %empty  */
#line 3636 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 28263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 398: /* signal_information_item_list: signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3644 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 399: /* signal_information_item_list: signal_information_item_list ',' signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3653 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 400: /* signal_allowed_expr: literal  */
#line 3669 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 28295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 401: /* signal_allowed_expr: variable  */
#line 3671 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 28317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 402: /* signal_allowed_expr: simple_ident  */
#line 3689 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 28323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 403: /* signal_condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3695 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 28329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 404: /* signal_condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 28335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 405: /* signal_condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3699 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 28341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 406: /* signal_condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3701 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 28347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 407: /* signal_condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3703 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 28353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 408: /* signal_condition_information_item_name: CATALOG_NAME_SYM  */
#line 3705 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 28359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 409: /* signal_condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3707 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 28365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 410: /* signal_condition_information_item_name: TABLE_NAME_SYM  */
#line 3709 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 28371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 411: /* signal_condition_information_item_name: COLUMN_NAME_SYM  */
#line 3711 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 28377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 412: /* signal_condition_information_item_name: CURSOR_NAME_SYM  */
#line 3713 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 28383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 413: /* signal_condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3715 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 28389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 414: /* signal_condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3717 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 28395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 415: /* resignal_stmt: RESIGNAL_SYM opt_signal_value opt_set_signal_information  */
#line 3722 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 416: /* get_diagnostics: GET_SYM which_area DIAGNOSTICS_SYM diagnostics_information  */
#line 3730 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 28420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 417: /* which_area: %empty  */
#line 3745 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 418: /* which_area: CURRENT_SYM  */
#line 3747 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 419: /* diagnostics_information: statement_information  */
#line 3752 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 420: /* diagnostics_information: CONDITION_SYM condition_number condition_information  */
#line 3758 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 421: /* statement_information: statement_information_item  */
#line 3767 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 422: /* statement_information: statement_information ',' statement_information_item  */
#line 3774 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 423: /* statement_information_item: simple_target_specification '=' statement_information_item_name  */
#line 3783 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 424: /* simple_target_specification: ident_cli  */
#line 3792 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 28492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 425: /* simple_target_specification: '@' ident_or_text  */
#line 3797 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 28502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 426: /* statement_information_item_name: NUMBER_MARIADB_SYM  */
#line 3806 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 427: /* statement_information_item_name: NUMBER_ORACLE_SYM  */
#line 3808 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 428: /* statement_information_item_name: ROW_COUNT_SYM  */
#line 3810 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 429: /* condition_number: signal_allowed_expr  */
#line 3819 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 28526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 430: /* condition_information: condition_information_item  */
#line 3824 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 431: /* condition_information: condition_information ',' condition_information_item  */
#line 3831 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 432: /* condition_information_item: simple_target_specification '=' condition_information_item_name  */
#line 3840 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 433: /* condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3849 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 434: /* condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3851 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 435: /* condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3853 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 436: /* condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3855 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 437: /* condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3857 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 438: /* condition_information_item_name: CATALOG_NAME_SYM  */
#line 3859 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 439: /* condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3861 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 440: /* condition_information_item_name: TABLE_NAME_SYM  */
#line 3863 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 441: /* condition_information_item_name: COLUMN_NAME_SYM  */
#line 3865 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 442: /* condition_information_item_name: CURSOR_NAME_SYM  */
#line 3867 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 443: /* condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3869 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 444: /* condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3871 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 445: /* condition_information_item_name: RETURNED_SQLSTATE_SYM  */
#line 3873 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 447: /* sp_decl_ident: keyword_sp_decl  */
#line 3879 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 28644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 448: /* sp_decl_idents: sp_decl_ident  */
#line 3887 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 28660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 449: /* sp_decl_idents: sp_decl_idents ',' ident  */
#line 3899 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 450: /* sp_opt_default: %empty  */
#line 3913 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.item) = NULL; }
#line 28682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 451: /* sp_opt_default: DEFAULT expr  */
#line 3914 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.item) = (yyvsp[0].item); }
#line 28688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 452: /* sp_opt_default: SET_VAR expr  */
#line 3915 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.item) = (yyvsp[0].item); }
#line 28694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 458: /* sp_proc_stmt: labels_declaration_oracle sp_labelable_stmt  */
#line 3924 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                      {}
#line 28700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 471: /* sp_labelable_stmt: NULL_SYM  */
#line 3940 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { }
#line 28706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 476: /* $@46: %empty  */
#line 3952 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 28716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 477: /* sp_proc_stmt_if: IF_SYM $@46 sp_if END IF_SYM  */
#line 3958 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sphead->do_cont_backpatch(); }
#line 28722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 479: /* $@47: %empty  */
#line 3964 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            // Direct procedure call (without the CALL keyword)
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 480: /* sp_statement: ident_directly_assignable $@47 opt_sp_cparam_list  */
#line 3970 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 28741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 481: /* $@48: %empty  */
#line 3975 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 482: /* sp_statement: ident_directly_assignable '.' ident $@48 opt_sp_cparam_list  */
#line 3980 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 28759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 483: /* $@49: %empty  */
#line 3985 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 484: /* sp_statement: ident_directly_assignable '.' ident '.' ident $@49 opt_sp_cparam_list  */
#line 3990 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 28777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 485: /* $@50: %empty  */
#line 3997 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 28789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 486: /* sp_proc_stmt_statement: $@50 sp_statement  */
#line 4005 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            /* "USE db" doesn't work in a procedure */
            if (unlikely(lex->sql_command == SQLCOM_CHANGE_DB))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "USE"));
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new (thd->mem_root)
                sp_instr_stmt(sp->instructions(), lex->spcont, lex);
              if (unlikely(i == NULL))
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;;
              if (unlikely(!(i->m_query.str= strmake_root(thd->mem_root,
                                                          sp->m_tmp_query,
                                                          i->m_query.length))) ||
                  unlikely(sp->add_instr(i)))
                MYSQL_YYABORT;
            }
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 489: /* $@51: %empty  */
#line 4056 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sphead->reset_lex(thd); }
#line 28841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 490: /* sp_proc_stmt_return: RETURN_ALLMODES_SYM $@51 expr  */
#line 4058 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 491: /* sp_proc_stmt_return: RETURN_ORACLE_SYM  */
#line 4069 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 28870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 492: /* $@52: %empty  */
#line 4081 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sphead->reset_lex(thd); }
#line 28876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 493: /* reset_lex_expr: $@52 expr  */
#line 4081 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.item)= (yyvsp[0].item); }
#line 28882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 494: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM  */
#line 4086 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 495: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident  */
#line 4091 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 496: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM WHEN_SYM reset_lex_expr  */
#line 4096 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 497: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident WHEN_SYM reset_lex_expr  */
#line 4102 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 498: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM  */
#line 4111 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 499: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident  */
#line 4116 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 500: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM WHEN_SYM reset_lex_expr  */
#line 4121 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 501: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident WHEN_SYM reset_lex_expr  */
#line 4127 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 502: /* sp_proc_stmt_leave: LEAVE_SYM label_ident  */
#line 4137 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 503: /* sp_proc_stmt_iterate: ITERATE_SYM label_ident  */
#line 4145 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 504: /* sp_proc_stmt_goto_oracle: GOTO_ORACLE_SYM label_ident  */
#line 4153 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 505: /* remember_lex: %empty  */
#line 4161 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex)= thd->lex;
          }
#line 28993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 506: /* assignment_source_lex: %empty  */
#line 4167 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 29004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 507: /* $@53: %empty  */
#line 4177 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 29013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 508: /* assignment_source_expr: assignment_source_lex $@53 expr  */
#line 4182 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 509: /* $@54: %empty  */
#line 4195 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 29035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 510: /* for_loop_bound_expr: assignment_source_lex $@54 expr  */
#line 4199 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 511: /* cursor_actual_parameters: assignment_source_expr  */
#line 4211 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 29058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 512: /* cursor_actual_parameters: cursor_actual_parameters ',' assignment_source_expr  */
#line 4217 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 29067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 513: /* opt_parenthesized_cursor_actual_parameters: %empty  */
#line 4224 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                             { (yyval.sp_assignment_lex_list)= NULL; }
#line 29073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 514: /* opt_parenthesized_cursor_actual_parameters: '(' cursor_actual_parameters ')'  */
#line 4225 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                             { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 29079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 515: /* sp_proc_stmt_open: OPEN_SYM ident opt_parenthesized_cursor_actual_parameters  */
#line 4230 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 29088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 516: /* sp_proc_stmt_fetch_head: FETCH_SYM ident INTO  */
#line 4238 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 517: /* sp_proc_stmt_fetch_head: FETCH_SYM FROM ident INTO  */
#line 4243 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 518: /* sp_proc_stmt_fetch_head: FETCH_SYM NEXT_SYM FROM ident INTO  */
#line 4248 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 519: /* sp_proc_stmt_fetch: sp_proc_stmt_fetch_head sp_fetch_list  */
#line 4255 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { }
#line 29121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 520: /* sp_proc_stmt_close: CLOSE_SYM ident  */
#line 4260 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 521: /* sp_fetch_list: ident  */
#line 4278 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;
            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 29159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 522: /* sp_fetch_list: sp_fetch_list ',' ident  */
#line 4293 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;
            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 29178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 523: /* $@55: %empty  */
#line 4310 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sphead->reset_lex(thd); }
#line 29184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 524: /* $@56: %empty  */
#line 4312 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 525: /* $@57: %empty  */
#line 4328 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 29220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 526: /* sp_if: $@55 expr THEN_SYM $@56 sp_proc_stmts1_implicit_block $@57 sp_elseifs  */
#line 4340 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 29230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 530: /* $@58: %empty  */
#line 4355 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 29284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 531: /* case_stmt_specification: CASE_SYM $@58 case_stmt_body else_clause_opt END CASE_SYM  */
#line 4408 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 29302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 532: /* $@59: %empty  */
#line 4424 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 29308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 533: /* $@60: %empty  */
#line 4426 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 534: /* case_stmt_body: $@59 expr $@60 simple_when_clause_list  */
#line 4433 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.num)= 1; }
#line 29325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 535: /* case_stmt_body: searched_when_clause_list  */
#line 4435 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.num)= 0; }
#line 29331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 540: /* $@61: %empty  */
#line 4450 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 541: /* $@62: %empty  */
#line 4454 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 542: /* simple_when_clause: WHEN_SYM $@61 expr $@62 THEN_SYM sp_proc_stmts1_implicit_block  */
#line 4466 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 543: /* $@63: %empty  */
#line 4474 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 544: /* $@64: %empty  */
#line 4478 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 545: /* searched_when_clause: WHEN_SYM $@63 expr $@64 THEN_SYM sp_proc_stmts1_implicit_block  */
#line 4488 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 546: /* else_clause_opt: %empty  */
#line 4496 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 548: /* sp_opt_label: %empty  */
#line 4510 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.lex_str)= null_clex_str; }
#line 29414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 549: /* sp_opt_label: label_ident  */
#line 4511 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 29420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 550: /* sp_block_label: labels_declaration_oracle  */
#line 4516 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 29430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 551: /* $@65: %empty  */
#line 4526 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 29440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 552: /* sp_labeled_block: sp_block_label BEGIN_ORACLE_SYM $@65 sp_block_statements_and_exceptions END sp_opt_label  */
#line 4534 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 553: /* $@66: %empty  */
#line 4540 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 29457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 554: /* $@67: %empty  */
#line 4544 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 29466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 555: /* sp_labeled_block: sp_block_label DECLARE_ORACLE_SYM $@66 opt_sp_decl_body_list $@67 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END sp_opt_label  */
#line 4552 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 558: /* $@68: %empty  */
#line 4566 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 29488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 559: /* sp_unlabeled_block: BEGIN_ORACLE_SYM opt_not_atomic $@68 sp_block_statements_and_exceptions END  */
#line 4575 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 29497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 560: /* $@69: %empty  */
#line 4580 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 29507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 561: /* $@70: %empty  */
#line 4586 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 29516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 562: /* sp_unlabeled_block: DECLARE_ORACLE_SYM $@69 opt_sp_decl_body_list $@70 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 4593 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 29526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 563: /* sp_instr_addr: %empty  */
#line 4601 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 29532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 564: /* $@71: %empty  */
#line 4605 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 29540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 565: /* $@72: %empty  */
#line 4609 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 29549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 566: /* $@73: %empty  */
#line 4615 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 29559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 568: /* $@74: %empty  */
#line 4626 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 29568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 569: /* sp_block_statements_and_exceptions: sp_instr_addr sp_proc_stmts $@74 opt_exception_clause  */
#line 4631 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 29578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 570: /* opt_exception_clause: %empty  */
#line 4639 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                  { (yyval.num)= 0; }
#line 29584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 571: /* opt_exception_clause: EXCEPTION_ORACLE_SYM exception_handlers  */
#line 4640 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                  { (yyval.num)= (yyvsp[0].num); }
#line 29590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 572: /* exception_handlers: exception_handler  */
#line 4644 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.num)= 1; }
#line 29596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 573: /* exception_handlers: exception_handlers exception_handler  */
#line 4645 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 29602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 574: /* $@75: %empty  */
#line 4650 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 29611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 575: /* exception_handler: WHEN_SYM $@75 sp_hcond_list THEN_SYM sp_proc_stmts1_implicit_block  */
#line 4657 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 29620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 576: /* opt_sp_for_loop_direction: %empty  */
#line 4665 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.num)= 1; }
#line 29626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 577: /* opt_sp_for_loop_direction: REVERSE_SYM  */
#line 4666 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.num)= -1; }
#line 29632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 578: /* sp_for_loop_index_and_bounds: ident_directly_assignable sp_for_loop_bounds  */
#line 4671 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 29641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 579: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr DOT_DOT_SYM for_loop_bound_expr  */
#line 4680 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 29649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 580: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr  */
#line 4684 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 29660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 581: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction '(' sp_cursor_stmt ')'  */
#line 4691 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 29670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 582: /* loop_body: sp_proc_stmts1 END LOOP_SYM  */
#line 4700 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 583: /* $@76: %empty  */
#line 4714 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 584: /* while_body: expr LOOP_SYM $@76 sp_proc_stmts1 END LOOP_SYM  */
#line 4722 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 29706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 585: /* $@77: %empty  */
#line 4730 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sphead->reset_lex(thd); }
#line 29712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 586: /* repeat_body: sp_proc_stmts1 UNTIL_SYM $@77 expr END REPEAT_SYM  */
#line 4732 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 29731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 587: /* pop_sp_loop_label: sp_opt_label  */
#line 4750 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 588: /* $@78: %empty  */
#line 4758 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 589: /* sp_labeled_control: labels_declaration_oracle LOOP_SYM $@78 loop_body pop_sp_loop_label  */
#line 4763 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 29755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 590: /* $@79: %empty  */
#line 4765 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 591: /* sp_labeled_control: labels_declaration_oracle WHILE_SYM $@79 while_body pop_sp_loop_label  */
#line 4771 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 29771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 592: /* $@80: %empty  */
#line 4773 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 593: /* $@81: %empty  */
#line 4778 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 594: /* $@82: %empty  */
#line 4787 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 595: /* sp_labeled_control: labels_declaration_oracle FOR_SYM $@80 sp_for_loop_index_and_bounds $@81 LOOP_SYM sp_proc_stmts1 END LOOP_SYM $@82 pop_sp_loop_label  */
#line 4792 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 29809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 596: /* $@83: %empty  */
#line 4797 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 597: /* sp_labeled_control: labels_declaration_oracle REPEAT_SYM $@83 repeat_body pop_sp_loop_label  */
#line 4802 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { }
#line 29824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 598: /* $@84: %empty  */
#line 4807 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 599: /* sp_unlabeled_control: LOOP_SYM $@84 loop_body  */
#line 4812 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 600: /* $@85: %empty  */
#line 4816 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 601: /* sp_unlabeled_control: WHILE_SYM $@85 while_body  */
#line 4822 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 602: /* $@86: %empty  */
#line 4826 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 603: /* $@87: %empty  */
#line 4833 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 604: /* sp_unlabeled_control: FOR_SYM $@86 sp_for_loop_index_and_bounds $@87 LOOP_SYM sp_proc_stmts1 END LOOP_SYM  */
#line 4842 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 605: /* $@88: %empty  */
#line 4850 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 606: /* sp_unlabeled_control: REPEAT_SYM $@88 repeat_body  */
#line 4855 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 607: /* trg_action_time: BEFORE_SYM  */
#line 4862 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 29916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 608: /* trg_action_time: AFTER_SYM  */
#line 4864 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 29922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 609: /* trg_event: INSERT  */
#line 4869 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 29928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 610: /* trg_event: UPDATE_SYM  */
#line 4871 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 29934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 611: /* trg_event: DELETE_SYM  */
#line 4873 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 29940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 615: /* opt_logfile_group_name: %empty  */
#line 4907 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 29946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 616: /* opt_logfile_group_name: USE_SYM LOGFILE_SYM GROUP_SYM ident  */
#line 4909 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 29955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 617: /* alter_tablespace_info: tablespace_name ADD ts_datafile alter_tablespace_option_list  */
#line 4919 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 29963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 618: /* alter_tablespace_info: tablespace_name DROP ts_datafile alter_tablespace_option_list  */
#line 4925 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 29971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 623: /* $@89: %empty  */
#line 4948 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 29977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 670: /* ts_datafile: DATAFILE_SYM TEXT_STRING_sys  */
#line 5042 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 29986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 671: /* lg_undofile: UNDOFILE_SYM TEXT_STRING_sys  */
#line 5050 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 672: /* lg_redofile: REDOFILE_SYM TEXT_STRING_sys  */
#line 5058 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 30004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 673: /* tablespace_name: ident  */
#line 5066 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 674: /* logfile_group_name: ident  */
#line 5079 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 675: /* ts_access_mode: READ_ONLY_SYM  */
#line 5092 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 30041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 676: /* ts_access_mode: READ_WRITE_SYM  */
#line 5097 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 30050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 677: /* ts_access_mode: NOT_SYM ACCESSIBLE_SYM  */
#line 5102 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 30059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 678: /* opt_ts_initial_size: INITIAL_SIZE_SYM opt_equal size_number  */
#line 5110 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 30068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 679: /* opt_ts_autoextend_size: AUTOEXTEND_SIZE_SYM opt_equal size_number  */
#line 5118 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 30077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 680: /* opt_ts_max_size: MAX_SIZE_SYM opt_equal size_number  */
#line 5126 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 30086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 681: /* opt_ts_extent_size: EXTENT_SIZE_SYM opt_equal size_number  */
#line 5134 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 30095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 682: /* opt_ts_undo_buffer_size: UNDO_BUFFER_SIZE_SYM opt_equal size_number  */
#line 5142 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 30104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 683: /* opt_ts_redo_buffer_size: REDO_BUFFER_SIZE_SYM opt_equal size_number  */
#line 5150 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 30113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 684: /* opt_ts_nodegroup: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5158 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 30124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 685: /* opt_ts_comment: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5168 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 30135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 686: /* opt_ts_engine: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 5178 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 30147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 689: /* ts_wait: WAIT_SYM  */
#line 5194 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 30156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 690: /* ts_wait: NO_WAIT_SYM  */
#line 5199 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 30167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 691: /* size_number: real_ulonglong_num  */
#line 5208 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 30173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 692: /* size_number: IDENT_sys  */
#line 5210 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 30182 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 693: /* $@90: %empty  */
#line 5222 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.option_list= NULL; }
#line 30188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 694: /* create_body: '(' create_field_list ')' $@90 opt_create_table_options opt_create_partitioning opt_create_select  */
#line 5223 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                                             {}
#line 30194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 695: /* create_body: opt_create_table_options opt_create_partitioning opt_create_select  */
#line 5224 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                                             {}
#line 30200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 697: /* $@91: %empty  */
#line 5232 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->set_braces(1);}
#line 30206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 698: /* create_body: '(' create_select_query_specification ')' $@91 union_list  */
#line 5232 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                               {}
#line 30212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 699: /* $@92: %empty  */
#line 5234 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->set_braces(1);}
#line 30218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 700: /* create_body: '(' create_select_query_specification ')' $@92 union_order_or_limit  */
#line 5234 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                         {}
#line 30224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 701: /* create_body: create_like  */
#line 5236 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->select_lex.add_table_to_list(thd,
                                        (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 30239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 702: /* create_like: LIKE table_ident  */
#line 5249 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.table)= (yyvsp[0].table); }
#line 30245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 703: /* create_like: '(' LIKE table_ident ')'  */
#line 5250 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.table)= (yyvsp[-1].table); }
#line 30251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 704: /* opt_create_select: %empty  */
#line 5254 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 30257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 705: /* opt_create_select: opt_duplicate opt_as create_select_query_expression opt_versioning_option  */
#line 5257 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 706: /* $@93: %empty  */
#line 5266 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            Select->set_braces(0);
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 30275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 708: /* create_select_query_expression: opt_with_clause SELECT_SYM create_select_part2 create_select_part3_union_not_ready create_select_part4  */
#line 5273 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 30283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 710: /* $@94: %empty  */
#line 5278 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->set_braces(1);}
#line 30289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 711: /* create_select_query_expression: '(' create_select_query_specification ')' $@94 union_list  */
#line 5278 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                               {}
#line 30295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 712: /* $@95: %empty  */
#line 5280 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->set_braces(1);}
#line 30301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 713: /* create_select_query_expression: '(' create_select_query_specification ')' $@95 union_order_or_limit  */
#line 5280 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                         {}
#line 30307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 714: /* opt_create_partitioning: opt_partitioning  */
#line 5285 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 30321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 715: /* opt_partitioning: %empty  */
#line 5321 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 30327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 717: /* $@96: %empty  */
#line 5327 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 30342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 719: /* have_partitioning: %empty  */
#line 5342 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 30358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 720: /* $@97: %empty  */
#line 5357 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 30375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 721: /* partition_entry: PARTITION_SYM $@97 partition  */
#line 5369 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 30381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 722: /* $@98: %empty  */
#line 5374 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->safe_to_cache_query= 1; }
#line 30387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 724: /* part_type_def: opt_linear KEY_SYM opt_key_algo '(' part_field_list ')'  */
#line 5380 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 30398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 725: /* $@99: %empty  */
#line 5387 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->part_type= HASH_PARTITION; }
#line 30404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 726: /* part_type_def: opt_linear HASH_SYM $@99 part_func  */
#line 5388 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 30410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 727: /* part_type_def: RANGE_SYM part_func  */
#line 5390 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 728: /* part_type_def: RANGE_SYM part_column_list  */
#line 5392 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 729: /* $@100: %empty  */
#line 5394 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 30430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 730: /* part_type_def: LIST_SYM $@100 part_func  */
#line 5398 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 30439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 731: /* part_type_def: LIST_SYM part_column_list  */
#line 5403 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->part_type= LIST_PARTITION; }
#line 30445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 732: /* $@101: %empty  */
#line 5405 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 30454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 734: /* opt_linear: %empty  */
#line 5413 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 30460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 735: /* opt_linear: LINEAR_SYM  */
#line 5415 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->linear_hash_ind= TRUE;}
#line 30466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 736: /* opt_key_algo: %empty  */
#line 5420 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 30472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 737: /* opt_key_algo: ALGORITHM_SYM '=' real_ulong_num  */
#line 5422 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 30490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 738: /* part_field_list: %empty  */
#line 5438 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 30496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 739: /* part_field_list: part_field_item_list  */
#line 5439 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               {}
#line 30502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 740: /* part_field_item_list: part_field_item  */
#line 5443 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 30508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 741: /* part_field_item_list: part_field_item_list ',' part_field_item  */
#line 5444 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                   {}
#line 30514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 742: /* part_field_item: ident  */
#line 5449 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 30529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 743: /* part_column_list: COLUMNS '(' part_field_list ')'  */
#line 5463 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 30539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 744: /* part_func: '(' part_func_expr ')'  */
#line 5473 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 30551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 745: /* sub_part_func: '(' part_func_expr ')'  */
#line 5484 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 30560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 746: /* opt_num_parts: %empty  */
#line 5492 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 30566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 747: /* opt_num_parts: PARTITIONS_SYM real_ulong_num  */
#line 5494 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 748: /* opt_sub_part: %empty  */
#line 5506 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 30586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 749: /* $@102: %empty  */
#line 5508 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 30592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 750: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear HASH_SYM sub_part_func $@102 opt_num_subparts  */
#line 5509 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           {}
#line 30598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 751: /* $@103: %empty  */
#line 5512 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 30608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 752: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear KEY_SYM opt_key_algo '(' sub_part_field_list ')' $@103 opt_num_subparts  */
#line 5517 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           {}
#line 30614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 753: /* sub_part_field_list: sub_part_field_item  */
#line 5521 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              {}
#line 30620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 754: /* sub_part_field_list: sub_part_field_list ',' sub_part_field_item  */
#line 5522 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                      {}
#line 30626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 755: /* sub_part_field_item: ident  */
#line 5527 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 30641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 756: /* part_func_expr: bit_expr  */
#line 5541 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 30654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 757: /* opt_num_subparts: %empty  */
#line 5552 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 30660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 758: /* opt_num_subparts: SUBPARTITIONS_SYM real_ulong_num  */
#line 5554 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 30673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 759: /* part_defs: %empty  */
#line 5566 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 30687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 760: /* part_defs: '(' part_def_list ')'  */
#line 5576 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 761: /* part_def_list: part_definition  */
#line 5597 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 30716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 762: /* part_def_list: part_def_list ',' part_definition  */
#line 5598 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                            {}
#line 30722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 763: /* $@104: %empty  */
#line 5603 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 764: /* part_definition: PARTITION_SYM $@104 part_name opt_part_values opt_part_options opt_sub_partition  */
#line 5622 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 30748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 765: /* part_name: ident  */
#line 5627 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 30760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 766: /* opt_part_values: %empty  */
#line 5638 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 30780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 767: /* $@105: %empty  */
#line 5654 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 30797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 768: /* opt_part_values: VALUES_LESS_SYM THAN_SYM $@105 part_func_max  */
#line 5666 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        {}
#line 30803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 769: /* $@106: %empty  */
#line 5668 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 30820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 770: /* opt_part_values: VALUES_IN_SYM $@106 part_values_in  */
#line 5680 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         {}
#line 30826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 771: /* opt_part_values: CURRENT_SYM  */
#line 5682 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 30835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 772: /* opt_part_values: HISTORY_SYM  */
#line 5687 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 30844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 773: /* opt_part_values: DEFAULT  */
#line 5692 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 30865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 774: /* part_func_max: MAXVALUE_SYM  */
#line 5712 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 775: /* part_func_max: part_value_item  */
#line 5729 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 30893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 776: /* part_values_in: part_value_item  */
#line 5734 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 30924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 777: /* part_values_in: '(' part_value_list ')'  */
#line 5761 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 778: /* part_value_list: part_value_item  */
#line 5772 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 30943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 779: /* part_value_list: part_value_list ',' part_value_item  */
#line 5773 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                              {}
#line 30949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 780: /* $@107: %empty  */
#line 5778 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 30963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 781: /* $@108: %empty  */
#line 5787 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               {}
#line 30969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 782: /* part_value_item: '(' $@107 part_value_item_list $@108 ')'  */
#line 5789 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 30994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 783: /* part_value_item_list: part_value_expr_item  */
#line 5812 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               {}
#line 31000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 784: /* part_value_item_list: part_value_item_list ',' part_value_expr_item  */
#line 5813 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                        {}
#line 31006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 785: /* part_value_expr_item: MAXVALUE_SYM  */
#line 5818 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 31021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 786: /* part_value_expr_item: bit_expr  */
#line 5829 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 31039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 787: /* opt_sub_partition: %empty  */
#line 5847 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 31057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 788: /* opt_sub_partition: '(' sub_part_list ')'  */
#line 5861 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 31084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 789: /* sub_part_list: sub_part_definition  */
#line 5886 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              {}
#line 31090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 790: /* sub_part_list: sub_part_list ',' sub_part_definition  */
#line 5887 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                {}
#line 31096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 791: /* $@109: %empty  */
#line 5892 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 31133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 792: /* sub_part_definition: SUBPARTITION_SYM $@109 sub_name opt_part_options  */
#line 5924 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                    {}
#line 31139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 793: /* sub_name: ident_or_text  */
#line 5929 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 31149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 794: /* opt_part_options: %empty  */
#line 5937 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     {}
#line 31155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 795: /* opt_part_options: opt_part_option_list  */
#line 5938 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              {}
#line 31161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 796: /* opt_part_option_list: opt_part_option_list opt_part_option  */
#line 5942 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                              {}
#line 31167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 797: /* opt_part_option_list: opt_part_option  */
#line 5943 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         {}
#line 31173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 798: /* opt_part_option: TABLESPACE opt_equal ident_or_text  */
#line 5948 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 31179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 799: /* opt_part_option: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 5950 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 31189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 800: /* opt_part_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5956 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 31199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 801: /* opt_part_option: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5962 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 31205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 802: /* opt_part_option: MAX_ROWS opt_equal real_ulonglong_num  */
#line 5964 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 31211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 803: /* opt_part_option: MIN_ROWS opt_equal real_ulonglong_num  */
#line 5966 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 31217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 804: /* opt_part_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5968 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 31223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 805: /* opt_part_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5970 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 31229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 806: /* opt_part_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5972 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 31235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 807: /* opt_versioning_rotation: %empty  */
#line 5976 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     {}
#line 31241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 808: /* $@110: %empty  */
#line 5977 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         { Lex->expr_allows_subselect= false; }
#line 31247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 809: /* opt_versioning_rotation: $@110 INTERVAL_SYM expr interval opt_versioning_interval_start  */
#line 5979 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 31257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 810: /* opt_versioning_rotation: LIMIT ulonglong_num  */
#line 5985 "/home/buildbot/git/sql/sql_yacc_ora.yy"
       {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 31272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 811: /* opt_versioning_interval_start: %empty  */
#line 6000 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           (yyval.ulong_num)= thd->query_start();
         }
#line 31280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 812: /* opt_versioning_interval_start: STARTS_SYM ulong_num  */
#line 6004 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 31294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 813: /* create_select_query_specification: opt_with_clause SELECT_SYM create_select_part2 create_select_part3 create_select_part4  */
#line 6022 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->set_with_clause((yyvsp[-4].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 31304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 814: /* $@111: %empty  */
#line 6030 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 31323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 815: /* create_select_part2: $@111 select_options select_item_list  */
#line 6045 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 31331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 820: /* create_select_part4: opt_select_lock_type  */
#line 6062 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 31343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 821: /* opt_as: %empty  */
#line 6072 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 31349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 822: /* opt_as: AS  */
#line 6073 "/home/buildbot/git/sql/sql_yacc_ora.yy"
             {}
#line 31355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 823: /* opt_create_database_options: %empty  */
#line 6077 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 31361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 824: /* opt_create_database_options: create_database_options  */
#line 6078 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  {}
#line 31367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 825: /* create_database_options: create_database_option  */
#line 6082 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 {}
#line 31373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 826: /* create_database_options: create_database_options create_database_option  */
#line 6083 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                         {}
#line 31379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 827: /* create_database_option: default_collation  */
#line 6087 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            {}
#line 31385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 828: /* create_database_option: default_charset  */
#line 6088 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 31391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 829: /* opt_if_not_exists_table_element: %empty  */
#line 6093 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->check_exists= FALSE;
          }
#line 31399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 830: /* opt_if_not_exists_table_element: IF_SYM not EXISTS  */
#line 6097 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->check_exists= TRUE;
          }
#line 31407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 831: /* opt_if_not_exists: %empty  */
#line 6104 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 31415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 832: /* opt_if_not_exists: IF_SYM not EXISTS  */
#line 6108 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 31423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 833: /* create_or_replace: CREATE  */
#line 6115 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 31431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 834: /* create_or_replace: CREATE OR_SYM REPLACE  */
#line 6119 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 31439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 842: /* create_table_option: ENGINE_SYM opt_equal ident_or_text  */
#line 6142 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 31458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 843: /* create_table_option: MAX_ROWS opt_equal ulonglong_num  */
#line 6157 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 31467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 844: /* create_table_option: MIN_ROWS opt_equal ulonglong_num  */
#line 6162 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 31476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 845: /* create_table_option: AVG_ROW_LENGTH opt_equal ulong_num  */
#line 6167 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 31485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 846: /* create_table_option: PASSWORD_SYM opt_equal TEXT_STRING_sys  */
#line 6172 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 31494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 847: /* create_table_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 6177 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 31503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 848: /* create_table_option: AUTO_INC opt_equal ulonglong_num  */
#line 6182 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 31512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 849: /* create_table_option: PACK_KEYS_SYM opt_equal ulong_num  */
#line 6187 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 850: /* create_table_option: PACK_KEYS_SYM opt_equal DEFAULT  */
#line 6202 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 851: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal ulong_num  */
#line 6208 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 852: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal DEFAULT  */
#line 6223 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 853: /* create_table_option: STATS_PERSISTENT_SYM opt_equal ulong_num  */
#line 6228 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 854: /* create_table_option: STATS_PERSISTENT_SYM opt_equal DEFAULT  */
#line 6243 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 855: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal ulong_num  */
#line 6249 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 856: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal DEFAULT  */
#line 6267 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 857: /* create_table_option: CHECKSUM_SYM opt_equal ulong_num  */
#line 6272 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 858: /* create_table_option: TABLE_CHECKSUM_SYM opt_equal ulong_num  */
#line 6277 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 859: /* create_table_option: PAGE_CHECKSUM_SYM opt_equal choice  */
#line 6282 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 31656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 860: /* create_table_option: DELAY_KEY_WRITE_SYM opt_equal ulong_num  */
#line 6287 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 31665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 861: /* create_table_option: ROW_FORMAT_SYM opt_equal row_types  */
#line 6292 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 31674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 862: /* $@112: %empty  */
#line 6297 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 31682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 863: /* create_table_option: UNION_SYM opt_equal $@112 '(' opt_table_list ')'  */
#line 6301 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list.first;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 31708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 866: /* create_table_option: INSERT_METHOD opt_equal merge_insert_types  */
#line 6325 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 31717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 867: /* create_table_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6330 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 31726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 868: /* create_table_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6335 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 31735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 869: /* create_table_option: TABLESPACE ident  */
#line 6340 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 31741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 870: /* create_table_option: STORAGE_SYM DISK_SYM  */
#line 6342 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {Lex->create_info.storage_media= HA_SM_DISK;}
#line 31747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 871: /* create_table_option: STORAGE_SYM MEMORY_SYM  */
#line 6344 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 31753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 872: /* create_table_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 6346 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 31763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 873: /* create_table_option: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 6352 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 31772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 874: /* create_table_option: TRANSACTIONAL_SYM opt_equal choice  */
#line 6357 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 31781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 875: /* create_table_option: IDENT_sys equal TEXT_STRING_sys  */
#line 6362 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 876: /* create_table_option: IDENT_sys equal ident  */
#line 6371 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 877: /* create_table_option: IDENT_sys equal real_ulonglong_num  */
#line 6380 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 31817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 878: /* create_table_option: IDENT_sys equal DEFAULT  */
#line 6386 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 879: /* create_table_option: SEQUENCE_SYM opt_equal choice  */
#line 6392 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 31836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 883: /* versioning_option: WITH_SYSTEM_SYM VERSIONING_SYM  */
#line 6406 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_TEMPORARY, MYF(0));
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 31856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 884: /* default_charset: opt_default charset opt_equal charset_name_or_default  */
#line 6425 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 31865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 885: /* default_collation: opt_default COLLATE_SYM opt_equal collation_name_or_default  */
#line 6433 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 31881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 886: /* storage_engines: ident_or_text  */
#line 6448 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 31892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 887: /* known_storage_engines: ident_or_text  */
#line 6458 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 31904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 888: /* row_types: DEFAULT  */
#line 6468 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 889: /* row_types: FIXED_SYM  */
#line 6469 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 890: /* row_types: DYNAMIC_SYM  */
#line 6470 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 891: /* row_types: COMPRESSED_SYM  */
#line 6471 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 892: /* row_types: REDUNDANT_SYM  */
#line 6472 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 31934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 893: /* row_types: COMPACT_SYM  */
#line 6473 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 31940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 894: /* row_types: PAGE_SYM  */
#line 6474 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 31946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 895: /* merge_insert_types: NO_SYM  */
#line 6478 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 31952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 896: /* merge_insert_types: FIRST_SYM  */
#line 6479 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 31958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 897: /* merge_insert_types: LAST_SYM  */
#line 6480 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 31964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 898: /* udf_type: STRING_SYM  */
#line 6484 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 31970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 899: /* udf_type: REAL  */
#line 6485 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               {(yyval.num) = (int) REAL_RESULT; }
#line 31976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 900: /* udf_type: DECIMAL_SYM  */
#line 6486 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 31982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 901: /* udf_type: INT_SYM  */
#line 6487 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 31988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 902: /* create_field_list: field_list  */
#line 6493 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 31996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 905: /* field_list_item: column_def  */
#line 6504 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { }
#line 32002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 909: /* column_def: field_spec  */
#line 6512 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.create_field)= (yyvsp[0].create_field); }
#line 32008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 910: /* column_def: field_spec references  */
#line 6514 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 32014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 911: /* $@113: %empty  */
#line 6519 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 912: /* key_def: key_or_index opt_if_not_exists opt_ident opt_USING_key_algorithm $@113 '(' key_list ')' normal_key_options  */
#line 6524 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                              { }
#line 32030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 913: /* $@114: %empty  */
#line 6526 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 914: /* key_def: key_or_index opt_if_not_exists ident TYPE_SYM btree_or_rtree $@114 '(' key_list ')' normal_key_options  */
#line 6531 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                              { }
#line 32046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 915: /* $@115: %empty  */
#line 6533 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 916: /* key_def: fulltext opt_key_or_index opt_if_not_exists opt_ident $@115 '(' key_list ')' fulltext_key_options  */
#line 6538 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { }
#line 32062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 917: /* $@116: %empty  */
#line 6540 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 918: /* key_def: spatial opt_key_or_index opt_if_not_exists opt_ident $@116 '(' key_list ')' spatial_key_options  */
#line 6545 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                               { }
#line 32078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 919: /* $@117: %empty  */
#line 6549 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 920: /* key_def: opt_constraint constraint_key_type opt_if_not_exists opt_ident opt_USING_key_algorithm $@117 '(' key_list ')' normal_key_options  */
#line 6554 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                              { }
#line 32094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 921: /* $@118: %empty  */
#line 6557 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 922: /* key_def: opt_constraint constraint_key_type opt_if_not_exists ident TYPE_SYM btree_or_rtree $@118 '(' key_list ')' normal_key_options  */
#line 6562 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                              { }
#line 32110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 923: /* $@119: %empty  */
#line 6564 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 32124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 924: /* key_def: opt_constraint FOREIGN KEY_SYM opt_if_not_exists opt_ident $@119 '(' key_list ')' references  */
#line 6574 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 32154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 925: /* constraint_def: opt_constraint check_constraint  */
#line 6603 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 32162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 926: /* period_for_system_time: PERIOD_SYM FOR_SYSTEM_TIME_SYM '(' ident ',' ident ')'  */
#line 6611 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_system_time((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 32171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 927: /* opt_check_constraint: %empty  */
#line 6618 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 32177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 928: /* opt_check_constraint: check_constraint  */
#line 6619 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 32183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 929: /* check_constraint: CHECK_SYM '(' expr ')'  */
#line 6624 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 930: /* opt_constraint_no_id: %empty  */
#line 6633 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 32200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 931: /* opt_constraint_no_id: CONSTRAINT  */
#line 6634 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 32206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 932: /* opt_constraint: %empty  */
#line 6638 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 32212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 933: /* opt_constraint: constraint  */
#line 6639 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 32218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 934: /* constraint: CONSTRAINT opt_ident  */
#line 6643 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 32224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 935: /* @120: %empty  */
#line 6648 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 32244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 936: /* field_spec: field_ident @120 field_type_or_serial opt_check_constraint  */
#line 6664 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 32267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 937: /* $@121: %empty  */
#line 6685 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 32273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 939: /* $@122: %empty  */
#line 6688 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 941: /* opt_serial_attribute: %empty  */
#line 6698 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 32290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 942: /* opt_serial_attribute: opt_serial_attribute_list  */
#line 6699 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                    {}
#line 32296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 943: /* opt_serial_attribute_list: opt_serial_attribute_list serial_attribute  */
#line 6703 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                     {}
#line 32302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 945: /* opt_asrow_attribute: %empty  */
#line 6708 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 32308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 946: /* opt_asrow_attribute: opt_asrow_attribute_list  */
#line 6709 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   {}
#line 32314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 947: /* opt_asrow_attribute_list: opt_asrow_attribute_list asrow_attribute  */
#line 6713 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                   {}
#line 32320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 949: /* field_def: %empty  */
#line 6718 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { }
#line 32326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 953: /* $@123: %empty  */
#line 6723 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 32335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 955: /* field_def: opt_generated_always AS ROW_SYM START_SYM opt_asrow_attribute  */
#line 6729 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 32344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 956: /* field_def: opt_generated_always AS ROW_SYM END opt_asrow_attribute  */
#line 6734 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 32353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 957: /* opt_generated_always: %empty  */
#line 6741 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 32359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 958: /* opt_generated_always: GENERATED_SYM ALWAYS_SYM  */
#line 6742 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   {}
#line 32365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 959: /* vcol_opt_specifier: %empty  */
#line 6747 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 960: /* vcol_opt_specifier: VIRTUAL_SYM  */
#line 6751 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 961: /* vcol_opt_specifier: PERSISTENT_SYM  */
#line 6755 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 962: /* vcol_opt_specifier: STORED_SYM  */
#line 6759 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 963: /* vcol_opt_attribute: %empty  */
#line 6765 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 32403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 964: /* vcol_opt_attribute: vcol_opt_attribute_list  */
#line 6766 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  {}
#line 32409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 965: /* vcol_opt_attribute_list: vcol_opt_attribute_list vcol_attribute  */
#line 6770 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                 {}
#line 32415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 967: /* vcol_attribute: UNIQUE_SYM  */
#line 6776 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 968: /* vcol_attribute: UNIQUE_SYM KEY_SYM  */
#line 6782 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 969: /* vcol_attribute: COMMENT_SYM TEXT_STRING_sys  */
#line 6787 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 32441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 970: /* vcol_attribute: INVISIBLE_SYM  */
#line 6789 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 32449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 971: /* $@124: %empty  */
#line 6796 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
          }
#line 32462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 972: /* parse_vcol_expr: PARSE_VCOL_EXPR_SYM $@124 expr  */
#line 6805 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
          }
#line 32473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 973: /* parenthesized_expr: subselect  */
#line 6815 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 975: /* parenthesized_expr: expr ',' expr_list  */
#line 6822 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 976: /* virtual_column_func: '(' parenthesized_expr ')'  */
#line 6832 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 980: /* column_default_expr: expr_or_literal  */
#line 6846 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 32515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 981: /* field_type: field_type_all  */
#line 6853 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 32524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 982: /* qualified_field_type: field_type_all  */
#line 6861 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 32532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 983: /* qualified_field_type: sp_decl_ident '.' field_type_all  */
#line 6865 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 32541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 994: /* field_type_numeric: int_type opt_field_length field_options  */
#line 6890 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                  { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 32547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 995: /* field_type_numeric: real_type opt_precision field_options  */
#line 6891 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                  { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 32553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 996: /* field_type_numeric: FLOAT_SYM float_options field_options  */
#line 6893 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 32573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 997: /* field_type_numeric: BIT_SYM opt_field_length_default_1  */
#line 6909 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 32581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 998: /* field_type_numeric: BOOL_SYM  */
#line 6913 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 999: /* field_type_numeric: BOOLEAN_SYM  */
#line 6917 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1000: /* field_type_numeric: DECIMAL_SYM float_options field_options  */
#line 6921 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1001: /* field_type_numeric: NUMBER_ORACLE_SYM float_options field_options  */
#line 6923 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 32614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1002: /* field_type_numeric: NUMERIC_SYM float_options field_options  */
#line 6930 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1003: /* field_type_numeric: FIXED_SYM float_options field_options  */
#line 6932 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1008: /* field_type_string: char opt_field_length_default_1 opt_binary  */
#line 6945 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 32634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1009: /* field_type_string: nchar opt_field_length_default_1 opt_bin_mod  */
#line 6949 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1010: /* field_type_string: BINARY opt_field_length_default_1  */
#line 6954 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 32652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1011: /* field_type_string: varchar field_length opt_binary_and_compression  */
#line 6959 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1012: /* field_type_string: VARCHAR2_ORACLE_SYM field_length opt_binary_and_compression  */
#line 6963 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1013: /* field_type_string: nvarchar field_length opt_compressed opt_bin_mod  */
#line 6967 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1014: /* field_type_string: VARBINARY field_length opt_compressed  */
#line 6972 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1015: /* field_type_string: RAW_ORACLE_SYM field_length opt_compressed  */
#line 6977 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1016: /* sp_param_field_type_string: char opt_field_length_default_sp_param_char opt_binary  */
#line 6986 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 32703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1017: /* sp_param_field_type_string: nchar opt_field_length_default_sp_param_char opt_bin_mod  */
#line 6990 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1018: /* sp_param_field_type_string: BINARY opt_field_length_default_sp_param_char  */
#line 6995 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 32721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1019: /* sp_param_field_type_string: varchar opt_field_length_default_sp_param_varchar opt_binary  */
#line 7000 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 32729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1020: /* sp_param_field_type_string: VARCHAR2_ORACLE_SYM opt_field_length_default_sp_param_varchar opt_binary  */
#line 7004 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 32737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1021: /* sp_param_field_type_string: nvarchar opt_field_length_default_sp_param_varchar opt_bin_mod  */
#line 7008 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1022: /* sp_param_field_type_string: VARBINARY opt_field_length_default_sp_param_varchar  */
#line 7013 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 32755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1023: /* sp_param_field_type_string: RAW_ORACLE_SYM opt_field_length_default_sp_param_varchar  */
#line 7018 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 32764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1024: /* field_type_temporal: YEAR_SYM opt_field_length field_options  */
#line 7027 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 32786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1025: /* field_type_temporal: DATE_SYM  */
#line 7044 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 32792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1026: /* field_type_temporal: TIME_SYM opt_field_length  */
#line 7046 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 32803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1027: /* field_type_temporal: TIMESTAMP opt_field_length  */
#line 7053 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 32814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1028: /* field_type_temporal: DATETIME opt_field_length  */
#line 7060 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 32822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1029: /* field_type_lob: TINYBLOB opt_compressed  */
#line 7068 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 32831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1030: /* field_type_lob: BLOB_MARIADB_SYM opt_field_length opt_compressed  */
#line 7073 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1031: /* field_type_lob: BLOB_ORACLE_SYM field_length opt_compressed  */
#line 7078 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1032: /* field_type_lob: BLOB_ORACLE_SYM opt_compressed  */
#line 7083 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1033: /* field_type_lob: spatial_type float_options srid_option  */
#line 7088 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 32873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1034: /* field_type_lob: MEDIUMBLOB opt_compressed  */
#line 7099 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1035: /* field_type_lob: LONGBLOB opt_compressed  */
#line 7104 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1036: /* field_type_lob: LONG_SYM VARBINARY opt_compressed  */
#line 7109 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1037: /* field_type_lob: LONG_SYM varchar opt_binary_and_compression  */
#line 7114 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1038: /* field_type_lob: TINYTEXT opt_binary_and_compression  */
#line 7116 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 32912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1039: /* field_type_lob: TEXT_SYM opt_field_length opt_binary_and_compression  */
#line 7118 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 32918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1040: /* field_type_lob: MEDIUMTEXT opt_binary_and_compression  */
#line 7120 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1041: /* field_type_lob: LONGTEXT opt_binary_and_compression  */
#line 7122 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1042: /* field_type_lob: CLOB_ORACLE_SYM opt_binary_and_compression  */
#line 7124 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1043: /* field_type_lob: LONG_SYM opt_binary_and_compression  */
#line 7126 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1044: /* field_type_lob: JSON_SYM opt_compressed  */
#line 7128 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1045: /* field_type_misc: ENUM '(' string_list ')' opt_binary  */
#line 7136 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 32957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1046: /* field_type_misc: SET '(' string_list ')' opt_binary  */
#line 7138 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_field_type).set(&type_handler_set); }
#line 32963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1047: /* spatial_type: GEOMETRY_SYM  */
#line 7142 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 32969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1048: /* spatial_type: GEOMETRYCOLLECTION  */
#line 7143 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 32975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1049: /* spatial_type: POINT_SYM  */
#line 7144 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_POINT; }
#line 32981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1050: /* spatial_type: MULTIPOINT  */
#line 7145 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 32987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1051: /* spatial_type: LINESTRING  */
#line 7146 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 32993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1052: /* spatial_type: MULTILINESTRING  */
#line 7147 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 32999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1053: /* spatial_type: POLYGON  */
#line 7148 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 33005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1054: /* spatial_type: MULTIPOLYGON  */
#line 7149 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 33011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1055: /* char: CHAR_SYM  */
#line 7153 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   {}
#line 33017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1056: /* nchar: NCHAR_SYM  */
#line 7157 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 33023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1057: /* nchar: NATIONAL_SYM CHAR_SYM  */
#line 7158 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                {}
#line 33029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1058: /* varchar: char VARYING  */
#line 7162 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 33035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1059: /* varchar: VARCHAR  */
#line 7163 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 33041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1060: /* nvarchar: NATIONAL_SYM VARCHAR  */
#line 7167 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               {}
#line 33047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1061: /* nvarchar: NVARCHAR_SYM  */
#line 7168 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 33053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1062: /* nvarchar: NCHAR_SYM VARCHAR  */
#line 7169 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            {}
#line 33059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1063: /* nvarchar: NATIONAL_SYM CHAR_SYM VARYING  */
#line 7170 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                        {}
#line 33065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1064: /* nvarchar: NCHAR_SYM VARYING  */
#line 7171 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            {}
#line 33071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1065: /* int_type: INT_SYM  */
#line 7175 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.type_handler)= &type_handler_long; }
#line 33077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1066: /* int_type: TINYINT  */
#line 7176 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.type_handler)= &type_handler_tiny; }
#line 33083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1067: /* int_type: SMALLINT  */
#line 7177 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.type_handler)= &type_handler_short; }
#line 33089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1068: /* int_type: MEDIUMINT  */
#line 7178 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.type_handler)= &type_handler_int24; }
#line 33095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1069: /* int_type: BIGINT  */
#line 7179 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.type_handler)= &type_handler_longlong; }
#line 33101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1070: /* real_type: REAL  */
#line 7184 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 33111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1071: /* real_type: DOUBLE_SYM  */
#line 7189 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 33117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1072: /* real_type: DOUBLE_SYM PRECISION  */
#line 7190 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 33123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1073: /* srid_option: %empty  */
#line 7195 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->last_field->srid= 0; }
#line 33129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1074: /* srid_option: REF_SYSTEM_ID_SYM '=' NUM  */
#line 7198 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 33137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1075: /* float_options: %empty  */
#line 7204 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 33143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1076: /* float_options: field_length  */
#line 7205 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 33149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1077: /* float_options: precision  */
#line 7206 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 33155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1078: /* precision: '(' NUM ',' NUM ')'  */
#line 7210 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 33161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1079: /* field_options: %empty  */
#line 7214 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 33167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1080: /* field_options: SIGNED_SYM  */
#line 7215 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     {}
#line 33173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1081: /* field_options: UNSIGNED  */
#line 7216 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 33179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1082: /* field_options: ZEROFILL  */
#line 7217 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1083: /* field_options: UNSIGNED ZEROFILL  */
#line 7218 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1084: /* field_options: ZEROFILL UNSIGNED  */
#line 7219 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1085: /* field_length: '(' LONG_NUM ')'  */
#line 7223 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1086: /* field_length: '(' ULONGLONG_NUM ')'  */
#line 7224 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1087: /* field_length: '(' DECIMAL_NUM ')'  */
#line 7225 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1088: /* field_length: '(' NUM ')'  */
#line 7226 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1089: /* opt_field_length: %empty  */
#line 7230 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 33227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1090: /* opt_field_length: field_length  */
#line 7231 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 33233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1091: /* opt_field_length_default_1: %empty  */
#line 7235 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.const_simple_string)= (char*) "1"; }
#line 33239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1092: /* opt_field_length_default_1: field_length  */
#line 7236 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 33245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1093: /* opt_field_length_default_sp_param_varchar: %empty  */
#line 7258 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.Lex_length_and_dec).set("4000", "4000"); }
#line 33251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1094: /* opt_field_length_default_sp_param_varchar: field_length  */
#line 7259 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 33257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1095: /* opt_field_length_default_sp_param_char: %empty  */
#line 7263 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.Lex_length_and_dec).set("2000", "2000"); }
#line 33263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1096: /* opt_field_length_default_sp_param_char: field_length  */
#line 7264 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 33269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1097: /* opt_precision: %empty  */
#line 7268 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.Lex_length_and_dec).set(0, 0); }
#line 33275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1098: /* opt_precision: precision  */
#line 7269 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 33281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1099: /* attribute_list: attribute_list attribute  */
#line 7274 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   {}
#line 33287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1101: /* attribute: NULL_SYM  */
#line 7279 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 33293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1102: /* attribute: DEFAULT column_default_expr  */
#line 7280 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 33299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1103: /* attribute: ON UPDATE_SYM NOW_SYM opt_default_time_precision  */
#line 7282 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 33310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1104: /* attribute: AUTO_INC  */
#line 7288 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 33316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1105: /* attribute: SERIAL_SYM DEFAULT VALUE_SYM  */
#line 7290 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1106: /* attribute: COLLATE_SYM collation_name  */
#line 7296 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 33337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1108: /* opt_compression_method: %empty  */
#line 7306 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.const_simple_string)= NULL; }
#line 33343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1109: /* opt_compression_method: equal ident  */
#line 7307 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 33349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1110: /* opt_compressed: %empty  */
#line 7311 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 33355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1111: /* opt_compressed: compressed  */
#line 7312 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { }
#line 33361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1112: /* compressed: COMPRESSED_SYM opt_compression_method  */
#line 7317 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1113: /* compressed_deprecated_data_type_attribute: COMPRESSED_SYM opt_compression_method  */
#line 7325 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1114: /* compressed_deprecated_column_attribute: COMPRESSED_SYM opt_compression_method  */
#line 7333 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1115: /* asrow_attribute: not NULL_SYM  */
#line 7342 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 33397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1116: /* asrow_attribute: opt_primary KEY_SYM  */
#line 7346 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1119: /* serial_attribute: IDENT_sys equal TEXT_STRING_sys  */
#line 7357 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1120: /* serial_attribute: IDENT_sys equal ident  */
#line 7366 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1121: /* serial_attribute: IDENT_sys equal real_ulonglong_num  */
#line 7375 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 33443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1122: /* serial_attribute: IDENT_sys equal DEFAULT  */
#line 7381 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1123: /* serial_attribute: with_or_without_system VERSIONING_SYM  */
#line 7387 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 33467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1124: /* with_or_without_system: WITH_SYSTEM_SYM  */
#line 7400 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 33477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1125: /* with_or_without_system: WITHOUT SYSTEM  */
#line 7406 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 33487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1126: /* sp_param_type: sp_param_field_type  */
#line 7416 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 33496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1127: /* charset: CHAR_SYM SET  */
#line 7423 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 33502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1128: /* charset: CHARSET  */
#line 7424 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 33508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1129: /* charset_name: ident_or_text  */
#line 7429 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1130: /* charset_name: BINARY  */
#line 7433 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 33523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1131: /* charset_name_or_default: charset_name  */
#line 7437 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.charset)=(yyvsp[0].charset);   }
#line 33529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1132: /* charset_name_or_default: DEFAULT  */
#line 7438 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.charset)=NULL; }
#line 33535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1133: /* opt_load_data_charset: %empty  */
#line 7442 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.charset)= NULL; }
#line 33541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1134: /* opt_load_data_charset: charset charset_name_or_default  */
#line 7443 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.charset)= (yyvsp[0].charset); }
#line 33547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1135: /* old_or_new_charset_name: ident_or_text  */
#line 7448 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1136: /* old_or_new_charset_name: BINARY  */
#line 7454 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 33564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1137: /* old_or_new_charset_name_or_default: old_or_new_charset_name  */
#line 7458 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.charset)=(yyvsp[0].charset);   }
#line 33570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1138: /* old_or_new_charset_name_or_default: DEFAULT  */
#line 7459 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.charset)=NULL; }
#line 33576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1139: /* collation_name: ident_or_text  */
#line 7464 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 33585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1140: /* opt_collate: %empty  */
#line 7471 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.charset)=NULL; }
#line 33591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1141: /* opt_collate: COLLATE_SYM collation_name_or_default  */
#line 7472 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.charset)=(yyvsp[0].charset); }
#line 33597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1142: /* collation_name_or_default: collation_name  */
#line 7476 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.charset)=(yyvsp[0].charset); }
#line 33603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1143: /* collation_name_or_default: DEFAULT  */
#line 7477 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.charset)=NULL; }
#line 33609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1144: /* opt_default: %empty  */
#line 7481 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 33615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1145: /* opt_default: DEFAULT  */
#line 7482 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 33621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1146: /* charset_or_alias: charset charset_name  */
#line 7486 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               { (yyval.charset)= (yyvsp[0].charset); }
#line 33627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1147: /* charset_or_alias: ASCII_SYM  */
#line 7487 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.charset)= &my_charset_latin1; }
#line 33633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1148: /* charset_or_alias: UNICODE_SYM  */
#line 7489 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 33642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1149: /* collate: COLLATE_SYM collation_name_or_default  */
#line 7495 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                               { (yyval.charset)= (yyvsp[0].charset); }
#line 33648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1150: /* opt_binary: %empty  */
#line 7499 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { bincmp_collation(NULL, false); }
#line 33654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1151: /* opt_binary: binary  */
#line 7500 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 {}
#line 33660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1152: /* binary: BYTE_SYM  */
#line 7504 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { bincmp_collation(&my_charset_bin, false); }
#line 33666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1153: /* binary: charset_or_alias opt_bin_mod  */
#line 7505 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                       { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 33672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1154: /* binary: BINARY  */
#line 7506 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { bincmp_collation(NULL, true); }
#line 33678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1155: /* binary: BINARY charset_or_alias  */
#line 7507 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { bincmp_collation((yyvsp[0].charset), true); }
#line 33684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1156: /* binary: charset_or_alias collate  */
#line 7509 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (!(yyvsp[0].charset))
              Lex->charset= (yyvsp[-1].charset); // CHARACTER SET cs COLLATE DEFAULT
            else
            {
              if (!my_charset_same((yyvsp[0].charset), (yyvsp[-1].charset)))
                my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                  (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
              Lex->charset= (yyvsp[0].charset);
            }
          }
#line 33700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1157: /* binary: collate  */
#line 7520 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { Lex->charset= (yyvsp[0].charset); }
#line 33706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1158: /* opt_bin_mod: %empty  */
#line 7524 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.num)= false; }
#line 33712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1159: /* opt_bin_mod: BINARY  */
#line 7525 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.num)= true; }
#line 33718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1160: /* $@125: %empty  */
#line 7530 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 33730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1161: /* ws_nweights: '(' real_ulong_num $@125 ')'  */
#line 7538 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 33736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1162: /* ws_level_flag_desc: ASC  */
#line 7542 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { (yyval.ulong_num)= 0; }
#line 33742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1163: /* ws_level_flag_desc: DESC  */
#line 7543 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 33748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1164: /* ws_level_flag_reverse: REVERSE_SYM  */
#line 7547 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 33754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1165: /* ws_level_flags: %empty  */
#line 7550 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.ulong_num)= 0; }
#line 33760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1166: /* ws_level_flags: ws_level_flag_desc  */
#line 7551 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1167: /* ws_level_flags: ws_level_flag_desc ws_level_flag_reverse  */
#line 7552 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                   { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 33772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1168: /* ws_level_flags: ws_level_flag_reverse  */
#line 7553 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 33778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1169: /* ws_level_number: real_ulong_num  */
#line 7558 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 33787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1170: /* ws_level_list_item: ws_level_number ws_level_flags  */
#line 7566 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 33795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1171: /* ws_level_list: ws_level_list_item  */
#line 7572 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1172: /* ws_level_list: ws_level_list ',' ws_level_list_item  */
#line 7573 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                               { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 33807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1173: /* ws_level_range: ws_level_number '-' ws_level_number  */
#line 7578 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 33818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1174: /* ws_level_list_or_range: ws_level_list  */
#line 7587 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1175: /* ws_level_list_or_range: ws_level_range  */
#line 7588 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1176: /* opt_ws_levels: %empty  */
#line 7592 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { (yyval.ulong_num)= 0; }
#line 33836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1177: /* opt_ws_levels: LEVEL_SYM ws_level_list_or_range  */
#line 7593 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1180: /* references: REFERENCES table_ident opt_ref_list opt_match_clause opt_on_update_delete  */
#line 7607 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 33850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1181: /* opt_ref_list: %empty  */
#line 7614 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->ref_list.empty(); }
#line 33856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1183: /* ref_list: ref_list ',' ident  */
#line 7620 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1184: /* ref_list: ident  */
#line 7627 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1185: /* opt_match_clause: %empty  */
#line 7639 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 33886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1186: /* opt_match_clause: MATCH FULL  */
#line 7641 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 33892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1187: /* opt_match_clause: MATCH PARTIAL  */
#line 7643 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 33898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1188: /* opt_match_clause: MATCH SIMPLE_SYM  */
#line 7645 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 33904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1189: /* opt_on_update_delete: %empty  */
#line 7650 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1190: /* opt_on_update_delete: ON UPDATE_SYM delete_option  */
#line 7656 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1191: /* opt_on_update_delete: ON DELETE_SYM delete_option  */
#line 7662 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1192: /* opt_on_update_delete: ON UPDATE_SYM delete_option ON DELETE_SYM delete_option  */
#line 7669 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1193: /* opt_on_update_delete: ON DELETE_SYM delete_option ON UPDATE_SYM delete_option  */
#line 7676 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 33954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1194: /* delete_option: RESTRICT  */
#line 7684 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 33960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1195: /* delete_option: CASCADE  */
#line 7685 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 33966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1196: /* delete_option: SET NULL_SYM  */
#line 7686 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 33972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1197: /* delete_option: NO_SYM ACTION  */
#line 7687 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 33978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1198: /* delete_option: SET DEFAULT  */
#line 7688 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 33984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1199: /* constraint_key_type: PRIMARY_SYM KEY_SYM  */
#line 7692 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.key_type)= Key::PRIMARY; }
#line 33990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1200: /* constraint_key_type: UNIQUE_SYM opt_key_or_index  */
#line 7693 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { (yyval.key_type)= Key::UNIQUE; }
#line 33996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1201: /* key_or_index: KEY_SYM  */
#line 7697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 34002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1202: /* key_or_index: INDEX_SYM  */
#line 7698 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 34008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1203: /* opt_key_or_index: %empty  */
#line 7702 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 34014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1205: /* keys_or_index: KEYS  */
#line 7707 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               {}
#line 34020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1206: /* keys_or_index: INDEX_SYM  */
#line 7708 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 34026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1207: /* keys_or_index: INDEXES  */
#line 7709 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 34032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1208: /* opt_unique: %empty  */
#line 7713 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.key_type)= Key::MULTIPLE; }
#line 34038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1209: /* opt_unique: UNIQUE_SYM  */
#line 7714 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.key_type)= Key::UNIQUE; }
#line 34044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1210: /* fulltext: FULLTEXT_SYM  */
#line 7718 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.key_type)= Key::FULLTEXT;}
#line 34050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1211: /* spatial: SPATIAL_SYM  */
#line 7723 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 34063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1212: /* normal_key_options: %empty  */
#line 7734 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 34069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1213: /* normal_key_options: normal_key_opts  */
#line 7735 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { Lex->last_key->option_list= Lex->option_list; }
#line 34075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1214: /* fulltext_key_options: %empty  */
#line 7739 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 34081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1215: /* fulltext_key_options: fulltext_key_opts  */
#line 7740 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { Lex->last_key->option_list= Lex->option_list; }
#line 34087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1216: /* spatial_key_options: %empty  */
#line 7744 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 34093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1217: /* spatial_key_options: spatial_key_opts  */
#line 7745 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { Lex->last_key->option_list= Lex->option_list; }
#line 34099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1224: /* opt_USING_key_algorithm: %empty  */
#line 7764 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 34105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1225: /* opt_USING_key_algorithm: USING btree_or_rtree  */
#line 7765 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1226: /* opt_key_algorithm_clause: %empty  */
#line 7770 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 34117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1227: /* opt_key_algorithm_clause: USING btree_or_rtree  */
#line 7771 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1228: /* opt_key_algorithm_clause: TYPE_SYM btree_or_rtree  */
#line 7772 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1229: /* key_using_alg: USING btree_or_rtree  */
#line 7777 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 34135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1230: /* key_using_alg: TYPE_SYM btree_or_rtree  */
#line 7779 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 34141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1231: /* all_key_opt: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 7784 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 34150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1232: /* all_key_opt: COMMENT_SYM TEXT_STRING_sys  */
#line 7789 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 34156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1233: /* all_key_opt: IDENT_sys equal TEXT_STRING_sys  */
#line 7791 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1234: /* all_key_opt: IDENT_sys equal ident  */
#line 7799 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1235: /* all_key_opt: IDENT_sys equal real_ulonglong_num  */
#line 7807 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 34190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1236: /* all_key_opt: IDENT_sys equal DEFAULT  */
#line 7813 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1241: /* fulltext_key_opt: WITH PARSER_SYM IDENT_sys  */
#line 7832 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1242: /* btree_or_rtree: BTREE_SYM  */
#line 7841 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 34217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1243: /* btree_or_rtree: RTREE_SYM  */
#line 7842 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 34223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1244: /* btree_or_rtree: HASH_SYM  */
#line 7843 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 34229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1245: /* key_list: key_list ',' key_part order_dir  */
#line 7848 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1246: /* key_list: key_part order_dir  */
#line 7852 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1247: /* key_part: ident  */
#line 7859 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 34255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1248: /* key_part: ident '(' NUM ')'  */
#line 7865 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 34268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1249: /* opt_ident: %empty  */
#line 7876 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 34274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1250: /* opt_ident: field_ident  */
#line 7877 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 34280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1251: /* string_list: text_string  */
#line 7882 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 34286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1252: /* string_list: string_list ',' text_string  */
#line 7884 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 34292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1253: /* $@126: %empty  */
#line 7893 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR; 
            Lex->select_lex.init_order();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 34310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1254: /* $@127: %empty  */
#line 7907 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->select_lex.db= (Lex->select_lex.table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 34325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1255: /* alter: ALTER $@126 alter_options TABLE_SYM table_ident opt_lock_wait_timeout $@127 alter_commands  */
#line 7918 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
          }
#line 34339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1256: /* $@128: %empty  */
#line 7928 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 34348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1257: /* alter: ALTER DATABASE ident_or_empty $@128 create_database_options  */
#line 7933 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 34361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1258: /* alter: ALTER DATABASE ident UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM  */
#line 7942 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 34373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1259: /* $@129: %empty  */
#line 7950 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->sp_chistics.init();
          }
#line 34385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1260: /* alter: ALTER PROCEDURE_SYM sp_name $@129 sp_a_chistics  */
#line 7958 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 34396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1261: /* $@130: %empty  */
#line 7965 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->sp_chistics.init();
          }
#line 34408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1262: /* alter: ALTER FUNCTION_SYM sp_name $@130 sp_a_chistics  */
#line 7973 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 34419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1263: /* $@131: %empty  */
#line 7980 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1264: /* alter: ALTER view_algorithm definer_opt opt_view_suid VIEW_SYM table_ident $@131 view_list_opt AS view_select  */
#line 7985 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 34434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1265: /* $@132: %empty  */
#line 7992 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1266: /* alter: ALTER definer_opt opt_view_suid VIEW_SYM table_ident $@132 view_list_opt AS view_select  */
#line 7997 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 34449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1267: /* $@133: %empty  */
#line 7999 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 34470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1268: /* alter: ALTER definer_opt remember_name EVENT_SYM sp_name $@133 ev_alter_on_schedule_completion opt_ev_rename_to opt_ev_status opt_ev_comment opt_ev_sql_stmt  */
#line 8020 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
          }
#line 34488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1269: /* alter: ALTER TABLESPACE alter_tablespace_info  */
#line 8034 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 34497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1270: /* alter: ALTER LOGFILE_SYM GROUP_SYM alter_logfile_group_info  */
#line 8039 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 34506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1271: /* alter: ALTER TABLESPACE change_tablespace_info  */
#line 8044 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 34515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1272: /* alter: ALTER TABLESPACE change_tablespace_access  */
#line 8049 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 34524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1273: /* $@134: %empty  */
#line 8054 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 34534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1274: /* alter: ALTER SERVER_SYM ident_or_text $@134 OPTIONS_SYM '(' server_options_list ')'  */
#line 8058 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                    { }
#line 34540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1275: /* alter: ALTER USER_SYM opt_if_exists clear_privileges grant_list opt_require_clause opt_resource_options  */
#line 8062 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_info.set((yyvsp[-4].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 34549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1276: /* $@135: %empty  */
#line 8067 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
#line 34563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1277: /* $@136: %empty  */
#line 8077 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!(lex->create_info.seq_create_info=
                           new (thd->mem_root) sequence_definition())) ||
                unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_SEQUENCE,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 34578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1278: /* alter: ALTER SEQUENCE_SYM opt_if_exists $@135 table_ident $@136 sequence_defs  */
#line 8088 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1279: /* ev_alter_on_schedule_completion: %empty  */
#line 8097 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)= 0;}
#line 34595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1280: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time  */
#line 8098 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.num)= 1; }
#line 34601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1281: /* ev_alter_on_schedule_completion: ev_on_completion  */
#line 8099 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.num)= 1; }
#line 34607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1282: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time ev_on_completion  */
#line 8100 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                            { (yyval.num)= 1; }
#line 34613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1283: /* opt_ev_rename_to: %empty  */
#line 8104 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)= 0;}
#line 34619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1284: /* opt_ev_rename_to: RENAME TO_SYM sp_name  */
#line 8106 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 34632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1285: /* opt_ev_sql_stmt: %empty  */
#line 8117 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.num)= 0;}
#line 34638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1286: /* opt_ev_sql_stmt: DO_SYM ev_sql_stmt  */
#line 8118 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num)= 1; }
#line 34644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1287: /* ident_or_empty: %empty  */
#line 8122 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.ident_sys)= Lex_ident_sys(); }
#line 34650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1290: /* alter_commands: DISCARD TABLESPACE  */
#line 8129 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1291: /* alter_commands: IMPORT TABLESPACE  */
#line 8137 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1297: /* alter_commands: DROP PARTITION_SYM opt_if_exists alt_part_name_list  */
#line 8159 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 34684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1298: /* alter_commands: REBUILD_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 8166 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 34694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1299: /* $@137: %empty  */
#line 8173 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1301: /* alter_commands: ANALYZE_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 8186 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 34724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1302: /* $@138: %empty  */
#line 8197 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1304: /* $@139: %empty  */
#line 8209 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1306: /* alter_commands: COALESCE PARTITION_SYM opt_no_write_to_binlog real_ulong_num  */
#line 8221 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 34764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1307: /* alter_commands: TRUNCATE_SYM PARTITION_SYM all_or_alt_part_name_list  */
#line 8228 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1309: /* alter_commands: EXCHANGE_SYM PARTITION_SYM alt_part_name_item WITH TABLE_SYM table_ident have_partitioning  */
#line 8240 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->select_lex.db= (yyvsp[-1].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.partition_flags|= ALTER_PARTITION_EXCHANGE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1310: /* remove_partitioning: REMOVE_SYM PARTITIONING_SYM  */
#line 8263 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 34810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1311: /* all_or_alt_part_name_list: ALL  */
#line 8270 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 34818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1313: /* $@140: %empty  */
#line 8279 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1314: /* add_partition_rule: ADD PARTITION_SYM opt_if_not_exists opt_no_write_to_binlog $@140 add_part_extra  */
#line 8291 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 34840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1316: /* add_part_extra: '(' part_def_list ')'  */
#line 8297 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 34849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1317: /* add_part_extra: PARTITIONS_SYM real_ulong_num  */
#line 8302 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 34857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1318: /* $@141: %empty  */
#line 8309 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1320: /* reorg_parts_rule: %empty  */
#line 8322 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 34878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1321: /* $@142: %empty  */
#line 8326 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 34886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1322: /* reorg_parts_rule: alt_part_name_list $@142 INTO '(' part_def_list ')'  */
#line 8330 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 34895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1323: /* alt_part_name_list: alt_part_name_item  */
#line 8337 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             {}
#line 34901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1324: /* alt_part_name_list: alt_part_name_list ',' alt_part_name_item  */
#line 8338 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                    {}
#line 34907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1325: /* alt_part_name_item: ident  */
#line 8343 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1329: /* alter_list_item: add_column column_def opt_place  */
#line 8365 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1330: /* alter_list_item: ADD key_def  */
#line 8372 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1331: /* alter_list_item: ADD period_for_system_time  */
#line 8377 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 34945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1332: /* alter_list_item: add_column '(' create_field_list ')'  */
#line 8381 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1333: /* alter_list_item: ADD constraint_def  */
#line 8388 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 34964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1334: /* alter_list_item: ADD CONSTRAINT IF_SYM not EXISTS field_ident check_constraint  */
#line 8392 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 34973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1335: /* alter_list_item: CHANGE opt_column opt_if_exists_table_element field_ident field_spec opt_place  */
#line 8398 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1336: /* alter_list_item: MODIFY_SYM opt_column opt_if_exists_table_element field_spec opt_place  */
#line 8406 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1337: /* alter_list_item: DROP opt_column opt_if_exists_table_element field_ident opt_restrict  */
#line 8413 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 35009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1338: /* alter_list_item: DROP CONSTRAINT opt_if_exists_table_element field_ident  */
#line 8423 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 35024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1339: /* alter_list_item: DROP FOREIGN KEY_SYM opt_if_exists_table_element field_ident  */
#line 8434 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 35038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1340: /* alter_list_item: DROP opt_constraint_no_id PRIMARY_SYM KEY_SYM  */
#line 8444 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 35053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1341: /* alter_list_item: DROP key_or_index opt_if_exists_table_element field_ident  */
#line 8455 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 35067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1342: /* alter_list_item: DISABLE_SYM KEYS  */
#line 8465 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 35077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1343: /* alter_list_item: ENABLE_SYM KEYS  */
#line 8471 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 35087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1344: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident SET DEFAULT column_default_expr  */
#line 8477 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 35098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1345: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident DROP DEFAULT  */
#line 8484 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 35108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1346: /* alter_list_item: RENAME opt_to table_ident  */
#line 8490 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->select_lex.db= (yyvsp[0].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 35126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1347: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default opt_collate  */
#line 8504 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 35144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1348: /* alter_list_item: create_table_options_space_separated  */
#line 8518 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 35153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1349: /* alter_list_item: FORCE_SYM  */
#line 8523 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 35161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1350: /* alter_list_item: alter_order_clause  */
#line 8527 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 35170 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1353: /* alter_list_item: ADD SYSTEM VERSIONING_SYM  */
#line 8534 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 35179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1354: /* alter_list_item: DROP SYSTEM VERSIONING_SYM  */
#line 8539 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 35188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1355: /* alter_list_item: DROP PERIOD_SYM FOR_SYSTEM_TIME_SYM  */
#line 8544 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 35196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1361: /* alter_algorithm_option: ALGORITHM_SYM opt_equal DEFAULT  */
#line 8559 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 35205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1362: /* alter_algorithm_option: ALGORITHM_SYM opt_equal ident  */
#line 8564 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 35214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1363: /* alter_lock_option: LOCK_SYM opt_equal DEFAULT  */
#line 8572 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 35223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1364: /* alter_lock_option: LOCK_SYM opt_equal ident  */
#line 8577 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 35232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1365: /* opt_column: %empty  */
#line 8584 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 35238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1366: /* opt_column: COLUMN_SYM  */
#line 8585 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     {}
#line 35244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1367: /* opt_ignore: %empty  */
#line 8589 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->ignore= 0;}
#line 35250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1368: /* opt_ignore: IGNORE_SYM  */
#line 8590 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { Lex->ignore= 1;}
#line 35256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1369: /* $@143: %empty  */
#line 8594 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        { Lex->ignore= 0;}
#line 35262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1375: /* alter_option: IGNORE_SYM  */
#line 8608 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { Lex->ignore= 1;}
#line 35268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1376: /* alter_option: ONLINE_SYM  */
#line 8610 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 35277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1377: /* opt_restrict: %empty  */
#line 8618 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->drop_mode= DROP_DEFAULT; }
#line 35283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1378: /* opt_restrict: RESTRICT  */
#line 8619 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->drop_mode= DROP_RESTRICT; }
#line 35289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1379: /* opt_restrict: CASCADE  */
#line 8620 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->drop_mode= DROP_CASCADE; }
#line 35295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1380: /* opt_place: %empty  */
#line 8624 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.lex_str)= null_clex_str; }
#line 35301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1381: /* opt_place: AFTER_SYM ident  */
#line 8626 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 35310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1382: /* opt_place: FIRST_SYM  */
#line 8631 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 35320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1383: /* opt_to: %empty  */
#line 8639 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 35326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1384: /* opt_to: TO_SYM  */
#line 8640 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 {}
#line 35332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1385: /* opt_to: '='  */
#line 8641 "/home/buildbot/git/sql/sql_yacc_ora.yy"
              {}
#line 35338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1386: /* opt_to: AS  */
#line 8642 "/home/buildbot/git/sql/sql_yacc_ora.yy"
             {}
#line 35344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1387: /* $@144: %empty  */
#line 8647 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 35355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1388: /* slave: START_SYM SLAVE optional_connection_name slave_thread_opts $@144 slave_until  */
#line 8654 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1389: /* $@145: %empty  */
#line 8656 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 35372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1390: /* slave: START_SYM ALL SLAVES slave_thread_opts $@145  */
#line 8662 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1391: /* slave: STOP_SYM SLAVE optional_connection_name slave_thread_opts  */
#line 8664 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 35389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1392: /* slave: STOP_SYM ALL SLAVES slave_thread_opts  */
#line 8671 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 35400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1393: /* start: START_SYM TRANSACTION_SYM opt_start_transaction_option_list  */
#line 8681 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 35417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1394: /* opt_start_transaction_option_list: %empty  */
#line 8697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= 0;
          }
#line 35425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1395: /* opt_start_transaction_option_list: start_transaction_option_list  */
#line 8701 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1396: /* start_transaction_option_list: start_transaction_option  */
#line 8708 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1397: /* start_transaction_option_list: start_transaction_option_list ',' start_transaction_option  */
#line 8712 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1398: /* start_transaction_option: WITH CONSISTENT_SYM SNAPSHOT_SYM  */
#line 8719 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 35457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1399: /* start_transaction_option: READ_SYM ONLY_SYM  */
#line 8723 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 35465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1400: /* start_transaction_option: READ_SYM WRITE_SYM  */
#line 8727 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 35473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1401: /* $@146: %empty  */
#line 8733 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->slave_thd_opt= 0; }
#line 35479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1402: /* slave_thread_opts: $@146 slave_thread_opt_list  */
#line 8735 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1405: /* slave_thread_opt: %empty  */
#line 8744 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 35491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1406: /* slave_thread_opt: SQL_THREAD  */
#line 8745 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 35497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1407: /* slave_thread_opt: RELAY_THREAD  */
#line 8746 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->slave_thd_opt|=SLAVE_IO; }
#line 35503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1408: /* slave_until: %empty  */
#line 8750 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 35509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1409: /* slave_until: UNTIL_SYM slave_until_opts  */
#line 8752 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 35522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1410: /* slave_until: UNTIL_SYM MASTER_GTID_POS_SYM '=' TEXT_STRING_sys  */
#line 8761 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 35530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1413: /* $@147: %empty  */
#line 8773 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1414: /* checksum: CHECKSUM_SYM table_or_tables $@147 table_list opt_checksum_type  */
#line 8780 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1415: /* opt_checksum_type: %empty  */
#line 8784 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { Lex->check_opt.flags= 0; }
#line 35553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1416: /* opt_checksum_type: QUICK  */
#line 8785 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { Lex->check_opt.flags= T_QUICK; }
#line 35559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1417: /* opt_checksum_type: EXTENDED_SYM  */
#line 8786 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { Lex->check_opt.flags= T_EXTEND; }
#line 35565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1419: /* $@148: %empty  */
#line 8792 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1421: /* $@149: %empty  */
#line 8798 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1422: /* repair: REPAIR opt_no_write_to_binlog $@149 repair_table_or_view  */
#line 8808 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1423: /* opt_mi_repair_type: %empty  */
#line 8818 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 35603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1424: /* opt_mi_repair_type: mi_repair_types  */
#line 8819 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 35609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1425: /* mi_repair_types: mi_repair_type  */
#line 8823 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         {}
#line 35615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1426: /* mi_repair_types: mi_repair_type mi_repair_types  */
#line 8824 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         {}
#line 35621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1427: /* mi_repair_type: QUICK  */
#line 8828 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->check_opt.flags|= T_QUICK; }
#line 35627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1428: /* mi_repair_type: EXTENDED_SYM  */
#line 8829 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->check_opt.flags|= T_EXTEND; }
#line 35633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1429: /* mi_repair_type: USE_FRM  */
#line 8830 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 35639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1430: /* opt_view_repair_type: %empty  */
#line 8834 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { }
#line 35645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1431: /* opt_view_repair_type: FROM MYSQL_SYM  */
#line 8835 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 35651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1432: /* $@150: %empty  */
#line 8840 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1433: /* analyze: ANALYZE_SYM opt_no_write_to_binlog table_or_tables $@150 analyze_table_list  */
#line 8850 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1437: /* opt_persistent_stat_clause: %empty  */
#line 8870 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1438: /* opt_persistent_stat_clause: PERSISTENT_SYM FOR_SYM persistent_stat_spec  */
#line 8872 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 35691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1439: /* persistent_stat_spec: ALL  */
#line 8879 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1440: /* persistent_stat_spec: COLUMNS persistent_column_stat_spec INDEXES persistent_index_stat_spec  */
#line 8881 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1441: /* persistent_column_stat_spec: ALL  */
#line 8885 "/home/buildbot/git/sql/sql_yacc_ora.yy"
              {}
#line 35709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1442: /* $@151: %empty  */
#line 8887 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 35720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1444: /* persistent_index_stat_spec: ALL  */
#line 8898 "/home/buildbot/git/sql/sql_yacc_ora.yy"
              {}
#line 35726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1445: /* $@152: %empty  */
#line 8900 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 35737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1447: /* table_column_list: %empty  */
#line 8912 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1448: /* table_column_list: ident  */
#line 8914 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1449: /* table_column_list: table_column_list ',' ident  */
#line 8919 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1450: /* table_index_list: %empty  */
#line 8927 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1453: /* table_index_name: ident  */
#line 8934 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 35777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1454: /* table_index_name: PRIMARY_SYM  */
#line 8941 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 35788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1455: /* binlog_base64_event: BINLOG_SYM TEXT_STRING_sys  */
#line 8951 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 35799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1456: /* binlog_base64_event: BINLOG_SYM '@' ident_or_text ',' '@' ident_or_text  */
#line 8959 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 35809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1458: /* $@153: %empty  */
#line 8969 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1460: /* $@154: %empty  */
#line 8974 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1461: /* check: CHECK_SYM $@154 check_view_or_table  */
#line 8984 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1462: /* opt_mi_check_type: %empty  */
#line 8996 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 35849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1463: /* opt_mi_check_type: mi_check_types  */
#line 8997 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         {}
#line 35855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1464: /* mi_check_types: mi_check_type  */
#line 9001 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        {}
#line 35861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1465: /* mi_check_types: mi_check_type mi_check_types  */
#line 9002 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                       {}
#line 35867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1466: /* mi_check_type: QUICK  */
#line 9006 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->check_opt.flags|= T_QUICK; }
#line 35873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1467: /* mi_check_type: FAST_SYM  */
#line 9007 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->check_opt.flags|= T_FAST; }
#line 35879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1468: /* mi_check_type: MEDIUM_SYM  */
#line 9008 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->check_opt.flags|= T_MEDIUM; }
#line 35885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1469: /* mi_check_type: EXTENDED_SYM  */
#line 9009 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->check_opt.flags|= T_EXTEND; }
#line 35891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1470: /* mi_check_type: CHANGED  */
#line 9010 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 35897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1471: /* mi_check_type: FOR_SYM UPGRADE_SYM  */
#line 9011 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1472: /* opt_view_check_type: %empty  */
#line 9015 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { }
#line 35909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1473: /* opt_view_check_type: FOR_SYM UPGRADE_SYM  */
#line 9016 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1474: /* $@155: %empty  */
#line 9021 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1475: /* optimize: OPTIMIZE opt_no_write_to_binlog table_or_tables $@155 table_list opt_lock_wait_timeout  */
#line 9031 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1476: /* opt_no_write_to_binlog: %empty  */
#line 9041 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)= 0; }
#line 35947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1477: /* opt_no_write_to_binlog: NO_WRITE_TO_BINLOG  */
#line 9042 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num)= 1; }
#line 35953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1478: /* opt_no_write_to_binlog: LOCAL_SYM  */
#line 9043 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.num)= 1; }
#line 35959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1479: /* $@156: %empty  */
#line 9048 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 35967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1480: /* rename: RENAME table_or_tables $@156 table_to_table_list  */
#line 9052 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 35973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1481: /* rename: RENAME USER_SYM clear_privileges rename_list  */
#line 9054 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1482: /* rename_list: user TO_SYM user  */
#line 9061 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1483: /* rename_list: rename_list ',' user TO_SYM user  */
#line 9067 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 36001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1486: /* table_to_table: table_ident opt_lock_wait_timeout TO_SYM table_ident  */
#line 9081 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 36017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1487: /* $@157: %empty  */
#line 9096 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.reset();
          }
#line 36025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1488: /* keycache: CACHE_SYM INDEX_SYM $@157 keycache_list_or_parts IN_SYM key_cache_name  */
#line 9100 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 36035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1493: /* assign_to_keycache: table_ident cache_keys_spec  */
#line 9119 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1494: /* assign_to_keycache_parts: table_ident adm_partition cache_keys_spec  */
#line 9130 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1495: /* key_cache_name: ident  */
#line 9140 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 36065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1496: /* key_cache_name: DEFAULT  */
#line 9141 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { (yyval.lex_str) = default_key_cache_base; }
#line 36071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1497: /* $@158: %empty  */
#line 9146 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 36081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1498: /* preload: LOAD INDEX_SYM INTO CACHE_SYM $@158 preload_list_or_parts  */
#line 9152 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 36087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1503: /* preload_keys: table_ident cache_keys_spec opt_ignore_leaves  */
#line 9167 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1504: /* preload_keys_parts: table_ident adm_partition cache_keys_spec opt_ignore_leaves  */
#line 9178 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1505: /* $@159: %empty  */
#line 9189 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 36119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1507: /* $@160: %empty  */
#line 9196 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->select_lex.alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        INDEX_HINT_MASK_ALL);
          }
#line 36129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1509: /* cache_key_list_or_empty: %empty  */
#line 9205 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { }
#line 36135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1511: /* opt_ignore_leaves: %empty  */
#line 9211 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.num)= 0; }
#line 36141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1512: /* opt_ignore_leaves: IGNORE_SYM LEAVES  */
#line 9212 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 36147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1513: /* select: opt_with_clause select_init  */
#line 9222 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->current_select->set_with_clause((yyvsp[-1].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 36159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1528: /* $@161: %empty  */
#line 9252 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->current_select->set_braces(true);
          }
#line 36167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1529: /* select_paren: $@161 table_value_constructor select_part3  */
#line 9256 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1530: /* $@162: %empty  */
#line 9260 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 36187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1531: /* select_paren: $@162 SELECT_SYM select_options_and_item_list select_part3 opt_select_lock_type  */
#line 9269 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1535: /* $@163: %empty  */
#line 9282 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 36207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1536: /* select_paren_union_query_term: $@163 select_parent_union_query_term_proper  */
#line 9290 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1540: /* $@164: %empty  */
#line 9303 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 36227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1541: /* select_paren_view: $@164 select_parent_view_proper  */
#line 9311 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1543: /* $@165: %empty  */
#line 9319 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->current_select->set_braces(true);
          }
#line 36243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1544: /* select_paren_derived: $@165 table_value_constructor  */
#line 9323 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 36252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1545: /* $@166: %empty  */
#line 9328 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->current_select->set_braces(true);
          }
#line 36260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1546: /* select_paren_derived: $@166 SELECT_SYM select_part2_derived opt_table_expression opt_order_clause opt_limit_clause opt_select_lock_type  */
#line 9336 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 36269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1547: /* select_paren_derived: '(' select_paren_derived ')'  */
#line 9340 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                        { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 36275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1548: /* $@167: %empty  */
#line 9346 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1550: /* select_init3: select_part3_union_not_ready opt_select_lock_type  */
#line 9353 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1551: /* $@168: %empty  */
#line 9363 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1553: /* select_init3_union_query_term: select_part3_union_not_ready_noproc opt_select_lock_type  */
#line 9370 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1554: /* select_init3_view: opt_table_expression opt_select_lock_type  */
#line 9379 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 36319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1555: /* $@169: %empty  */
#line 9383 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 36327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1557: /* select_init3_view: order_or_limit opt_select_lock_type  */
#line 9388 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 36335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1558: /* select_init3_view: table_expression order_or_limit opt_select_lock_type  */
#line 9392 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->current_select->set_braces(false);
          }
#line 36343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1574: /* $@170: %empty  */
#line 9432 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 36355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1575: /* select_options_and_item_list: $@170 select_options select_item_list  */
#line 9440 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 36363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1580: /* table_reference_list: join_table_list  */
#line 9468 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 36373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1583: /* select_options: select_option_list  */
#line 9483 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 36383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1584: /* opt_history_unit: %empty  */
#line 9492 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 36391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1585: /* opt_history_unit: TRANSACTION_SYM  */
#line 9496 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 36399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1586: /* opt_history_unit: TIMESTAMP  */
#line 9500 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 36407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1587: /* history_point: TIMESTAMP TEXT_STRING  */
#line 9507 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item;
            if (!(item= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                                MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 36419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1588: /* history_point: function_call_keyword_timestamp  */
#line 9515 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 36427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1589: /* history_point: opt_history_unit bit_expr  */
#line 9519 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 36435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1590: /* opt_for_system_time_clause: %empty  */
#line 9526 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= false;
          }
#line 36443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1591: /* opt_for_system_time_clause: FOR_SYSTEM_TIME_SYM system_time_expr  */
#line 9530 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= true;
          }
#line 36451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1592: /* system_time_expr: AS OF_SYM history_point  */
#line 9537 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 36459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1593: /* system_time_expr: ALL  */
#line 9541 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 36467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1594: /* system_time_expr: FROM history_point TO_SYM history_point  */
#line 9545 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1595: /* system_time_expr: BETWEEN_SYM history_point AND_SYM history_point  */
#line 9549 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1599: /* select_option: SQL_NO_CACHE_SYM  */
#line 9562 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));

            Lex->safe_to_cache_query=0;
            Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
#line 36504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1600: /* select_option: SQL_CACHE_SYM  */
#line 9579 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));

            Lex->safe_to_cache_query=1;
            Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
          }
#line 36525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1602: /* opt_select_lock_type: FOR_SYM UPDATE_SYM opt_lock_wait_timeout  */
#line 9600 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_WRITE;
            lex->current_select->set_lock_for_tables(TL_WRITE, false);
            lex->safe_to_cache_query=0;
          }
#line 36536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1603: /* opt_select_lock_type: LOCK_SYM IN_SYM SHARE_SYM MODE_SYM opt_lock_wait_timeout  */
#line 9607 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_READ_WITH_SHARED_LOCKS;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS, false);
            lex->safe_to_cache_query=0;
          }
#line 36548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1606: /* select_item_list: '*'  */
#line 9620 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 36563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1607: /* select_item: remember_name select_sublist_qualified_asterisk remember_end  */
#line 9634 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 36572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1608: /* select_item: remember_name expr remember_end select_alias  */
#line 9639 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 36595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1609: /* remember_tok_start: %empty  */
#line 9660 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 36603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1610: /* remember_tok_end: %empty  */
#line 9666 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_end();
          }
#line 36611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1611: /* remember_name: %empty  */
#line 9672 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 36619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1612: /* remember_end: %empty  */
#line 9678 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 36627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1613: /* remember_end_opt: %empty  */
#line 9684 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 36638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1614: /* select_alias: %empty  */
#line 9693 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lex_str)=null_clex_str;}
#line 36644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1615: /* select_alias: AS ident  */
#line 9694 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1616: /* select_alias: AS TEXT_STRING_sys  */
#line 9695 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1617: /* select_alias: ident  */
#line 9696 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1618: /* select_alias: TEXT_STRING_sys  */
#line 9697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1619: /* opt_default_time_precision: %empty  */
#line 9701 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 36674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1620: /* opt_default_time_precision: '(' ')'  */
#line 9702 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 36680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1621: /* opt_default_time_precision: '(' real_ulong_num ')'  */
#line 9703 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1622: /* opt_time_precision: %empty  */
#line 9707 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.num)= 0;  }
#line 36692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1623: /* opt_time_precision: '(' ')'  */
#line 9708 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.num)= 0;  }
#line 36698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1624: /* opt_time_precision: '(' real_ulong_num ')'  */
#line 9709 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1625: /* optional_braces: %empty  */
#line 9713 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 36710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1626: /* optional_braces: '(' ')'  */
#line 9714 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 36716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1627: /* expr: expr or expr  */
#line 9720 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1628: /* expr: expr XOR expr  */
#line 9771 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1629: /* expr: expr and expr  */
#line 9778 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1630: /* expr: NOT_SYM expr  */
#line 9821 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1632: /* boolean_test: boolean_test IS TRUE_SYM  */
#line 9831 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1633: /* boolean_test: boolean_test IS not TRUE_SYM  */
#line 9837 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1634: /* boolean_test: boolean_test IS FALSE_SYM  */
#line 9843 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1635: /* boolean_test: boolean_test IS not FALSE_SYM  */
#line 9849 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1636: /* boolean_test: boolean_test IS UNKNOWN_SYM  */
#line 9855 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1637: /* boolean_test: boolean_test IS not UNKNOWN_SYM  */
#line 9861 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1638: /* boolean_test: boolean_test IS NULL_SYM  */
#line 9867 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1639: /* boolean_test: boolean_test IS not NULL_SYM  */
#line 9873 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1640: /* boolean_test: boolean_test EQUAL_SYM predicate  */
#line 9879 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1641: /* boolean_test: boolean_test comp_op predicate  */
#line 9885 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1642: /* boolean_test: boolean_test comp_op all_or_any '(' subselect ')'  */
#line 9891 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1644: /* predicate: predicate IN_SYM '(' subselect ')'  */
#line 9901 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-4].item), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1645: /* predicate: predicate not IN_SYM '(' subselect ')'  */
#line 9907 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1646: /* predicate: predicate IN_SYM '(' expr ')'  */
#line 9916 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1647: /* predicate: predicate IN_SYM '(' expr ',' expr_list ')'  */
#line 9922 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1648: /* predicate: predicate not IN_SYM '(' expr ')'  */
#line 9930 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1649: /* predicate: predicate not IN_SYM '(' expr ',' expr_list ')'  */
#line 9936 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1650: /* predicate: predicate BETWEEN_SYM predicate AND_SYM predicate  */
#line 9945 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1651: /* predicate: predicate not BETWEEN_SYM predicate AND_SYM predicate  */
#line 9951 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1652: /* predicate: predicate SOUNDS_SYM LIKE predicate  */
#line 9959 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1653: /* predicate: predicate LIKE predicate  */
#line 9969 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1654: /* predicate: predicate LIKE predicate ESCAPE_SYM predicate  */
#line 9975 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1655: /* predicate: predicate not LIKE predicate  */
#line 9982 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1656: /* predicate: predicate not LIKE predicate ESCAPE_SYM predicate  */
#line 9989 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1657: /* predicate: predicate REGEXP predicate  */
#line 9997 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1658: /* predicate: predicate not REGEXP predicate  */
#line 10003 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1660: /* bit_expr: bit_expr '|' bit_expr  */
#line 10016 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1661: /* bit_expr: bit_expr '&' bit_expr  */
#line 10022 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1662: /* bit_expr: bit_expr SHIFT_LEFT bit_expr  */
#line 10028 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1663: /* bit_expr: bit_expr SHIFT_RIGHT bit_expr  */
#line 10034 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1664: /* bit_expr: bit_expr ORACLE_CONCAT_SYM bit_expr  */
#line 10040 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1665: /* bit_expr: bit_expr '+' bit_expr  */
#line 10047 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1666: /* bit_expr: bit_expr '-' bit_expr  */
#line 10053 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1667: /* bit_expr: bit_expr '+' INTERVAL_SYM expr interval  */
#line 10059 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1668: /* bit_expr: bit_expr '-' INTERVAL_SYM expr interval  */
#line 10065 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1669: /* bit_expr: INTERVAL_SYM expr interval '+' expr  */
#line 10072 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1670: /* bit_expr: '+' INTERVAL_SYM expr interval '+' expr  */
#line 10078 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1671: /* bit_expr: '-' INTERVAL_SYM expr interval '+' expr  */
#line 10084 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1672: /* bit_expr: bit_expr '*' bit_expr  */
#line 10090 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1673: /* bit_expr: bit_expr '/' bit_expr  */
#line 10096 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1674: /* bit_expr: bit_expr '%' bit_expr  */
#line 10102 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1675: /* bit_expr: bit_expr DIV_SYM bit_expr  */
#line 10108 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1676: /* bit_expr: bit_expr MOD_SYM bit_expr  */
#line 10114 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1677: /* bit_expr: bit_expr '^' bit_expr  */
#line 10120 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1687: /* comp_op: '='  */
#line 10149 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 37307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1688: /* comp_op: GE  */
#line 10150 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 37313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1689: /* comp_op: '>'  */
#line 10151 "/home/buildbot/git/sql/sql_yacc_ora.yy"
              { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 37319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1690: /* comp_op: LE  */
#line 10152 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 37325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1691: /* comp_op: '<'  */
#line 10153 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 37331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1692: /* comp_op: NE  */
#line 10154 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 37337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1693: /* all_or_any: ALL  */
#line 10158 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.num) = 1; }
#line 37343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1694: /* all_or_any: ANY_SYM  */
#line 10159 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.num) = 0; }
#line 37349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1695: /* opt_dyncol_type: %empty  */
#line 10164 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 37358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1696: /* opt_dyncol_type: AS dyncol_type  */
#line 10168 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1697: /* dyncol_type: numeric_dyncol_type  */
#line 10172 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1698: /* dyncol_type: temporal_dyncol_type  */
#line 10173 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1699: /* dyncol_type: string_dyncol_type  */
#line 10174 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1700: /* numeric_dyncol_type: INT_SYM  */
#line 10178 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 37388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1701: /* numeric_dyncol_type: UNSIGNED INT_SYM  */
#line 10179 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 37394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1702: /* numeric_dyncol_type: DOUBLE_SYM  */
#line 10180 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 37400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1703: /* numeric_dyncol_type: REAL  */
#line 10181 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1704: /* numeric_dyncol_type: FLOAT_SYM  */
#line 10182 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1705: /* numeric_dyncol_type: DECIMAL_SYM float_options  */
#line 10183 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 37418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1706: /* temporal_dyncol_type: DATE_SYM  */
#line 10187 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 37424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1707: /* temporal_dyncol_type: TIME_SYM opt_field_length  */
#line 10188 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 37430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1708: /* temporal_dyncol_type: DATETIME opt_field_length  */
#line 10189 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 37436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1709: /* $@171: %empty  */
#line 10194 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 37442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1710: /* string_dyncol_type: char $@171 opt_binary  */
#line 10196 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 37450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1711: /* string_dyncol_type: nchar  */
#line 10200 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 37459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1712: /* dyncall_create_element: expr ',' expr opt_dyncol_type  */
#line 10208 "/home/buildbot/git/sql/sql_yacc_ora.yy"
   {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 37483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1713: /* dyncall_create_list: dyncall_create_element  */
#line 10231 "/home/buildbot/git/sql/sql_yacc_ora.yy"
       {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 37494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1714: /* dyncall_create_list: dyncall_create_list ',' dyncall_create_element  */
#line 10238 "/home/buildbot/git/sql/sql_yacc_ora.yy"
       {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 37503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1715: /* plsql_cursor_attr: ISOPEN_SYM  */
#line 10246 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 37509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1716: /* plsql_cursor_attr: FOUND_SYM  */
#line 10247 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 37515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1717: /* plsql_cursor_attr: NOTFOUND_SYM  */
#line 10248 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 37521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1718: /* plsql_cursor_attr: ROWCOUNT_SYM  */
#line 10249 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 37527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1719: /* explicit_cursor_attr: ident PERCENT_ORACLE_SYM plsql_cursor_attr  */
#line 10254 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 37536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1720: /* trim_operands: expr  */
#line 10262 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1721: /* trim_operands: LEADING expr FROM expr  */
#line 10263 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 37548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1722: /* trim_operands: TRAILING expr FROM expr  */
#line 10264 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 37554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1723: /* trim_operands: BOTH expr FROM expr  */
#line 10265 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1724: /* trim_operands: LEADING FROM expr  */
#line 10266 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 37566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1725: /* trim_operands: TRAILING FROM expr  */
#line 10267 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 37572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1726: /* trim_operands: BOTH FROM expr  */
#line 10268 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1727: /* trim_operands: expr FROM expr  */
#line 10269 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1734: /* column_default_non_parenthesized_expr: param_marker  */
#line 10307 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.item)= (yyvsp[0].item_param); }
#line 37590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1739: /* column_default_non_parenthesized_expr: ROW_SYM '(' expr ',' expr_list ')'  */
#line 10313 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1740: /* column_default_non_parenthesized_expr: EXISTS '(' subselect ')'  */
#line 10320 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1741: /* column_default_non_parenthesized_expr: '{' ident expr '}'  */
#line 10326 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 37620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1742: /* column_default_non_parenthesized_expr: MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')'  */
#line 10331 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 37634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1743: /* column_default_non_parenthesized_expr: CAST_SYM '(' expr AS cast_type ')'  */
#line 10341 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1744: /* column_default_non_parenthesized_expr: CASE_SYM when_list_opt_else END  */
#line 10346 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1745: /* column_default_non_parenthesized_expr: CASE_SYM expr when_list_opt_else END  */
#line 10351 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1746: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr ',' cast_type ')'  */
#line 10357 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1747: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr USING charset_name ')'  */
#line 10362 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1748: /* column_default_non_parenthesized_expr: DEFAULT '(' simple_ident ')'  */
#line 10368 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 37696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1749: /* column_default_non_parenthesized_expr: VALUE_SYM '(' simple_ident_nospvar ')'  */
#line 10379 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1750: /* column_default_non_parenthesized_expr: NEXT_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10386 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1751: /* column_default_non_parenthesized_expr: NEXTVAL_SYM '(' table_ident ')'  */
#line 10391 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1752: /* column_default_non_parenthesized_expr: PREVIOUS_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10396 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1753: /* column_default_non_parenthesized_expr: LASTVAL_SYM '(' table_ident ')'  */
#line 10401 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1754: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ')'  */
#line 10406 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 37752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1755: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ')'  */
#line 10411 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1756: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ',' ulonglong_num ')'  */
#line 10416 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1759: /* primary_expr: '(' parenthesized_expr ')'  */
#line 10425 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                     { (yyval.item)= (yyvsp[-1].item); }
#line 37776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1761: /* string_factor_expr: string_factor_expr COLLATE_SYM collation_name  */
#line 10431 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 37785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1763: /* simple_expr: BINARY simple_expr  */
#line 10440 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 37795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1764: /* simple_expr: '+' simple_expr  */
#line 10446 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1765: /* simple_expr: '-' simple_expr  */
#line 10450 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1766: /* simple_expr: '~' simple_expr  */
#line 10456 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1767: /* simple_expr: not2 simple_expr  */
#line 10462 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1769: /* mysql_concatenation_expr: mysql_concatenation_expr MYSQL_CONCAT_SYM simple_expr  */
#line 10472 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1770: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ')'  */
#line 10481 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1771: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ',' expr ')'  */
#line 10488 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_add_time(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1772: /* function_call_keyword: CHAR_SYM '(' expr_list ')'  */
#line 10502 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1773: /* function_call_keyword: CHAR_SYM '(' expr_list USING charset_name ')'  */
#line 10508 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1774: /* function_call_keyword: CURRENT_USER optional_braces  */
#line 10514 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1775: /* function_call_keyword: CURRENT_ROLE optional_braces  */
#line 10523 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1776: /* function_call_keyword: DATE_SYM '(' expr ')'  */
#line 10532 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1777: /* function_call_keyword: DAY_SYM '(' expr ')'  */
#line 10538 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1778: /* function_call_keyword: HOUR_SYM '(' expr ')'  */
#line 10544 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1779: /* function_call_keyword: INSERT '(' expr ',' expr ',' expr ',' expr ')'  */
#line 10550 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1780: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ')'  */
#line 10556 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1781: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ',' expr_list ')'  */
#line 10571 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1782: /* function_call_keyword: LEFT '(' expr ',' expr ')'  */
#line 10582 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1783: /* function_call_keyword: MINUTE_SYM '(' expr ')'  */
#line 10588 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1784: /* function_call_keyword: MONTH_SYM '(' expr ')'  */
#line 10594 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1785: /* function_call_keyword: RIGHT '(' expr ',' expr ')'  */
#line 10600 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1786: /* function_call_keyword: SECOND_SYM '(' expr ')'  */
#line 10606 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1787: /* function_call_keyword: SQL_SYM PERCENT_ORACLE_SYM ROWCOUNT_SYM  */
#line 10612 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1788: /* function_call_keyword: TIME_SYM '(' expr ')'  */
#line 10620 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1789: /* function_call_keyword: function_call_keyword_timestamp  */
#line 10627 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1790: /* function_call_keyword: TRIM '(' trim_operands ')'  */
#line 10631 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 38074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1791: /* function_call_keyword: USER_SYM '(' ')'  */
#line 10636 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 38086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1792: /* function_call_keyword: YEAR_SYM '(' expr ')'  */
#line 10644 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1793: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' expr ')'  */
#line 10665 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1794: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10672 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1795: /* function_call_nonkeyword: CURDATE optional_braces  */
#line 10678 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1796: /* function_call_nonkeyword: CURTIME opt_time_precision  */
#line 10685 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1797: /* function_call_nonkeyword: DATE_ADD_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10692 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1798: /* function_call_nonkeyword: DATE_SUB_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10698 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1799: /* function_call_nonkeyword: DATE_FORMAT_SYM '(' expr ',' expr ')'  */
#line 10704 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1800: /* function_call_nonkeyword: DATE_FORMAT_SYM '(' expr ',' expr ',' expr ')'  */
#line 10710 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1801: /* function_call_nonkeyword: DECODE_MARIADB_SYM '(' expr ',' expr ')'  */
#line 10716 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1802: /* function_call_nonkeyword: DECODE_ORACLE_SYM '(' expr ',' decode_when_list_oracle ')'  */
#line 10722 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1803: /* function_call_nonkeyword: EXTRACT_SYM '(' interval FROM expr ')'  */
#line 10728 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1804: /* function_call_nonkeyword: GET_FORMAT '(' date_time_type ',' expr ')'  */
#line 10734 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1805: /* function_call_nonkeyword: NOW_SYM opt_time_precision  */
#line 10740 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1806: /* function_call_nonkeyword: POSITION_SYM '(' bit_expr IN_SYM expr ')'  */
#line 10747 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1807: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' expr ')'  */
#line 10753 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1808: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10760 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1809: /* function_call_nonkeyword: SUBSTRING '(' expr ',' expr ',' expr ')'  */
#line 10766 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1810: /* function_call_nonkeyword: SUBSTRING '(' expr ',' expr ')'  */
#line 10771 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1811: /* function_call_nonkeyword: SUBSTRING '(' expr FROM expr FOR_SYM expr ')'  */
#line 10776 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1812: /* function_call_nonkeyword: SUBSTRING '(' expr FROM expr ')'  */
#line 10781 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1813: /* function_call_nonkeyword: SYSDATE opt_time_precision  */
#line 10786 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1814: /* function_call_nonkeyword: TIMESTAMP_ADD '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10804 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1815: /* function_call_nonkeyword: TIMESTAMP_DIFF '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10810 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1816: /* function_call_nonkeyword: TRIM_ORACLE '(' trim_operands ')'  */
#line 10816 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 38348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1817: /* function_call_nonkeyword: UTC_DATE_SYM optional_braces  */
#line 10821 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1818: /* function_call_nonkeyword: UTC_TIME_SYM opt_time_precision  */
#line 10828 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1819: /* function_call_nonkeyword: UTC_TIMESTAMP_SYM opt_time_precision  */
#line 10835 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1820: /* function_call_nonkeyword: COLUMN_ADD_SYM '(' expr ',' dyncall_create_list ')'  */
#line 10843 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1821: /* function_call_nonkeyword: COLUMN_DELETE_SYM '(' expr ',' expr_list ')'  */
#line 10850 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1822: /* function_call_nonkeyword: COLUMN_CHECK_SYM '(' expr ')'  */
#line 10857 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1823: /* function_call_nonkeyword: COLUMN_CREATE_SYM '(' dyncall_create_list ')'  */
#line 10864 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1824: /* function_call_nonkeyword: COLUMN_GET_SYM '(' expr ',' expr AS cast_type ')'  */
#line 10871 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1825: /* function_call_conflict: ASCII_SYM '(' expr ')'  */
#line 10888 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1826: /* function_call_conflict: CHARSET '(' expr ')'  */
#line 10894 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1827: /* function_call_conflict: COALESCE '(' expr_list ')'  */
#line 10900 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1828: /* function_call_conflict: COLLATION_SYM '(' expr ')'  */
#line 10906 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1829: /* function_call_conflict: DATABASE '(' ')'  */
#line 10912 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1830: /* function_call_conflict: IF_SYM '(' expr ',' expr ',' expr ')'  */
#line 10919 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1831: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ')'  */
#line 10925 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1832: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ',' expr ')'  */
#line 10931 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1833: /* function_call_conflict: LAST_VALUE '(' expr ')'  */
#line 10940 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1834: /* function_call_conflict: LAST_VALUE '(' expr_list ',' expr ')'  */
#line 10951 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1835: /* function_call_conflict: MICROSECOND_SYM '(' expr ')'  */
#line 10958 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1836: /* function_call_conflict: MOD_SYM '(' expr ',' expr ')'  */
#line 10964 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1837: /* function_call_conflict: OLD_PASSWORD_SYM '(' expr ')'  */
#line 10970 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1838: /* function_call_conflict: PASSWORD_SYM '(' expr ')'  */
#line 10977 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 38584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1839: /* function_call_conflict: QUARTER_SYM '(' expr ')'  */
#line 10985 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1840: /* function_call_conflict: REPEAT_SYM '(' expr ',' expr ')'  */
#line 10991 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1841: /* function_call_conflict: REPLACE '(' expr ',' expr ',' expr ')'  */
#line 10997 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1842: /* function_call_conflict: REVERSE_SYM '(' expr ')'  */
#line 11002 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1843: /* function_call_conflict: ROW_COUNT_SYM '(' ')'  */
#line 11008 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1844: /* function_call_conflict: TRUNCATE_SYM '(' expr ',' expr ')'  */
#line 11016 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1845: /* function_call_conflict: WEEK_SYM '(' expr ')'  */
#line 11022 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1846: /* function_call_conflict: WEEK_SYM '(' expr ',' expr ')'  */
#line 11028 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1847: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr opt_ws_levels ')'  */
#line 11034 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1848: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS CHAR_SYM ws_nweights opt_ws_levels ')'  */
#line 11040 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1849: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS BINARY ws_nweights ')'  */
#line 11048 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1850: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ',' ulong_num ',' ulong_num ',' ulong_num ')'  */
#line 11060 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1851: /* function_call_conflict: geometry_function  */
#line 11067 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 38730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1852: /* geometry_function: CONTAINS_SYM '(' expr ',' expr ')'  */
#line 11082 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 38740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1853: /* geometry_function: GEOMETRYCOLLECTION '(' expr_list ')'  */
#line 11088 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 38751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1854: /* geometry_function: LINESTRING '(' expr_list ')'  */
#line 11095 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 38762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1855: /* geometry_function: MULTILINESTRING '(' expr_list ')'  */
#line 11102 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 38773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1856: /* geometry_function: MULTIPOINT '(' expr_list ')'  */
#line 11109 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 38784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1857: /* geometry_function: MULTIPOLYGON '(' expr_list ')'  */
#line 11116 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 38795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1858: /* geometry_function: POINT_SYM '(' expr ',' expr ')'  */
#line 11123 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 38803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1859: /* geometry_function: POLYGON '(' expr_list ')'  */
#line 11127 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 38814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1860: /* geometry_function: WITHIN '(' expr ',' expr ')'  */
#line 11134 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 38823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1861: /* @172: %empty  */
#line 11151 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 38846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1862: /* function_call_generic: IDENT_sys '(' @172 opt_udf_expr_list ')'  */
#line 11170 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 38899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1863: /* function_call_generic: ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11219 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1864: /* function_call_generic: ident_cli '.' ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11224 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1865: /* fulltext_options: opt_natural_language_mode opt_query_expansion  */
#line 11232 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1866: /* fulltext_options: IN_SYM BOOLEAN_SYM MODE_SYM  */
#line 11234 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.num)= FT_BOOL; }
#line 38929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1867: /* opt_natural_language_mode: %empty  */
#line 11238 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.num)= FT_NL; }
#line 38935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1868: /* opt_natural_language_mode: IN_SYM NATURAL LANGUAGE_SYM MODE_SYM  */
#line 11239 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.num)= FT_NL; }
#line 38941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1869: /* opt_query_expansion: %empty  */
#line 11243 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.num)= 0;         }
#line 38947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1870: /* opt_query_expansion: WITH QUERY_SYM EXPANSION_SYM  */
#line 11244 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 38953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1871: /* opt_udf_expr_list: %empty  */
#line 11248 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.item_list)= NULL; }
#line 38959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1872: /* opt_udf_expr_list: udf_expr_list  */
#line 11249 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1873: /* udf_expr_list: udf_expr  */
#line 11254 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 38976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1874: /* udf_expr_list: udf_expr_list ',' udf_expr  */
#line 11261 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1875: /* udf_expr: remember_name expr remember_end select_alias  */
#line 11269 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 39013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1876: /* sum_expr: AVG_SYM '(' in_sum_expr ')'  */
#line 11296 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1877: /* sum_expr: AVG_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11302 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1878: /* sum_expr: BIT_AND '(' in_sum_expr ')'  */
#line 11308 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1879: /* sum_expr: BIT_OR '(' in_sum_expr ')'  */
#line 11314 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1880: /* sum_expr: BIT_XOR '(' in_sum_expr ')'  */
#line 11320 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1881: /* sum_expr: COUNT_SYM '(' opt_all '*' ')'  */
#line 11326 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1882: /* sum_expr: COUNT_SYM '(' in_sum_expr ')'  */
#line 11335 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1883: /* $@173: %empty  */
#line 11341 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->in_sum_expr++; }
#line 39092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1884: /* $@174: %empty  */
#line 11343 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->in_sum_expr--; }
#line 39098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1885: /* sum_expr: COUNT_SYM '(' DISTINCT $@173 expr_list $@174 ')'  */
#line 11345 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1886: /* sum_expr: MIN_SYM '(' in_sum_expr ')'  */
#line 11351 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1887: /* sum_expr: MIN_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11362 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1888: /* sum_expr: MAX_SYM '(' in_sum_expr ')'  */
#line 11368 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1889: /* sum_expr: MAX_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11374 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1890: /* sum_expr: STD_SYM '(' in_sum_expr ')'  */
#line 11380 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1891: /* sum_expr: VARIANCE_SYM '(' in_sum_expr ')'  */
#line 11386 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1892: /* sum_expr: STDDEV_SAMP_SYM '(' in_sum_expr ')'  */
#line 11392 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1893: /* sum_expr: VAR_SAMP_SYM '(' in_sum_expr ')'  */
#line 11398 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1894: /* sum_expr: SUM_SYM '(' in_sum_expr ')'  */
#line 11404 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1895: /* sum_expr: SUM_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11410 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1896: /* $@175: %empty  */
#line 11416 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->in_sum_expr++; }
#line 39214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1897: /* sum_expr: GROUP_CONCAT_SYM '(' opt_distinct $@175 expr_list opt_gorder_clause opt_gconcat_separator opt_glimit_clause ')'  */
#line 11420 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 39236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1898: /* window_func_expr: window_func OVER_SYM window_name  */
#line 11441 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1899: /* window_func_expr: window_func OVER_SYM window_spec  */
#line 11450 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1902: /* simple_window_func: ROW_NUMBER_SYM '(' ')'  */
#line 11474 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1903: /* simple_window_func: RANK_SYM '(' ')'  */
#line 11481 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1904: /* simple_window_func: DENSE_RANK_SYM '(' ')'  */
#line 11488 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1905: /* simple_window_func: PERCENT_RANK_SYM '(' ')'  */
#line 11495 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1906: /* simple_window_func: CUME_DIST_SYM '(' ')'  */
#line 11502 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1907: /* simple_window_func: NTILE_SYM '(' expr ')'  */
#line 11509 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1908: /* simple_window_func: FIRST_VALUE_SYM '(' expr ')'  */
#line 11516 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1909: /* simple_window_func: LAST_VALUE '(' expr ')'  */
#line 11523 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1910: /* simple_window_func: NTH_VALUE_SYM '(' expr ',' expr ')'  */
#line 11530 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1911: /* simple_window_func: LEAD_SYM '(' expr ')'  */
#line 11537 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1912: /* simple_window_func: LEAD_SYM '(' expr ',' expr ')'  */
#line 11548 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1913: /* simple_window_func: LAG_SYM '(' expr ')'  */
#line 11555 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1914: /* simple_window_func: LAG_SYM '(' expr ',' expr ')'  */
#line 11566 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1915: /* inverse_distribution_function: percentile_function OVER_SYM '(' opt_window_partition_clause ')'  */
#line 11578 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1916: /* $@176: %empty  */
#line 11596 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           { Select->prepare_add_window_spec(thd); }
#line 39430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1917: /* percentile_function: inverse_distribution_function_def WITHIN GROUP_SYM '(' $@176 order_by_single_element_list ')'  */
#line 11598 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 39438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1918: /* percentile_function: MEDIAN_SYM '(' expr ')'  */
#line 11602 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1919: /* inverse_distribution_function_def: PERCENTILE_CONT_SYM '(' expr ')'  */
#line 11619 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1920: /* inverse_distribution_function_def: PERCENTILE_DISC_SYM '(' expr ')'  */
#line 11625 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1921: /* order_by_single_element_list: ORDER_SYM BY order_ident order_dir  */
#line 11634 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 39485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1922: /* window_name: ident  */
#line 11643 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1923: /* $@177: %empty  */
#line 11652 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 39504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1924: /* variable: '@' $@177 variable_aux  */
#line 11657 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 39512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1925: /* variable_aux: ident_or_text SET_VAR expr  */
#line 11664 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 39526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1926: /* variable_aux: ident_or_text  */
#line 11674 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 39538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1927: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name  */
#line 11682 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1928: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name '.' ident  */
#line 11687 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1929: /* opt_distinct: %empty  */
#line 11694 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num) = 0; }
#line 39562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1930: /* opt_distinct: DISTINCT  */
#line 11695 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num) = 1; }
#line 39568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1931: /* opt_gconcat_separator: %empty  */
#line 11700 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 39578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1932: /* opt_gconcat_separator: SEPARATOR_SYM text_string  */
#line 11705 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 39584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1935: /* gorder_list: gorder_list ',' order_ident order_dir  */
#line 11715 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1936: /* gorder_list: order_ident order_dir  */
#line 11720 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1937: /* opt_glimit_clause: %empty  */
#line 11727 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num) = 0; }
#line 39608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1938: /* opt_glimit_clause: glimit_clause  */
#line 11728 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.num) = 1; }
#line 39614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1939: /* glimit_clause_init: LIMIT  */
#line 11732 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               {}
#line 39620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1940: /* glimit_clause: glimit_clause_init glimit_options  */
#line 11737 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1941: /* glimit_options: limit_option  */
#line 11744 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 39639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1942: /* glimit_options: limit_option ',' limit_option  */
#line 11751 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 39650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1943: /* glimit_options: limit_option OFFSET_SYM limit_option  */
#line 11758 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 39661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1944: /* $@178: %empty  */
#line 11770 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1945: /* in_sum_expr: opt_all $@178 expr  */
#line 11779 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 39683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1946: /* cast_type: BINARY opt_field_length  */
#line 11787 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 39689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1947: /* $@179: %empty  */
#line 11789 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 39695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1948: /* cast_type: CHAR_SYM opt_field_length $@179 opt_binary  */
#line 11791 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1949: /* $@180: %empty  */
#line 11793 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 39707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1950: /* cast_type: VARCHAR field_length $@180 opt_binary  */
#line 11795 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1951: /* $@181: %empty  */
#line 11797 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->charset= thd->variables.collation_connection; }
#line 39719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1952: /* cast_type: VARCHAR2_ORACLE_SYM field_length $@181 opt_binary  */
#line 11799 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1953: /* cast_type: NCHAR_SYM opt_field_length  */
#line 11801 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 39734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1954: /* cast_type: cast_type_numeric  */
#line 11805 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1955: /* cast_type: cast_type_temporal  */
#line 11806 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1956: /* cast_type_numeric: INT_SYM  */
#line 11810 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1957: /* cast_type_numeric: SIGNED_SYM  */
#line 11811 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1958: /* cast_type_numeric: SIGNED_SYM INT_SYM  */
#line 11812 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1959: /* cast_type_numeric: UNSIGNED  */
#line 11813 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1960: /* cast_type_numeric: UNSIGNED INT_SYM  */
#line 11814 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1961: /* cast_type_numeric: DECIMAL_SYM float_options  */
#line 11815 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 39782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1962: /* cast_type_numeric: FLOAT_SYM  */
#line 11816 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 39788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1963: /* cast_type_numeric: DOUBLE_SYM opt_precision  */
#line 11817 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 39794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1964: /* cast_type_temporal: DATE_SYM  */
#line 11821 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 39800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1965: /* cast_type_temporal: TIME_SYM opt_field_length  */
#line 11822 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 39806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1966: /* cast_type_temporal: DATETIME opt_field_length  */
#line 11823 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 39812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1967: /* opt_expr_list: %empty  */
#line 11827 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.item_list)= NULL; }
#line 39818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1968: /* opt_expr_list: expr_list  */
#line 11828 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 39824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1969: /* expr_list: expr  */
#line 11833 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1970: /* expr_list: expr_list ',' expr  */
#line 11840 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1971: /* ident_list_arg: ident_list  */
#line 11847 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1972: /* ident_list_arg: '(' ident_list ')'  */
#line 11848 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 39856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1973: /* ident_list: simple_ident  */
#line 11853 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1974: /* ident_list: ident_list ',' simple_ident  */
#line 11860 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1975: /* when_list: WHEN_SYM expr THEN_SYM expr  */
#line 11868 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1976: /* when_list: when_list WHEN_SYM expr THEN_SYM expr  */
#line 11877 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1978: /* when_list_opt_else: when_list ELSE expr  */
#line 11888 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1979: /* decode_when_list_oracle: expr ',' expr  */
#line 11897 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 39923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1980: /* decode_when_list_oracle: decode_when_list_oracle ',' expr  */
#line 11906 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1981: /* table_ref: table_factor  */
#line 11917 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1982: /* table_ref: join_table  */
#line 11919 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1983: /* join_table_list: derived_table_list  */
#line 11930 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 39958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1984: /* esc_table_ref: table_ref  */
#line 11941 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1985: /* esc_table_ref: '{' ident table_ref '}'  */
#line 11942 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 39970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1986: /* derived_table_list: esc_table_ref  */
#line 11948 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1987: /* derived_table_list: derived_table_list ',' esc_table_ref  */
#line 11950 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 39984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1988: /* join_table: table_ref normal_join table_ref  */
#line 11968 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));

            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 39995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1989: /* $@182: %empty  */
#line 11976 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1990: /* join_table: table_ref normal_join table_ref ON $@182 expr  */
#line 11984 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
	    (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 40018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1991: /* $@183: %empty  */
#line 11992 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 40026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1992: /* join_table: table_ref normal_join table_ref USING $@183 '(' using_list ')'  */
#line 11996 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 40036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1993: /* join_table: table_ref NATURAL inner_join table_factor  */
#line 12002 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 40046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1994: /* $@184: %empty  */
#line 12011 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1995: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_ref ON $@184 expr  */
#line 12019 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 40070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1996: /* $@185: %empty  */
#line 12027 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 40078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1997: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_factor $@185 USING '(' using_list ')'  */
#line 12031 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 40088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1998: /* join_table: table_ref NATURAL LEFT opt_outer JOIN_SYM table_factor  */
#line 12037 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 40099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 1999: /* $@186: %empty  */
#line 12047 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2000: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_ref ON $@186 expr  */
#line 12055 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 40124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2001: /* $@187: %empty  */
#line 12064 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 40132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2002: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_factor $@187 USING '(' using_list ')'  */
#line 12068 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 40143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2003: /* join_table: table_ref NATURAL RIGHT opt_outer JOIN_SYM table_factor  */
#line 12075 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 40155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2004: /* inner_join: JOIN_SYM  */
#line 12086 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num) = 0; }
#line 40161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2005: /* inner_join: INNER_SYM JOIN_SYM  */
#line 12087 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num) = 0; }
#line 40167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2006: /* inner_join: STRAIGHT_JOIN  */
#line 12088 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num) = 1; }
#line 40173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2007: /* normal_join: inner_join  */
#line 12092 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num) = (yyvsp[0].num); }
#line 40179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2008: /* normal_join: CROSS JOIN_SYM  */
#line 12093 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num) = 0; }
#line 40185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2009: /* opt_use_partition: %empty  */
#line 12101 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.string_list)= 0;}
#line 40191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2011: /* use_partition: PARTITION_SYM '(' using_list ')' have_partitioning  */
#line 12107 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 40199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2014: /* $@188: %empty  */
#line 12126 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Select);
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 40209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2015: /* table_primary_ident: $@188 table_ident opt_use_partition opt_for_system_time_clause opt_table_alias opt_key_definition  */
#line 12132 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                         Select->get_table_join_options(),
                                                         YYPS->m_lock_type,
                                                         YYPS->m_mdl_type,
                                                         Select->
                                                         pop_index_hints(),
                                                         (yyvsp[-3].string_list)))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 40227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2016: /* table_primary_derived: '(' get_select_lex select_derived_union ')' opt_for_system_time_clause opt_table_alias  */
#line 12167 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
                !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-3].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              lex->check_automatic_up(UNSPECIFIED_TYPE);
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new (thd->mem_root) Table_ident(unit);
              if (unlikely(ti == NULL))
                MYSQL_YYABORT;
              if (unlikely(!((yyval.table_list)= sel->add_table_to_list(thd,
                                                        ti, (yyvsp[0].lex_str_ptr), 0,
                                                        TL_READ,
                                                        MDL_SHARED_READ))))
                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (unlikely((yyvsp[0].lex_str_ptr) != NULL))
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-3].table_list);
            }
            /*
              Fields in derived table can be used in upper select in
              case of merge. We do not add HAVING fields because we do
              not merge such derived. We do not add union because
              also do not merge them
            */
            if ((yyval.table_list) && (yyval.table_list)->derived &&
                !(yyval.table_list)->derived->first_select()->next_select())
              (yyval.table_list)->select_lex->add_where_field((yyval.table_list)->derived->first_select());
            if ((yyvsp[-1].num))
            {
              MYSQL_YYABORT_UNLESS(!(yyvsp[-3].table_list));
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
            }
          }
#line 40296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2017: /* table_primary_derived: '(' get_select_lex subselect_start with_clause query_expression_body subselect_end ')' opt_for_system_time_clause opt_table_alias  */
#line 12235 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sel= (yyvsp[-7].select_lex);
            SELECT_LEX_UNIT *unit= (yyvsp[-4].select_lex)->master_unit();
            Table_ident *ti= new (thd->mem_root) Table_ident(unit);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            (yyvsp[-4].select_lex)->set_with_clause((yyvsp[-5].with_clause));
            lex->current_select= sel;
            if (unlikely(!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                                      ti, (yyvsp[0].lex_str_ptr), 0,
                                                      TL_READ,
                                                      MDL_SHARED_READ))))
              MYSQL_YYABORT;
            sel->add_joined_table((yyval.table_list));
            if ((yyvsp[-1].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 40319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2019: /* select_derived_union: select_derived union_order_or_limit  */
#line 12277 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2020: /* $@189: %empty  */
#line 12285 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2025: /* union_list_derived_part2: query_term_union_not_ready  */
#line 12299 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                    { Lex->pop_context(); }
#line 40349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2026: /* union_list_derived_part2: query_term_union_ready  */
#line 12300 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                    { Lex->pop_context(); }
#line 40355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2027: /* $@190: %empty  */
#line 12301 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                    { Lex->pop_context(); }
#line 40361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2030: /* select_init2_derived: select_part2_derived  */
#line 12312 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->set_braces(0);
          }
#line 40369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2031: /* $@191: %empty  */
#line 12319 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 40381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2032: /* select_part2_derived: $@191 opt_query_expression_options select_item_list  */
#line 12327 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 40389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2033: /* select_derived: get_select_lex_derived derived_table_list  */
#line 12335 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            /* for normal joins, $2 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (unlikely(!((yyval.table_list)= (yyvsp[-1].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list)))
              MYSQL_YYABORT;
            if (unlikely(!(yyvsp[0].table_list) && (yyval.table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2034: /* derived_simple_table: derived_query_specification  */
#line 12351 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2035: /* derived_simple_table: derived_table_value_constructor  */
#line 12352 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2036: /* derived_query_specification: SELECT_SYM select_derived_init select_derived2  */
#line 12361 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if ((yyvsp[-1].num))
              Select->set_braces(1);
            (yyval.table_list)= NULL;
          }
#line 40429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2037: /* $@192: %empty  */
#line 12370 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->tvc_start_derived())
              MYSQL_YYABORT;
          }
#line 40438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2038: /* derived_table_value_constructor: VALUES $@192 values_list  */
#line 12375 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->tvc_finalize_derived())
              MYSQL_YYABORT;
            (yyval.table_list)= NULL;
          }
#line 40448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2039: /* $@193: %empty  */
#line 12384 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                unlikely(mysql_new_select(lex, 1, NULL)))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 40469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2040: /* $@194: %empty  */
#line 12401 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 40477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2042: /* get_select_lex: %empty  */
#line 12408 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.select_lex)= Select; }
#line 40483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2043: /* get_select_lex_derived: get_select_lex  */
#line 12413 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely((yyvsp[0].select_lex)->init_nested_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 40493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2044: /* select_derived_init: %empty  */
#line 12421 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            TABLE_LIST *embedding= lex->current_select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 40506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2045: /* opt_outer: %empty  */
#line 12432 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 40512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2046: /* opt_outer: OUTER  */
#line 12433 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                {}
#line 40518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2047: /* index_hint_clause: %empty  */
#line 12438 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 40526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2048: /* index_hint_clause: FOR_SYM JOIN_SYM  */
#line 12441 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 40532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2049: /* index_hint_clause: FOR_SYM ORDER_SYM BY  */
#line 12442 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 40538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2050: /* index_hint_clause: FOR_SYM GROUP_SYM BY  */
#line 12443 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 40544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2051: /* index_hint_type: FORCE_SYM  */
#line 12447 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 40550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2052: /* index_hint_type: IGNORE_SYM  */
#line 12448 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 40556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2053: /* $@195: %empty  */
#line 12453 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 40564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2055: /* $@196: %empty  */
#line 12458 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 40572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2060: /* $@197: %empty  */
#line 12471 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->alloc_index_hints(thd); }
#line 40578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2062: /* $@198: %empty  */
#line 12475 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {  Select->clear_index_hints(); }
#line 40584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2064: /* opt_key_usage_list: %empty  */
#line 12480 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Select->add_index_hint(thd, NULL, 0); }
#line 40590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2065: /* opt_key_usage_list: key_usage_list  */
#line 12481 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         {}
#line 40596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2066: /* key_usage_element: ident  */
#line 12486 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 40602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2067: /* key_usage_element: PRIMARY_SYM  */
#line 12488 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 40608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2070: /* using_list: ident  */
#line 12498 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 40623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2071: /* using_list: using_list ',' ident  */
#line 12509 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 40638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2072: /* interval: interval_time_stamp  */
#line 12522 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 {}
#line 40644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2073: /* interval: DAY_HOUR_SYM  */
#line 12523 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 40650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2074: /* interval: DAY_MICROSECOND_SYM  */
#line 12524 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 40656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2075: /* interval: DAY_MINUTE_SYM  */
#line 12525 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 40662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2076: /* interval: DAY_SECOND_SYM  */
#line 12526 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 40668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2077: /* interval: HOUR_MICROSECOND_SYM  */
#line 12527 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 40674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2078: /* interval: HOUR_MINUTE_SYM  */
#line 12528 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 40680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2079: /* interval: HOUR_SECOND_SYM  */
#line 12529 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 40686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2080: /* interval: MINUTE_MICROSECOND_SYM  */
#line 12530 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 40692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2081: /* interval: MINUTE_SECOND_SYM  */
#line 12531 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 40698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2082: /* interval: SECOND_MICROSECOND_SYM  */
#line 12532 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 40704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2083: /* interval: YEAR_MONTH_SYM  */
#line 12533 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 40710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2084: /* interval_time_stamp: DAY_SYM  */
#line 12537 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 40716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2085: /* interval_time_stamp: WEEK_SYM  */
#line 12538 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 40722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2086: /* interval_time_stamp: HOUR_SYM  */
#line 12539 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 40728 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2087: /* interval_time_stamp: MINUTE_SYM  */
#line 12540 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 40734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2088: /* interval_time_stamp: MONTH_SYM  */
#line 12541 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 40740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2089: /* interval_time_stamp: QUARTER_SYM  */
#line 12542 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 40746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2090: /* interval_time_stamp: SECOND_SYM  */
#line 12543 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 40752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2091: /* interval_time_stamp: MICROSECOND_SYM  */
#line 12544 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 40758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2092: /* interval_time_stamp: YEAR_SYM  */
#line 12545 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 40764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2093: /* date_time_type: DATE_SYM  */
#line 12549 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 40770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2094: /* date_time_type: TIME_SYM  */
#line 12550 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 40776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2095: /* date_time_type: DATETIME  */
#line 12551 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2096: /* date_time_type: TIMESTAMP  */
#line 12552 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2100: /* opt_table_alias: %empty  */
#line 12562 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lex_str_ptr)=0; }
#line 40794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2101: /* opt_table_alias: table_alias ident_table_alias  */
#line 12564 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 40804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2104: /* opt_where_clause: %empty  */
#line 12577 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Select->where= 0; }
#line 40810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2105: /* $@199: %empty  */
#line 12579 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= IN_WHERE;
          }
#line 40818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2106: /* opt_where_clause: WHERE $@199 expr  */
#line 12583 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2108: /* $@200: %empty  */
#line 12595 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= IN_HAVING;
          }
#line 40838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2109: /* opt_having_clause: HAVING $@200 expr  */
#line 12599 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2112: /* group_list: group_list ',' order_ident order_dir  */
#line 12619 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2113: /* group_list: order_ident order_dir  */
#line 12624 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2114: /* olap_opt: %empty  */
#line 12631 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 40874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2115: /* olap_opt: WITH_CUBE_SYM  */
#line 12633 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 40895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2116: /* olap_opt: WITH_ROLLUP_SYM  */
#line 12650 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 40914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2117: /* opt_window_clause: %empty  */
#line 12672 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 40920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2118: /* opt_window_clause: WINDOW_SYM window_def_list  */
#line 12675 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 40926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2121: /* window_def: window_name AS window_spec  */
#line 12685 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 40939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2122: /* $@201: %empty  */
#line 12697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Select->prepare_add_window_spec(thd); }
#line 40945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2124: /* opt_window_ref: %empty  */
#line 12704 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 40951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2125: /* opt_window_ref: ident  */
#line 12706 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 40961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2126: /* opt_window_partition_clause: %empty  */
#line 12714 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { }
#line 40967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2128: /* opt_window_order_clause: %empty  */
#line 12719 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { }
#line 40973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2130: /* opt_window_frame_clause: %empty  */
#line 12724 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 40979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2131: /* opt_window_frame_clause: window_frame_units window_frame_extent opt_window_frame_exclusion  */
#line 12726 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 40994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2132: /* window_frame_units: ROWS_SYM  */
#line 12739 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 41000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2133: /* window_frame_units: RANGE_SYM  */
#line 12740 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 41006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2134: /* window_frame_extent: window_frame_start  */
#line 12745 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 41020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2135: /* window_frame_extent: BETWEEN_SYM window_frame_bound AND_SYM window_frame_bound  */
#line 12755 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 41030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2136: /* window_frame_start: UNBOUNDED_SYM PRECEDING_SYM  */
#line 12764 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2137: /* window_frame_start: CURRENT_SYM ROW_SYM  */
#line 12771 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2138: /* window_frame_start: literal PRECEDING_SYM  */
#line 12778 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2139: /* window_frame_bound: window_frame_start  */
#line 12787 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 41069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2140: /* window_frame_bound: UNBOUNDED_SYM FOLLOWING_SYM  */
#line 12789 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2141: /* window_frame_bound: literal FOLLOWING_SYM  */
#line 12796 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2142: /* opt_window_frame_exclusion: %empty  */
#line 12805 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2143: /* opt_window_frame_exclusion: EXCLUDE_SYM CURRENT_SYM ROW_SYM  */
#line 12807 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 41103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2144: /* opt_window_frame_exclusion: EXCLUDE_SYM GROUP_SYM  */
#line 12809 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 41109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2145: /* opt_window_frame_exclusion: EXCLUDE_SYM TIES_SYM  */
#line 12811 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 41115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2146: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_MARIADB_SYM  */
#line 12813 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2147: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_ORACLE_SYM  */
#line 12815 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2151: /* alter_order_item: simple_ident_nospvar order_dir  */
#line 12833 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 41137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2154: /* $@202: %empty  */
#line 12851 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (unlikely(sel->linkage != GLOBAL_OPTIONS_TYPE &&
                         sel->olap != UNSPECIFIED_OLAP_TYPE &&
                         (sel->linkage != UNION_TYPE || sel->braces)))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE &&
                !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been
                created yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (unlikely(!first_sl->next_select() && first_sl->tvc &&
                           unit->add_fake_select_lex(thd)))
                 MYSQL_YYABORT;
              else if (unlikely(!unit->is_unit_op() &&
                                (first_sl->order_list.elements ||
                                 first_sl->select_limit) &&
                                unit->add_fake_select_lex(thd)))
                MYSQL_YYABORT;
            }
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
               /*
                 At this point we don't know yet whether this is the last
                 select in union or not, but we move ORDER BY to
                 fake_select_lex anyway. If there would be one more select
                 in union mysql_new_select will correctly throw error.
               */
               DBUG_ASSERT(sel->master_unit()->fake_select_lex);
               lex->current_select= sel->master_unit()->fake_select_lex;
               lex->push_context(&sel->master_unit()->fake_select_lex->context, thd->mem_root);
             }
          }
#line 41188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2155: /* order_clause: ORDER_SYM BY $@202 order_list  */
#line 12898 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->current_select ==
                Lex->current_select->master_unit()->fake_select_lex)
            {
              Lex->pop_context();
            }
          }
#line 41200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2156: /* order_list: order_list ',' order_ident order_dir  */
#line 12909 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 41209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2157: /* order_list: order_ident order_dir  */
#line 12914 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 41218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2158: /* order_dir: %empty  */
#line 12921 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num) =  1; }
#line 41224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2159: /* order_dir: ASC  */
#line 12922 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               { (yyval.num) =1; }
#line 41230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2160: /* order_dir: DESC  */
#line 12923 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               { (yyval.num) =0; }
#line 41236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2161: /* opt_limit_clause: %empty  */
#line 12927 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 41242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2162: /* opt_limit_clause: limit_clause  */
#line 12928 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 41248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2163: /* limit_clause_init: LIMIT  */
#line 12933 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_unit_op() && !sel->braces &&
                sel->master_unit()->fake_select_lex)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->current_select= sel->master_unit()->fake_select_lex;
              DBUG_ASSERT(Select);
            }
          }
#line 41263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2164: /* limit_clause: limit_clause_init limit_options  */
#line 12947 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            if (!sel->select_limit->basic_const_item() ||
                sel->select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2165: /* limit_clause: limit_clause_init limit_options ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12955 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2166: /* limit_clause: limit_clause_init ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12959 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2167: /* limit_options: limit_option  */
#line 12966 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 41301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2168: /* limit_options: limit_option ',' limit_option  */
#line 12973 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 41312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2169: /* limit_options: limit_option OFFSET_SYM limit_option  */
#line 12980 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 41323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2170: /* limit_option: ident_cli  */
#line 12990 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 41332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2171: /* limit_option: ident_cli '.' ident_cli  */
#line 12995 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 41341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2172: /* limit_option: param_marker  */
#line 13000 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 41349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2173: /* limit_option: ULONGLONG_NUM  */
#line 13004 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2174: /* limit_option: LONG_NUM  */
#line 13010 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2175: /* limit_option: NUM  */
#line 13016 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2176: /* limit_rows_option: limit_option  */
#line 13025 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 41388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2177: /* delete_limit_clause: %empty  */
#line 13033 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 41397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2178: /* delete_limit_clause: LIMIT limit_option  */
#line 13038 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 41408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2179: /* delete_limit_clause: LIMIT ROWS_SYM EXAMINED_SYM  */
#line 13044 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                     { thd->parse_error(); MYSQL_YYABORT; }
#line 41414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2180: /* delete_limit_clause: LIMIT limit_option ROWS_SYM EXAMINED_SYM  */
#line 13045 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                  { thd->parse_error(); MYSQL_YYABORT; }
#line 41420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2183: /* int_num: opt_plus NUM  */
#line 13054 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2184: /* int_num: '-' NUM  */
#line 13055 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2185: /* ulong_num: opt_plus NUM  */
#line 13059 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2186: /* ulong_num: HEX_NUM  */
#line 13060 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2187: /* ulong_num: opt_plus LONG_NUM  */
#line 13061 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2188: /* ulong_num: opt_plus ULONGLONG_NUM  */
#line 13062 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2189: /* ulong_num: opt_plus DECIMAL_NUM  */
#line 13063 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2190: /* ulong_num: opt_plus FLOAT_NUM  */
#line 13064 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2191: /* real_ulong_num: NUM  */
#line 13068 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2192: /* real_ulong_num: HEX_NUM  */
#line 13069 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2193: /* real_ulong_num: LONG_NUM  */
#line 13070 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2194: /* real_ulong_num: ULONGLONG_NUM  */
#line 13071 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2195: /* real_ulong_num: dec_num_error  */
#line 13072 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { MYSQL_YYABORT; }
#line 41498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2196: /* longlong_num: opt_plus NUM  */
#line 13076 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2197: /* longlong_num: LONG_NUM  */
#line 13077 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2198: /* longlong_num: '-' NUM  */
#line 13078 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2199: /* longlong_num: '-' LONG_NUM  */
#line 13079 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2200: /* ulonglong_num: opt_plus NUM  */
#line 13083 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2201: /* ulonglong_num: opt_plus ULONGLONG_NUM  */
#line 13084 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2202: /* ulonglong_num: opt_plus LONG_NUM  */
#line 13085 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2203: /* ulonglong_num: opt_plus DECIMAL_NUM  */
#line 13086 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2204: /* ulonglong_num: opt_plus FLOAT_NUM  */
#line 13087 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2205: /* real_ulonglong_num: NUM  */
#line 13091 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2206: /* real_ulonglong_num: ULONGLONG_NUM  */
#line 13092 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2207: /* real_ulonglong_num: HEX_NUM  */
#line 13093 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2208: /* real_ulonglong_num: LONG_NUM  */
#line 13094 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2209: /* real_ulonglong_num: dec_num_error  */
#line 13095 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { MYSQL_YYABORT; }
#line 41582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2210: /* dec_num_error: dec_num  */
#line 13100 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 41588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2213: /* choice: ulong_num  */
#line 13109 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 41594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2214: /* choice: DEFAULT  */
#line 13110 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 41600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2215: /* bool: ulong_num  */
#line 13114 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 41606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2216: /* bool: TRUE_SYM  */
#line 13115 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.ulong_num)= 1; }
#line 41612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2217: /* bool: FALSE_SYM  */
#line 13116 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.ulong_num)= 0; }
#line 41618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2218: /* $@203: %empty  */
#line 13121 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;

            DBUG_ASSERT(&lex->select_lex == lex->current_select);

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so set expr_allows_subselect as false to disallow any subqueries
              further. Reset expr_allows_subselect back to true once the
              parameters are reduced.
            */
            Lex->expr_allows_subselect= false;
          }
#line 41648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2219: /* procedure_clause: PROCEDURE_SYM ident $@203 '(' procedure_list ')'  */
#line 13147 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* Subqueries are allowed from now.*/
            Lex->expr_allows_subselect= true;
          }
#line 41657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2220: /* procedure_list: %empty  */
#line 13154 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 41663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2221: /* procedure_list: procedure_list2  */
#line 13155 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 41669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2224: /* procedure_item: remember_name expr remember_end  */
#line 13165 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2225: /* $@204: %empty  */
#line 13174 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 41692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2226: /* select_var_list_init: $@204 select_var_list  */
#line 13182 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 41698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2228: /* select_var_list: select_var_ident  */
#line 13187 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           {}
#line 41704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2229: /* select_var_ident: select_outvar  */
#line 13191 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 41725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2230: /* select_outvar: '@' ident_or_text  */
#line 13211 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 41733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2231: /* select_outvar: ident_or_text  */
#line 13215 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2232: /* select_outvar: ident '.' ident  */
#line 13220 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2234: /* $@205: %empty  */
#line 13232 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 41766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2235: /* $@206: %empty  */
#line 13243 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 41772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2237: /* into_destination: DUMPFILE TEXT_STRING_filesystem  */
#line 13246 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 41791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2238: /* into_destination: select_var_list_init  */
#line 13261 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 41799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2239: /* $@207: %empty  */
#line 13272 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 41809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2240: /* do: DO_SYM $@207 expr_list  */
#line 13278 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->insert_list= (yyvsp[0].item_list);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 41819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2241: /* $@208: %empty  */
#line 13291 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2242: /* drop: DROP opt_temporary table_or_tables opt_if_exists $@208 table_list opt_lock_wait_timeout opt_restrict  */
#line 13298 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 41836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2243: /* drop: DROP INDEX_SYM opt_if_exists_table_element ident ON table_ident opt_lock_wait_timeout  */
#line 13300 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
          }
#line 41857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2244: /* drop: DROP DATABASE opt_if_exists ident  */
#line 13317 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 41867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2245: /* drop: DROP PACKAGE_ORACLE_SYM opt_if_exists sp_name  */
#line 13323 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE"));
            lex->spname= (yyvsp[0].spname);
          }
#line 41879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2246: /* drop: DROP PACKAGE_ORACLE_SYM BODY_ORACLE_SYM opt_if_exists sp_name  */
#line 13331 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE_BODY, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE BODY"));
            lex->spname= (yyvsp[0].spname);
          }
#line 41891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2247: /* drop: DROP FUNCTION_SYM opt_if_exists ident '.' ident  */
#line 13339 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2248: /* drop: DROP FUNCTION_SYM opt_if_exists ident  */
#line 13353 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2249: /* drop: DROP PROCEDURE_SYM opt_if_exists sp_name  */
#line 13368 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2250: /* drop: DROP USER_SYM opt_if_exists clear_privileges user_list  */
#line 13376 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 41948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2251: /* drop: DROP ROLE_SYM opt_if_exists clear_privileges role_list  */
#line 13380 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 41956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2252: /* $@209: %empty  */
#line 13384 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2253: /* drop: DROP VIEW_SYM opt_if_exists $@209 table_list opt_restrict  */
#line 13391 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 41973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2254: /* drop: DROP EVENT_SYM opt_if_exists sp_name  */
#line 13393 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 41982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2255: /* drop: DROP TRIGGER_SYM opt_if_exists sp_name  */
#line 13398 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2256: /* drop: DROP TABLESPACE tablespace_name opt_ts_engine opt_ts_wait  */
#line 13404 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 42001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2257: /* drop: DROP LOGFILE_SYM GROUP_SYM logfile_group_name opt_ts_engine opt_ts_wait  */
#line 13409 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 42010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2258: /* drop: DROP SERVER_SYM opt_if_exists ident_or_text  */
#line 13414 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 42019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2259: /* $@210: %empty  */
#line 13420 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2260: /* drop: DROP opt_temporary SEQUENCE_SYM opt_if_exists $@210 table_list  */
#line 13428 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 42037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2263: /* table_name: table_ident  */
#line 13438 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2264: /* table_name_with_opt_use_partition: table_ident opt_use_partition  */
#line 13449 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 42063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2267: /* table_alias_ref: table_ident_opt_wild  */
#line 13467 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2268: /* opt_if_exists_table_element: %empty  */
#line 13480 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 42086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2269: /* opt_if_exists_table_element: IF_SYM EXISTS  */
#line 13485 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 42095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2270: /* opt_if_exists: %empty  */
#line 13493 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 42103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2271: /* opt_if_exists: IF_SYM EXISTS  */
#line 13497 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 42111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2272: /* opt_temporary: %empty  */
#line 13503 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)= 0; }
#line 42117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2273: /* opt_temporary: TEMPORARY  */
#line 13504 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 42123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2274: /* $@211: %empty  */
#line 13512 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 42134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2275: /* $@212: %empty  */
#line 13520 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 42143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2276: /* insert: INSERT $@211 insert_lock_option opt_ignore insert2 $@212 insert_field_spec opt_insert_update  */
#line 13525 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 42153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2277: /* $@213: %empty  */
#line 13534 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 42164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2278: /* $@214: %empty  */
#line 13541 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 42173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2279: /* replace: REPLACE $@213 replace_lock_option insert2 $@214 insert_field_spec  */
#line 13546 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 42183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2280: /* insert_lock_option: %empty  */
#line 13555 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 42196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2281: /* insert_lock_option: LOW_PRIORITY  */
#line 13563 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2282: /* insert_lock_option: DELAYED_SYM  */
#line 13565 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 42213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2283: /* insert_lock_option: HIGH_PRIORITY  */
#line 13571 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 42219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2284: /* replace_lock_option: opt_low_priority  */
#line 13575 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 42225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2285: /* replace_lock_option: DELAYED_SYM  */
#line 13577 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 42235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2286: /* insert2: INTO insert_table  */
#line 13585 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            {}
#line 42241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2287: /* insert2: insert_table  */
#line 13586 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 42247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2288: /* insert_table: table_name_with_opt_use_partition  */
#line 13591 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 42258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2289: /* insert_field_spec: insert_values  */
#line 13600 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        {}
#line 42264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2290: /* insert_field_spec: '(' ')' insert_values  */
#line 13601 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                {}
#line 42270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2291: /* insert_field_spec: '(' fields ')' insert_values  */
#line 13602 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                       {}
#line 42276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2292: /* $@215: %empty  */
#line 13604 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2294: /* fields: fields ',' insert_ident  */
#line 13616 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2295: /* fields: insert_ident  */
#line 13617 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2296: /* insert_values: VALUES values_list  */
#line 13621 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             {}
#line 42306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2297: /* insert_values: VALUE_SYM values_list  */
#line 13622 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                {}
#line 42312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2298: /* insert_values: create_select_query_expression  */
#line 13623 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         {}
#line 42318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2303: /* ident_eq_value: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13638 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2304: /* equal: '='  */
#line 13647 "/home/buildbot/git/sql/sql_yacc_ora.yy"
              {}
#line 42335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2305: /* equal: SET_VAR  */
#line 13648 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 42341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2306: /* opt_equal: %empty  */
#line 13652 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 42347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2307: /* opt_equal: equal  */
#line 13653 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                {}
#line 42353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2308: /* opt_with: opt_equal  */
#line 13657 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 42359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2309: /* opt_with: WITH  */
#line 13658 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               {}
#line 42365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2310: /* opt_by: opt_equal  */
#line 13662 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 42371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2311: /* opt_by: BY  */
#line 13663 "/home/buildbot/git/sql/sql_yacc_ora.yy"
             {}
#line 42377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2312: /* $@216: %empty  */
#line 13668 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2313: /* no_braces: '(' $@216 opt_values ')'  */
#line 13673 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2314: /* $@217: %empty  */
#line 13683 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2315: /* no_braces_with_names: '(' $@217 opt_values_with_names ')'  */
#line 13688 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2316: /* opt_values: %empty  */
#line 13697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 42423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2318: /* opt_values_with_names: %empty  */
#line 13702 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 42429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2320: /* values: values ',' expr_or_ignore_or_default  */
#line 13708 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2321: /* values: expr_or_ignore_or_default  */
#line 13713 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2322: /* values_with_names: values_with_names ',' remember_name expr_or_ignore_or_default remember_end  */
#line 13721 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 42459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2323: /* values_with_names: remember_name expr_or_ignore_or_default remember_end  */
#line 13729 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 42471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2324: /* expr_or_ignore: expr  */
#line 13739 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               { (yyval.item)= (yyvsp[0].item);}
#line 42477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2325: /* expr_or_ignore: IGNORE_SYM  */
#line 13741 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2326: /* expr_or_ignore_or_default: expr_or_ignore  */
#line 13749 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { (yyval.item)= (yyvsp[0].item);}
#line 42493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2327: /* expr_or_ignore_or_default: DEFAULT  */
#line 13751 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2329: /* $@218: %empty  */
#line 13760 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { Lex->duplicates= DUP_UPDATE; }
#line 42509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2330: /* $@219: %empty  */
#line 13762 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 42517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2331: /* opt_insert_update: ON DUPLICATE_SYM $@218 KEY_SYM UPDATE_SYM $@219 insert_update_list  */
#line 13766 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
	    Select->parsing_place= NO_MATTER;
          }
#line 42525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2332: /* $@220: %empty  */
#line 13775 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 42536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2333: /* $@221: %empty  */
#line 13783 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            SELECT_LEX *slex= &Lex->select_lex;
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (unlikely(slex->get_table_list()->derived))
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 42559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2334: /* update: UPDATE_SYM $@220 opt_low_priority opt_ignore join_table_list SET update_list $@221 opt_where_clause opt_order_clause delete_limit_clause  */
#line 13802 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2337: /* update_elem: simple_ident_nospvar equal DEFAULT  */
#line 13815 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 42579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2338: /* update_elem: simple_ident_nospvar equal expr_or_ignore  */
#line 13822 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 42588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2341: /* insert_update_elem: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13835 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2342: /* opt_low_priority: %empty  */
#line 13844 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2343: /* opt_low_priority: LOW_PRIORITY  */
#line 13845 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2344: /* $@222: %empty  */
#line 13852 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 42626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2345: /* delete: DELETE_SYM $@222 delete_part2  */
#line 13863 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2346: /* opt_delete_system_time: %empty  */
#line 13871 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 42643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2347: /* opt_delete_system_time: BEFORE_SYM SYSTEM_TIME_SYM history_point  */
#line 13875 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 42651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2348: /* delete_part2: opt_delete_options single_multi  */
#line 13881 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          {}
#line 42657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2349: /* delete_part2: HISTORY_SYM delete_single_table opt_delete_system_time  */
#line 13883 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
          }
#line 42665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2350: /* delete_single_table: FROM table_ident opt_use_partition  */
#line 13890 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2351: /* single_multi: delete_single_table opt_where_clause opt_order_clause delete_limit_clause opt_select_expressions  */
#line 13908 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 {}
#line 42687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2352: /* $@223: %empty  */
#line 13910 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2353: /* single_multi: table_wild_list $@223 FROM join_table_list opt_where_clause  */
#line 13916 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 42706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2354: /* $@224: %empty  */
#line 13921 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2355: /* single_multi: FROM table_alias_ref_list $@224 USING join_table_list opt_where_clause  */
#line 13927 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2360: /* table_wild_one: ident opt_wild  */
#line 13947 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2361: /* table_wild_one: ident '.' ident opt_wild  */
#line 13962 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2362: /* opt_wild: %empty  */
#line 13979 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 42771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2363: /* opt_wild: '.' '*'  */
#line 13980 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 42777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2364: /* opt_delete_options: %empty  */
#line 13984 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 42783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2365: /* opt_delete_options: opt_delete_option opt_delete_options  */
#line 13985 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                               {}
#line 42789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2366: /* opt_delete_option: QUICK  */
#line 13989 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Select->options|= OPTION_QUICK; }
#line 42795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2367: /* opt_delete_option: LOW_PRIORITY  */
#line 13990 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 42801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2368: /* opt_delete_option: IGNORE_SYM  */
#line 13991 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->ignore= 1; }
#line 42807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2369: /* $@225: %empty  */
#line 13996 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2370: /* $@226: %empty  */
#line 14007 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 42834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2371: /* truncate: TRUNCATE_SYM $@225 opt_table_sym table_name opt_lock_wait_timeout $@226 opt_truncate_table_storage_clause  */
#line 14014 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                            { }
#line 42840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2381: /* profile_def: CPU_SYM  */
#line 14038 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 42848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2382: /* profile_def: MEMORY_SYM  */
#line 14042 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 42856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2383: /* profile_def: BLOCK_SYM IO_SYM  */
#line 14046 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 42864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2384: /* profile_def: CONTEXT_SYM SWITCHES_SYM  */
#line 14050 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 42872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2385: /* profile_def: PAGE_SYM FAULTS_SYM  */
#line 14054 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 42880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2386: /* profile_def: IPC_SYM  */
#line 14058 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 42888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2387: /* profile_def: SWAPS_SYM  */
#line 14062 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 42896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2388: /* profile_def: SOURCE_SYM  */
#line 14066 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 42904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2389: /* profile_def: ALL  */
#line 14070 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 42912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2390: /* opt_profile_args: %empty  */
#line 14077 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_query_id= 0;
    }
#line 42920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2391: /* opt_profile_args: FOR_SYM QUERY_SYM NUM  */
#line 14081 "/home/buildbot/git/sql/sql_yacc_ora.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 42928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2392: /* $@227: %empty  */
#line 14090 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 42941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2393: /* show: SHOW $@227 show_param  */
#line 14099 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 42949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2394: /* show_param: DATABASES wild_and_where  */
#line 14106 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 42960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2395: /* show_param: opt_full TABLES opt_db wild_and_where  */
#line 14113 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES)))
               MYSQL_YYABORT;
           }
#line 42972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2396: /* show_param: opt_full TRIGGERS_SYM opt_db wild_and_where  */
#line 14121 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TRIGGERS)))
               MYSQL_YYABORT;
           }
#line 42984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2397: /* show_param: EVENTS_SYM opt_db wild_and_where  */
#line 14129 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_EVENTS)))
               MYSQL_YYABORT;
           }
#line 42996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2398: /* show_param: TABLE_SYM STATUS_SYM opt_db wild_and_where  */
#line 14137 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLES)))
               MYSQL_YYABORT;
           }
#line 43008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2399: /* show_param: OPEN_SYM TABLES opt_db wild_and_where  */
#line 14145 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].lex_str);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES)))
              MYSQL_YYABORT;
          }
#line 43020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2400: /* show_param: PLUGINS_SYM  */
#line 14153 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2401: /* show_param: PLUGINS_SYM SONAME_SYM TEXT_STRING_sys  */
#line 14160 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2402: /* show_param: PLUGINS_SYM SONAME_SYM wild_and_where  */
#line 14167 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2403: /* show_param: ENGINE_SYM known_storage_engines show_engine_param  */
#line 14173 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 43058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2404: /* show_param: ENGINE_SYM ALL show_engine_param  */
#line 14175 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->create_info.db_type= NULL; }
#line 43064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2405: /* show_param: opt_full COLUMNS from_or_in table_ident opt_db wild_and_where  */
#line 14177 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 43077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2406: /* show_param: master_or_binary LOGS_SYM  */
#line 14186 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 43085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2407: /* show_param: SLAVE HOSTS_SYM  */
#line 14190 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 43093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2408: /* $@228: %empty  */
#line 14194 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 43102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2410: /* $@229: %empty  */
#line 14200 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 43111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2412: /* show_param: keys_or_index from_or_in table_ident opt_db opt_where_clause  */
#line 14205 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 43124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2413: /* show_param: opt_storage ENGINES_SYM  */
#line 14214 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 43135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2414: /* show_param: AUTHORS_SYM  */
#line 14221 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 43144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2415: /* show_param: CONTRIBUTORS_SYM  */
#line 14226 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 43153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2416: /* show_param: PRIVILEGES  */
#line 14231 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 43162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2417: /* show_param: COUNT_SYM '(' '*' ')' WARNINGS  */
#line 14236 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 43171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2418: /* show_param: COUNT_SYM '(' '*' ')' ERRORS  */
#line 14241 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 43180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2419: /* show_param: WARNINGS opt_limit_clause  */
#line 14246 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 43186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2420: /* show_param: ERRORS opt_limit_clause  */
#line 14248 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 43192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2421: /* show_param: PROFILES_SYM  */
#line 14250 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 43198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2422: /* show_param: PROFILE_SYM opt_profile_defs opt_profile_args opt_limit_clause  */
#line 14252 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 43209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2423: /* show_param: opt_var_type STATUS_SYM wild_and_where  */
#line 14259 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 43221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2424: /* show_param: opt_full PROCESSLIST_SYM  */
#line 14267 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 43227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2425: /* show_param: opt_var_type VARIABLES wild_and_where  */
#line 14269 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 43239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2426: /* show_param: charset wild_and_where  */
#line 14277 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 43250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2427: /* show_param: COLLATION_SYM wild_and_where  */
#line 14284 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 43261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2428: /* show_param: GRANTS  */
#line 14291 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 43273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2429: /* show_param: GRANTS FOR_SYM user_or_role clear_privileges  */
#line 14299 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 43283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2430: /* show_param: CREATE DATABASE opt_if_not_exists ident  */
#line 14305 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 43292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2431: /* show_param: CREATE TABLE_SYM table_ident  */
#line 14310 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,0)))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 43304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2432: /* show_param: CREATE VIEW_SYM table_ident  */
#line 14318 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 43316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2433: /* show_param: CREATE SEQUENCE_SYM table_ident  */
#line 14326 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 43328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2434: /* show_param: MASTER_SYM STATUS_SYM  */
#line 14334 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 43336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2435: /* show_param: ALL SLAVES STATUS_SYM  */
#line 14338 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 43345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2436: /* show_param: SLAVE STATUS_SYM  */
#line 14343 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 43356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2437: /* show_param: SLAVE connection_name STATUS_SYM  */
#line 14350 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 43365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2438: /* show_param: CREATE PROCEDURE_SYM sp_name  */
#line 14355 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2439: /* show_param: CREATE FUNCTION_SYM sp_name  */
#line 14362 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2440: /* show_param: CREATE PACKAGE_ORACLE_SYM sp_name  */
#line 14369 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 43397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2441: /* show_param: CREATE PACKAGE_ORACLE_SYM BODY_ORACLE_SYM sp_name  */
#line 14375 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 43407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2442: /* show_param: CREATE TRIGGER_SYM sp_name  */
#line 14381 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 43417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2443: /* show_param: CREATE USER_SYM  */
#line 14387 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 43429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2444: /* show_param: CREATE USER_SYM user  */
#line 14395 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 43438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2445: /* show_param: PROCEDURE_SYM STATUS_SYM wild_and_where  */
#line 14400 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2446: /* show_param: FUNCTION_SYM STATUS_SYM wild_and_where  */
#line 14407 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2447: /* show_param: PACKAGE_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14414 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2448: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14421 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2449: /* show_param: PROCEDURE_SYM CODE_SYM sp_name  */
#line 14428 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2450: /* show_param: FUNCTION_SYM CODE_SYM sp_name  */
#line 14433 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2451: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM CODE_SYM sp_name  */
#line 14438 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2452: /* show_param: CREATE EVENT_SYM sp_name  */
#line 14443 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 43518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2453: /* show_param: describe_command FOR_SYM expr  */
#line 14448 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 43529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2454: /* show_param: IDENT_sys remember_tok_start wild_and_where  */
#line 14455 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 43552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2455: /* show_engine_param: STATUS_SYM  */
#line 14477 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 43558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2456: /* show_engine_param: MUTEX_SYM  */
#line 14479 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 43564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2457: /* show_engine_param: LOGS_SYM  */
#line 14481 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 43570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2462: /* opt_db: %empty  */
#line 14495 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.lex_str)= null_clex_str; }
#line 43576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2463: /* opt_db: from_or_in ident  */
#line 14496 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 43582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2464: /* opt_full: %empty  */
#line 14500 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->verbose=0; }
#line 43588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2465: /* opt_full: FULL  */
#line 14501 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->verbose=1; }
#line 43594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2468: /* binlog_in: %empty  */
#line 14510 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { Lex->mi.log_file_name = 0; }
#line 43600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2469: /* binlog_in: IN_SYM TEXT_STRING_sys  */
#line 14511 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 43606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2470: /* binlog_from: %empty  */
#line 14515 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { Lex->mi.pos = 4; /* skip magic number */ }
#line 43612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2471: /* binlog_from: FROM ulonglong_num  */
#line 14516 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 43618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2472: /* wild_and_where: %empty  */
#line 14520 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.simple_string)= 0; }
#line 43624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2473: /* wild_and_where: LIKE remember_tok_start TEXT_STRING_sys  */
#line 14522 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2474: /* wild_and_where: WHERE remember_tok_start expr  */
#line 14530 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2475: /* $@230: %empty  */
#line 14541 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 43662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2476: /* describe: describe_command table_ident $@230 opt_describe_column  */
#line 14552 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 43670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2477: /* $@231: %empty  */
#line 14556 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->describe|= DESCRIBE_NORMAL; }
#line 43676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2478: /* describe: describe_command opt_extended_describe $@231 explainable_command  */
#line 14558 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
#line 43685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2486: /* analyze_stmt_command: ANALYZE_SYM opt_format_json explainable_command  */
#line 14579 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->analyze_stmt= true;
          }
#line 43693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2487: /* opt_extended_describe: EXTENDED_SYM  */
#line 14585 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { Lex->describe|= DESCRIBE_EXTENDED; }
#line 43699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2488: /* opt_extended_describe: PARTITIONS_SYM  */
#line 14586 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 43705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2489: /* opt_extended_describe: opt_format_json  */
#line 14587 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 43711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2490: /* opt_format_json: %empty  */
#line 14591 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 43717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2491: /* opt_format_json: FORMAT_SYM '=' ident_or_text  */
#line 14593 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 43731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2492: /* opt_describe_column: %empty  */
#line 14605 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 43737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2493: /* opt_describe_column: text_string  */
#line 14606 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->wild= (yyvsp[0].string); }
#line 43743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2494: /* opt_describe_column: ident  */
#line 14608 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 43755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2495: /* $@232: %empty  */
#line 14622 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 43766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2496: /* flush: FLUSH_SYM opt_no_write_to_binlog $@232 flush_options  */
#line 14629 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 43772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2497: /* $@233: %empty  */
#line 14634 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 43786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2498: /* flush_options: table_or_tables $@233 opt_table_list opt_flush_lock  */
#line 14644 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 43792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2500: /* opt_flush_lock: %empty  */
#line 14649 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 43798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2501: /* opt_flush_lock: flush_lock  */
#line 14651 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 43814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2502: /* flush_lock: WITH READ_SYM LOCK_SYM optional_flush_tables_arguments  */
#line 14666 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 43820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2503: /* $@234: %empty  */
#line 14668 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 43834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2504: /* flush_lock: FOR_SYM $@234 EXPORT_SYM  */
#line 14676 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 43840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2506: /* flush_options_list: flush_option  */
#line 14682 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 43846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2507: /* flush_option: ERROR_SYM LOGS_SYM  */
#line 14687 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 43852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2508: /* flush_option: ENGINE_SYM LOGS_SYM  */
#line 14689 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 43858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2509: /* flush_option: GENERAL LOGS_SYM  */
#line 14691 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 43864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2510: /* flush_option: SLOW LOGS_SYM  */
#line 14693 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 43870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2511: /* flush_option: BINARY LOGS_SYM opt_delete_gtid_domain  */
#line 14695 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 43876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2512: /* flush_option: RELAY LOGS_SYM optional_connection_name  */
#line 14697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 43888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2513: /* flush_option: QUERY_SYM CACHE_SYM  */
#line 14705 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 43894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2514: /* flush_option: HOSTS_SYM  */
#line 14707 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_HOSTS; }
#line 43900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2515: /* flush_option: PRIVILEGES  */
#line 14709 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 43906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2516: /* flush_option: LOGS_SYM  */
#line 14711 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 43915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2517: /* flush_option: STATUS_SYM  */
#line 14716 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_STATUS; }
#line 43921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2518: /* flush_option: SLAVE optional_connection_name  */
#line 14718 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 43933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2519: /* flush_option: MASTER_SYM  */
#line 14726 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_MASTER; }
#line 43939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2520: /* flush_option: DES_KEY_FILE  */
#line 14728 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 43945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2521: /* flush_option: RESOURCES  */
#line 14730 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 43951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2522: /* flush_option: IDENT_sys remember_tok_start  */
#line 14732 "/home/buildbot/git/sql/sql_yacc_ora.yy"
           {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 43969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2523: /* opt_table_list: %empty  */
#line 14748 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 43975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2524: /* opt_table_list: table_list  */
#line 14749 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     {}
#line 43981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2525: /* opt_delete_gtid_domain: %empty  */
#line 14753 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 43987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2526: /* opt_delete_gtid_domain: DELETE_DOMAIN_ID_SYM '=' '(' delete_domain_id_list ')'  */
#line 14755 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 43993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2530: /* delete_domain_id: ulonglong_num  */
#line 14765 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 44010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2531: /* optional_flush_tables_arguments: %empty  */
#line 14780 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             {(yyval.num)= 0;}
#line 44016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2532: /* optional_flush_tables_arguments: AND_SYM DISABLE_SYM CHECKPOINT_SYM  */
#line 14781 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                             {(yyval.num)= REFRESH_CHECKPOINT; }
#line 44022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2533: /* $@235: %empty  */
#line 14786 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 44031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2534: /* reset: RESET_SYM $@235 reset_options  */
#line 14791 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 44037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2537: /* $@236: %empty  */
#line 14800 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->type|= REFRESH_SLAVE; }
#line 44043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2538: /* reset_option: SLAVE $@236 optional_connection_name slave_reset_options  */
#line 14802 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { }
#line 44049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2539: /* $@237: %empty  */
#line 14804 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 44058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2541: /* reset_option: QUERY_SYM CACHE_SYM  */
#line 14809 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->type|= REFRESH_QUERY_CACHE;}
#line 44064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2542: /* slave_reset_options: %empty  */
#line 14813 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->reset_slave_info.all= false; }
#line 44070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2543: /* slave_reset_options: ALL  */
#line 14814 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->reset_slave_info.all= true; }
#line 44076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2544: /* master_reset_options: %empty  */
#line 14818 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 44082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2545: /* master_reset_options: TO_SYM ulong_num  */
#line 14820 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 44090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2546: /* $@238: %empty  */
#line 14827 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 44100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2547: /* purge: PURGE $@238 purge_options  */
#line 14833 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 44106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2549: /* purge_option: TO_SYM TEXT_STRING_sys  */
#line 14842 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 44114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2550: /* purge_option: BEFORE_SYM expr  */
#line 14846 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 44125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2551: /* $@239: %empty  */
#line 14858 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 44137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2552: /* kill: KILL_SYM $@239 kill_type kill_option  */
#line 14866 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 44145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2553: /* kill_type: %empty  */
#line 14872 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 44151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2554: /* kill_type: HARD_SYM  */
#line 14873 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 44157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2555: /* kill_type: SOFT_SYM  */
#line 14874 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.num)= 0; }
#line 44163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2556: /* kill_option: opt_connection kill_expr  */
#line 14878 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.num)= (int) KILL_CONNECTION; }
#line 44169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2557: /* kill_option: QUERY_SYM kill_expr  */
#line 14879 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.num)= (int) KILL_QUERY; }
#line 44175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2558: /* kill_option: QUERY_SYM ID_SYM expr  */
#line 14881 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 44185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2559: /* opt_connection: %empty  */
#line 14889 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { }
#line 44191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2560: /* opt_connection: CONNECTION_SYM  */
#line 14890 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                         { }
#line 44197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2561: /* kill_expr: expr  */
#line 14895 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 44205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2562: /* kill_expr: USER_SYM user  */
#line 14899 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 44214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2563: /* shutdown: SHUTDOWN  */
#line 14906 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 44220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2564: /* use: USE_SYM ident  */
#line 14913 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].ident_sys);
          }
#line 44230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2565: /* $@240: %empty  */
#line 14924 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 44245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2566: /* $@241: %empty  */
#line 14935 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 44260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2567: /* $@242: %empty  */
#line 14946 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 44277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2568: /* $@243: %empty  */
#line 14959 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 44283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2569: /* load: LOAD data_or_xml $@240 load_data_lock opt_local INFILE TEXT_STRING_filesystem $@241 opt_duplicate INTO TABLE_SYM table_ident opt_use_partition $@242 opt_load_data_charset $@243 opt_xml_rows_identified_by opt_field_term opt_line_term opt_ignore_lines opt_field_or_var_spec opt_load_data_set_spec  */
#line 14963 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 44293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2570: /* data_or_xml: DATA_SYM  */
#line 14971 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 44299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2571: /* data_or_xml: XML_SYM  */
#line 14972 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 44305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2572: /* opt_local: %empty  */
#line 14976 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)=0;}
#line 44311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2573: /* opt_local: LOCAL_SYM  */
#line 14977 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.num)=1;}
#line 44317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2574: /* load_data_lock: %empty  */
#line 14981 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 44323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2575: /* load_data_lock: CONCURRENT  */
#line 14983 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2576: /* load_data_lock: LOW_PRIORITY  */
#line 14990 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 44341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2577: /* opt_duplicate: %empty  */
#line 14994 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->duplicates=DUP_ERROR; }
#line 44347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2578: /* opt_duplicate: REPLACE  */
#line 14995 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { Lex->duplicates=DUP_REPLACE; }
#line 44353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2579: /* opt_duplicate: IGNORE_SYM  */
#line 14996 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { Lex->ignore= 1; }
#line 44359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2584: /* field_term: TERMINATED BY text_string  */
#line 15011 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 44368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2585: /* field_term: OPTIONALLY ENCLOSED BY text_string  */
#line 15016 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 44379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2586: /* field_term: ENCLOSED BY text_string  */
#line 15023 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 44388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2587: /* field_term: ESCAPED BY text_string  */
#line 15028 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 44397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2592: /* line_term: TERMINATED BY text_string  */
#line 15046 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 44406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2593: /* line_term: STARTING BY text_string  */
#line 15051 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 44415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2594: /* opt_xml_rows_identified_by: %empty  */
#line 15058 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { }
#line 44421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2595: /* opt_xml_rows_identified_by: ROWS_SYM IDENTIFIED_SYM BY text_string  */
#line 15060 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->exchange->line_term = (yyvsp[0].string); }
#line 44427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2597: /* opt_ignore_lines: IGNORE_SYM NUM lines_or_rows  */
#line 15066 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 44436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2598: /* lines_or_rows: LINES  */
#line 15073 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                { }
#line 44442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2599: /* lines_or_rows: ROWS_SYM  */
#line 15074 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   { }
#line 44448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2600: /* opt_field_or_var_spec: %empty  */
#line 15078 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 44454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2601: /* opt_field_or_var_spec: '(' fields_or_vars ')'  */
#line 15079 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 {}
#line 44460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2602: /* opt_field_or_var_spec: '(' ')'  */
#line 15080 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 44466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2603: /* fields_or_vars: fields_or_vars ',' field_or_var  */
#line 15085 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2604: /* fields_or_vars: field_or_var  */
#line 15087 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2605: /* field_or_var: simple_ident_nospvar  */
#line 15091 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               {(yyval.item)= (yyvsp[0].item);}
#line 44484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2606: /* field_or_var: '@' ident_or_text  */
#line 15093 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2607: /* opt_load_data_set_spec: %empty  */
#line 15101 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 44500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2608: /* opt_load_data_set_spec: SET load_data_set_list  */
#line 15102 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 {}
#line 44506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2611: /* load_data_set_elem: simple_ident_nospvar equal remember_name expr_or_ignore_or_default remember_end  */
#line 15112 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2612: /* text_literal: TEXT_STRING  */
#line 15125 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2613: /* text_literal: NCHAR_STRING  */
#line 15130 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2614: /* text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 15135 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 44545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2615: /* text_literal: text_literal TEXT_STRING_literal  */
#line 15140 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 44554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2616: /* text_string: TEXT_STRING_literal  */
#line 15148 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 44566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2617: /* text_string: hex_or_bin_String  */
#line 15155 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { (yyval.string)= (yyvsp[0].string); }
#line 44572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2618: /* hex_or_bin_String: HEX_NUM  */
#line 15161 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2619: /* hex_or_bin_String: HEX_STRING  */
#line 15174 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2620: /* hex_or_bin_String: BIN_NUM  */
#line 15183 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2621: /* param_marker: PARAM_MARKER  */
#line 15199 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 44630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2622: /* param_marker: COLON_ORACLE_SYM ident_cli  */
#line 15206 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 44640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2623: /* param_marker: COLON_ORACLE_SYM NUM  */
#line 15212 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 44651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2624: /* signed_literal: '+' NUM_literal  */
#line 15221 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.item) = (yyvsp[0].item_num); }
#line 44657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2625: /* signed_literal: '-' NUM_literal  */
#line 15223 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 44666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2626: /* literal: text_literal  */
#line 15230 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 44672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2627: /* literal: NUM_literal  */
#line 15231 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.item) = (yyvsp[0].item_num); }
#line 44678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2628: /* literal: temporal_literal  */
#line 15232 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { (yyval.item)= (yyvsp[0].item); }
#line 44684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2629: /* literal: NULL_SYM  */
#line 15234 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 44702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2630: /* literal: FALSE_SYM  */
#line 15248 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2631: /* literal: TRUE_SYM  */
#line 15254 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2632: /* literal: HEX_NUM  */
#line 15260 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2633: /* literal: HEX_STRING  */
#line 15266 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2634: /* literal: BIN_NUM  */
#line 15272 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2635: /* literal: UNDERSCORE_CHARSET hex_or_bin_String  */
#line 15278 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 44772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2636: /* NUM_literal: NUM  */
#line 15297 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2637: /* NUM_literal: LONG_NUM  */
#line 15307 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2638: /* NUM_literal: ULONGLONG_NUM  */
#line 15317 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2639: /* NUM_literal: DECIMAL_NUM  */
#line 15323 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2640: /* NUM_literal: FLOAT_NUM  */
#line 15330 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2641: /* temporal_literal: DATE_SYM TEXT_STRING  */
#line 15340 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATE,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2642: /* temporal_literal: TIME_SYM TEXT_STRING  */
#line 15348 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_TIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2643: /* temporal_literal: TIMESTAMP TEXT_STRING  */
#line 15356 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATETIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2644: /* opt_with_clause: %empty  */
#line 15367 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.with_clause)= 0; }
#line 44873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2645: /* opt_with_clause: with_clause  */
#line 15369 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.with_clause)= (yyvsp[0].with_clause);
          }
#line 44881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2646: /* $@244: %empty  */
#line 15377 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             Lex->derived_tables|= DERIVED_WITH;
             Lex->with_cte_resolution= true;
             Lex->curr_with_clause= with_clause;
             with_clause->add_to_list(&Lex->with_clauses_list,
                                      Lex->with_clauses_list_last_next);
          }
#line 44897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2647: /* with_clause: WITH opt_recursive $@244 with_list  */
#line 15389 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 44906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2648: /* opt_recursive: %empty  */
#line 15397 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.num)= 0; }
#line 44912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2649: /* opt_recursive: RECURSIVE_SYM  */
#line 15398 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.num)= 1; }
#line 44918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2652: /* $@245: %empty  */
#line 15411 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 44929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2653: /* with_list_element: with_element_head opt_with_column_list $@245 AS '(' remember_tok_start subselect remember_tok_end ')'  */
#line 15418 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            char *spec_start= (yyvsp[-3].simple_string) + 1;
            With_element *elem= new With_element((yyvsp[-8].with_element_head), *(yyvsp[-7].lex_str_list), (yyvsp[-2].select_lex)->master_unit());
	    if (unlikely(elem == NULL) ||
                unlikely(Lex->curr_with_clause->add_with_element(elem)))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].simple_string),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 44948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2654: /* opt_with_column_list: %empty  */
#line 15437 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.lex_str_list)= NULL; }
#line 44954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2655: /* opt_with_column_list: '(' with_column_list ')'  */
#line 15439 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.lex_str_list)= NULL; }
#line 44960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2656: /* with_column_list: ident  */
#line 15445 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 44969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2657: /* with_column_list: with_column_list ',' ident  */
#line 15450 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 44978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2658: /* with_element_head: ident  */
#line 15459 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX_CSTRING *name=
              (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(name);
            if ((yyval.with_element_head) == NULL)
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 44993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2659: /* insert_ident: simple_ident_nospvar  */
#line 15478 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                               { (yyval.item)=(yyvsp[0].item); }
#line 44999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2660: /* insert_ident: table_wild  */
#line 15479 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.item)=(yyvsp[0].item); }
#line 45005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2661: /* table_wild: ident '.' '*'  */
#line 15484 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2662: /* table_wild: ident '.' ident '.' '*'  */
#line 15489 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2663: /* select_sublist_qualified_asterisk: ident_cli '.' '*'  */
#line 15497 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2664: /* select_sublist_qualified_asterisk: ident_cli '.' ident_cli '.' '*'  */
#line 15502 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2665: /* order_ident: expr  */
#line 15509 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 45047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2666: /* simple_ident: ident_cli  */
#line 15515 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2667: /* simple_ident: ident_cli '.' ident_cli  */
#line 15520 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2668: /* simple_ident: '.' ident_cli '.' ident_cli  */
#line 15525 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2669: /* simple_ident: ident_cli '.' ident_cli '.' ident_cli  */
#line 15531 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2670: /* simple_ident: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15536 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2671: /* simple_ident_nospvar: ident  */
#line 15544 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2672: /* simple_ident_nospvar: ident '.' ident  */
#line 15549 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2673: /* simple_ident_nospvar: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15554 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2674: /* simple_ident_nospvar: '.' ident '.' ident  */
#line 15559 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2675: /* simple_ident_nospvar: ident '.' ident '.' ident  */
#line 15565 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2676: /* field_ident: ident  */
#line 15572 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2677: /* field_ident: ident '.' ident '.' ident  */
#line 15574 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 45160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2678: /* field_ident: ident '.' ident  */
#line 15585 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 45172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2679: /* field_ident: '.' ident  */
#line 15592 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2680: /* table_ident: ident  */
#line 15597 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2681: /* table_ident: ident '.' ident  */
#line 15603 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2682: /* table_ident: '.' ident  */
#line 15609 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2683: /* table_ident_opt_wild: ident opt_wild  */
#line 15619 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2684: /* table_ident_opt_wild: ident '.' ident opt_wild  */
#line 15625 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2685: /* table_ident_nodb: ident  */
#line 15634 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2690: /* ident_cli: keyword_ident  */
#line 15650 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 45246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2691: /* IDENT_sys: IDENT_cli  */
#line 15655 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 45255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2692: /* TEXT_STRING_sys: TEXT_STRING  */
#line 15663 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2693: /* TEXT_STRING_literal: TEXT_STRING  */
#line 15671 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2694: /* TEXT_STRING_filesystem: TEXT_STRING  */
#line 15679 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2696: /* ident_table_alias: keyword_table_alias  */
#line 15688 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2698: /* ident_set_usual_case: keyword_set_usual_case  */
#line 15697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2700: /* ident_sysvar_name: keyword_sysvar_name  */
#line 15706 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2701: /* ident_sysvar_name: TEXT_STRING_sys  */
#line 15711 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 45318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2703: /* ident: keyword_ident  */
#line 15721 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2705: /* ident_directly_assignable: keyword_directly_assignable  */
#line 15730 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2707: /* label_ident: keyword_label  */
#line 15740 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2708: /* labels_declaration_oracle: label_declaration_oracle  */
#line 15747 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 45351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2709: /* labels_declaration_oracle: labels_declaration_oracle label_declaration_oracle  */
#line 15748 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                             { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 45357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2710: /* label_declaration_oracle: SHIFT_LEFT label_ident SHIFT_RIGHT  */
#line 15753 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 45367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2711: /* ident_or_text: ident  */
#line 15761 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2712: /* ident_or_text: TEXT_STRING_sys  */
#line 15762 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2713: /* ident_or_text: LEX_HOSTNAME  */
#line 15763 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2714: /* user_maybe_role: ident_or_text  */
#line 15768 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);
            (yyval.lex_user)->host= null_clex_str; // User or Role, see get_current_user()
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 45402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2715: /* user_maybe_role: ident_or_text '@' ident_or_text  */
#line 15781 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 45436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2716: /* user_maybe_role: CURRENT_USER optional_braces  */
#line 15811 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->plugin= empty_clex_str;
            (yyval.lex_user)->auth= empty_clex_str;
          }
#line 45448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 2719: /* user: user_maybe_role  */
#line 15823 "/home/buildbot/git/sql/sql_yacc_ora.yy"
         {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 45458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3203: /* $@246: %empty  */
#line 16442 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3204: /* set: SET $@246 start_option_value_list  */
#line 16449 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 45478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3205: /* $@247: %empty  */
#line 16454 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->set_stmt_init();
          }
#line 45486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3206: /* $@248: %empty  */
#line 16458 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
          }
#line 45498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3207: /* set: SET STATEMENT_SYM $@247 set_stmt_option_value_following_option_type_list $@248 FOR_SYM verb_clause  */
#line 16466 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 45504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3208: /* $@249: %empty  */
#line 16471 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3209: /* set_assign: ident_directly_assignable SET_VAR $@249 set_expr_or_default  */
#line 16478 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_variable(&(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3210: /* $@250: %empty  */
#line 16484 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3211: /* set_assign: ident_directly_assignable '.' ident SET_VAR $@250 set_expr_or_default  */
#line 16491 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            if (unlikely(lex->set_variable(&(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 45548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3212: /* $@251: %empty  */
#line 16499 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3213: /* set_assign: COLON_ORACLE_SYM ident '.' ident SET_VAR $@251 set_expr_or_default  */
#line 16511 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3216: /* $@252: %empty  */
#line 16532 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3218: /* $@253: %empty  */
#line 16538 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_type= OPT_DEFAULT;
          }
#line 45592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3219: /* start_option_value_list: TRANSACTION_SYM $@253 transaction_characteristics  */
#line 16542 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3220: /* $@254: %empty  */
#line 16547 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3222: /* $@255: %empty  */
#line 16557 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3224: /* start_option_value_list_following_option_type: TRANSACTION_SYM transaction_characteristics  */
#line 16563 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3227: /* $@256: %empty  */
#line 16577 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3228: /* option_value_list: $@256 option_value  */
#line 16581 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3229: /* $@257: %empty  */
#line 16586 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3230: /* option_value_list: option_value_list ',' $@257 option_value  */
#line 16590 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3231: /* $@258: %empty  */
#line 16599 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3234: /* option_type: GLOBAL_SYM  */
#line 16607 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 45675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3235: /* option_type: LOCAL_SYM  */
#line 16608 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 45681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3236: /* option_type: SESSION_SYM  */
#line 16609 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 45687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3237: /* opt_var_type: %empty  */
#line 16613 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 45693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3238: /* opt_var_type: GLOBAL_SYM  */
#line 16614 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 45699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3239: /* opt_var_type: LOCAL_SYM  */
#line 16615 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 45705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3240: /* opt_var_type: SESSION_SYM  */
#line 16616 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 45711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3241: /* opt_var_ident_type: %empty  */
#line 16620 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 45717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3242: /* opt_var_ident_type: GLOBAL_SYM '.'  */
#line 16621 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 45723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3243: /* opt_var_ident_type: LOCAL_SYM '.'  */
#line 16622 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 45729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3244: /* opt_var_ident_type: SESSION_SYM '.'  */
#line 16623 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 45735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3245: /* option_value_following_option_type: ident equal set_expr_or_default  */
#line 16629 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3246: /* option_value_following_option_type: ident '.' ident equal set_expr_or_default  */
#line 16634 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3247: /* option_value_following_option_type: DEFAULT '.' ident equal set_expr_or_default  */
#line 16639 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3248: /* option_value_no_option_type: ident_set_usual_case equal set_expr_or_default  */
#line 16648 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3249: /* option_value_no_option_type: ident '.' ident equal set_expr_or_default  */
#line 16653 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3250: /* option_value_no_option_type: DEFAULT '.' ident equal set_expr_or_default  */
#line 16658 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3251: /* option_value_no_option_type: '@' ident_or_text equal expr  */
#line 16663 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3252: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name equal set_expr_or_default  */
#line 16668 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3253: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name '.' ident equal set_expr_or_default  */
#line 16673 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3254: /* option_value_no_option_type: '@' '@' opt_var_ident_type DEFAULT '.' ident equal set_expr_or_default  */
#line 16678 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3255: /* option_value_no_option_type: charset old_or_new_charset_name_or_default  */
#line 16683 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 45843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3256: /* option_value_no_option_type: NAMES_SYM equal expr  */
#line 16697 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 45858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3257: /* option_value_no_option_type: NAMES_SYM charset_name_or_default opt_collate  */
#line 16708 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3258: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role  */
#line 16727 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3259: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role FOR_SYM user  */
#line 16745 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3260: /* option_value_no_option_type: ROLE_SYM ident_or_text  */
#line 16757 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3261: /* option_value_no_option_type: ROLE_SYM equal set_expr_or_default  */
#line 16765 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3262: /* option_value_no_option_type: PASSWORD_SYM opt_for_user text_or_password  */
#line 16770 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3267: /* transaction_access_mode: transaction_access_mode_types  */
#line 16793 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3268: /* isolation_level: ISOLATION LEVEL_SYM isolation_types  */
#line 16812 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3269: /* transaction_access_mode_types: READ_SYM ONLY_SYM  */
#line 16829 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { (yyval.num)= true; }
#line 46001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3270: /* transaction_access_mode_types: READ_SYM WRITE_SYM  */
#line 16830 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.num)= false; }
#line 46007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3271: /* isolation_types: READ_SYM UNCOMMITTED_SYM  */
#line 16834 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 46013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3272: /* isolation_types: READ_SYM COMMITTED_SYM  */
#line 16835 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 46019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3273: /* isolation_types: REPEATABLE_SYM READ_SYM  */
#line 16836 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 46025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3274: /* isolation_types: SERIALIZABLE_SYM  */
#line 16837 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 46031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3275: /* opt_for_user: equal  */
#line 16842 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->plugin= empty_clex_str;
            lex->definer->auth=   empty_clex_str;
          }
#line 46050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3276: /* opt_for_user: FOR_SYM user equal  */
#line 16856 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { Lex->definer= (yyvsp[-1].lex_user); }
#line 46056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3277: /* text_or_password: TEXT_STRING  */
#line 16860 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { Lex->definer->pwhash= (yyvsp[0].lex_string_with_metadata);}
#line 46062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3278: /* text_or_password: PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 16861 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata); }
#line 46068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3279: /* text_or_password: OLD_PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 16863 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->pwhash.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->pwhash.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 46079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3280: /* set_expr_or_default: expr  */
#line 16872 "/home/buildbot/git/sql/sql_yacc_ora.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 46085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3281: /* set_expr_or_default: DEFAULT  */
#line 16873 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.item)=0; }
#line 46091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3282: /* set_expr_or_default: ON  */
#line 16875 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3283: /* set_expr_or_default: ALL  */
#line 16881 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3284: /* set_expr_or_default: BINARY  */
#line 16887 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3285: /* $@259: %empty  */
#line 16898 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 46133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3286: /* lock: LOCK_SYM table_or_tables $@259 table_lock_list opt_lock_wait_timeout  */
#line 16906 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 46139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3287: /* opt_lock_wait_timeout: %empty  */
#line 16911 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {}
#line 46145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3288: /* opt_lock_wait_timeout: WAIT_SYM ulong_num  */
#line 16913 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 46155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3289: /* opt_lock_wait_timeout: NOWAIT_SYM  */
#line 16919 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 46165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3290: /* table_or_tables: TABLE_SYM  */
#line 16927 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { }
#line 46171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3291: /* table_or_tables: TABLES  */
#line 16928 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { }
#line 46177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3294: /* table_lock: table_ident opt_table_alias lock_option  */
#line 16938 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 46197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3295: /* lock_option: READ_SYM  */
#line 16956 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 46203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3296: /* lock_option: WRITE_SYM  */
#line 16957 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 46209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3297: /* lock_option: WRITE_SYM CONCURRENT  */
#line 16959 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 46217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3298: /* lock_option: LOW_PRIORITY WRITE_SYM  */
#line 16963 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 46223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3299: /* lock_option: READ_SYM LOCAL_SYM  */
#line 16964 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 { (yyval.num)= TL_READ; }
#line 46229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3300: /* $@260: %empty  */
#line 16969 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 46241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3301: /* unlock: UNLOCK_SYM $@260 table_or_tables  */
#line 16977 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 46247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3302: /* handler: HANDLER_SYM table_ident OPEN_SYM opt_table_alias  */
#line 16986 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr),
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 46261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3303: /* handler: HANDLER_SYM table_ident_nodb CLOSE_SYM  */
#line 16996 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 46275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3304: /* $@261: %empty  */
#line 17006 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 46297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3305: /* handler: HANDLER_SYM table_ident_nodb READ_SYM $@261 handler_read_or_scan opt_where_clause opt_limit_clause  */
#line 17024 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (unlikely(Lex->uses_stored_routines()))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 46312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3306: /* handler_read_or_scan: handler_scan_function  */
#line 17037 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->ident= null_clex_str; }
#line 46318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3307: /* handler_read_or_scan: ident handler_rkey_function  */
#line 17038 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->ident= (yyvsp[-1].ident_sys); }
#line 46324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3308: /* handler_scan_function: FIRST_SYM  */
#line 17042 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 46330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3309: /* handler_scan_function: NEXT_SYM  */
#line 17043 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 46336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3310: /* handler_rkey_function: FIRST_SYM  */
#line 17047 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 46342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3311: /* handler_rkey_function: NEXT_SYM  */
#line 17048 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 46348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3312: /* handler_rkey_function: PREV_SYM  */
#line 17049 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { Lex->ha_read_mode = RPREV;  }
#line 46354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3313: /* handler_rkey_function: LAST_SYM  */
#line 17050 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { Lex->ha_read_mode = RLAST;  }
#line 46360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3314: /* $@262: %empty  */
#line 17052 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 46372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3315: /* handler_rkey_function: handler_rkey_mode $@262 '(' values ')'  */
#line 17060 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 46378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3316: /* handler_rkey_mode: '='  */
#line 17064 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 46384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3317: /* handler_rkey_mode: GE  */
#line 17065 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 46390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3318: /* handler_rkey_mode: LE  */
#line 17066 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 46396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3319: /* handler_rkey_mode: '>'  */
#line 17067 "/home/buildbot/git/sql/sql_yacc_ora.yy"
              { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 46402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3320: /* handler_rkey_mode: '<'  */
#line 17068 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 46408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3321: /* revoke: REVOKE clear_privileges revoke_command  */
#line 17075 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 46414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3322: /* revoke_command: grant_privileges ON opt_table grant_ident FROM user_and_role_list  */
#line 17080 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 46424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3323: /* revoke_command: grant_privileges ON FUNCTION_SYM grant_ident FROM user_and_role_list  */
#line 17086 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 46434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3324: /* revoke_command: grant_privileges ON PROCEDURE_SYM grant_ident FROM user_and_role_list  */
#line 17092 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 46444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3325: /* revoke_command: grant_privileges ON PACKAGE_ORACLE_SYM grant_ident FROM user_and_role_list  */
#line 17099 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 46454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3326: /* revoke_command: grant_privileges ON PACKAGE_ORACLE_SYM BODY_ORACLE_SYM grant_ident FROM user_and_role_list  */
#line 17106 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 46464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3327: /* revoke_command: ALL opt_privileges ',' GRANT OPTION FROM user_and_role_list  */
#line 17112 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 46472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3328: /* revoke_command: PROXY_SYM ON user FROM user_list  */
#line 17116 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 46483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3329: /* revoke_command: admin_option_for_role FROM user_and_role_list  */
#line 17123 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3330: /* admin_option_for_role: ADMIN_SYM OPTION FOR_SYM grant_role  */
#line 17132 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3331: /* admin_option_for_role: grant_role  */
#line 17134 "/home/buildbot/git/sql/sql_yacc_ora.yy"
        { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3332: /* grant: GRANT clear_privileges grant_command  */
#line 17139 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 46511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3333: /* grant_command: grant_privileges ON opt_table grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17145 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 46521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3334: /* grant_command: grant_privileges ON FUNCTION_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17152 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 46531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3335: /* grant_command: grant_privileges ON PROCEDURE_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17159 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 46541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3336: /* grant_command: grant_privileges ON PACKAGE_ORACLE_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17166 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 46551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3337: /* grant_command: grant_privileges ON PACKAGE_ORACLE_SYM BODY_ORACLE_SYM grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17173 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 46561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3338: /* grant_command: PROXY_SYM ON user TO_SYM grant_list opt_grant_option  */
#line 17179 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 46572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3339: /* grant_command: grant_role TO_SYM grant_list opt_with_admin_option  */
#line 17186 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3340: /* opt_with_admin: %empty  */
#line 17197 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->definer = 0; }
#line 46590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3341: /* opt_with_admin: WITH ADMIN_SYM user_or_role  */
#line 17198 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->definer = (yyvsp[0].lex_user); }
#line 46596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3342: /* opt_with_admin_option: %empty  */
#line 17202 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->with_admin_option= false; }
#line 46602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3343: /* opt_with_admin_option: WITH ADMIN_SYM OPTION  */
#line 17203 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                      { Lex->with_admin_option= true; }
#line 46608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3344: /* role_list: grant_role  */
#line 17208 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3345: /* role_list: role_list ',' grant_role  */
#line 17213 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3346: /* current_role: CURRENT_ROLE optional_braces  */
#line 17221 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->reset_auth();
          }
#line 46637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3347: /* grant_role: ident_or_text  */
#line 17231 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 46660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3351: /* grant_privileges: object_privilege_list  */
#line 17258 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                {}
#line 46666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3352: /* grant_privileges: ALL opt_privileges  */
#line 17260 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 46675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3357: /* $@263: %empty  */
#line 17278 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->which_columns = SELECT_ACL;}
#line 46681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3358: /* object_privilege: SELECT_SYM $@263 opt_column_list  */
#line 17279 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 46687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3359: /* $@264: %empty  */
#line 17281 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->which_columns = INSERT_ACL;}
#line 46693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3360: /* object_privilege: INSERT $@264 opt_column_list  */
#line 17282 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 46699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3361: /* $@265: %empty  */
#line 17284 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->which_columns = UPDATE_ACL; }
#line 46705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3362: /* object_privilege: UPDATE_SYM $@265 opt_column_list  */
#line 17285 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 46711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3363: /* $@266: %empty  */
#line 17287 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->which_columns = REFERENCES_ACL;}
#line 46717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3364: /* object_privilege: REFERENCES $@266 opt_column_list  */
#line 17288 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 46723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3365: /* object_privilege: DELETE_SYM  */
#line 17289 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= DELETE_ACL;}
#line 46729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3366: /* object_privilege: USAGE  */
#line 17290 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  {}
#line 46735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3367: /* object_privilege: INDEX_SYM  */
#line 17291 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= INDEX_ACL;}
#line 46741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3368: /* object_privilege: ALTER  */
#line 17292 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= ALTER_ACL;}
#line 46747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3369: /* object_privilege: CREATE  */
#line 17293 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= CREATE_ACL;}
#line 46753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3370: /* object_privilege: DROP  */
#line 17294 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= DROP_ACL;}
#line 46759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3371: /* object_privilege: EXECUTE_SYM  */
#line 17295 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= EXECUTE_ACL;}
#line 46765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3372: /* object_privilege: RELOAD  */
#line 17296 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= RELOAD_ACL;}
#line 46771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3373: /* object_privilege: SHUTDOWN  */
#line 17297 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= SHUTDOWN_ACL;}
#line 46777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3374: /* object_privilege: PROCESS  */
#line 17298 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= PROCESS_ACL;}
#line 46783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3375: /* object_privilege: FILE_SYM  */
#line 17299 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= FILE_ACL;}
#line 46789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3376: /* object_privilege: GRANT OPTION  */
#line 17300 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= GRANT_ACL;}
#line 46795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3377: /* object_privilege: SHOW DATABASES  */
#line 17301 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= SHOW_DB_ACL;}
#line 46801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3378: /* object_privilege: SUPER_SYM  */
#line 17302 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= SUPER_ACL;}
#line 46807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3379: /* object_privilege: CREATE TEMPORARY TABLES  */
#line 17303 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= CREATE_TMP_ACL;}
#line 46813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3380: /* object_privilege: LOCK_SYM TABLES  */
#line 17304 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= LOCK_TABLES_ACL; }
#line 46819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3381: /* object_privilege: REPLICATION SLAVE  */
#line 17305 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= REPL_SLAVE_ACL; }
#line 46825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3382: /* object_privilege: REPLICATION CLIENT_SYM  */
#line 17306 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= REPL_CLIENT_ACL; }
#line 46831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3383: /* object_privilege: CREATE VIEW_SYM  */
#line 17307 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= CREATE_VIEW_ACL; }
#line 46837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3384: /* object_privilege: SHOW VIEW_SYM  */
#line 17308 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= SHOW_VIEW_ACL; }
#line 46843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3385: /* object_privilege: CREATE ROUTINE_SYM  */
#line 17309 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= CREATE_PROC_ACL; }
#line 46849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3386: /* object_privilege: ALTER ROUTINE_SYM  */
#line 17310 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= ALTER_PROC_ACL; }
#line 46855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3387: /* object_privilege: CREATE USER_SYM  */
#line 17311 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= CREATE_USER_ACL; }
#line 46861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3388: /* object_privilege: EVENT_SYM  */
#line 17312 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= EVENT_ACL;}
#line 46867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3389: /* object_privilege: TRIGGER_SYM  */
#line 17313 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= TRIGGER_ACL; }
#line 46873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3390: /* object_privilege: CREATE TABLESPACE  */
#line 17314 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 46879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3391: /* object_privilege: DELETE_SYM HISTORY_SYM  */
#line 17315 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                  { Lex->grant |= DELETE_HISTORY_ACL; }
#line 46885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3392: /* opt_and: %empty  */
#line 17319 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 46891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3393: /* opt_and: AND_SYM  */
#line 17320 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                  {}
#line 46897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3396: /* require_list_element: SUBJECT_SYM TEXT_STRING  */
#line 17330 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->x509_subject))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->x509_subject=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3397: /* require_list_element: ISSUER_SYM TEXT_STRING  */
#line 17337 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->x509_issuer))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->x509_issuer=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3398: /* require_list_element: CIPHER_SYM TEXT_STRING  */
#line 17344 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->ssl_cipher))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->ssl_cipher=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3399: /* grant_ident: '*'  */
#line 17354 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->current_select->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3400: /* grant_ident: ident '.' '*'  */
#line 17364 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->current_select->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3401: /* grant_ident: '*' '.' '*'  */
#line 17373 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->current_select->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3402: /* grant_ident: table_ident  */
#line 17382 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 46984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3403: /* user_list: user  */
#line 17395 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3404: /* user_list: user_list ',' user  */
#line 17400 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3405: /* grant_list: grant_user  */
#line 17408 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3406: /* grant_list: grant_list ',' grant_user  */
#line 17413 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3407: /* user_and_role_list: user_or_role  */
#line 17421 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3408: /* user_and_role_list: user_and_role_list ',' user_or_role  */
#line 17426 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3413: /* grant_user: user IDENTIFIED_SYM BY TEXT_STRING  */
#line 17437 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->pwtext= (yyvsp[0].lex_string_with_metadata);
            if (unlikely(Lex->sql_command == SQLCOM_REVOKE))
              MYSQL_YYABORT;
          }
#line 47049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3414: /* grant_user: user IDENTIFIED_SYM BY PASSWORD_SYM TEXT_STRING  */
#line 17444 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->pwhash= (yyvsp[0].lex_string_with_metadata);
          }
#line 47058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3415: /* grant_user: user IDENTIFIED_SYM via_or_with ident_or_text  */
#line 17449 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_clex_str;
          }
#line 47068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3416: /* grant_user: user IDENTIFIED_SYM via_or_with ident_or_text using_or_as TEXT_STRING_sys  */
#line 17455 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
          }
#line 47078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3417: /* grant_user: user_or_role  */
#line 17461 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 47084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3418: /* opt_column_list: %empty  */
#line 17466 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 47093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3422: /* column_list_id: ident  */
#line 17480 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 47123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3424: /* opt_require_clause: REQUIRE_SYM require_list  */
#line 17510 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 47131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3425: /* opt_require_clause: REQUIRE_SYM SSL_SYM  */
#line 17514 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 47139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3426: /* opt_require_clause: REQUIRE_SYM X509_SYM  */
#line 17518 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 47147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3427: /* opt_require_clause: REQUIRE_SYM NONE_SYM  */
#line 17522 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 47155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3428: /* resource_option: MAX_QUERIES_PER_HOUR ulong_num  */
#line 17529 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 47165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3429: /* resource_option: MAX_UPDATES_PER_HOUR ulong_num  */
#line 17535 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 47175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3430: /* resource_option: MAX_CONNECTIONS_PER_HOUR ulong_num  */
#line 17541 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 47185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3431: /* resource_option: MAX_USER_CONNECTIONS_SYM int_num  */
#line 17547 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 47195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3432: /* resource_option: MAX_STATEMENT_TIME_SYM NUM_literal  */
#line 17553 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->mqh.max_statement_time= (yyvsp[0].item_num)->val_real();
            lex->mqh.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 47205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3433: /* resource_option_list: resource_option_list resource_option  */
#line 17561 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                               {}
#line 47211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3434: /* resource_option_list: resource_option  */
#line 17562 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 47217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3435: /* opt_resource_options: %empty  */
#line 17566 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 47223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3437: /* opt_grant_options: %empty  */
#line 17572 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 47229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3438: /* opt_grant_options: WITH grant_option_list  */
#line 17573 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                 {}
#line 47235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3439: /* opt_grant_option: %empty  */
#line 17577 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 47241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3440: /* opt_grant_option: WITH GRANT OPTION  */
#line 17578 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { Lex->grant |= GRANT_ACL;}
#line 47247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3441: /* grant_option_list: grant_option_list grant_option  */
#line 17582 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                         {}
#line 47253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3442: /* grant_option_list: grant_option  */
#line 17583 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       {}
#line 47259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3443: /* grant_option: GRANT OPTION  */
#line 17587 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { Lex->grant |= GRANT_ACL;}
#line 47265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3444: /* grant_option: resource_option  */
#line 17588 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                          {}
#line 47271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3445: /* $@267: %empty  */
#line 17593 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 47281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3446: /* begin_stmt_mariadb: BEGIN_MARIADB_SYM $@267 opt_work  */
#line 17598 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                   {}
#line 47287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3447: /* compound_statement: sp_proc_stmt_compound_ok  */
#line 17603 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_COMPOUND;
            Lex->sphead->set_stmt_end(thd);
            Lex->sphead->restore_thd_mem_root(thd);
          }
#line 47297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3448: /* opt_not: %empty  */
#line 17611 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.num)= 0; }
#line 47303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3449: /* opt_not: not  */
#line 17612 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                       { (yyval.num)= 1; }
#line 47309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3450: /* opt_work: %empty  */
#line 17616 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 47315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3451: /* opt_work: WORK_SYM  */
#line 17617 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 47321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3452: /* opt_chain: %empty  */
#line 17622 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3453: /* opt_chain: AND_SYM NO_SYM CHAIN_SYM  */
#line 17623 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3454: /* opt_chain: AND_SYM CHAIN_SYM  */
#line 17624 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3455: /* opt_release: %empty  */
#line 17629 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3456: /* opt_release: RELEASE_SYM  */
#line 17630 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3457: /* opt_release: NO_SYM RELEASE_SYM  */
#line 17631 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3458: /* commit: COMMIT_SYM opt_work opt_chain opt_release  */
#line 17636 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3459: /* rollback: ROLLBACK_SYM opt_work opt_chain opt_release  */
#line 17648 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3460: /* rollback: ROLLBACK_SYM opt_work TO_SYM SAVEPOINT_SYM ident  */
#line 17657 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3461: /* rollback: ROLLBACK_SYM opt_work TO_SYM ident  */
#line 17663 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3462: /* savepoint: SAVEPOINT_SYM ident  */
#line 17672 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3463: /* release: RELEASE_SYM SAVEPOINT_SYM ident  */
#line 17681 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3464: /* unit_type_decl: UNION_SYM  */
#line 17694 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.unit_type)= UNION_TYPE; }
#line 47429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3465: /* unit_type_decl: INTERSECT_SYM  */
#line 17696 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.unit_type)= INTERSECT_TYPE; }
#line 47435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3466: /* unit_type_decl: EXCEPT_SYM  */
#line 17698 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { (yyval.unit_type)= EXCEPT_TYPE; }
#line 47441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3467: /* union_clause: %empty  */
#line 17702 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      {}
#line 47447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3469: /* $@268: %empty  */
#line 17708 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 47456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3470: /* union_list: unit_type_decl union_option $@268 union_list_part2  */
#line 17713 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 47468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3471: /* $@269: %empty  */
#line 17724 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 47477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3472: /* union_list_view: unit_type_decl union_option $@269 query_expression_body_view  */
#line 17729 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->pop_context();
          }
#line 47485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3473: /* $@270: %empty  */
#line 17735 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 47503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3474: /* union_order_or_limit: $@270 order_or_limit  */
#line 17749 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 47512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3477: /* union_head_non_top: unit_type_decl union_option  */
#line 17765 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), FALSE)))
              MYSQL_YYABORT;
          }
#line 47521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3478: /* union_option: %empty  */
#line 17772 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.num)=1; }
#line 47527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3479: /* union_option: DISTINCT  */
#line 17773 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.num)=1; }
#line 47533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3480: /* union_option: ALL  */
#line 17774 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    { (yyval.num)=0; }
#line 47539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3481: /* simple_table: query_specification  */
#line 17778 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3482: /* simple_table: table_value_constructor  */
#line 17779 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3483: /* $@271: %empty  */
#line 17784 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->tvc_start();
	  }
#line 47559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3484: /* table_value_constructor: VALUES $@271 values_list  */
#line 17788 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.select_lex)= Lex->current_select;
            if (Lex->tvc_finalize())
              MYSQL_YYABORT;
	  }
#line 47569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3485: /* query_specification: SELECT_SYM select_init2_derived opt_table_expression  */
#line 17806 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 47577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3486: /* query_term_union_not_ready: simple_table order_or_limit opt_select_lock_type  */
#line 17812 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                           { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 47583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3487: /* query_term_union_not_ready: '(' select_paren_derived ')' union_order_or_limit  */
#line 17813 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                                  { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 47589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3488: /* query_term_union_ready: simple_table opt_select_lock_type  */
#line 17817 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                           { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3489: /* query_term_union_ready: '(' select_paren_derived ')'  */
#line 17818 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                           { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3490: /* query_expression_body: query_term_union_not_ready  */
#line 17822 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                                    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3491: /* query_expression_body: query_term_union_ready  */
#line 17823 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                                    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3492: /* query_expression_body: query_term_union_ready union_list_derived  */
#line 17824 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                                                    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3493: /* subselect: subselect_start opt_with_clause query_expression_body subselect_end  */
#line 17830 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { 
            (yyvsp[-1].select_lex)->set_with_clause((yyvsp[-2].with_clause));
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 47628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3494: /* subselect_start: %empty  */
#line 17837 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (unlikely(mysql_new_select(Lex, 1, NULL)))
              MYSQL_YYABORT;
          }
#line 47651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3495: /* subselect_end: %empty  */
#line 17858 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex=Lex;

            lex->check_automatic_up(UNSPECIFIED_TYPE);
            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;

            /*
              A subquery (and all the subsequent query blocks in a UNION) can
              add columns to an outer query block. Reserve space for them.
              Aggregate functions in having clause can also add fields to an
              outer select.
            */
            for (SELECT_LEX *temp= child->master_unit()->first_select();
                 temp != NULL; temp= temp->next_select())
            {
              lex->current_select->select_n_where_fields+=
                temp->select_n_where_fields;
              lex->current_select->select_n_having_items+=
                temp->select_n_having_items;
            }
          }
#line 47681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3500: /* query_expression_option: STRAIGHT_JOIN  */
#line 17896 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 47687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3501: /* query_expression_option: HIGH_PRIORITY  */
#line 17898 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 47699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3502: /* query_expression_option: DISTINCT  */
#line 17905 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 47705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3503: /* query_expression_option: UNIQUE_SYM  */
#line 17906 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 47711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3504: /* query_expression_option: SQL_SMALL_RESULT  */
#line 17907 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { Select->options|= SELECT_SMALL_RESULT; }
#line 47717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3505: /* query_expression_option: SQL_BIG_RESULT  */
#line 17908 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           { Select->options|= SELECT_BIG_RESULT; }
#line 47723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3506: /* query_expression_option: SQL_BUFFER_RESULT  */
#line 17910 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 47733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3507: /* query_expression_option: SQL_CALC_FOUND_ROWS  */
#line 17916 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 47743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3508: /* query_expression_option: ALL  */
#line 17921 "/home/buildbot/git/sql/sql_yacc_ora.yy"
              { Select->options|= SELECT_ALL; }
#line 47749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3511: /* no_definer: %empty  */
#line 17937 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 47764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3512: /* definer: DEFINER_SYM '=' user_or_role  */
#line 17951 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
            Lex->ssl_cipher= Lex->x509_subject= Lex->x509_issuer= 0;
            bzero(&(Lex->mqh), sizeof(Lex->mqh));
          }
#line 47775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3513: /* view_algorithm: ALGORITHM_SYM '=' UNDEFINED_SYM  */
#line 17966 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 47781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3514: /* view_algorithm: ALGORITHM_SYM '=' MERGE_SYM  */
#line 17967 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 47787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3515: /* view_algorithm: ALGORITHM_SYM '=' TEMPTABLE_SYM  */
#line 17968 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 47793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3516: /* opt_view_suid: %empty  */
#line 17972 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 47799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3517: /* opt_view_suid: view_suid  */
#line 17973 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 47805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3518: /* view_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 17977 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 47811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3519: /* view_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 17978 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                           { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 47817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3520: /* view_list_opt: %empty  */
#line 17983 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {}
#line 47823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3522: /* view_list: ident  */
#line 17989 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3523: /* view_list: view_list ',' ident  */
#line 17995 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3524: /* $@272: %empty  */
#line 18003 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 47853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3525: /* view_select: $@272 opt_with_clause query_expression_body_view view_check_option  */
#line 18009 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            size_t len= YYLIP->get_cpp_ptr() - lex->create_view->select.str;
            void *create_view_select= thd->memdup(lex->create_view->select.str, len);
            lex->create_view->select.length= len;
            lex->create_view->select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(),
                            &lex->create_view->select);
            lex->create_view->check= (yyvsp[0].num);
            lex->parsing_options.allows_variable= TRUE;
            lex->current_select->set_with_clause((yyvsp[-2].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;

          }
#line 47873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3533: /* view_check_option: %empty  */
#line 18041 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 47879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3534: /* view_check_option: WITH CHECK_SYM OPTION  */
#line 18042 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3535: /* view_check_option: WITH CASCADED CHECK_SYM OPTION  */
#line 18043 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3536: /* view_check_option: WITH LOCAL_SYM CHECK_SYM OPTION  */
#line 18044 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 47897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3537: /* trigger_action_order: FOLLOWS_SYM  */
#line 18055 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 47903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3538: /* trigger_action_order: PRECEDES_SYM  */
#line 18057 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 47909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3539: /* trigger_follows_precedes_clause: %empty  */
#line 18062 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 47919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3540: /* trigger_follows_precedes_clause: trigger_action_order ident_or_text  */
#line 18069 "/home/buildbot/git/sql/sql_yacc_ora.yy"
            {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 47928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3541: /* $@273: %empty  */
#line 18078 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 47937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3542: /* $@274: %empty  */
#line 18087 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 47945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3543: /* $@275: %empty  */
#line 18093 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 47953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3544: /* $@276: %empty  */
#line 18098 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 47961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3545: /* $@277: %empty  */
#line 18102 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3546: /* trigger_tail: remember_name opt_if_not_exists $@273 sp_name trg_action_time trg_event ON remember_name $@274 table_ident FOR_SYM remember_name $@275 EACH_SYM ROW_SYM $@276 trigger_follows_precedes_clause $@277 sp_proc_stmt force_lookahead  */
#line 18122 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { /* $21 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->check_unresolved_goto()))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(thd);
            sp->restore_thd_mem_root(thd);

            if (unlikely(sp->is_not_allowed_in_function("trigger")))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (unlikely(!lex->select_lex.
                         add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                           TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
          }
#line 48015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3547: /* udf_tail: opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 18158 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            if (unlikely(lex->add_create_options_with_check((yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(is_native_function(thd, & (yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].ident_sys).str));
            lex->sql_command= SQLCOM_CREATE_FUNCTION;
            lex->udf.name= (yyvsp[-4].ident_sys);
            lex->udf.returns= (Item_result) (yyvsp[-2].num);
            lex->udf.dl= (yyvsp[0].lex_str).str;
          }
#line 48031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3548: /* $@278: %empty  */
#line 18174 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 48042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3549: /* sf_return_type: RETURN_ORACLE_SYM $@278 sp_param_type  */
#line 18181 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 48052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3550: /* $@279: %empty  */
#line 18191 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_function)))
              MYSQL_YYABORT;
          }
#line 48063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3551: /* $@280: %empty  */
#line 18200 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->set_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 48075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3552: /* sf_tail: opt_if_not_exists sp_name $@279 opt_sp_parenthesized_fdparam_list sf_return_type sp_c_chistics $@280 sp_tail_is sp_body force_lookahead  */
#line 18209 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
          }
#line 48089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3553: /* $@281: %empty  */
#line 18222 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_procedure)))
              MYSQL_YYABORT;
          }
#line 48100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3554: /* $@282: %empty  */
#line 18230 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sphead->set_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 48109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3555: /* sp_tail: opt_if_not_exists sp_name $@281 opt_sp_parenthesized_pdparam_list sp_c_chistics $@282 sp_tail_is sp_body force_lookahead  */
#line 18236 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 48118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3556: /* sf_tail_standalone: sf_tail opt_sp_name  */
#line 18244 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].spname) && !(yyvsp[0].spname)->eq(Lex->sphead)))
              my_yyabort_error((ER_END_IDENTIFIER_DOES_NOT_MATCH, MYF(0),
                                ErrConvDQName((yyvsp[0].spname)).ptr(),
                                ErrConvDQName(Lex->sphead).ptr()));
          }
#line 48129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3557: /* sp_tail_standalone: sp_tail opt_sp_name  */
#line 18254 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (unlikely((yyvsp[0].spname) && !(yyvsp[0].spname)->eq(Lex->sphead)))
              my_yyabort_error((ER_END_IDENTIFIER_DOES_NOT_MATCH, MYF(0),
                                ErrConvDQName((yyvsp[0].spname)).ptr(),
                                ErrConvDQName(Lex->sphead).ptr()));
          }
#line 48140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3558: /* opt_package_routine_end_name: %empty  */
#line 18263 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 48146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3559: /* opt_package_routine_end_name: ident  */
#line 18264 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                      { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 48152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3562: /* xa: XA_SYM begin_or_start xid opt_join_or_resume  */
#line 18276 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 48160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3563: /* xa: XA_SYM END xid opt_suspend  */
#line 18280 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 48168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3564: /* xa: XA_SYM PREPARE_SYM xid  */
#line 18284 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 48176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3565: /* xa: XA_SYM COMMIT_SYM xid opt_one_phase  */
#line 18288 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 48184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3566: /* xa: XA_SYM ROLLBACK_SYM xid  */
#line 18292 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 48192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3567: /* xa: XA_SYM RECOVER_SYM opt_format_xid  */
#line 18296 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 48201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3568: /* opt_format_xid: %empty  */
#line 18303 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                     { (yyval.num)= false; }
#line 48207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3569: /* opt_format_xid: FORMAT_SYM '=' ident_or_text  */
#line 18305 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 48224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3570: /* xid: text_string  */
#line 18321 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 48235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3571: /* xid: text_string ',' text_string  */
#line 18328 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 48246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3572: /* xid: text_string ',' text_string ',' ulong_num  */
#line 18335 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 48257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3573: /* begin_or_start: BEGIN_MARIADB_SYM  */
#line 18344 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            {}
#line 48263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3574: /* begin_or_start: BEGIN_ORACLE_SYM  */
#line 18345 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                           {}
#line 48269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3575: /* begin_or_start: START_SYM  */
#line 18346 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                    {}
#line 48275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3576: /* opt_join_or_resume: %empty  */
#line 18350 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { Lex->xa_opt=XA_NONE;        }
#line 48281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3577: /* opt_join_or_resume: JOIN_SYM  */
#line 18351 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { Lex->xa_opt=XA_JOIN;        }
#line 48287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3578: /* opt_join_or_resume: RESUME_SYM  */
#line 18352 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                        { Lex->xa_opt=XA_RESUME;      }
#line 48293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3579: /* opt_one_phase: %empty  */
#line 18356 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { Lex->xa_opt=XA_NONE;        }
#line 48299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3580: /* opt_one_phase: ONE_SYM PHASE_SYM  */
#line 18357 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                            { Lex->xa_opt=XA_ONE_PHASE;   }
#line 48305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3581: /* opt_suspend: %empty  */
#line 18362 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->xa_opt=XA_NONE;        }
#line 48311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3582: /* $@283: %empty  */
#line 18364 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          { Lex->xa_opt=XA_SUSPEND;     }
#line 48317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3584: /* opt_migrate: %empty  */
#line 18369 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              {}
#line 48323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3585: /* opt_migrate: FOR_SYM MIGRATE_SYM  */
#line 18370 "/home/buildbot/git/sql/sql_yacc_ora.yy"
                              { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 48329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3586: /* install: INSTALL_SYM PLUGIN_SYM ident SONAME_SYM TEXT_STRING_sys  */
#line 18375 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].ident_sys);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 48340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3587: /* install: INSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18382 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 48351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3588: /* uninstall: UNINSTALL_SYM PLUGIN_SYM ident  */
#line 18392 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].ident_sys);
          }
#line 48361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3589: /* uninstall: UNINSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18398 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 48372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;

  case 3590: /* keep_gcc_happy: IMPOSSIBLE_ACTION  */
#line 18409 "/home/buildbot/git/sql/sql_yacc_ora.yy"
          {
            YYERROR;
          }
#line 48380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"
    break;


#line 48384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (thd, YY_("syntax error"));
    }

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

